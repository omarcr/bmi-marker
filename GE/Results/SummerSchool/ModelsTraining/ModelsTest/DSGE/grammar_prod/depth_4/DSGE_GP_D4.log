{MutationProb=0.05, Executions=10, ChangeProbabilityDynamic=0.25, TrainingPath=/home/jmmc/Projects/PMT_2/Data/train_bmi_marker.csv, MutationTypeDynamic=All genes, GrammaticalEvolutionType=2, Objectives=0, ClassPathSeparator=:, TestPath=/Users/hidalgo/GitHub/bmi-marker/linear-exp/test_bmi_marker.csv, NumGenerations=1000, NumIndividuals=1024, RealDataCopied=0, ErrorThreshold=0.0, TypeOfDepthForDynamicSGE=0, TournamentSize=5, ModelWidth=0, BnfPathFile=/home/jmmc/Projects/PMT_2/exp_2_sg/gr_BMI_SR.bnf, LoggerLevel=INFO, LoggerBasePath=/home/jmmc/Projects/PMT_2/work, ViewResults=false, CrossoverTypeDynamic=Uniform, AlgorithmType=1, LogPopulation=0, CrossoverProb=0.9, MaxTreeDepth=4, WorkDir=/home/jmmc/Projects/PMT_2/work, NormalizeData=false}
Tree: true
Depth: 4
Aug 30, 2024 4:37:59 PM data.NormalizedDataTable <init>
INFO: Reading data file ...

Detecting file format ...

Aug 30, 2024 4:37:59 PM data.NormalizedDataTable <init>
INFO: ... done.
Uniform: 0.25
jeco.core.algorithm.ga.StaticSimpleGeneticAlgorithm@314d8d1f
algorithm.DynamicSGE@3f8a7546

Run #0
========
Aug 30, 2024 4:37:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=12.308446506949462; Expression=87*Math.pow(10,-6)+u3(k); Java Expression: 87*Math.pow(10,-6)+getVariable(3,k)
Aug 30, 2024 4:37:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=11.93849526090675; Expression=u3(k)-u8(k); Java Expression: getVariable(3,k)-getVariable(8,k)
Aug 30, 2024 4:37:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.731668056345766; Expression=u4(k)+u8(k); Java Expression: getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 4:37:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.420129582701522; Expression=6*Math.pow(10,-2)+u4(k); Java Expression: 6*Math.pow(10,-2)+getVariable(4,k)
Aug 30, 2024 4:37:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.398037564480497; Expression=16*Math.pow(10,-6)+u4(k); Java Expression: 16*Math.pow(10,-6)+getVariable(4,k)
Aug 30, 2024 4:37:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330471366057987; Expression=52*Math.pow(10,-8)+u5(k); Java Expression: 52*Math.pow(10,-8)+getVariable(5,k)
Aug 30, 2024 4:37:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 4:38:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.826617352510731; Expression=37*Math.pow(10,-2)*u6(k); Java Expression: 37*Math.pow(10,-2)*getVariable(6,k)
Aug 30, 2024 4:38:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131407434512215; Expression=u7(k)-u5(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 4:38:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837859; Expression=u7(k)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)
Aug 30, 2024 4:38:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0050089624412575; Expression=u7(k)-u5(k)-86*Math.pow(10,-4)*u3(k)+u2(k)-u2(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-86*Math.pow(10,-4)*getVariable(3,k)+getVariable(2,k)-getVariable(2,k)-getVariable(4,k)
Aug 30, 2024 4:38:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.903750938913633; Expression=u7(k)-u5(k)-86*Math.pow(10,-4)*u1(k)+u2(k)-u2(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-86*Math.pow(10,-4)*getVariable(1,k)+getVariable(2,k)-getVariable(2,k)-getVariable(4,k)
Aug 30, 2024 4:38:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.887294154857722; Expression=u7(k)-u5(k)-97*Math.pow(10,-4)*u1(k)+u2(k)-u2(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-97*Math.pow(10,-4)*getVariable(1,k)+getVariable(2,k)-getVariable(2,k)-getVariable(4,k)
Aug 30, 2024 4:38:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.846044552549201; Expression=u7(k)-u5(k)-13*Math.pow(10,-3)*u1(k)+u2(k)-u2(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-3)*getVariable(1,k)+getVariable(2,k)-getVariable(2,k)-getVariable(4,k)
Aug 30, 2024 4:38:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.799729555753024; Expression=u7(k)-u5(k)-20*Math.pow(10,-3)*u1(k)+u2(k)-u2(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(1,k)+getVariable(2,k)-getVariable(2,k)-getVariable(4,k)
Aug 30, 2024 4:38:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.797280028039142; Expression=u7(k)-u5(k)-23*Math.pow(10,-3)*u1(k)+u2(k)-u2(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-23*Math.pow(10,-3)*getVariable(1,k)+getVariable(2,k)-getVariable(2,k)-getVariable(4,k)
Aug 30, 2024 4:39:06 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.797280028039142 -->> Avg.: 8074025.300656807 -->> Std. Dev.: 4.753249555001521E7
Aug 30, 2024 4:39:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.767777476090869; Expression=u7(k)-u5(k)*97*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)*97*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-getVariable(4,k)
Aug 30, 2024 4:39:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.760852157303832; Expression=u7(k)-u5(k)*96*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)*96*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-getVariable(4,k)
Aug 30, 2024 4:39:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.69046046749385; Expression=u7(k)-u5(k)*96*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*96*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-getVariable(3,k)
Aug 30, 2024 4:39:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.561305769853116; Expression=u7(k)-u5(k)*95*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*95*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-getVariable(3,k)
Aug 30, 2024 4:39:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.364669537188594; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-getVariable(3,k)
Aug 30, 2024 4:39:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.305470508653617; Expression=u7(k)-u5(k)*92*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*92*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-getVariable(3,k)
Aug 30, 2024 4:39:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.305470508653615; Expression=u7(k)-u5(k)*u7(k)*92*Math.pow(10,-4)+u2(k)-u2(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*getVariable(7,k)*92*Math.pow(10,-4)+getVariable(2,k)-getVariable(2,k)-getVariable(3,k)
Aug 30, 2024 4:39:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.303473381453967; Expression=u7(k)-u5(k)*88*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*88*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-getVariable(3,k)
Aug 30, 2024 4:39:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3034733814539665; Expression=u7(k)-u5(k)*u7(k)*88*Math.pow(10,-4)+u2(k)-u2(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*getVariable(7,k)*88*Math.pow(10,-4)+getVariable(2,k)-getVariable(2,k)-getVariable(3,k)
Aug 30, 2024 4:40:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.266615521144661; Expression=u7(k)-u5(k)*u7(k)*89*Math.pow(10,-4)+u2(k)-u2(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*getVariable(7,k)*89*Math.pow(10,-4)+getVariable(2,k)-getVariable(2,k)-getVariable(3,k)
Aug 30, 2024 4:40:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.266615521144659; Expression=u7(k)-u5(k)*89*Math.pow(10,-4)*u7(k)-u2(k)+u2(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*89*Math.pow(10,-4)*getVariable(7,k)-getVariable(2,k)+getVariable(2,k)-getVariable(3,k)
Aug 30, 2024 4:40:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.254608135965296; Expression=u7(k)-u5(k)*9*Math.pow(10,-3)*u7(k)+u2(k)-u2(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*9*Math.pow(10,-3)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-getVariable(3,k)
Aug 30, 2024 4:40:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.254608135965295; Expression=u7(k)-u5(k)*90*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*90*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-getVariable(3,k)
Aug 30, 2024 4:40:31 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.254608135965295 -->> Avg.: 8543.055344526541 -->> Std. Dev.: 32097.179571637804
Aug 30, 2024 4:40:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.254608135965294; Expression=u7(k)-u5(k)*90*Math.pow(10,-4)*u7(k)+u6(k)-u6(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*90*Math.pow(10,-4)*getVariable(7,k)+getVariable(6,k)-getVariable(6,k)-getVariable(3,k)
Aug 30, 2024 4:40:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.225829930427839; Expression=u7(k)-u5(k)*89*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-38*Math.pow(10,-2)-85*Math.pow(10,-3)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*89*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-38*Math.pow(10,-2)-85*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 4:40:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2245224254492175; Expression=u7(k)-u5(k)*89*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-38*Math.pow(10,-3)-85*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*89*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-38*Math.pow(10,-3)-85*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 4:40:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.22444802622171; Expression=u7(k)-u5(k)*89*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-97*Math.pow(10,-2)+84*Math.pow(10,-3)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*89*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-97*Math.pow(10,-2)+84*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 4:41:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.22144434297506; Expression=u7(k)-u5(k)*89*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-16*Math.pow(10,-5)-77*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*89*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-16*Math.pow(10,-5)-77*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 4:41:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.221243906675478; Expression=u7(k)-u5(k)*89*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-63*Math.pow(10,-2)-85*Math.pow(10,-6)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*89*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-63*Math.pow(10,-2)-85*Math.pow(10,-6)-getVariable(3,k)
Aug 30, 2024 4:41:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2209840175092825; Expression=u7(k)-u5(k)*89*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-38*Math.pow(10,-3)-62*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*89*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-38*Math.pow(10,-3)-62*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 4:41:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.220892487565809; Expression=u7(k)-u5(k)*89*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-57*Math.pow(10,-3)-62*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*89*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-57*Math.pow(10,-3)-62*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 4:41:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.220888745862061; Expression=u7(k)-u5(k)*89*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-87*Math.pow(10,-3)-62*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*89*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-87*Math.pow(10,-3)-62*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 4:41:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.220869556375633; Expression=u7(k)-u5(k)*89*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-75*Math.pow(10,-3)-62*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*89*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-75*Math.pow(10,-3)-62*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 4:41:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.200909240608986; Expression=u7(k)-u5(k)*88*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-91*Math.pow(10,-2)-31*Math.pow(10,-3)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*88*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-91*Math.pow(10,-2)-31*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 4:41:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.19358840233042; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-36*Math.pow(10,-3)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-36*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 4:41:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.193588402330418; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u6(k)-u6(k)-99*Math.pow(10,-2)-36*Math.pow(10,-3)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(6,k)-getVariable(6,k)-99*Math.pow(10,-2)-36*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 4:41:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.190353437662945; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-85*Math.pow(10,-3)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-85*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 4:41:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.190353437662943; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u6(k)-u6(k)-99*Math.pow(10,-2)-85*Math.pow(10,-3)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(6,k)-getVariable(6,k)-99*Math.pow(10,-2)-85*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 4:41:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.19004923723314; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-90*Math.pow(10,-3)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-90*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 4:41:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.190049237233139; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u6(k)-u6(k)-99*Math.pow(10,-2)-90*Math.pow(10,-3)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(6,k)-getVariable(6,k)-99*Math.pow(10,-2)-90*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 4:41:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.189690531944851; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u6(k)-u6(k)-99*Math.pow(10,-2)-96*Math.pow(10,-3)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(6,k)-getVariable(6,k)-99*Math.pow(10,-2)-96*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 4:41:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1896905319448505; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-96*Math.pow(10,-3)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-96*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 4:42:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.180766742994757; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u6(k)-u6(k)-99*Math.pow(10,-2)-36*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(6,k)-getVariable(6,k)-99*Math.pow(10,-2)-36*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 4:42:12 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.180766742994757 -->> Avg.: 238.57358993569363 -->> Std. Dev.: 713.9759339587359
Aug 30, 2024 4:42:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.180590392587315; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u6(k)-u6(k)-99*Math.pow(10,-2)-41*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(6,k)-getVariable(6,k)-99*Math.pow(10,-2)-41*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 4:42:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.180587057629516; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u6(k)-u6(k)-99*Math.pow(10,-2)-40*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(6,k)-getVariable(6,k)-99*Math.pow(10,-2)-40*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 4:42:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.180587057629515; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-40*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-40*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 4:42:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.079402413412306; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-40*Math.pow(10,-3)*u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-40*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 4:43:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.061644511474696; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-49*Math.pow(10,-3)*u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-49*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 4:43:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0610274933693065; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-50*Math.pow(10,-3)*u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-50*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 4:43:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0608080173917465; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-53*Math.pow(10,-3)*u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-53*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 4:43:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.060699231884656; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-96*Math.pow(10,-2)-u3(k)-53*Math.pow(10,-3)*u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-96*Math.pow(10,-2)-getVariable(3,k)-53*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 4:43:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.060682375207107; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-51*Math.pow(10,-3)*u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-51*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 4:44:06 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.060682375207107 -->> Avg.: 14.578172124862887 -->> Std. Dev.: 20.58375662399607
Aug 30, 2024 4:44:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.058815236501157; Expression=u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)*u3(k)-90*Math.pow(10,-3)*u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)*getVariable(3,k)-90*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 4:44:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.056117422498248; Expression=u7(k)-u5(k)*86*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-51*Math.pow(10,-3)*u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-51*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 4:44:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.042005033683433; Expression=u7(k)-u5(k)*86*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-60*Math.pow(10,-3)*u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-60*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 4:44:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.993260811593371; Expression=u7(k)-u5(k)*82*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-90*Math.pow(10,-3)*u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*82*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-90*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 4:45:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.982278689906797; Expression=u7(k)-u5(k)*82*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-97*Math.pow(10,-3)*u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*82*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 4:45:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.982278689906796; Expression=u7(k)-u5(k)*82*Math.pow(10,-4)*u7(k)+u2(k)+u2(k)-99*Math.pow(10,-2)-u3(k)-97*Math.pow(10,-3)*u4(k)+u8(k)-u2(k)-u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*82*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)+getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)-getVariable(2,k)-getVariable(2,k)
Aug 30, 2024 4:46:19 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.982278689906796 -->> Avg.: 5.586264426920895 -->> Std. Dev.: 1.2724901789876994
Aug 30, 2024 4:46:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.982278598011449; Expression=u7(k)-u5(k)*82*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-97*Math.pow(10,-3)*u4(k)+u8(k)-92*Math.pow(10,-8)*u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)*82*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)-92*Math.pow(10,-8)*getVariable(3,k)
Aug 30, 2024 4:46:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.982278416843258; Expression=u7(k)-u5(k)*82*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-97*Math.pow(10,-3)*u4(k)+u8(k)-73*Math.pow(10,-9)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*82*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)-73*Math.pow(10,-9)*getVariable(2,k)
Aug 30, 2024 4:46:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.982277119263135; Expression=u7(k)-u5(k)*82*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-97*Math.pow(10,-3)*u4(k)+u8(k)-42*Math.pow(10,-8)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*82*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)-42*Math.pow(10,-8)*getVariable(2,k)
Aug 30, 2024 4:46:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.981932526448189; Expression=u7(k)-u5(k)*82*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-97*Math.pow(10,-3)*u4(k)+u8(k)-10*Math.pow(10,-5)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*82*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)-10*Math.pow(10,-5)*getVariable(2,k)
Aug 30, 2024 4:46:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.981229116647848; Expression=u7(k)-u5(k)*82*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-97*Math.pow(10,-3)*u4(k)+u8(k)-40*Math.pow(10,-5)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*82*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)-40*Math.pow(10,-5)*getVariable(2,k)
Aug 30, 2024 4:46:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.981200912636441; Expression=u7(k)-u5(k)*82*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-97*Math.pow(10,-3)*u4(k)+u8(k)-92*Math.pow(10,-5)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*82*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)-92*Math.pow(10,-5)*getVariable(2,k)
Aug 30, 2024 4:46:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9810598918266376; Expression=u7(k)-u5(k)*82*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-97*Math.pow(10,-3)*u4(k)+u8(k)-78*Math.pow(10,-5)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*82*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)-78*Math.pow(10,-5)*getVariable(2,k)
Aug 30, 2024 4:46:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.882947753640683; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-73*Math.pow(10,-9)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-73*Math.pow(10,-9)*getVariable(2,k)
Aug 30, 2024 4:46:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.882942384659921; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-73*Math.pow(10,-8)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-73*Math.pow(10,-8)*getVariable(2,k)
Aug 30, 2024 4:47:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.878497711460008; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-73*Math.pow(10,-5)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-73*Math.pow(10,-5)*getVariable(2,k)
Aug 30, 2024 4:47:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.878124481048546; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)-u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-83*Math.pow(10,-5)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-83*Math.pow(10,-5)*getVariable(2,k)
Aug 30, 2024 4:47:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.868466125457601; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-5)-u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-73*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-5)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-73*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 4:48:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.86846292565082; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-50*Math.pow(10,-5)-u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-73*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-50*Math.pow(10,-5)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-73*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 4:48:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.868459711715126; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-53*Math.pow(10,-9)-u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-73*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-53*Math.pow(10,-9)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-73*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 4:48:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.8684534986047225; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)+99*Math.pow(10,-5)-u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-73*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)+99*Math.pow(10,-5)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-73*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 4:48:51 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.8684534986047225 -->> Avg.: 5.160231997884485 -->> Std. Dev.: 0.24444291957144074
Aug 30, 2024 4:49:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.868406642634163; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)+99*Math.pow(10,-4)-u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-73*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)+99*Math.pow(10,-4)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-73*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 4:49:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.868362395719289; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)+27*Math.pow(10,-3)-u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-73*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)+27*Math.pow(10,-3)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-73*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 4:49:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.867966662803446; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)+99*Math.pow(10,-3)-u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-83*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)+99*Math.pow(10,-3)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-83*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 4:49:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.867626883183695; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)+99*Math.pow(10,-3)-u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-80*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)+99*Math.pow(10,-3)-getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-80*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 4:51:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.86686116708872; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)*u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-83*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)*getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-83*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 4:51:33 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.86686116708872 -->> Avg.: 5.027814065330721 -->> Std. Dev.: 0.13717444344020713
Aug 30, 2024 4:51:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.866861167088719; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)-u2(k)+u2(k)-99*Math.pow(10,-2)*u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-83*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)-getVariable(2,k)+getVariable(2,k)-99*Math.pow(10,-2)*getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-83*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 4:52:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.863483001691754; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)*u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-88*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)*getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-88*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 4:52:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.862141872094993; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)*u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-91*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)*getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-91*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 4:52:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.861809230512231; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)*u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-92*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)*getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-92*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 4:52:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.861154675007406; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)*u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-95*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)*getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-95*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 4:52:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.861004517714289; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u2(k)-u2(k)-99*Math.pow(10,-2)*u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-97*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)-99*Math.pow(10,-2)*getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-97*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 4:53:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.861004517714288; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)-u2(k)+u2(k)-99*Math.pow(10,-2)*u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-97*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)-getVariable(2,k)+getVariable(2,k)-99*Math.pow(10,-2)*getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-97*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 4:54:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.861004517714285; Expression=u7(k)-u5(k)*63*Math.pow(10,-4)*u7(k)+u6(k)-u6(k)-99*Math.pow(10,-2)*u3(k)-97*Math.pow(10,-3)*u7(k)+u8(k)-97*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(6,k)-getVariable(6,k)-99*Math.pow(10,-2)*getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-97*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 4:54:36 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.861004517714285 -->> Avg.: 4.957517156694958 -->> Std. Dev.: 0.10797244146134281
Aug 30, 2024 4:57:57 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.861004517714285 -->> Avg.: 4.905388065831457 -->> Std. Dev.: 0.06645837081679047
Aug 30, 2024 5:01:24 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.861004517714285 -->> Avg.: 4.874523006798515 -->> Std. Dev.: 0.03247678639884311

Execution time: 1415.52 seconds.



@@;getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(6,k)-getVariable(6,k)-99*Math.pow(10,-2)*getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-97*Math.pow(10,-4)*getVariable(2,k)



Run #1
========
Aug 30, 2024 5:01:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.599999672675908E10; Expression=46*Math.pow(10,+9)-u5(k)*u6(k); Java Expression: 46*Math.pow(10,+9)-getVariable(5,k)*getVariable(6,k)
Aug 30, 2024 5:01:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=697.0567600060531; Expression=93*Math.pow(10,+1)-u6(k)-u7(k); Java Expression: 93*Math.pow(10,+1)-getVariable(6,k)-getVariable(7,k)
Aug 30, 2024 5:01:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.399861772924757; Expression=5*Math.pow(10,-3)+u4(k); Java Expression: 5*Math.pow(10,-3)+getVariable(4,k)
Aug 30, 2024 5:01:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.39803183597852; Expression=34*Math.pow(10,-8)+u4(k); Java Expression: 34*Math.pow(10,-8)+getVariable(4,k)
Aug 30, 2024 5:01:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.597410937597683; Expression=79*Math.pow(10,-4)*u3(k)+u5(k)+u4(k)-u3(k); Java Expression: 79*Math.pow(10,-4)*getVariable(3,k)+getVariable(5,k)+getVariable(4,k)-getVariable(3,k)
Aug 30, 2024 5:01:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.352061228746217; Expression=84*Math.pow(10,-4)-43*Math.pow(10,-4)*u6(k)+u5(k); Java Expression: 84*Math.pow(10,-4)-43*Math.pow(10,-4)*getVariable(6,k)+getVariable(5,k)
Aug 30, 2024 5:01:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330469381545369; Expression=86*Math.pow(10,-6)+u5(k); Java Expression: 86*Math.pow(10,-6)+getVariable(5,k)
Aug 30, 2024 5:01:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 5:01:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.657530153746533; Expression=u8(k)+u1(k)*8*Math.pow(10,-5)+3*Math.pow(10,-3)*u6(k)*u7(k); Java Expression: getVariable(8,k)+getVariable(1,k)*8*Math.pow(10,-5)+3*Math.pow(10,-3)*getVariable(6,k)*getVariable(7,k)
Aug 30, 2024 5:01:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.657252956036559; Expression=u8(k)+u1(k)*8*Math.pow(10,-8)+3*Math.pow(10,-3)*u6(k)*u7(k); Java Expression: getVariable(8,k)+getVariable(1,k)*8*Math.pow(10,-8)+3*Math.pow(10,-3)*getVariable(6,k)*getVariable(7,k)
Aug 30, 2024 5:01:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.655979065299563; Expression=u8(k)+u2(k)*8*Math.pow(10,-5)+3*Math.pow(10,-3)*u6(k)*u7(k); Java Expression: getVariable(8,k)+getVariable(2,k)*8*Math.pow(10,-5)+3*Math.pow(10,-3)*getVariable(6,k)*getVariable(7,k)
Aug 30, 2024 5:01:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.040909378563419; Expression=71*Math.pow(10,-3)*u5(k)-u4(k)-u5(k)+u7(k)-18*Math.pow(10,-8)*u6(k); Java Expression: 71*Math.pow(10,-3)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-18*Math.pow(10,-8)*getVariable(6,k)
Aug 30, 2024 5:01:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.880677717400113; Expression=71*Math.pow(10,-5)*u5(k)-u4(k)-u5(k)+u7(k)-18*Math.pow(10,-3)*u6(k); Java Expression: 71*Math.pow(10,-5)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-18*Math.pow(10,-3)*getVariable(6,k)
Aug 30, 2024 5:02:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.807280484242162; Expression=71*Math.pow(10,-5)*u5(k)-u4(k)-u5(k)+u7(k)-18*Math.pow(10,-3)*u1(k); Java Expression: 71*Math.pow(10,-5)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-18*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:02:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.807216773525383; Expression=33*Math.pow(10,-5)*u5(k)-u4(k)-u5(k)+u7(k)-18*Math.pow(10,-3)*u1(k); Java Expression: 33*Math.pow(10,-5)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-18*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:02:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.80566674587087; Expression=71*Math.pow(10,-5)*u9(k)-u4(k)-u5(k)+u7(k)-18*Math.pow(10,-3)*u1(k); Java Expression: 71*Math.pow(10,-5)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-18*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:02:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.805316102690105; Expression=71*Math.pow(10,-9)*u9(k)-u4(k)-u5(k)+u7(k)-26*Math.pow(10,-3)*u1(k); Java Expression: 71*Math.pow(10,-9)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-26*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:02:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8052448630988955; Expression=92*Math.pow(10,-5)*u9(k)-u4(k)-u5(k)+u7(k)-18*Math.pow(10,-3)*u1(k); Java Expression: 92*Math.pow(10,-5)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-18*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:02:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7983321049817285; Expression=71*Math.pow(10,-4)*u9(k)-u4(k)-u5(k)+u7(k)-18*Math.pow(10,-3)*u1(k); Java Expression: 71*Math.pow(10,-4)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-18*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:02:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.770937812374831; Expression=10*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-48*Math.pow(10,-3)*u1(k); Java Expression: 10*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-48*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:02:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.670890594462672; Expression=8*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-45*Math.pow(10,-3)*u1(k); Java Expression: 8*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-45*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:02:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.651384519023407; Expression=10*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-81*Math.pow(10,-3)*u1(k); Java Expression: 10*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-81*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:02:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.565234782668913; Expression=8*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-61*Math.pow(10,-3)*u1(k); Java Expression: 8*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-61*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:02:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.562753251477274; Expression=8*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-57*Math.pow(10,-3)*u1(k); Java Expression: 8*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-57*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:02:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.554345564951924; Expression=10*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-72*Math.pow(10,-3)*u1(k); Java Expression: 10*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:03:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.549551121216736; Expression=10*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-71*Math.pow(10,-3)*u1(k); Java Expression: 10*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-71*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:03:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.545971286568871; Expression=10*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-70*Math.pow(10,-3)*u1(k); Java Expression: 10*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:03:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.54383312273715; Expression=10*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-66*Math.pow(10,-3)*u1(k); Java Expression: 10*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-66*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:03:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.542538979466192; Expression=10*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-3)*u1(k); Java Expression: 10*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:03:43 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.542538979466192 -->> Avg.: 1.3303002459198993E7 -->> Std. Dev.: 7.441255511460721E7
Aug 30, 2024 5:04:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.472961908014861; Expression=10*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-79*Math.pow(10,-3)*u1(k)+u8(k); Java Expression: 10*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-79*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)
Aug 30, 2024 5:04:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4499771994601796; Expression=10*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-85*Math.pow(10,-3)*u1(k)+u8(k); Java Expression: 10*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-85*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)
Aug 30, 2024 5:06:14 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.4499771994601796 -->> Avg.: 8245.92254826663 -->> Std. Dev.: 28968.669948088296
Aug 30, 2024 5:06:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.386236768495337; Expression=10*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: 10*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 5:06:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.372658713198481; Expression=10*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-64*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: 10*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-64*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 5:07:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.371368738110668; Expression=10*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-62*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: 10*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-62*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 5:08:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.369522228457654; Expression=11*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: 11*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 5:08:52 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.369522228457654 -->> Avg.: 259.9139259988219 -->> Std. Dev.: 746.1121464932073
Aug 30, 2024 5:11:32 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.369522228457654 -->> Avg.: 16.467970107790993 -->> Std. Dev.: 25.31309333604808
Aug 30, 2024 5:14:13 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.369522228457654 -->> Avg.: 5.768241620555017 -->> Std. Dev.: 1.5665028211235192
Aug 30, 2024 5:16:53 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.369522228457654 -->> Avg.: 5.396200608760726 -->> Std. Dev.: 0.048798366512683856
Aug 30, 2024 5:18:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.369522228457653; Expression=11*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u1(k)*u7(k)+u7(k)-u7(k); Java Expression: 11*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)+getVariable(7,k)-getVariable(7,k)
Aug 30, 2024 5:19:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.369522228457652; Expression=11*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u1(k)*u7(k)+u6(k)-u6(k); Java Expression: 11*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)+getVariable(6,k)-getVariable(6,k)
Aug 30, 2024 5:19:34 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.369522228457652 -->> Avg.: 5.374216203151749 -->> Std. Dev.: 0.017132389196956206
Aug 30, 2024 5:20:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.369315953776597; Expression=11*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u1(k)*u7(k)+94*Math.pow(10,-6)*u1(k); Java Expression: 11*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)+94*Math.pow(10,-6)*getVariable(1,k)
Aug 30, 2024 5:20:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.369118839886679; Expression=11*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u1(k)*u7(k)+94*Math.pow(10,-6)*u2(k); Java Expression: 11*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)+94*Math.pow(10,-6)*getVariable(2,k)
Aug 30, 2024 5:20:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.367610101560041; Expression=11*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u1(k)*u7(k)+22*Math.pow(10,-4)*u1(k); Java Expression: 11*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)+22*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 5:21:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.365725450877212; Expression=11*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u1(k)*u7(k)+36*Math.pow(10,-4)*u6(k); Java Expression: 11*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)+36*Math.pow(10,-4)*getVariable(6,k)
Aug 30, 2024 5:21:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.364477860568101; Expression=11*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u1(k)*u7(k)+22*Math.pow(10,-4)*u6(k); Java Expression: 11*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)+22*Math.pow(10,-4)*getVariable(6,k)
Aug 30, 2024 5:21:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.364453254604336; Expression=11*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u1(k)*u7(k)+25*Math.pow(10,-4)*u6(k); Java Expression: 11*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)+25*Math.pow(10,-4)*getVariable(6,k)
Aug 30, 2024 5:21:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.280634147216765; Expression=11*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u1(k)*u7(k)*89*Math.pow(10,-4)*u7(k); Java Expression: 11*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)*89*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:21:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.280634147216764; Expression=11*Math.pow(10,-2)*u9(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-1)*u1(k)*u7(k)*89*Math.pow(10,-8)*u7(k); Java Expression: 11*Math.pow(10,-2)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-1)*getVariable(1,k)*getVariable(7,k)*89*Math.pow(10,-8)*getVariable(7,k)
Aug 30, 2024 5:21:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.255547993386772; Expression=11*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u1(k)*u7(k)*89*Math.pow(10,-4)*u7(k); Java Expression: 11*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)*89*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:22:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.239421946270735; Expression=11*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u1(k)*u7(k)*85*Math.pow(10,-4)*u7(k); Java Expression: 11*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)*85*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:22:23 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.239421946270735 -->> Avg.: 5.36239770623304 -->> Std. Dev.: 0.02599445547483082
Aug 30, 2024 5:22:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.237014665234445; Expression=11*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u1(k)*u7(k)*83*Math.pow(10,-4)*u7(k); Java Expression: 11*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)*83*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:23:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.219232356145342; Expression=12*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u1(k)*u7(k)*88*Math.pow(10,-4)*u7(k); Java Expression: 12*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)*88*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:23:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.192045199147781; Expression=23*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u1(k)*u7(k)*89*Math.pow(10,-4)*u2(k); Java Expression: 23*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)*89*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 5:23:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.181836773615487; Expression=23*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u1(k)*u7(k)*95*Math.pow(10,-4)*u2(k); Java Expression: 23*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)*95*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 5:24:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.178391861798759; Expression=23*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-69*Math.pow(10,-5)*u1(k)*u7(k)*89*Math.pow(10,-4)*u2(k); Java Expression: 23*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-69*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)*89*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 5:24:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.17701057089626; Expression=23*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u1(k)*u7(k)*93*Math.pow(10,-4)*u2(k); Java Expression: 23*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)*93*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 5:25:20 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 5.17701057089626 -->> Avg.: 5.3290045502433445 -->> Std. Dev.: 0.07021028892714952
Aug 30, 2024 5:25:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.111665348583585; Expression=30*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u2(k)*u7(k)*89*Math.pow(10,-4)*u7(k); Java Expression: 30*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(2,k)*getVariable(7,k)*89*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:25:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.089529894354144; Expression=30*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u2(k)*u7(k)*92*Math.pow(10,-4)*u7(k); Java Expression: 30*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(2,k)*getVariable(7,k)*92*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:26:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.088573381442176; Expression=30*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-67*Math.pow(10,-5)*u2(k)*u7(k)*93*Math.pow(10,-4)*u7(k); Java Expression: 30*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-67*Math.pow(10,-5)*getVariable(2,k)*getVariable(7,k)*93*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:26:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0885639904008615; Expression=30*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)-u7(k)*70*Math.pow(10,-5)*u2(k)*u7(k)*89*Math.pow(10,-4)+u7(k); Java Expression: 30*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)-getVariable(7,k)*70*Math.pow(10,-5)*getVariable(2,k)*getVariable(7,k)*89*Math.pow(10,-4)+getVariable(7,k)
Aug 30, 2024 5:26:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.088563990400861; Expression=30*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-70*Math.pow(10,-5)*u7(k)*u7(k)*89*Math.pow(10,-4)*u2(k); Java Expression: 30*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-70*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)*89*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 5:26:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.082551360584564; Expression=31*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-70*Math.pow(10,-5)*u2(k)*u7(k)*89*Math.pow(10,-4)*u7(k); Java Expression: 31*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-70*Math.pow(10,-5)*getVariable(2,k)*getVariable(7,k)*89*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:27:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.082551360584563; Expression=31*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-70*Math.pow(10,-5)*u7(k)*u7(k)*89*Math.pow(10,-4)*u2(k); Java Expression: 31*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-70*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)*89*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 5:27:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.07515716592292; Expression=31*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-71*Math.pow(10,-5)*u2(k)*u7(k)*89*Math.pow(10,-4)*u7(k); Java Expression: 31*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-71*Math.pow(10,-5)*getVariable(2,k)*getVariable(7,k)*89*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:27:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.07345351917599; Expression=31*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-72*Math.pow(10,-5)*u2(k)*u7(k)*89*Math.pow(10,-4)*u7(k); Java Expression: 31*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-72*Math.pow(10,-5)*getVariable(2,k)*getVariable(7,k)*89*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:27:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.073453519175989; Expression=31*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-72*Math.pow(10,-5)*u7(k)*u7(k)*89*Math.pow(10,-4)*u2(k); Java Expression: 31*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-72*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)*89*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 5:28:22 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 5.073453519175989 -->> Avg.: 5.274303918483032 -->> Std. Dev.: 0.11347020480039083
Aug 30, 2024 5:28:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.072241307511068; Expression=40*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-83*Math.pow(10,-5)*u2(k)*u7(k)*89*Math.pow(10,-4)*u7(k); Java Expression: 40*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-83*Math.pow(10,-5)*getVariable(2,k)*getVariable(7,k)*89*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:28:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.959373187073189; Expression=40*Math.pow(10,-2)*u5(k)-u4(k)-u5(k)+u7(k)-83*Math.pow(10,-5)*u2(k)*u7(k)*96*Math.pow(10,-4)*u7(k); Java Expression: 40*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-83*Math.pow(10,-5)*getVariable(2,k)*getVariable(7,k)*96*Math.pow(10,-4)*getVariable(7,k)

Execution time: 1617.554 seconds.



@@;40*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-83*Math.pow(10,-5)*getVariable(2,k)*getVariable(7,k)*96*Math.pow(10,-4)*getVariable(7,k)



Run #2
========
Aug 30, 2024 5:28:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.731668056345766; Expression=u4(k)+u8(k); Java Expression: getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 5:28:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.33037036582409; Expression=44*Math.pow(10,-4)+u5(k); Java Expression: 44*Math.pow(10,-4)+getVariable(5,k)
Aug 30, 2024 5:28:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.328984115762518; Expression=81*Math.pow(10,-3)+u5(k); Java Expression: 81*Math.pow(10,-3)+getVariable(5,k)
Aug 30, 2024 5:28:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.563892919372513; Expression=36*Math.pow(10,-2)*u6(k); Java Expression: 36*Math.pow(10,-2)*getVariable(6,k)
Aug 30, 2024 5:28:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.545490207838515; Expression=u5(k)+u8(k)*u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:28:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709785324194373; Expression=32*Math.pow(10,-2)*u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 5:28:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.078290613387672; Expression=4*Math.pow(10,-3)-79*Math.pow(10,-6)-u5(k)+u7(k)-u4(k); Java Expression: 4*Math.pow(10,-3)-79*Math.pow(10,-6)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:28:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.953857981772222; Expression=4*Math.pow(10,-6)-79*Math.pow(10,-2)-u5(k)+u7(k)-u4(k); Java Expression: 4*Math.pow(10,-6)-79*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:28:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.939453015114019; Expression=61*Math.pow(10,-6)-98*Math.pow(10,-2)-u5(k)+u7(k)-u4(k); Java Expression: 61*Math.pow(10,-6)-98*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:28:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.939449538853547; Expression=3*Math.pow(10,-6)-98*Math.pow(10,-2)-u5(k)+u7(k)-u4(k); Java Expression: 3*Math.pow(10,-6)-98*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:29:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.934650594988714; Expression=68*Math.pow(10,-8)-16*Math.pow(10,-1)-u5(k)+u7(k)-u4(k); Java Expression: 68*Math.pow(10,-8)-16*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:29:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.934650588314839; Expression=83*Math.pow(10,-8)-16*Math.pow(10,-1)-u5(k)+u7(k)-u4(k); Java Expression: 83*Math.pow(10,-8)-16*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:29:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.934650586090211; Expression=88*Math.pow(10,-8)-16*Math.pow(10,-1)-u5(k)+u7(k)-u4(k); Java Expression: 88*Math.pow(10,-8)-16*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:29:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.932014121174947; Expression=68*Math.pow(10,-3)-16*Math.pow(10,-1)-u5(k)+u7(k)-u4(k); Java Expression: 68*Math.pow(10,-3)-16*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:29:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.931386820900047; Expression=88*Math.pow(10,-3)-16*Math.pow(10,-1)-u5(k)+u7(k)-u4(k); Java Expression: 88*Math.pow(10,-3)-16*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:29:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.929119567286725; Expression=42*Math.pow(10,-8)-14*Math.pow(10,-1)-u5(k)+u7(k)-u4(k); Java Expression: 42*Math.pow(10,-8)-14*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:29:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9288146265649635; Expression=42*Math.pow(10,-3)-14*Math.pow(10,-1)-u5(k)+u7(k)-u4(k); Java Expression: 42*Math.pow(10,-3)-14*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:29:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9287744144327235; Expression=61*Math.pow(10,-3)-14*Math.pow(10,-1)-u5(k)+u7(k)-u4(k); Java Expression: 61*Math.pow(10,-3)-14*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:30:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928773952392187; Expression=66*Math.pow(10,-3)-14*Math.pow(10,-1)-u5(k)+u7(k)-u4(k); Java Expression: 66*Math.pow(10,-3)-14*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:30:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928773723609692; Expression=63*Math.pow(10,-3)-14*Math.pow(10,-1)-u5(k)+u7(k)-u4(k); Java Expression: 63*Math.pow(10,-3)-14*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:30:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928773707462415; Expression=65*Math.pow(10,-3)-14*Math.pow(10,-1)-u5(k)+u7(k)-u4(k); Java Expression: 65*Math.pow(10,-3)-14*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:30:40 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.928773707462415 -->> Avg.: 4447338.189810968 -->> Std. Dev.: 1.9081858624753095E7
Aug 30, 2024 5:31:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928773631201596; Expression=64*Math.pow(10,-3)-14*Math.pow(10,-1)-u5(k)+u7(k)-u4(k); Java Expression: 64*Math.pow(10,-3)-14*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:33:01 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.928773631201596 -->> Avg.: 7318.352997515953 -->> Std. Dev.: 28343.511831596494
Aug 30, 2024 5:35:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8605397513845405; Expression=64*Math.pow(10,-9)-24*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u8(k); Java Expression: 64*Math.pow(10,-9)-24*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 5:35:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.854487473335514; Expression=64*Math.pow(10,-3)-33*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u8(k); Java Expression: 64*Math.pow(10,-3)-33*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 5:35:25 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.854487473335514 -->> Avg.: 212.36801403298531 -->> Std. Dev.: 590.5797627038477
Aug 30, 2024 5:35:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.848923383059067; Expression=64*Math.pow(10,-3)-32*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u8(k); Java Expression: 64*Math.pow(10,-3)-32*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 5:35:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.845863074726389; Expression=64*Math.pow(10,-2)-33*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u8(k); Java Expression: 64*Math.pow(10,-2)-33*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 5:35:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.842436210528059; Expression=45*Math.pow(10,-2)-33*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u8(k); Java Expression: 45*Math.pow(10,-2)-33*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 5:35:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.842429444658862; Expression=45*Math.pow(10,-3)-29*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u8(k); Java Expression: 45*Math.pow(10,-3)-29*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 5:36:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.84242743907473; Expression=42*Math.pow(10,-3)-29*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u8(k); Java Expression: 42*Math.pow(10,-3)-29*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 5:36:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.842427161226332; Expression=38*Math.pow(10,-3)-29*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u8(k); Java Expression: 38*Math.pow(10,-3)-29*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 5:36:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.842426957827048; Expression=44*Math.pow(10,-2)-33*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u8(k); Java Expression: 44*Math.pow(10,-2)-33*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 5:37:53 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.842426957827048 -->> Avg.: 15.950084764586181 -->> Std. Dev.: 23.058221047379927
Aug 30, 2024 5:38:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.785550239284058; Expression=29*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k); Java Expression: 29*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 5:38:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.784027821128453; Expression=51*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k); Java Expression: 51*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 5:38:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783639075645721; Expression=46*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k); Java Expression: 46*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 5:39:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783613302286472; Expression=43*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k); Java Expression: 43*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 5:39:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783613194334987; Expression=45*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k); Java Expression: 45*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 5:39:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783604603189547; Expression=44*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k); Java Expression: 44*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 5:40:25 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.783604603189547 -->> Avg.: 6.079319526811993 -->> Std. Dev.: 1.0481254115804706
Aug 30, 2024 5:42:57 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.783604603189547 -->> Avg.: 5.856703008828221 -->> Std. Dev.: 0.0629620622622763
Aug 30, 2024 5:45:30 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.783604603189547 -->> Avg.: 5.828349676696892 -->> Std. Dev.: 0.05646851023332934
Aug 30, 2024 5:46:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783604603116182; Expression=44*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+20*Math.pow(10,-6)+u8(k); Java Expression: 44*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+20*Math.pow(10,-6)+getVariable(8,k)
Aug 30, 2024 5:46:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783604603110537; Expression=44*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+39*Math.pow(10,-6)+u8(k); Java Expression: 44*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+39*Math.pow(10,-6)+getVariable(8,k)
Aug 30, 2024 5:46:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783604603105972; Expression=44*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+34*Math.pow(10,-6)+u8(k); Java Expression: 44*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+34*Math.pow(10,-6)+getVariable(8,k)
Aug 30, 2024 5:47:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783604603105729; Expression=44*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+29*Math.pow(10,-6)+u8(k); Java Expression: 44*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+29*Math.pow(10,-6)+getVariable(8,k)
Aug 30, 2024 5:47:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783604603105573; Expression=44*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+33*Math.pow(10,-6)+u8(k); Java Expression: 44*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+33*Math.pow(10,-6)+getVariable(8,k)
Aug 30, 2024 5:47:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7836046031054344; Expression=44*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+30*Math.pow(10,-6)+u8(k); Java Expression: 44*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+30*Math.pow(10,-6)+getVariable(8,k)
Aug 30, 2024 5:47:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783604603105353; Expression=44*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+32*Math.pow(10,-6)+u8(k); Java Expression: 44*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+32*Math.pow(10,-6)+getVariable(8,k)
Aug 30, 2024 5:47:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783604603105303; Expression=44*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+31*Math.pow(10,-6)+u8(k); Java Expression: 44*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+31*Math.pow(10,-6)+getVariable(8,k)
Aug 30, 2024 5:48:03 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.783604603105303 -->> Avg.: 5.799996350904895 -->> Std. Dev.: 0.02835085692020951
Aug 30, 2024 5:49:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.782040363840464; Expression=44*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k)+u9(k)*31*Math.pow(10,-6)*u4(k); Java Expression: 44*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)*31*Math.pow(10,-6)*getVariable(4,k)
Aug 30, 2024 5:49:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7805675737870255; Expression=44*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k)+u9(k)*71*Math.pow(10,-6)*u4(k); Java Expression: 44*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)*71*Math.pow(10,-6)*getVariable(4,k)
Aug 30, 2024 5:49:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.779940121870145; Expression=44*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k)+u9(k)*97*Math.pow(10,-6)*u4(k); Java Expression: 44*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)*97*Math.pow(10,-6)*getVariable(4,k)
Aug 30, 2024 5:49:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.778378554951292; Expression=33*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k)+u9(k)*97*Math.pow(10,-6)*u4(k); Java Expression: 33*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)*97*Math.pow(10,-6)*getVariable(4,k)
Aug 30, 2024 5:49:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.776134492286183; Expression=44*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k)+u9(k)*76*Math.pow(10,-6)*u9(k); Java Expression: 44*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)*76*Math.pow(10,-6)*getVariable(9,k)
Aug 30, 2024 5:49:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.773353179692475; Expression=9*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k)+u9(k)*97*Math.pow(10,-6)*u2(k); Java Expression: 9*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)*97*Math.pow(10,-6)*getVariable(2,k)
Aug 30, 2024 5:49:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.769903924289451; Expression=9*Math.pow(10,-5)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k)+u9(k)*97*Math.pow(10,-6)*u2(k); Java Expression: 9*Math.pow(10,-5)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)*97*Math.pow(10,-6)*getVariable(2,k)
Aug 30, 2024 5:49:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.768256772985399; Expression=44*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k)-u1(k)*97*Math.pow(10,-6)*u3(k); Java Expression: 44*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(1,k)*97*Math.pow(10,-6)*getVariable(3,k)
Aug 30, 2024 5:50:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.739104230574568; Expression=62*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k)-u6(k)*97*Math.pow(10,-6)*u1(k); Java Expression: 62*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(6,k)*97*Math.pow(10,-6)*getVariable(1,k)
Aug 30, 2024 5:50:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.725020654017459; Expression=62*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k)-u1(k)*97*Math.pow(10,-6)*u7(k); Java Expression: 62*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(1,k)*97*Math.pow(10,-6)*getVariable(7,k)
Aug 30, 2024 5:50:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.716502813900933; Expression=91*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k)-u6(k)*97*Math.pow(10,-6)*u1(k); Java Expression: 91*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(6,k)*97*Math.pow(10,-6)*getVariable(1,k)
Aug 30, 2024 5:50:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.699407755161227; Expression=91*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k)-u7(k)*97*Math.pow(10,-6)*u1(k); Java Expression: 91*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-6)*getVariable(1,k)
Aug 30, 2024 5:50:44 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 5.699407755161227 -->> Avg.: 5.784773238221058 -->> Std. Dev.: 0.019529492589983537
Aug 30, 2024 5:50:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.696433325404371; Expression=91*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k)-u1(k)*97*Math.pow(10,-6)*u1(k); Java Expression: 91*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(1,k)*97*Math.pow(10,-6)*getVariable(1,k)
Aug 30, 2024 5:51:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6943881766640345; Expression=99*Math.pow(10,-2)-11*Math.pow(10,-1)*u5(k)+u7(k)-u4(k)+u8(k)-u1(k)*97*Math.pow(10,-6)*u1(k); Java Expression: 99*Math.pow(10,-2)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(1,k)*97*Math.pow(10,-6)*getVariable(1,k)
Aug 30, 2024 5:52:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.569509980962417; Expression=91*Math.pow(10,-2)-11*Math.pow(10,-8)*u5(k)+u7(k)-u4(k)+u8(k)-u7(k)*97*Math.pow(10,-4)*u4(k); Java Expression: 91*Math.pow(10,-2)-11*Math.pow(10,-8)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 5:52:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.558135952597642; Expression=99*Math.pow(10,-2)-11*Math.pow(10,-8)*u5(k)+u7(k)-u4(k)+u8(k)-u7(k)*97*Math.pow(10,-4)*u4(k); Java Expression: 99*Math.pow(10,-2)-11*Math.pow(10,-8)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 5:52:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.558135654031556; Expression=99*Math.pow(10,-2)-11*Math.pow(10,-9)*u9(k)+u7(k)-u4(k)+u8(k)-u7(k)*97*Math.pow(10,-4)*u4(k); Java Expression: 99*Math.pow(10,-2)-11*Math.pow(10,-9)*getVariable(9,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 5:52:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.558135210038933; Expression=99*Math.pow(10,-2)+11*Math.pow(10,-8)*u5(k)+u7(k)-u4(k)+u8(k)-u7(k)*97*Math.pow(10,-4)*u4(k); Java Expression: 99*Math.pow(10,-2)+11*Math.pow(10,-8)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 5:52:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.55813433248195; Expression=99*Math.pow(10,-2)+37*Math.pow(10,-8)*u5(k)+u7(k)-u4(k)+u8(k)-u7(k)*97*Math.pow(10,-4)*u4(k); Java Expression: 99*Math.pow(10,-2)+37*Math.pow(10,-8)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 5:52:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.558102863468746; Expression=99*Math.pow(10,-2)+11*Math.pow(10,-5)*u8(k)+u7(k)-u4(k)+u8(k)-u7(k)*97*Math.pow(10,-4)*u4(k); Java Expression: 99*Math.pow(10,-2)+11*Math.pow(10,-5)*getVariable(8,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 5:52:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.446191266478135; Expression=45*Math.pow(10,-2)+11*Math.pow(10,-1)*u8(k)+u7(k)-u4(k)+u8(k)-u7(k)*97*Math.pow(10,-4)*u4(k); Java Expression: 45*Math.pow(10,-2)+11*Math.pow(10,-1)*getVariable(8,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 5:52:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.445491899474614; Expression=44*Math.pow(10,-2)+11*Math.pow(10,-1)*u8(k)+u7(k)-u4(k)+u8(k)-u7(k)*97*Math.pow(10,-4)*u4(k); Java Expression: 44*Math.pow(10,-2)+11*Math.pow(10,-1)*getVariable(8,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 5:52:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.432833193103832; Expression=44*Math.pow(10,-4)+11*Math.pow(10,-1)*u8(k)+u7(k)-u4(k)+u8(k)-u7(k)*97*Math.pow(10,-4)*u4(k); Java Expression: 44*Math.pow(10,-4)+11*Math.pow(10,-1)*getVariable(8,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 5:52:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4325420926131525; Expression=44*Math.pow(10,-3)+11*Math.pow(10,-1)*u8(k)+u7(k)-u4(k)+u8(k)-u7(k)*97*Math.pow(10,-4)*u4(k); Java Expression: 44*Math.pow(10,-3)+11*Math.pow(10,-1)*getVariable(8,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 5:53:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4325384781330035; Expression=45*Math.pow(10,-3)+11*Math.pow(10,-1)*u8(k)+u7(k)-u4(k)+u8(k)-u7(k)*97*Math.pow(10,-4)*u4(k); Java Expression: 45*Math.pow(10,-3)+11*Math.pow(10,-1)*getVariable(8,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 5:53:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.432506349938677; Expression=6*Math.pow(10,-2)+11*Math.pow(10,-1)*u8(k)+u7(k)-u4(k)+u8(k)-u7(k)*97*Math.pow(10,-4)*u4(k); Java Expression: 6*Math.pow(10,-2)+11*Math.pow(10,-1)*getVariable(8,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 5:53:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.430036451958261; Expression=44*Math.pow(10,-3)+12*Math.pow(10,-1)*u8(k)+u7(k)-u4(k)+u8(k)-u7(k)*97*Math.pow(10,-4)*u4(k); Java Expression: 44*Math.pow(10,-3)+12*Math.pow(10,-1)*getVariable(8,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 5:53:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.429215883754801; Expression=44*Math.pow(10,-4)+12*Math.pow(10,-1)*u8(k)+u7(k)-u4(k)+u8(k)-u7(k)*97*Math.pow(10,-4)*u4(k); Java Expression: 44*Math.pow(10,-4)+12*Math.pow(10,-1)*getVariable(8,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 5:53:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.429143247461941; Expression=44*Math.pow(10,-6)+12*Math.pow(10,-1)*u8(k)+u7(k)-u4(k)+u8(k)-u7(k)*97*Math.pow(10,-4)*u4(k); Java Expression: 44*Math.pow(10,-6)+12*Math.pow(10,-1)*getVariable(8,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 5:53:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.42914253230246; Expression=44*Math.pow(10,-9)+12*Math.pow(10,-1)*u8(k)+u7(k)-u4(k)+u8(k)-u7(k)*97*Math.pow(10,-4)*u4(k); Java Expression: 44*Math.pow(10,-9)+12*Math.pow(10,-1)*getVariable(8,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 5:53:38 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 5.42914253230246 -->> Avg.: 5.742524168809672 -->> Std. Dev.: 0.0932271681617197

Execution time: 1515.516 seconds.



@@;44*Math.pow(10,-9)+12*Math.pow(10,-1)*getVariable(8,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-4)*getVariable(4,k)



Run #3
========
Aug 30, 2024 5:53:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=270388.28632727824; Expression=92*Math.pow(10,-4)*76*Math.pow(10,-5)-u3(k)*u3(k)*u2(k); Java Expression: 92*Math.pow(10,-4)*76*Math.pow(10,-5)-getVariable(3,k)*getVariable(3,k)*getVariable(2,k)
Aug 30, 2024 5:53:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=108.10436669013312; Expression=6*Math.pow(10,-8)+u8(k)-u9(k)-u4(k); Java Expression: 6*Math.pow(10,-8)+getVariable(8,k)-getVariable(9,k)-getVariable(4,k)
Aug 30, 2024 5:53:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=19.115505879688893; Expression=u1(k)-u3(k); Java Expression: getVariable(1,k)-getVariable(3,k)
Aug 30, 2024 5:53:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=16.933486057278046; Expression=u6(k)-u5(k)-u9(k); Java Expression: getVariable(6,k)-getVariable(5,k)-getVariable(9,k)
Aug 30, 2024 5:53:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.33046812832759; Expression=14*Math.pow(10,-5)+u5(k); Java Expression: 14*Math.pow(10,-5)+getVariable(5,k)
Aug 30, 2024 5:53:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 5:53:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037556360811266; Expression=u5(k)+u8(k)+74*Math.pow(10,-6)*u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)+74*Math.pow(10,-6)*getVariable(8,k)
Aug 30, 2024 5:54:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.841077566160345; Expression=u5(k)+u8(k)+u8(k)*u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:54:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.71302541376449; Expression=59*Math.pow(10,-9)*48*Math.pow(10,+5)*u7(k); Java Expression: 59*Math.pow(10,-9)*48*Math.pow(10,+5)*getVariable(7,k)
Aug 30, 2024 5:54:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.361059904227895; Expression=u5(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:54:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131407434512215; Expression=u7(k)-u5(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 5:54:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837859; Expression=u7(k)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)
Aug 30, 2024 5:54:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388946502078; Expression=u7(k)-u5(k)-u3(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(3,k)+getVariable(8,k)
Aug 30, 2024 5:54:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.958650494264545; Expression=u7(k)-u5(k)-74*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-74*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 5:54:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.94948109385686; Expression=u7(k)-u5(k)-84*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-84*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 5:54:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9419807185417035; Expression=u7(k)-u5(k)-94*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-94*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 5:54:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.930332178745148; Expression=u7(k)-u5(k)-12*Math.pow(10,-1)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-12*Math.pow(10,-1)-getVariable(4,k)
Aug 30, 2024 5:55:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928882637025391; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-getVariable(4,k)
Aug 30, 2024 5:55:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928878969427423; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-61*Math.pow(10,-5)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-61*Math.pow(10,-5)-getVariable(4,k)
Aug 30, 2024 5:55:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928841901385408; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-75*Math.pow(10,-4)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-75*Math.pow(10,-4)-getVariable(4,k)
Aug 30, 2024 5:55:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928836264099694; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-87*Math.pow(10,-4)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-87*Math.pow(10,-4)-getVariable(4,k)
Aug 30, 2024 5:55:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928830869689578; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-99*Math.pow(10,-4)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-99*Math.pow(10,-4)-getVariable(4,k)
Aug 30, 2024 5:55:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928826541852232; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-61*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-61*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 5:55:51 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.928826541852232 -->> Avg.: 6100316.163442066 -->> Std. Dev.: 2.679106619720185E7
Aug 30, 2024 5:55:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928790047704574; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-22*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-22*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 5:55:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928787778753282; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-23*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-23*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 5:56:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928778964016326; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-28*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-28*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 5:56:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928774414432723; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-39*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-39*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 5:56:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928773707462415; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-35*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-35*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 5:57:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9287737074624145; Expression=u7(k)-u4(k)-13*Math.pow(10,-1)-35*Math.pow(10,-3)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-13*Math.pow(10,-1)-35*Math.pow(10,-3)-getVariable(5,k)
Aug 30, 2024 5:57:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.925690470829466; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-u4(k)-61*Math.pow(10,-4)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-getVariable(4,k)-61*Math.pow(10,-4)*getVariable(5,k)
Aug 30, 2024 5:57:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.923903528424226; Expression=u7(k)-u5(k)-12*Math.pow(10,-1)-u4(k)-58*Math.pow(10,-4)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)-12*Math.pow(10,-1)-getVariable(4,k)-58*Math.pow(10,-4)*getVariable(5,k)
Aug 30, 2024 5:57:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.902197898970829; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-u4(k)-61*Math.pow(10,-4)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-getVariable(4,k)-61*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 5:57:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.835942344094847; Expression=u7(k)-u5(k)-93*Math.pow(10,-5)-u4(k)-14*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-93*Math.pow(10,-5)-getVariable(4,k)-14*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:57:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.796940245110414; Expression=u7(k)-u5(k)-13*Math.pow(10,-5)-u4(k)-22*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-5)-getVariable(4,k)-22*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:57:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.741580457355188; Expression=u7(k)-u5(k)+13*Math.pow(10,-1)-u4(k)-30*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+13*Math.pow(10,-1)-getVariable(4,k)-30*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:58:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.711946262095487; Expression=u7(k)-u5(k)+13*Math.pow(10,-1)-u4(k)-35*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+13*Math.pow(10,-1)-getVariable(4,k)-35*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:58:10 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.711946262095487 -->> Avg.: 6912.760844526277 -->> Std. Dev.: 23099.431143128368
Aug 30, 2024 5:58:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.709553179424681; Expression=u7(k)-u5(k)+13*Math.pow(10,-1)-u4(k)-36*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+13*Math.pow(10,-1)-getVariable(4,k)-36*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:58:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7094746663440334; Expression=u7(k)-u5(k)+13*Math.pow(10,-1)-u4(k)-39*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+13*Math.pow(10,-1)-getVariable(4,k)-39*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:58:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.652584408825484; Expression=u7(k)-u5(k)+25*Math.pow(10,-1)-u4(k)-56*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+25*Math.pow(10,-1)-getVariable(4,k)-56*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:58:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.643173512934574; Expression=u7(k)-u5(k)+28*Math.pow(10,-1)-u4(k)-50*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+28*Math.pow(10,-1)-getVariable(4,k)-50*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:58:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6328566679981495; Expression=u7(k)-u5(k)+59*Math.pow(10,-1)-u4(k)-79*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+59*Math.pow(10,-1)-getVariable(4,k)-79*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:58:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.570853417237103; Expression=u7(k)-u5(k)+47*Math.pow(10,-1)-u4(k)-73*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+47*Math.pow(10,-1)-getVariable(4,k)-73*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:58:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5576331864162745; Expression=u7(k)-u5(k)+53*Math.pow(10,-1)-u4(k)-80*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+53*Math.pow(10,-1)-getVariable(4,k)-80*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:58:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.552648045870647; Expression=u7(k)-u5(k)+84*Math.pow(10,-1)-u4(k)-94*Math.pow(10,-3)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+84*Math.pow(10,-1)-getVariable(4,k)-94*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 5:59:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.520300476101965; Expression=u7(k)-u5(k)+84*Math.pow(10,-1)-u3(k)-94*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+84*Math.pow(10,-1)-getVariable(3,k)-94*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:59:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.518740107349332; Expression=u7(k)-u5(k)+88*Math.pow(10,-1)-u3(k)-94*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+88*Math.pow(10,-1)-getVariable(3,k)-94*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:59:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.51641175185125; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-94*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-94*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:59:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.513087327062477; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 6:00:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.509637250803565; Expression=u7(k)-u5(k)+88*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+88*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 6:00:39 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.509637250803565 -->> Avg.: 254.51615880483874 -->> Std. Dev.: 734.7353875537004
Aug 30, 2024 6:00:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.508000852856466; Expression=u7(k)-u5(k)+89*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+89*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 6:00:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.471109138500136; Expression=u7(k)-u5(k)+28*Math.pow(10,-1)-u4(k)-50*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+28*Math.pow(10,-1)-getVariable(4,k)-50*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 6:01:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.442383225631193; Expression=u7(k)-u5(k)+66*Math.pow(10,-1)-u4(k)-u1(k)*94*Math.pow(10,-5)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+66*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*94*Math.pow(10,-5)*getVariable(7,k)
Aug 30, 2024 6:01:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.430564510341289; Expression=u7(k)-u5(k)+59*Math.pow(10,-1)-u4(k)-u1(k)*79*Math.pow(10,-5)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+59*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*79*Math.pow(10,-5)*getVariable(7,k)
Aug 30, 2024 6:01:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.378405867056945; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 6:01:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.366338037069318; Expression=u7(k)-u5(k)+84*Math.pow(10,-1)-u3(k)-94*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+84*Math.pow(10,-1)-getVariable(3,k)-94*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 6:01:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.365924754594687; Expression=u7(k)-u5(k)+66*Math.pow(10,-1)-u3(k)-70*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+66*Math.pow(10,-1)-getVariable(3,k)-70*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 6:01:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.33143681039818; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-94*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-94*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 6:01:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.323510430939898; Expression=u7(k)-u5(k)+88*Math.pow(10,-1)-u3(k)-94*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+88*Math.pow(10,-1)-getVariable(3,k)-94*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 6:01:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.317230418970733; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-92*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-92*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 6:02:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.309282861762081; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-90*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-90*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 6:02:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3086899646238885; Expression=u7(k)-u5(k)+90*Math.pow(10,-1)-u3(k)-92*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+90*Math.pow(10,-1)-getVariable(3,k)-92*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 6:02:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.307771616776396; Expression=u7(k)-u5(k)+88*Math.pow(10,-1)-u3(k)-90*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+88*Math.pow(10,-1)-getVariable(3,k)-90*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 6:02:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.307765423238255; Expression=u7(k)-u5(k)+88*Math.pow(10,-1)-u3(k)-89*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+88*Math.pow(10,-1)-getVariable(3,k)-89*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 6:03:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.307665796969244; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-89*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-89*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 6:03:14 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.307665796969244 -->> Avg.: 15.289931527333913 -->> Std. Dev.: 21.681465478274582
Aug 30, 2024 6:03:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.307665796969242; Expression=u7(k)-u3(k)+87*Math.pow(10,-1)-u5(k)-89*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)+87*Math.pow(10,-1)-getVariable(5,k)-89*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 6:03:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.307622254511646; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-88*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-88*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 6:03:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.307622254511645; Expression=u7(k)-u3(k)+87*Math.pow(10,-1)-u5(k)-88*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)+87*Math.pow(10,-1)-getVariable(5,k)-88*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 6:03:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.307622254511644; Expression=u7(k)-u3(k)+87*Math.pow(10,-1)-u5(k)-u1(k)*88*Math.pow(10,-5)*u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)+87*Math.pow(10,-1)-getVariable(5,k)-getVariable(1,k)*88*Math.pow(10,-5)*getVariable(7,k)
Aug 30, 2024 6:05:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.269480192066094; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-u1(k)*88*Math.pow(10,-5)*u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-getVariable(1,k)*88*Math.pow(10,-5)*getVariable(7,k)
Aug 30, 2024 6:05:52 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.269480192066094 -->> Avg.: 5.896771599520369 -->> Std. Dev.: 1.3608691883726276
Aug 30, 2024 6:06:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.236556001043463; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-u1(k)*84*Math.pow(10,-5)*u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-getVariable(1,k)*84*Math.pow(10,-5)*getVariable(7,k)
Aug 30, 2024 6:06:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.231159248424473; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-u1(k)*79*Math.pow(10,-5)*u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-getVariable(1,k)*79*Math.pow(10,-5)*getVariable(7,k)
Aug 30, 2024 6:06:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.228528044850805; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-81*Math.pow(10,-5)*u1(k)*u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-81*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)
Aug 30, 2024 6:07:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.215631683062925; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-88*Math.pow(10,-5)*u1(k)*u7(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-88*Math.pow(10,-5)*getVariable(1,k)*getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:08:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.166070907770154; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-81*Math.pow(10,-5)*u7(k)*u7(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-81*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:08:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.150208393061614; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-79*Math.pow(10,-5)*u7(k)*u7(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-79*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:08:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.14607876200865; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-78*Math.pow(10,-5)*u7(k)*u7(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-78*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:08:31 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.14607876200865 -->> Avg.: 5.479309308906641 -->> Std. Dev.: 0.2524130381426731
Aug 30, 2024 6:08:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.145453263637732; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-76*Math.pow(10,-5)*u7(k)*u7(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-76*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:08:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.110447121164588; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-81*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-81*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 6:08:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.080550619256511; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-78*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-78*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:08:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.029612556907371; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-81*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-81*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:09:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.019451438290198; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-93*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-93*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 6:09:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.001238062911459; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-88*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-88*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:09:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.997443327190698; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-87*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-87*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:09:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9962684329730545; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-86*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-86*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:11:16 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.9962684329730545 -->> Avg.: 5.304856797116625 -->> Std. Dev.: 0.1917183587838864
Aug 30, 2024 6:13:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.968025676712417; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-86*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)*26*Math.pow(10,-3)*u8(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-86*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*26*Math.pow(10,-3)*getVariable(8,k)*getVariable(3,k)
Aug 30, 2024 6:13:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.967617248746721; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-86*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)*31*Math.pow(10,-3)*u8(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-86*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*31*Math.pow(10,-3)*getVariable(8,k)*getVariable(3,k)
Aug 30, 2024 6:14:12 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.967617248746721 -->> Avg.: 5.188726002837001 -->> Std. Dev.: 0.1635227395145229
Aug 30, 2024 6:14:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.960152661262495; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-86*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)*28*Math.pow(10,-3)*u8(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-86*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*28*Math.pow(10,-3)*getVariable(8,k)*getVariable(3,k)
Aug 30, 2024 6:14:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.960070848702044; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-86*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)*29*Math.pow(10,-3)*u8(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-86*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*29*Math.pow(10,-3)*getVariable(8,k)*getVariable(3,k)
Aug 30, 2024 6:14:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.945616597140739; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-89*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)*31*Math.pow(10,-3)*u8(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-89*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*31*Math.pow(10,-3)*getVariable(8,k)*getVariable(3,k)
Aug 30, 2024 6:15:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.944161113830953; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-91*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)*31*Math.pow(10,-3)*u8(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-91*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*31*Math.pow(10,-3)*getVariable(8,k)*getVariable(3,k)
Aug 30, 2024 6:15:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.940961951932015; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-91*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)*34*Math.pow(10,-3)*u8(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-91*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*34*Math.pow(10,-3)*getVariable(8,k)*getVariable(3,k)
Aug 30, 2024 6:16:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.940513527485538; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-91*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)*32*Math.pow(10,-3)*u8(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-91*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*32*Math.pow(10,-3)*getVariable(8,k)*getVariable(3,k)
Aug 30, 2024 6:16:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.939446582925545; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-91*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)*33*Math.pow(10,-3)*u8(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-91*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*33*Math.pow(10,-3)*getVariable(8,k)*getVariable(3,k)
Aug 30, 2024 6:16:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.937422195916271; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-92*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)*34*Math.pow(10,-3)*u8(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-92*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*34*Math.pow(10,-3)*getVariable(8,k)*getVariable(3,k)
Aug 30, 2024 6:17:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9361061502051085; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-93*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)*35*Math.pow(10,-3)*u8(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-93*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*35*Math.pow(10,-3)*getVariable(8,k)*getVariable(3,k)
Aug 30, 2024 6:17:23 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.9361061502051085 -->> Avg.: 5.101641669021341 -->> Std. Dev.: 0.14533968969191752
Aug 30, 2024 6:18:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.93560750395686; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-94*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)*35*Math.pow(10,-3)*u8(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-94*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*35*Math.pow(10,-3)*getVariable(8,k)*getVariable(3,k)
Aug 30, 2024 6:19:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.935499012427506; Expression=u7(k)-u3(k)*8*Math.pow(10,-1)-u5(k)-94*Math.pow(10,-5)*u7(k)*u7(k)+u8(k)*36*Math.pow(10,-3)*u8(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-94*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*36*Math.pow(10,-3)*getVariable(8,k)*getVariable(3,k)
Aug 30, 2024 6:20:41 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.935499012427506 -->> Avg.: 5.029006905372891 -->> Std. Dev.: 0.113689123421487

Execution time: 1623.49 seconds.



@@;getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-94*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*36*Math.pow(10,-3)*getVariable(8,k)*getVariable(3,k)



Run #4
========
Aug 30, 2024 6:20:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=198.5522633218275; Expression=70*Math.pow(10,-8)-u2(k)+u3(k)+63*Math.pow(10,-2)-u9(k); Java Expression: 70*Math.pow(10,-8)-getVariable(2,k)+getVariable(3,k)+63*Math.pow(10,-2)-getVariable(9,k)
Aug 30, 2024 6:20:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=67.18462759201167; Expression=67*Math.pow(10,-9)-u5(k); Java Expression: 67*Math.pow(10,-9)-getVariable(5,k)
Aug 30, 2024 6:20:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=34.265598181328166; Expression=8*Math.pow(10,-4)*u4(k); Java Expression: 8*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 6:20:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=20.59712241098021; Expression=u1(k)-u5(k); Java Expression: getVariable(1,k)-getVariable(5,k)
Aug 30, 2024 6:20:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=12.308672315171679; Expression=53*Math.pow(10,-5)+u3(k); Java Expression: 53*Math.pow(10,-5)+getVariable(3,k)
Aug 30, 2024 6:20:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=11.44140799278831; Expression=23*Math.pow(10,-1)+u4(k); Java Expression: 23*Math.pow(10,-1)+getVariable(4,k)
Aug 30, 2024 6:20:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330471375114273; Expression=13*Math.pow(10,-8)+u5(k); Java Expression: 13*Math.pow(10,-8)+getVariable(5,k)
Aug 30, 2024 6:20:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 6:21:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.49269223321396; Expression=70*Math.pow(10,-2)+35*Math.pow(10,-2)*u6(k); Java Expression: 70*Math.pow(10,-2)+35*Math.pow(10,-2)*getVariable(6,k)
Aug 30, 2024 6:21:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.430677553196872; Expression=15*Math.pow(10,-2)+35*Math.pow(10,-2)*u6(k); Java Expression: 15*Math.pow(10,-2)+35*Math.pow(10,-2)*getVariable(6,k)
Aug 30, 2024 6:21:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.420752562487622; Expression=70*Math.pow(10,-9)+35*Math.pow(10,-2)*u6(k); Java Expression: 70*Math.pow(10,-9)+35*Math.pow(10,-2)*getVariable(6,k)
Aug 30, 2024 6:21:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.404129584004329; Expression=75*Math.pow(10,-6)+34*Math.pow(10,-2)*u6(k); Java Expression: 75*Math.pow(10,-6)+34*Math.pow(10,-2)*getVariable(6,k)
Aug 30, 2024 6:21:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.4041279676572564; Expression=97*Math.pow(10,-6)+34*Math.pow(10,-2)*u6(k); Java Expression: 97*Math.pow(10,-6)+34*Math.pow(10,-2)*getVariable(6,k)
Aug 30, 2024 6:21:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.404063880546004; Expression=97*Math.pow(10,-5)+34*Math.pow(10,-2)*u6(k); Java Expression: 97*Math.pow(10,-5)+34*Math.pow(10,-2)*getVariable(6,k)
Aug 30, 2024 6:21:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.254181981816974; Expression=75*Math.pow(10,-6)+35*Math.pow(10,-2)*u6(k)+u8(k); Java Expression: 75*Math.pow(10,-6)+35*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)
Aug 30, 2024 6:21:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.053993146329982; Expression=97*Math.pow(10,-6)+34*Math.pow(10,-2)*u7(k); Java Expression: 97*Math.pow(10,-6)+34*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 6:21:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.053961212967719; Expression=97*Math.pow(10,-8)+34*Math.pow(10,-2)*u7(k); Java Expression: 97*Math.pow(10,-8)+34*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 6:21:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.053960922669752; Expression=97*Math.pow(10,-9)+34*Math.pow(10,-2)*u7(k); Java Expression: 97*Math.pow(10,-9)+34*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 6:21:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.053960892742135; Expression=7*Math.pow(10,-9)+34*Math.pow(10,-2)*u7(k); Java Expression: 7*Math.pow(10,-9)+34*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 6:21:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.78088045476534; Expression=27*Math.pow(10,-6)+31*Math.pow(10,-2)*u7(k); Java Expression: 27*Math.pow(10,-6)+31*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 6:21:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.780852130172603; Expression=27*Math.pow(10,-5)+31*Math.pow(10,-2)*u7(k); Java Expression: 27*Math.pow(10,-5)+31*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 6:21:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.754730972852192; Expression=27*Math.pow(10,-2)+31*Math.pow(10,-2)*u7(k); Java Expression: 27*Math.pow(10,-2)+31*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 6:21:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709785326207459; Expression=53*Math.pow(10,-9)+32*Math.pow(10,-2)*u7(k); Java Expression: 53*Math.pow(10,-9)+32*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 6:21:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709785325789649; Expression=42*Math.pow(10,-9)+32*Math.pow(10,-2)*u7(k); Java Expression: 42*Math.pow(10,-9)+32*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 6:22:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709785325751664; Expression=41*Math.pow(10,-9)+32*Math.pow(10,-2)*u7(k); Java Expression: 41*Math.pow(10,-9)+32*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 6:22:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0774766468656365; Expression=12*Math.pow(10,-8)*u3(k)*u3(k)-u5(k)+u7(k)-u4(k); Java Expression: 12*Math.pow(10,-8)*getVariable(3,k)*getVariable(3,k)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 6:22:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0774401867130665; Expression=31*Math.pow(10,-9)*u3(k)*u3(k)-u5(k)+u7(k)-u4(k); Java Expression: 31*Math.pow(10,-9)*getVariable(3,k)*getVariable(3,k)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 6:22:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077432403486834; Expression=12*Math.pow(10,-9)*u3(k)*u3(k)-u5(k)+u7(k)-u4(k); Java Expression: 12*Math.pow(10,-9)*getVariable(3,k)*getVariable(3,k)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 6:22:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077428447580145; Expression=95*Math.pow(10,-9)*u3(k)*u8(k)-u5(k)+u7(k)-u4(k); Java Expression: 95*Math.pow(10,-9)*getVariable(3,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 6:22:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427609068157; Expression=12*Math.pow(10,-9)*u3(k)*u8(k)-u5(k)+u7(k)-u4(k); Java Expression: 12*Math.pow(10,-9)*getVariable(3,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 6:22:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.058143075184892; Expression=95*Math.pow(10,-9)*u3(k)-u8(k)-u5(k)+u7(k)-u4(k); Java Expression: 95*Math.pow(10,-9)*getVariable(3,k)-getVariable(8,k)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 6:22:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.058119890880032; Expression=95*Math.pow(10,-6)*u3(k)-u8(k)-u5(k)+u7(k)-u4(k); Java Expression: 95*Math.pow(10,-6)*getVariable(3,k)-getVariable(8,k)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 6:22:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.058019020912915; Expression=84*Math.pow(10,-5)*u3(k)-u8(k)-u5(k)+u7(k)-u4(k); Java Expression: 84*Math.pow(10,-5)*getVariable(3,k)-getVariable(8,k)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 6:22:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.020330465517461; Expression=71*Math.pow(10,-9)*u3(k)*u8(k)-u5(k)+u7(k)-29*Math.pow(10,-2)-u4(k); Java Expression: 71*Math.pow(10,-9)*getVariable(3,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)-29*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:22:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.967182634226828; Expression=12*Math.pow(10,-9)*u3(k)*u8(k)-u5(k)+u7(k)-66*Math.pow(10,-2)-u4(k); Java Expression: 12*Math.pow(10,-9)*getVariable(3,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)-66*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:22:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.940057068666621; Expression=31*Math.pow(10,-9)*u3(k)*u8(k)-u5(k)+u7(k)-97*Math.pow(10,-2)-u4(k); Java Expression: 31*Math.pow(10,-9)*getVariable(3,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)-97*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:22:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.940057042840305; Expression=31*Math.pow(10,-9)*u8(k)*u8(k)-u5(k)+u7(k)-97*Math.pow(10,-2)-u4(k); Java Expression: 31*Math.pow(10,-9)*getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)-97*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:22:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.940057041551454; Expression=39*Math.pow(10,-9)*u8(k)*u8(k)-u5(k)+u7(k)-97*Math.pow(10,-2)-u4(k); Java Expression: 39*Math.pow(10,-9)*getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)-97*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:22:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.940050765809653; Expression=39*Math.pow(10,-6)*u8(k)*u8(k)-u5(k)+u7(k)-97*Math.pow(10,-2)-u4(k); Java Expression: 39*Math.pow(10,-6)*getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)-97*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:22:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.934906867202922; Expression=39*Math.pow(10,-3)*u8(k)*u8(k)-u5(k)+u7(k)-97*Math.pow(10,-2)-u4(k); Java Expression: 39*Math.pow(10,-3)*getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)-97*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:22:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9317846287954685; Expression=84*Math.pow(10,-3)*u8(k)*u8(k)-u5(k)+u7(k)-97*Math.pow(10,-2)-u4(k); Java Expression: 84*Math.pow(10,-3)*getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)-97*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:22:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.931501677471228; Expression=94*Math.pow(10,-3)*u8(k)*u8(k)-u5(k)+u7(k)-97*Math.pow(10,-2)-u4(k); Java Expression: 94*Math.pow(10,-3)*getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)-97*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:22:57 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.931501677471228 -->> Avg.: 2481572.667003914 -->> Std. Dev.: 1.0634010405384077E7
Aug 30, 2024 6:23:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.69781486693275; Expression=84*Math.pow(10,-8)*u8(k)+u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-u4(k); Java Expression: 84*Math.pow(10,-8)*getVariable(8,k)+getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:23:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.687858900791784; Expression=94*Math.pow(10,-9)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-u4(k); Java Expression: 94*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:23:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.687858893315879; Expression=39*Math.pow(10,-9)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-u4(k); Java Expression: 39*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:23:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.687858892228478; Expression=31*Math.pow(10,-9)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-u4(k); Java Expression: 31*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:23:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.687849386424418; Expression=94*Math.pow(10,-9)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-70*Math.pow(10,-6)-u4(k); Java Expression: 94*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-70*Math.pow(10,-6)-getVariable(4,k)
Aug 30, 2024 6:23:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.687849107122546; Expression=39*Math.pow(10,-9)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-72*Math.pow(10,-6)-u4(k); Java Expression: 39*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-72*Math.pow(10,-6)-getVariable(4,k)
Aug 30, 2024 6:23:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.687847075919951; Expression=94*Math.pow(10,-9)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-87*Math.pow(10,-6)-u4(k); Java Expression: 94*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-87*Math.pow(10,-6)-getVariable(4,k)
Aug 30, 2024 6:23:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.687845443646559; Expression=84*Math.pow(10,-9)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-99*Math.pow(10,-6)-u4(k); Java Expression: 84*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-99*Math.pow(10,-6)-getVariable(4,k)
Aug 30, 2024 6:23:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.687038348194893; Expression=94*Math.pow(10,-5)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-70*Math.pow(10,-4)-u4(k); Java Expression: 94*Math.pow(10,-5)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-70*Math.pow(10,-4)-getVariable(4,k)
Aug 30, 2024 6:23:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.678767691780929; Expression=94*Math.pow(10,-8)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-70*Math.pow(10,-3)-u4(k); Java Expression: 94*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-70*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 6:23:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.676687763616078; Expression=39*Math.pow(10,-9)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-87*Math.pow(10,-3)-u4(k); Java Expression: 39*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-87*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 6:23:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.635544633940845; Expression=94*Math.pow(10,-8)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-70*Math.pow(10,-2)-u4(k); Java Expression: 94*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-70*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:23:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.635544623560171; Expression=14*Math.pow(10,-8)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-70*Math.pow(10,-2)-u4(k); Java Expression: 14*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-70*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:23:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.635423745783019; Expression=94*Math.pow(10,-8)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-71*Math.pow(10,-2)-u4(k); Java Expression: 94*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-71*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:23:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6353205950941305; Expression=39*Math.pow(10,-8)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-72*Math.pow(10,-2)-u4(k); Java Expression: 39*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-72*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:23:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.635320591785164; Expression=39*Math.pow(10,-9)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-72*Math.pow(10,-2)-u4(k); Java Expression: 39*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-72*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:23:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.635265129245083; Expression=14*Math.pow(10,-8)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-82*Math.pow(10,-2)-u4(k); Java Expression: 14*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-82*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:23:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.63513425351125; Expression=94*Math.pow(10,-8)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-80*Math.pow(10,-2)-u4(k); Java Expression: 94*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-80*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:24:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6351176253132635; Expression=14*Math.pow(10,-8)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)-75*Math.pow(10,-2)-u4(k); Java Expression: 14*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)-75*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:24:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.592772218523758; Expression=84*Math.pow(10,-9)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,+2)*99*Math.pow(10,-6)-u4(k); Java Expression: 84*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,+2)*99*Math.pow(10,-6)-getVariable(4,k)
Aug 30, 2024 6:24:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.592772185959114; Expression=84*Math.pow(10,-8)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)*99*Math.pow(10,-2)-u4(k); Java Expression: 84*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)*99*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:24:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.589783937833073; Expression=84*Math.pow(10,-3)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,+2)*99*Math.pow(10,-6)-u4(k); Java Expression: 84*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,+2)*99*Math.pow(10,-6)-getVariable(4,k)
Aug 30, 2024 6:24:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.589783937833071; Expression=84*Math.pow(10,-3)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)*99*Math.pow(10,-2)-u4(k); Java Expression: 84*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)*99*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:24:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.589700530405634; Expression=87*Math.pow(10,-3)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,+2)*99*Math.pow(10,-6)-u4(k); Java Expression: 87*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,+2)*99*Math.pow(10,-6)-getVariable(4,k)
Aug 30, 2024 6:25:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.589512169965406; Expression=94*Math.pow(10,-3)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)*99*Math.pow(10,-2)-u4(k); Java Expression: 94*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)*99*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:25:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.589434125754757; Expression=97*Math.pow(10,-3)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,+2)*99*Math.pow(10,-6)-u4(k); Java Expression: 97*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,+2)*99*Math.pow(10,-6)-getVariable(4,k)
Aug 30, 2024 6:25:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.589408468595344; Expression=98*Math.pow(10,-3)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,+2)*99*Math.pow(10,-6)-u4(k); Java Expression: 98*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,+2)*99*Math.pow(10,-6)-getVariable(4,k)
Aug 30, 2024 6:25:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.587813153007715; Expression=19*Math.pow(10,-2)+u8(k)*u8(k)-u5(k)+u7(k)*97*Math.pow(10,-2)*99*Math.pow(10,-2)-u4(k); Java Expression: 19*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)-getVariable(5,k)+getVariable(7,k)*97*Math.pow(10,-2)*99*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:25:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.471866719229257; Expression=6*Math.pow(10,-8)+u8(k)*u8(k)-u8(k)+u7(k)*67*Math.pow(10,-2)-43*Math.pow(10,-2)-u4(k); Java Expression: 6*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)+getVariable(7,k)*67*Math.pow(10,-2)-43*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:25:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.453160924518177; Expression=6*Math.pow(10,-8)+u8(k)*u8(k)-u8(k)+u7(k)*67*Math.pow(10,-2)-80*Math.pow(10,-2)-u4(k); Java Expression: 6*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)+getVariable(7,k)*67*Math.pow(10,-2)-80*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:25:27 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.453160924518177 -->> Avg.: 3639.1896347710026 -->> Std. Dev.: 12415.154126164789
Aug 30, 2024 6:25:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.452406008207395; Expression=6*Math.pow(10,-8)+u8(k)*u8(k)-u8(k)+u7(k)*67*Math.pow(10,-2)-90*Math.pow(10,-2)-u4(k); Java Expression: 6*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)+getVariable(7,k)*67*Math.pow(10,-2)-90*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:25:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.452406007688825; Expression=38*Math.pow(10,-8)+u8(k)*u8(k)-u8(k)+u7(k)*67*Math.pow(10,-2)-90*Math.pow(10,-2)-u4(k); Java Expression: 38*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)+getVariable(7,k)*67*Math.pow(10,-2)-90*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:25:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.452401174251025; Expression=38*Math.pow(10,-4)+u8(k)*u8(k)-u8(k)+u7(k)*67*Math.pow(10,-2)-90*Math.pow(10,-2)-u4(k); Java Expression: 38*Math.pow(10,-4)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)+getVariable(7,k)*67*Math.pow(10,-2)-90*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:25:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.398763781342023; Expression=12*Math.pow(10,-8)+u8(k)*u8(k)-u8(k)+u7(k)*66*Math.pow(10,-2)-u4(k); Java Expression: 12*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)+getVariable(7,k)*66*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:26:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.398763771628909; Expression=46*Math.pow(10,-8)+u8(k)*u8(k)-u8(k)+u7(k)*66*Math.pow(10,-2)-u4(k); Java Expression: 46*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)+getVariable(7,k)*66*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:26:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.398763764486932; Expression=71*Math.pow(10,-8)+u8(k)*u8(k)-u8(k)+u7(k)*66*Math.pow(10,-2)-u4(k); Java Expression: 71*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)+getVariable(7,k)*66*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:26:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3984342947328114; Expression=12*Math.pow(10,-3)+u8(k)*u8(k)-u8(k)+u7(k)*66*Math.pow(10,-2)-u4(k); Java Expression: 12*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)+getVariable(7,k)*66*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:26:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.307675953314243; Expression=12*Math.pow(10,-4)+u8(k)*u8(k)-u4(k)+u7(k)*66*Math.pow(10,-2)-12*Math.pow(10,-3)*u4(k); Java Expression: 12*Math.pow(10,-4)+getVariable(8,k)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)*66*Math.pow(10,-2)-12*Math.pow(10,-3)*getVariable(4,k)
Aug 30, 2024 6:26:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.239214736552872; Expression=12*Math.pow(10,-4)+u8(k)*u8(k)-u4(k)+u7(k)*66*Math.pow(10,-2)-25*Math.pow(10,-3)*u4(k); Java Expression: 12*Math.pow(10,-4)+getVariable(8,k)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)*66*Math.pow(10,-2)-25*Math.pow(10,-3)*getVariable(4,k)
Aug 30, 2024 6:26:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.239113651732062; Expression=12*Math.pow(10,-6)+u8(k)*u8(k)-u4(k)+u7(k)*66*Math.pow(10,-2)-25*Math.pow(10,-3)*u4(k); Java Expression: 12*Math.pow(10,-6)+getVariable(8,k)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)*66*Math.pow(10,-2)-25*Math.pow(10,-3)*getVariable(4,k)
Aug 30, 2024 6:26:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.176264223071999; Expression=12*Math.pow(10,-4)+u8(k)*u8(k)-u4(k)+u7(k)*66*Math.pow(10,-2)-12*Math.pow(10,-3)*u6(k); Java Expression: 12*Math.pow(10,-4)+getVariable(8,k)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)*66*Math.pow(10,-2)-12*Math.pow(10,-3)*getVariable(6,k)
Aug 30, 2024 6:26:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.154302729574171; Expression=12*Math.pow(10,-2)+u8(k)*u8(k)-u4(k)+u7(k)*66*Math.pow(10,-2)-38*Math.pow(10,-3)*u5(k); Java Expression: 12*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)*66*Math.pow(10,-2)-38*Math.pow(10,-3)*getVariable(5,k)
Aug 30, 2024 6:26:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.05133618073103; Expression=6*Math.pow(10,-6)+u8(k)*u8(k)+u8(k)+u7(k)*64*Math.pow(10,-2)-43*Math.pow(10,-3)-u4(k); Java Expression: 6*Math.pow(10,-6)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-43*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 6:26:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.007677438795978; Expression=6*Math.pow(10,-8)+u8(k)*u8(k)+u8(k)+u7(k)*64*Math.pow(10,-2)-43*Math.pow(10,-2)-u4(k); Java Expression: 6*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-43*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:26:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9941090868197735; Expression=21*Math.pow(10,-8)+u8(k)*u8(k)+u8(k)+u7(k)*64*Math.pow(10,-2)-74*Math.pow(10,-2)-u4(k); Java Expression: 21*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-74*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:26:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.994109084901008; Expression=6*Math.pow(10,-8)+u8(k)*u8(k)+u8(k)+u7(k)*64*Math.pow(10,-2)-74*Math.pow(10,-2)-u4(k); Java Expression: 6*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-74*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:27:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.994015769734258; Expression=6*Math.pow(10,-8)+u8(k)*u8(k)+u8(k)+u7(k)*64*Math.pow(10,-2)-86*Math.pow(10,-2)-u4(k); Java Expression: 6*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-86*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:27:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.947248230964308; Expression=6*Math.pow(10,-8)+u8(k)*u8(k)*u8(k)+u7(k)*64*Math.pow(10,-2)-74*Math.pow(10,-2)-u4(k); Java Expression: 6*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-74*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:27:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.925481420125663; Expression=6*Math.pow(10,-8)+u8(k)*u8(k)*u8(k)+u7(k)*64*Math.pow(10,-2)-94*Math.pow(10,-2)-u4(k); Java Expression: 6*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-94*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:27:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9254814153319835; Expression=6*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+u7(k)*64*Math.pow(10,-2)-94*Math.pow(10,-2)-u4(k); Java Expression: 6*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-94*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:27:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9254814150656685; Expression=3*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+u7(k)*64*Math.pow(10,-2)-94*Math.pow(10,-2)-u4(k); Java Expression: 3*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-94*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:27:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.886853543507924; Expression=6*Math.pow(10,-8)+u8(k)*u8(k)*u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)-u8(k); Java Expression: 6*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)-getVariable(8,k)
Aug 30, 2024 6:27:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.886835508012569; Expression=6*Math.pow(10,-4)+u8(k)*u8(k)*u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)-u8(k)+u1(k)-u1(k); Java Expression: 6*Math.pow(10,-4)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)-getVariable(8,k)+getVariable(1,k)-getVariable(1,k)
Aug 30, 2024 6:27:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.885414258228847; Expression=6*Math.pow(10,-2)+u8(k)*u8(k)*u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)-u8(k); Java Expression: 6*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)-getVariable(8,k)
Aug 30, 2024 6:27:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.829272410133473; Expression=6*Math.pow(10,-8)+u8(k)*u8(k)*u8(k)+u7(k)*64*Math.pow(10,-2)*98*Math.pow(10,-2)-u4(k); Java Expression: 6*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)*98*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:28:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.829272409890339; Expression=3*Math.pow(10,-8)+u8(k)*u8(k)*u8(k)+u7(k)*64*Math.pow(10,-2)*98*Math.pow(10,-2)-u4(k); Java Expression: 3*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)*98*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:28:11 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 4.829272409890339 -->> Avg.: 131.99902170417047 -->> Std. Dev.: 386.50035367072036
Aug 30, 2024 6:28:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.829272409695838; Expression=6*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+u7(k)*64*Math.pow(10,-2)*98*Math.pow(10,-2)-u4(k); Java Expression: 6*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)*98*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:28:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.829272409687733; Expression=5*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+u7(k)*64*Math.pow(10,-2)*98*Math.pow(10,-2)-u4(k); Java Expression: 5*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)*98*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:28:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.829272409655321; Expression=1*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+u7(k)*64*Math.pow(10,-2)*98*Math.pow(10,-2)-u4(k); Java Expression: 1*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)*98*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 6:29:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.82927240965532; Expression=1*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+u7(k)*64*Math.pow(10,-6)*98*Math.pow(10,+2)-u4(k); Java Expression: 1*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-6)*98*Math.pow(10,+2)-getVariable(4,k)
Aug 30, 2024 6:30:58 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 4.82927240965532 -->> Avg.: 15.24740558150368 -->> Std. Dev.: 21.553871553185918
Aug 30, 2024 6:33:46 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.82927240965532 -->> Avg.: 5.661988461818857 -->> Std. Dev.: 1.612358191114876
Aug 30, 2024 6:35:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.829271035373087; Expression=57*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+64*Math.pow(10,-6)*98*Math.pow(10,+2)*u7(k)-17*Math.pow(10,-5)-u4(k); Java Expression: 57*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-6)*98*Math.pow(10,+2)*getVariable(7,k)-17*Math.pow(10,-5)-getVariable(4,k)
Aug 30, 2024 6:35:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.829265675117433; Expression=1*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+64*Math.pow(10,-6)*98*Math.pow(10,+2)*u7(k)-84*Math.pow(10,-5)-u4(k); Java Expression: 1*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-6)*98*Math.pow(10,+2)*getVariable(7,k)-84*Math.pow(10,-5)-getVariable(4,k)
Aug 30, 2024 6:35:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.829201719954083; Expression=1*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+64*Math.pow(10,-6)*98*Math.pow(10,+2)*u7(k)-10*Math.pow(10,-3)-u4(k); Java Expression: 1*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-6)*98*Math.pow(10,+2)*getVariable(7,k)-10*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 6:35:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.829123886262414; Expression=1*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+64*Math.pow(10,-6)*98*Math.pow(10,+2)*u7(k)-49*Math.pow(10,-3)-u4(k); Java Expression: 1*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-6)*98*Math.pow(10,+2)*getVariable(7,k)-49*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 6:36:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.829117373882151; Expression=1*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+64*Math.pow(10,-6)*98*Math.pow(10,+2)*u7(k)-45*Math.pow(10,-3)-u4(k); Java Expression: 1*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-6)*98*Math.pow(10,+2)*getVariable(7,k)-45*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 6:36:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.829114288816421; Expression=1*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+64*Math.pow(10,-6)*98*Math.pow(10,+2)*u7(k)-37*Math.pow(10,-3)-u4(k); Java Expression: 1*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-6)*98*Math.pow(10,+2)*getVariable(7,k)-37*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 6:36:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.8291138176192066; Expression=1*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+64*Math.pow(10,-6)*98*Math.pow(10,+2)*u7(k)-39*Math.pow(10,-3)-u4(k); Java Expression: 1*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-6)*98*Math.pow(10,+2)*getVariable(7,k)-39*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 6:36:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.82826034548024; Expression=1*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+64*Math.pow(10,-6)*u7(k)*98*Math.pow(10,+2)-u4(k)-24*Math.pow(10,-5)*u6(k); Java Expression: 1*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-6)*getVariable(7,k)*98*Math.pow(10,+2)-getVariable(4,k)-24*Math.pow(10,-5)*getVariable(6,k)
Aug 30, 2024 6:36:36 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.82826034548024 -->> Avg.: 5.069015640583372 -->> Std. Dev.: 0.3572262053172696
Aug 30, 2024 6:36:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.777358032825429; Expression=1*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+64*Math.pow(10,-6)*46*Math.pow(10,+2)*u7(k)-39*Math.pow(10,-3)*u4(k); Java Expression: 1*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-6)*46*Math.pow(10,+2)*getVariable(7,k)-39*Math.pow(10,-3)*getVariable(4,k)
Aug 30, 2024 6:36:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.7007638864761905; Expression=91*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+64*Math.pow(10,-6)*46*Math.pow(10,+2)*u7(k)-56*Math.pow(10,-3)*u4(k); Java Expression: 91*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-6)*46*Math.pow(10,+2)*getVariable(7,k)-56*Math.pow(10,-3)*getVariable(4,k)
Aug 30, 2024 6:36:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.603930567794834; Expression=95*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+36*Math.pow(10,-6)*85*Math.pow(10,+2)*u7(k)-80*Math.pow(10,-3)*u3(k); Java Expression: 95*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+36*Math.pow(10,-6)*85*Math.pow(10,+2)*getVariable(7,k)-80*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 6:37:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.5830670425791; Expression=95*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+36*Math.pow(10,-6)*85*Math.pow(10,+2)*u7(k)-92*Math.pow(10,-3)*u3(k); Java Expression: 95*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+36*Math.pow(10,-6)*85*Math.pow(10,+2)*getVariable(7,k)-92*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 6:37:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.582726775497938; Expression=95*Math.pow(10,-4)+u8(k)*u8(k)*u8(k)+36*Math.pow(10,-6)*85*Math.pow(10,+2)*u7(k)-92*Math.pow(10,-3)*u3(k); Java Expression: 95*Math.pow(10,-4)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+36*Math.pow(10,-6)*85*Math.pow(10,+2)*getVariable(7,k)-92*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 6:37:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.580549917735402; Expression=95*Math.pow(10,-3)+u8(k)*u8(k)*u8(k)+36*Math.pow(10,-6)*85*Math.pow(10,+2)*u7(k)-92*Math.pow(10,-3)*u3(k); Java Expression: 95*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+36*Math.pow(10,-6)*85*Math.pow(10,+2)*getVariable(7,k)-92*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 6:38:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.580487130084066; Expression=99*Math.pow(10,-3)+u8(k)*u8(k)*u8(k)+36*Math.pow(10,-6)*85*Math.pow(10,+2)*u7(k)-92*Math.pow(10,-3)*u3(k); Java Expression: 99*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+36*Math.pow(10,-6)*85*Math.pow(10,+2)*getVariable(7,k)-92*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 6:38:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.577674192589427; Expression=95*Math.pow(10,-3)+u8(k)*u8(k)*u8(k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*u7(k)-92*Math.pow(10,-3)*u3(k); Java Expression: 95*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*getVariable(7,k)-92*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 6:38:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.574154981403086; Expression=36*Math.pow(10,-3)+u8(k)*u8(k)*u8(k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*u7(k)-92*Math.pow(10,-3)*u3(k); Java Expression: 36*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*getVariable(7,k)-92*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 6:39:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.572380339658898; Expression=95*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*u7(k)-92*Math.pow(10,-3)*u3(k); Java Expression: 95*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*getVariable(7,k)-92*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 6:39:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.572380335575724; Expression=5*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*u7(k)-92*Math.pow(10,-3)*u3(k); Java Expression: 5*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*getVariable(7,k)-92*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 6:39:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.569615312337337; Expression=95*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*u7(k)-93*Math.pow(10,-3)*u3(k); Java Expression: 95*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*getVariable(7,k)-93*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 6:39:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.561983175917749; Expression=5*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*u7(k)-97*Math.pow(10,-3)*u3(k); Java Expression: 5*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*getVariable(7,k)-97*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 6:39:36 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.561983175917749 -->> Avg.: 4.857277076645135 -->> Std. Dev.: 0.21946644778898125
Aug 30, 2024 6:40:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.5619831759177485; Expression=5*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+u7(k)*36*Math.pow(10,-6)*86*Math.pow(10,+2)-97*Math.pow(10,-3)*u3(k); Java Expression: 5*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+getVariable(7,k)*36*Math.pow(10,-6)*86*Math.pow(10,+2)-97*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 6:40:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.561983175908908; Expression=1*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*u7(k)-97*Math.pow(10,-3)*u3(k); Java Expression: 1*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*getVariable(7,k)-97*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 6:41:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.560229646655559; Expression=5*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*u7(k)-99*Math.pow(10,-3)*u3(k); Java Expression: 5*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*getVariable(7,k)-99*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 6:41:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.559748747815361; Expression=5*Math.pow(10,-2)+u8(k)*u8(k)*u8(k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*u7(k)-99*Math.pow(10,-3)*u3(k); Java Expression: 5*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*getVariable(7,k)-99*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 6:41:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.559723365575054; Expression=8*Math.pow(10,-2)+u8(k)*u8(k)*u8(k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*u7(k)-99*Math.pow(10,-3)*u3(k); Java Expression: 8*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*getVariable(7,k)-99*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 6:41:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.559720408250262; Expression=59*Math.pow(10,-3)+u8(k)*u8(k)*u8(k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*u7(k)-99*Math.pow(10,-3)*u3(k); Java Expression: 59*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*getVariable(7,k)-99*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 6:41:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.559709895170445; Expression=70*Math.pow(10,-3)+u8(k)*u8(k)*u8(k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*u7(k)-99*Math.pow(10,-3)*u3(k); Java Expression: 70*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+36*Math.pow(10,-6)*86*Math.pow(10,+2)*getVariable(7,k)-99*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 6:41:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.485089504517646; Expression=1*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+74*Math.pow(10,-6)*46*Math.pow(10,+2)*u7(k)-39*Math.pow(10,-3)*u2(k); Java Expression: 1*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+74*Math.pow(10,-6)*46*Math.pow(10,+2)*getVariable(7,k)-39*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 6:42:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.461598248985074; Expression=1*Math.pow(10,-2)+u8(k)*u8(k)*u8(k)+73*Math.pow(10,-6)*46*Math.pow(10,+2)*u7(k)-39*Math.pow(10,-3)*u2(k); Java Expression: 1*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+73*Math.pow(10,-6)*46*Math.pow(10,+2)*getVariable(7,k)-39*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 6:42:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.213017615347788; Expression=99*Math.pow(10,-3)+u8(k)*u8(k)*u8(k)+49*Math.pow(10,-6)*85*Math.pow(10,+2)*u7(k)-92*Math.pow(10,-3)*u2(k); Java Expression: 99*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-6)*85*Math.pow(10,+2)*getVariable(7,k)-92*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 6:42:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.213017615347787; Expression=99*Math.pow(10,-3)+u8(k)*u8(k)*u8(k)+u7(k)*49*Math.pow(10,-6)*85*Math.pow(10,+2)-92*Math.pow(10,-3)*u2(k); Java Expression: 99*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+getVariable(7,k)*49*Math.pow(10,-6)*85*Math.pow(10,+2)-92*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 6:42:40 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.213017615347787 -->> Avg.: 4.717844052109951 -->> Std. Dev.: 0.159729604115973
Aug 30, 2024 6:43:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.208736367207657; Expression=40*Math.pow(10,-2)+u8(k)*u8(k)*u8(k)+u7(k)*49*Math.pow(10,-6)*85*Math.pow(10,+2)-92*Math.pow(10,-3)*u2(k); Java Expression: 40*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+getVariable(7,k)*49*Math.pow(10,-6)*85*Math.pow(10,+2)-92*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 6:43:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.207872262218707; Expression=34*Math.pow(10,-2)+u8(k)*u8(k)*u8(k)+49*Math.pow(10,-6)*85*Math.pow(10,+2)*u7(k)-92*Math.pow(10,-3)*u2(k); Java Expression: 34*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-6)*85*Math.pow(10,+2)*getVariable(7,k)-92*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 6:43:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.207206371059966; Expression=34*Math.pow(10,-2)+u8(k)*u8(k)*u8(k)+49*Math.pow(10,-6)*85*Math.pow(10,+2)*u7(k)-93*Math.pow(10,-3)*u2(k); Java Expression: 34*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-6)*85*Math.pow(10,+2)*getVariable(7,k)-93*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 6:43:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.2056950810372005; Expression=40*Math.pow(10,-2)+u8(k)*u8(k)*u8(k)+49*Math.pow(10,-6)*85*Math.pow(10,+2)*u7(k)-93*Math.pow(10,-3)*u2(k); Java Expression: 40*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-6)*85*Math.pow(10,+2)*getVariable(7,k)-93*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 6:43:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.196952956120479; Expression=99*Math.pow(10,-2)+u8(k)*u8(k)*u8(k)+49*Math.pow(10,-6)*85*Math.pow(10,+2)*u7(k)-97*Math.pow(10,-3)*u2(k); Java Expression: 99*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-6)*85*Math.pow(10,+2)*getVariable(7,k)-97*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 6:44:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.196892719228173; Expression=99*Math.pow(10,-2)+u8(k)*u8(k)*u8(k)+49*Math.pow(10,-6)*85*Math.pow(10,+2)*u7(k)-96*Math.pow(10,-3)*u2(k); Java Expression: 99*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-6)*85*Math.pow(10,+2)*getVariable(7,k)-96*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 6:45:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.144658362060058; Expression=99*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+49*Math.pow(10,-6)*u7(k)*85*Math.pow(10,+2)-u2(k)*97*Math.pow(10,-3)+u8(k); Java Expression: 99*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-6)*getVariable(7,k)*85*Math.pow(10,+2)-getVariable(2,k)*97*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:45:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.144658354589423; Expression=18*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+49*Math.pow(10,-6)*u7(k)*85*Math.pow(10,+2)-u2(k)*97*Math.pow(10,-3)+u8(k); Java Expression: 18*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-6)*getVariable(7,k)*85*Math.pow(10,+2)-getVariable(2,k)*97*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:45:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.144658354220504; Expression=14*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+49*Math.pow(10,-6)*u7(k)*85*Math.pow(10,+2)-u2(k)*97*Math.pow(10,-3)+u8(k); Java Expression: 14*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-6)*getVariable(7,k)*85*Math.pow(10,+2)-getVariable(2,k)*97*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:45:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.123450872802502; Expression=99*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+49*Math.pow(10,-6)*u7(k)*85*Math.pow(10,+2)-u2(k)*99*Math.pow(10,-3)+u8(k); Java Expression: 99*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-6)*getVariable(7,k)*85*Math.pow(10,+2)-getVariable(2,k)*99*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:45:45 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.123450872802502 -->> Avg.: 4.593105248834892 -->> Std. Dev.: 0.24838939653605385
Aug 30, 2024 6:46:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.123450871896747; Expression=23*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+49*Math.pow(10,-6)*u7(k)*85*Math.pow(10,+2)-u2(k)*99*Math.pow(10,-3)+u8(k); Java Expression: 23*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-6)*getVariable(7,k)*85*Math.pow(10,+2)-getVariable(2,k)*99*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:46:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.123450871789486; Expression=14*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+49*Math.pow(10,-6)*u7(k)*85*Math.pow(10,+2)-u2(k)*99*Math.pow(10,-3)+u8(k); Java Expression: 14*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-6)*getVariable(7,k)*85*Math.pow(10,+2)-getVariable(2,k)*99*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:46:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.123450871694141; Expression=6*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+49*Math.pow(10,-6)*u7(k)*85*Math.pow(10,+2)-u2(k)*99*Math.pow(10,-3)+u8(k); Java Expression: 6*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-6)*getVariable(7,k)*85*Math.pow(10,+2)-getVariable(2,k)*99*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:46:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.123450871670308; Expression=4*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+49*Math.pow(10,-6)*u7(k)*85*Math.pow(10,+2)-u2(k)*99*Math.pow(10,-3)+u8(k); Java Expression: 4*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-6)*getVariable(7,k)*85*Math.pow(10,+2)-getVariable(2,k)*99*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:47:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.123450871658391; Expression=3*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+49*Math.pow(10,-6)*u7(k)*85*Math.pow(10,+2)-u2(k)*99*Math.pow(10,-3)+u8(k); Java Expression: 3*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-6)*getVariable(7,k)*85*Math.pow(10,+2)-getVariable(2,k)*99*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:47:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.1234508716345575; Expression=1*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+49*Math.pow(10,-6)*u7(k)*85*Math.pow(10,+2)-u2(k)*99*Math.pow(10,-3)+u8(k); Java Expression: 1*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-6)*getVariable(7,k)*85*Math.pow(10,+2)-getVariable(2,k)*99*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:48:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.123450871634557; Expression=1*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+49*Math.pow(10,-9)*u7(k)*85*Math.pow(10,+5)-u2(k)*99*Math.pow(10,-3)+u8(k); Java Expression: 1*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-9)*getVariable(7,k)*85*Math.pow(10,+5)-getVariable(2,k)*99*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:48:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.123450871634556; Expression=1*Math.pow(10,-9)+u8(k)*u8(k)*u8(k)+49*Math.pow(10,-2)*u7(k)*85*Math.pow(10,-2)-u2(k)*99*Math.pow(10,-3)+u8(k); Java Expression: 1*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-2)*getVariable(7,k)*85*Math.pow(10,-2)-getVariable(2,k)*99*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:48:55 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.123450871634556 -->> Avg.: 4.45562226748978 -->> Std. Dev.: 0.27322825205005175

Execution time: 1693.388 seconds.



@@;1*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-2)*getVariable(7,k)*85*Math.pow(10,-2)-getVariable(2,k)*99*Math.pow(10,-3)+getVariable(8,k)



Run #5
========
Aug 30, 2024 6:49:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.199999949921025E10; Expression=u3(k)+u4(k)+u8(k)-u1(k)-u5(k)*u5(k)+u7(k)+u4(k)*u3(k)-42*Math.pow(10,+9)+u1(k); Java Expression: getVariable(3,k)+getVariable(4,k)+getVariable(8,k)-getVariable(1,k)-getVariable(5,k)*getVariable(5,k)+getVariable(7,k)+getVariable(4,k)*getVariable(3,k)-42*Math.pow(10,+9)+getVariable(1,k)
Aug 30, 2024 6:49:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3384.995146774394; Expression=80*Math.pow(10,-6)*u9(k)*u9(k)*u2(k)+u5(k)*u6(k); Java Expression: 80*Math.pow(10,-6)*getVariable(9,k)*getVariable(9,k)*getVariable(2,k)+getVariable(5,k)*getVariable(6,k)
Aug 30, 2024 6:49:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=11.07674395031709; Expression=54*Math.pow(10,-8)+26*Math.pow(10,-8)*u4(k)*u7(k)+u2(k)-u2(k)+u7(k)*u9(k)*2*Math.pow(10,-4)+u4(k)+u8(k); Java Expression: 54*Math.pow(10,-8)+26*Math.pow(10,-8)*getVariable(4,k)*getVariable(7,k)+getVariable(2,k)-getVariable(2,k)+getVariable(7,k)*getVariable(9,k)*2*Math.pow(10,-4)+getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 6:49:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.703717682022504; Expression=77*Math.pow(10,-2)+u4(k); Java Expression: 77*Math.pow(10,-2)+getVariable(4,k)
Aug 30, 2024 6:49:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 6:49:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.13140728562551; Expression=83*Math.pow(10,-9)+u7(k)-u5(k)+u6(k)*11*Math.pow(10,-9)-u3(k); Java Expression: 83*Math.pow(10,-9)+getVariable(7,k)-getVariable(5,k)+getVariable(6,k)*11*Math.pow(10,-9)-getVariable(3,k)
Aug 30, 2024 6:49:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131406264616312; Expression=90*Math.pow(10,-9)+u7(k)-u5(k)+u6(k)*95*Math.pow(10,-9)-u3(k); Java Expression: 90*Math.pow(10,-9)+getVariable(7,k)-getVariable(5,k)+getVariable(6,k)*95*Math.pow(10,-9)-getVariable(3,k)
Aug 30, 2024 6:49:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427997688286; Expression=67*Math.pow(10,-9)+u7(k)-u5(k)+u6(k)*20*Math.pow(10,-9)-u4(k); Java Expression: 67*Math.pow(10,-9)+getVariable(7,k)-getVariable(5,k)+getVariable(6,k)*20*Math.pow(10,-9)-getVariable(4,k)
Aug 30, 2024 6:49:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.032759687895476; Expression=90*Math.pow(10,-2)+u7(k)-u5(k)+u6(k)*95*Math.pow(10,-5)-u3(k); Java Expression: 90*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)+getVariable(6,k)*95*Math.pow(10,-5)-getVariable(3,k)
Aug 30, 2024 6:49:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0317850233539225; Expression=90*Math.pow(10,-2)+u7(k)-u5(k)+u6(k)*65*Math.pow(10,-5)-u3(k); Java Expression: 90*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)+getVariable(6,k)*65*Math.pow(10,-5)-getVariable(3,k)
Aug 30, 2024 6:49:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.030157068623803; Expression=90*Math.pow(10,-2)+u7(k)-u5(k)+u3(k)*95*Math.pow(10,-8)-u3(k); Java Expression: 90*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)+getVariable(3,k)*95*Math.pow(10,-8)-getVariable(3,k)
Aug 30, 2024 6:49:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0285758756698025; Expression=90*Math.pow(10,-2)+u7(k)-u5(k)+u3(k)*95*Math.pow(10,-5)-u3(k); Java Expression: 90*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)+getVariable(3,k)*95*Math.pow(10,-5)-getVariable(3,k)
Aug 30, 2024 6:49:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.028127842552798; Expression=50*Math.pow(10,-3)+91*Math.pow(10,-2)-u5(k)+u7(k)-u3(k); Java Expression: 50*Math.pow(10,-3)+91*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(3,k)
Aug 30, 2024 6:49:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.810859727059309; Expression=90*Math.pow(10,-1)+u7(k)-u5(k)-u6(k)*95*Math.pow(10,-3)-u3(k); Java Expression: 90*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(6,k)*95*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 6:49:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.718872131042755; Expression=90*Math.pow(10,-1)+u7(k)-u5(k)-u6(k)*78*Math.pow(10,-3)-u3(k); Java Expression: 90*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(6,k)*78*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 6:49:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.715387776825377; Expression=88*Math.pow(10,-1)+u7(k)-u5(k)-u6(k)*77*Math.pow(10,-3)-u3(k); Java Expression: 88*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(6,k)*77*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 6:49:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.711523074152959; Expression=87*Math.pow(10,-1)+u7(k)-u5(k)-u6(k)*77*Math.pow(10,-3)-u3(k); Java Expression: 87*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(6,k)*77*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 6:49:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.709254889744077; Expression=88*Math.pow(10,-1)+u7(k)-u5(k)-u6(k)*78*Math.pow(10,-3)-u3(k); Java Expression: 88*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(6,k)*78*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 6:49:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.690333830259621; Expression=94*Math.pow(10,-1)+u7(k)-u5(k)-u6(k)*89*Math.pow(10,-3)-u3(k); Java Expression: 94*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(6,k)*89*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 6:49:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.581828031824578; Expression=90*Math.pow(10,-1)+u7(k)-u5(k)-u1(k)*89*Math.pow(10,-3)-u3(k); Java Expression: 90*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)*89*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 6:49:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5218335400708005; Expression=90*Math.pow(10,-1)+u7(k)-u5(k)-u1(k)*95*Math.pow(10,-3)-u3(k); Java Expression: 90*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)*95*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 6:50:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.514627787048068; Expression=88*Math.pow(10,-1)+u7(k)-u5(k)-u1(k)*95*Math.pow(10,-3)-u3(k); Java Expression: 88*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)*95*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 6:50:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.513742524129915; Expression=87*Math.pow(10,-1)+u7(k)-u5(k)-u1(k)*95*Math.pow(10,-3)-u3(k); Java Expression: 87*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)*95*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 6:50:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.511738723783156; Expression=88*Math.pow(10,-1)+u7(k)-u5(k)-u1(k)*96*Math.pow(10,-3)-u3(k); Java Expression: 88*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)*96*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 6:51:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.511508666314565; Expression=90*Math.pow(10,-1)+u7(k)-u5(k)-u1(k)*97*Math.pow(10,-3)-u3(k); Java Expression: 90*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)*97*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 6:51:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5104262432288795; Expression=88*Math.pow(10,-1)+u7(k)-u5(k)-u1(k)*99*Math.pow(10,-3)-u3(k); Java Expression: 88*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)*99*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 6:51:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.510074841703218; Expression=88*Math.pow(10,-1)+u7(k)-u5(k)-u1(k)*97*Math.pow(10,-3)-u3(k); Java Expression: 88*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)*97*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 6:51:16 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.510074841703218 -->> Avg.: 2130856.1437220303 -->> Std. Dev.: 9495764.072054889
Aug 30, 2024 6:51:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.508179749671669; Expression=90*Math.pow(10,-1)+u7(k)-u5(k)-u1(k)*98*Math.pow(10,-3)-u3(k); Java Expression: 90*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)*98*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 6:51:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.506076407286518; Expression=90*Math.pow(10,-1)+u7(k)-u5(k)-u1(k)*99*Math.pow(10,-3)-u3(k); Java Expression: 90*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)*99*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 6:52:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.505200043905131; Expression=90*Math.pow(10,-1)+u7(k)-u5(k)-u1(k)*10*Math.pow(10,-2)-u3(k); Java Expression: 90*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)*10*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 6:52:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5043016618458855; Expression=91*Math.pow(10,-1)+u7(k)-u5(k)-u1(k)*10*Math.pow(10,-2)-u3(k); Java Expression: 91*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)*10*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 6:53:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.504301659897205; Expression=91*Math.pow(10,-1)+u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-20*Math.pow(10,-6)-u3(k); Java Expression: 91*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-20*Math.pow(10,-6)-getVariable(3,k)
Aug 30, 2024 6:53:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.504301654998759; Expression=91*Math.pow(10,-1)+u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-74*Math.pow(10,-6)-u3(k); Java Expression: 91*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-74*Math.pow(10,-6)-getVariable(3,k)
Aug 30, 2024 6:53:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.504301654065882; Expression=91*Math.pow(10,-1)+u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-85*Math.pow(10,-6)-u3(k); Java Expression: 91*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-85*Math.pow(10,-6)-getVariable(3,k)
Aug 30, 2024 6:53:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.504301645629257; Expression=91*Math.pow(10,-1)+u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-20*Math.pow(10,-5)-u3(k); Java Expression: 91*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-20*Math.pow(10,-5)-getVariable(3,k)
Aug 30, 2024 6:53:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.504301638143261; Expression=91*Math.pow(10,-1)+u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-74*Math.pow(10,-5)-u3(k); Java Expression: 91*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-74*Math.pow(10,-5)-getVariable(3,k)
Aug 30, 2024 6:53:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.504301635411883; Expression=91*Math.pow(10,-1)+u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-46*Math.pow(10,-5)-u3(k); Java Expression: 91*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-46*Math.pow(10,-5)-getVariable(3,k)
Aug 30, 2024 6:53:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.504301635023241; Expression=91*Math.pow(10,-1)+u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-49*Math.pow(10,-5)-u3(k); Java Expression: 91*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-49*Math.pow(10,-5)-getVariable(3,k)
Aug 30, 2024 6:53:44 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.504301635023241 -->> Avg.: 3298.011378482571 -->> Std. Dev.: 10410.227092788327
Aug 30, 2024 6:53:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.504301634908678; Expression=91*Math.pow(10,-1)+u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-59*Math.pow(10,-5)-u3(k); Java Expression: 91*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-59*Math.pow(10,-5)-getVariable(3,k)
Aug 30, 2024 6:53:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.50430163473887; Expression=91*Math.pow(10,-1)+u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-54*Math.pow(10,-5)-u3(k); Java Expression: 91*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-54*Math.pow(10,-5)-getVariable(3,k)
Aug 30, 2024 6:54:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.504301634736492; Expression=91*Math.pow(10,-1)+u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-55*Math.pow(10,-5)-u3(k); Java Expression: 91*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-55*Math.pow(10,-5)-getVariable(3,k)
Aug 30, 2024 6:54:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.501758535725813; Expression=48*Math.pow(10,-1)+u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-91*Math.pow(10,-2)*u3(k); Java Expression: 48*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-91*Math.pow(10,-2)*getVariable(3,k)
Aug 30, 2024 6:54:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.452790410436264; Expression=54*Math.pow(10,-1)+u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-91*Math.pow(10,-2)*u3(k); Java Expression: 54*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-91*Math.pow(10,-2)*getVariable(3,k)
Aug 30, 2024 6:55:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.451065524438041; Expression=56*Math.pow(10,-1)+u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-91*Math.pow(10,-2)*u3(k); Java Expression: 56*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-91*Math.pow(10,-2)*getVariable(3,k)
Aug 30, 2024 6:55:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.415536009821488; Expression=54*Math.pow(10,-2)+u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-79*Math.pow(10,-2)*u3(k); Java Expression: 54*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-79*Math.pow(10,-2)*getVariable(3,k)
Aug 30, 2024 6:56:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.409006184239824; Expression=86*Math.pow(10,-2)+u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-79*Math.pow(10,-2)*u3(k); Java Expression: 86*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-79*Math.pow(10,-2)*getVariable(3,k)
Aug 30, 2024 6:56:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.405107881673468; Expression=48*Math.pow(10,-4)+u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-77*Math.pow(10,-2)*u3(k); Java Expression: 48*Math.pow(10,-4)+getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-77*Math.pow(10,-2)*getVariable(3,k)
Aug 30, 2024 6:56:20 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.405107881673468 -->> Avg.: 160.06685477495068 -->> Std. Dev.: 480.1319732843878
Aug 30, 2024 6:56:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.405106696761076; Expression=52*Math.pow(10,-4)+u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-77*Math.pow(10,-2)*u3(k); Java Expression: 52*Math.pow(10,-4)+getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-77*Math.pow(10,-2)*getVariable(3,k)
Aug 30, 2024 6:56:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.339009880020767; Expression=91*Math.pow(10,-2)*u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-55*Math.pow(10,-2)*u3(k); Java Expression: 91*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-55*Math.pow(10,-2)*getVariable(3,k)
Aug 30, 2024 6:56:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.301733420173519; Expression=91*Math.pow(10,-2)*u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-54*Math.pow(10,-2)*u3(k); Java Expression: 91*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-54*Math.pow(10,-2)*getVariable(3,k)
Aug 30, 2024 6:58:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.293950008501005; Expression=91*Math.pow(10,-2)*u7(k)-u5(k)-10*Math.pow(10,-2)*u1(k)-53*Math.pow(10,-2)*u3(k); Java Expression: 91*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-10*Math.pow(10,-2)*getVariable(1,k)-53*Math.pow(10,-2)*getVariable(3,k)
Aug 30, 2024 6:58:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.238520813674087; Expression=91*Math.pow(10,-2)*u7(k)-u4(k)-19*Math.pow(10,-2)*u1(k)-24*Math.pow(10,-2)*u3(k); Java Expression: 91*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-19*Math.pow(10,-2)*getVariable(1,k)-24*Math.pow(10,-2)*getVariable(3,k)
Aug 30, 2024 6:59:01 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.238520813674087 -->> Avg.: 15.415264777727751 -->> Std. Dev.: 22.363491919726695
Aug 30, 2024 6:59:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.18942344459429; Expression=91*Math.pow(10,-2)*u7(k)-u4(k)-20*Math.pow(10,-2)*u1(k)-24*Math.pow(10,-2)*u3(k); Java Expression: 91*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-20*Math.pow(10,-2)*getVariable(1,k)-24*Math.pow(10,-2)*getVariable(3,k)
Aug 30, 2024 6:59:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.161866145247939; Expression=91*Math.pow(10,-2)*u7(k)-u4(k)-20*Math.pow(10,-2)*u1(k)-24*Math.pow(10,-2)*u5(k); Java Expression: 91*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-20*Math.pow(10,-2)*getVariable(1,k)-24*Math.pow(10,-2)*getVariable(5,k)
Aug 30, 2024 6:59:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.135244843379601; Expression=81*Math.pow(10,-2)*u7(k)-u4(k)-19*Math.pow(10,-2)*u1(k)-24*Math.pow(10,-2)*u8(k); Java Expression: 81*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-19*Math.pow(10,-2)*getVariable(1,k)-24*Math.pow(10,-2)*getVariable(8,k)
Aug 30, 2024 6:59:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.03478021735719; Expression=81*Math.pow(10,-2)*u7(k)-u4(k)-19*Math.pow(10,-2)*u1(k)-24*Math.pow(10,-5)*u8(k); Java Expression: 81*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-19*Math.pow(10,-2)*getVariable(1,k)-24*Math.pow(10,-5)*getVariable(8,k)
Aug 30, 2024 6:59:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.890726142702492; Expression=81*Math.pow(10,-2)*u7(k)-u4(k)-19*Math.pow(10,-2)*u1(k)-24*Math.pow(10,-2)+u8(k); Java Expression: 81*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-19*Math.pow(10,-2)*getVariable(1,k)-24*Math.pow(10,-2)+getVariable(8,k)
Aug 30, 2024 6:59:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.85877905435753; Expression=81*Math.pow(10,-2)*u7(k)-u4(k)-19*Math.pow(10,-2)*u1(k)-58*Math.pow(10,-2)+u8(k); Java Expression: 81*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-19*Math.pow(10,-2)*getVariable(1,k)-58*Math.pow(10,-2)+getVariable(8,k)
Aug 30, 2024 6:59:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.850710832940624; Expression=81*Math.pow(10,-2)*u7(k)-u4(k)-19*Math.pow(10,-2)*u1(k)-80*Math.pow(10,-2)+u8(k); Java Expression: 81*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-19*Math.pow(10,-2)*getVariable(1,k)-80*Math.pow(10,-2)+getVariable(8,k)
Aug 30, 2024 6:59:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.85023398997865; Expression=81*Math.pow(10,-2)*u7(k)-u4(k)-19*Math.pow(10,-2)*u1(k)-87*Math.pow(10,-2)+u8(k); Java Expression: 81*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-19*Math.pow(10,-2)*getVariable(1,k)-87*Math.pow(10,-2)+getVariable(8,k)
Aug 30, 2024 7:00:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.826770077178047; Expression=81*Math.pow(10,-2)*u7(k)-u4(k)-20*Math.pow(10,-2)*u1(k)-24*Math.pow(10,-9)+u8(k); Java Expression: 81*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-20*Math.pow(10,-2)*getVariable(1,k)-24*Math.pow(10,-9)+getVariable(8,k)
Aug 30, 2024 7:00:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.826770076852139; Expression=81*Math.pow(10,-2)*u7(k)-u4(k)-20*Math.pow(10,-2)*u1(k)-46*Math.pow(10,-9)+u8(k); Java Expression: 81*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-20*Math.pow(10,-2)*getVariable(1,k)-46*Math.pow(10,-9)+getVariable(8,k)
Aug 30, 2024 7:00:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.82677006286775; Expression=81*Math.pow(10,-2)*u7(k)-u4(k)-20*Math.pow(10,-2)*u1(k)-99*Math.pow(10,-8)+u8(k); Java Expression: 81*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-20*Math.pow(10,-2)*getVariable(1,k)-99*Math.pow(10,-8)+getVariable(8,k)
Aug 30, 2024 7:00:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.82676652811959; Expression=81*Math.pow(10,-2)*u7(k)-u4(k)-20*Math.pow(10,-2)*u1(k)-24*Math.pow(10,-5)+u8(k); Java Expression: 81*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-20*Math.pow(10,-2)*getVariable(1,k)-24*Math.pow(10,-5)+getVariable(8,k)
Aug 30, 2024 7:01:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.826656878621457; Expression=81*Math.pow(10,-2)*u7(k)-u4(k)-20*Math.pow(10,-2)*u1(k)-81*Math.pow(10,-4)+u8(k); Java Expression: 81*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-20*Math.pow(10,-2)*getVariable(1,k)-81*Math.pow(10,-4)+getVariable(8,k)
Aug 30, 2024 7:01:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.7849900672089465; Expression=81*Math.pow(10,-2)*u7(k)-u4(k)-20*Math.pow(10,-2)*u1(k)-24*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 81*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-20*Math.pow(10,-2)*getVariable(1,k)-24*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:01:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.740210042183435; Expression=81*Math.pow(10,-2)*u7(k)-u4(k)-20*Math.pow(10,-2)*u1(k)-53*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 81*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-20*Math.pow(10,-2)*getVariable(1,k)-53*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:01:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.713529545441978; Expression=81*Math.pow(10,-2)*u7(k)-u4(k)-20*Math.pow(10,-2)*u1(k)-81*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 81*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-20*Math.pow(10,-2)*getVariable(1,k)-81*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:01:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.705104952876806; Expression=81*Math.pow(10,-2)*u7(k)-u4(k)-20*Math.pow(10,-2)*u1(k)-99*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 81*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-20*Math.pow(10,-2)*getVariable(1,k)-99*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:01:44 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.705104952876806 -->> Avg.: 5.5823330340132795 -->> Std. Dev.: 1.3597027660760348
Aug 30, 2024 7:01:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.700281407985698; Expression=81*Math.pow(10,-2)*u7(k)-u4(k)-21*Math.pow(10,-2)*u1(k)-26*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 81*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-21*Math.pow(10,-2)*getVariable(1,k)-26*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:02:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.699986222996611; Expression=81*Math.pow(10,-2)*u7(k)-u4(k)-21*Math.pow(10,-2)*u1(k)-36*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 81*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-21*Math.pow(10,-2)*getVariable(1,k)-36*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:02:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.699867860409157; Expression=81*Math.pow(10,-2)*u7(k)-u4(k)-21*Math.pow(10,-2)*u1(k)-31*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 81*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-21*Math.pow(10,-2)*getVariable(1,k)-31*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:03:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.686599467434587; Expression=80*Math.pow(10,-2)*u7(k)-u4(k)-20*Math.pow(10,-2)*u1(k)-24*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 80*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-20*Math.pow(10,-2)*getVariable(1,k)-24*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:03:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.6839723858210585; Expression=80*Math.pow(10,-2)*u7(k)-u4(k)-20*Math.pow(10,-2)*u1(k)-24*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: 80*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-20*Math.pow(10,-2)*getVariable(1,k)-24*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:03:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.683697244179013; Expression=80*Math.pow(10,-2)*u7(k)-u4(k)-20*Math.pow(10,-2)*u1(k)-7*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 80*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-20*Math.pow(10,-2)*getVariable(1,k)-7*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:04:29 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.683697244179013 -->> Avg.: 5.174707600819161 -->> Std. Dev.: 0.331582039851118
Aug 30, 2024 7:05:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.674209142040823; Expression=76*Math.pow(10,-2)*u7(k)-u4(k)-15*Math.pow(10,-2)*u1(k)-7*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 76*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-15*Math.pow(10,-2)*getVariable(1,k)-7*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:05:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.672020025216602; Expression=76*Math.pow(10,-2)*u7(k)-u4(k)-15*Math.pow(10,-2)*u1(k)-7*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: 76*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-15*Math.pow(10,-2)*getVariable(1,k)-7*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:05:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.67182916915991; Expression=76*Math.pow(10,-2)*u7(k)-u4(k)-15*Math.pow(10,-2)*u1(k)-7*Math.pow(10,-9)+u8(k)*u8(k); Java Expression: 76*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-15*Math.pow(10,-2)*getVariable(1,k)-7*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:05:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.67182916780757; Expression=76*Math.pow(10,-2)*u7(k)-u4(k)-15*Math.pow(10,-2)*u1(k)+44*Math.pow(10,-9)+u8(k)*u8(k); Java Expression: 76*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-15*Math.pow(10,-2)*getVariable(1,k)+44*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:05:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.670497239547432; Expression=76*Math.pow(10,-2)*u7(k)-u4(k)-15*Math.pow(10,-2)*u1(k)+7*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 76*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-15*Math.pow(10,-2)*getVariable(1,k)+7*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:06:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.67018804538879; Expression=76*Math.pow(10,-2)*u7(k)-u4(k)-15*Math.pow(10,-2)*u1(k)+12*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 76*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-15*Math.pow(10,-2)*getVariable(1,k)+12*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:07:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.666492917637851; Expression=76*Math.pow(10,-2)*u7(k)-u4(k)-15*Math.pow(10,-2)*u1(k)+12*Math.pow(10,-1)*u8(k)*u8(k); Java Expression: 76*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-15*Math.pow(10,-2)*getVariable(1,k)+12*Math.pow(10,-1)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:07:16 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.666492917637851 -->> Avg.: 5.0122101951555 -->> Std. Dev.: 0.33326722813284254
Aug 30, 2024 7:07:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.647720924707577; Expression=76*Math.pow(10,-2)*u7(k)-u4(k)-16*Math.pow(10,-2)*u1(k)+12*Math.pow(10,-1)*u8(k)*u8(k); Java Expression: 76*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-16*Math.pow(10,-2)*getVariable(1,k)+12*Math.pow(10,-1)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:08:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.63422129212571; Expression=76*Math.pow(10,-2)*u7(k)-u4(k)-16*Math.pow(10,-2)*u1(k)+14*Math.pow(10,-1)*u8(k)*u8(k); Java Expression: 76*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-16*Math.pow(10,-2)*getVariable(1,k)+14*Math.pow(10,-1)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:09:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.631413427353211; Expression=76*Math.pow(10,-2)*u7(k)-u4(k)-16*Math.pow(10,-2)*u1(k)+13*Math.pow(10,-1)*u8(k)*u8(k); Java Expression: 76*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-16*Math.pow(10,-2)*getVariable(1,k)+13*Math.pow(10,-1)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:10:06 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.631413427353211 -->> Avg.: 4.849735706440827 -->> Std. Dev.: 0.26374657465072665
Aug 30, 2024 7:12:58 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.631413427353211 -->> Avg.: 4.715534819150913 -->> Std. Dev.: 0.13265581268079712
Aug 30, 2024 7:15:51 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.631413427353211 -->> Avg.: 4.6561435659504395 -->> Std. Dev.: 0.027898049704876315

Execution time: 1615.912 seconds.



@@;76*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-16*Math.pow(10,-2)*getVariable(1,k)+13*Math.pow(10,-1)*getVariable(8,k)*getVariable(8,k)



Run #6
========
Aug 30, 2024 7:16:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=2.800000334887515E9; Expression=28*Math.pow(10,+8)+u3(k)+u2(k)-u8(k)+u6(k)+u7(k)-u4(k); Java Expression: 28*Math.pow(10,+8)+getVariable(3,k)+getVariable(2,k)-getVariable(8,k)+getVariable(6,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 7:16:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=97.36338591993386; Expression=u2(k)-u4(k); Java Expression: getVariable(2,k)-getVariable(4,k)
Aug 30, 2024 7:16:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=19.115505879688893; Expression=u1(k)-u3(k); Java Expression: getVariable(1,k)-getVariable(3,k)
Aug 30, 2024 7:16:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.398170723155893; Expression=38*Math.pow(10,-5)+u4(k); Java Expression: 38*Math.pow(10,-5)+getVariable(4,k)
Aug 30, 2024 7:16:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330471364200294; Expression=60*Math.pow(10,-8)+u5(k); Java Expression: 60*Math.pow(10,-8)+getVariable(5,k)
Aug 30, 2024 7:16:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.059461641840322; Expression=u8(k)+u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 7:16:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 7:16:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.966752590007765; Expression=79*Math.pow(10,-4)+u8(k)-54*Math.pow(10,-2)+u5(k); Java Expression: 79*Math.pow(10,-4)+getVariable(8,k)-54*Math.pow(10,-2)+getVariable(5,k)
Aug 30, 2024 7:16:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837859; Expression=u7(k)-u4(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)
Aug 30, 2024 7:16:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.07560836085706; Expression=u7(k)-u4(k)-83*Math.pow(10,-4)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-83*Math.pow(10,-4)-getVariable(5,k)
Aug 30, 2024 7:16:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.072845781043098; Expression=u7(k)-u4(k)-21*Math.pow(10,-3)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-21*Math.pow(10,-3)-getVariable(5,k)
Aug 30, 2024 7:16:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.966058079791582; Expression=u7(k)-u4(k)-67*Math.pow(10,-2)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-67*Math.pow(10,-2)-getVariable(5,k)
Aug 30, 2024 7:16:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.94405518038931; Expression=u7(k)-u4(k)-91*Math.pow(10,-2)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-91*Math.pow(10,-2)-getVariable(5,k)
Aug 30, 2024 7:16:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9394493590623165; Expression=u7(k)-u4(k)-98*Math.pow(10,-2)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-98*Math.pow(10,-2)-getVariable(5,k)
Aug 30, 2024 7:16:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.93885844638529; Expression=u7(k)-u4(k)-99*Math.pow(10,-2)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-99*Math.pow(10,-2)-getVariable(5,k)
Aug 30, 2024 7:17:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928882637025394; Expression=u7(k)-u4(k)-13*Math.pow(10,-1)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-13*Math.pow(10,-1)-getVariable(5,k)
Aug 30, 2024 7:17:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.892598583307356; Expression=67*Math.pow(10,-2)*u7(k)-u4(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 7:18:04 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.892598583307356 -->> Avg.: 4779500.256241687 -->> Std. Dev.: 1.963510212121534E7
Aug 30, 2024 7:20:14 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.892598583307356 -->> Avg.: 4723.725050740164 -->> Std. Dev.: 16476.587711659315
Aug 30, 2024 7:20:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.892598583307353; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u5(k)*u4(k)+u4(k)*u5(k)+u6(k)-u6(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(4,k)+getVariable(4,k)*getVariable(5,k)+getVariable(6,k)-getVariable(6,k)
Aug 30, 2024 7:21:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8925960108489415; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-88*Math.pow(10,-8)*u6(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-88*Math.pow(10,-8)*getVariable(6,k)
Aug 30, 2024 7:21:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.890648945310563; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-88*Math.pow(10,-5)*u6(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-88*Math.pow(10,-5)*getVariable(6,k)
Aug 30, 2024 7:21:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.797610458957981; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u5(k)+u5(k)+82*Math.pow(10,-2)*u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(5,k)+82*Math.pow(10,-2)*getVariable(8,k)
Aug 30, 2024 7:21:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.794496770165541; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u5(k)+u5(k)+76*Math.pow(10,-2)*u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(5,k)+76*Math.pow(10,-2)*getVariable(8,k)
Aug 30, 2024 7:21:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.792830814414734; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u5(k)+u5(k)+68*Math.pow(10,-2)*u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(5,k)+68*Math.pow(10,-2)*getVariable(8,k)
Aug 30, 2024 7:22:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.686118128840631; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u5(k)+u5(k)-76*Math.pow(10,-2)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(5,k)-76*Math.pow(10,-2)+getVariable(8,k)
Aug 30, 2024 7:22:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6712778200210465; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u5(k)+u5(k)-92*Math.pow(10,-2)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(5,k)-92*Math.pow(10,-2)+getVariable(8,k)
Aug 30, 2024 7:22:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.658468542191964; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u5(k)+u5(k)-16*Math.pow(10,-1)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(5,k)-16*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 7:22:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.620786028950633; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u5(k)+u5(k)*92*Math.pow(10,-2)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(5,k)*92*Math.pow(10,-2)+getVariable(8,k)
Aug 30, 2024 7:22:28 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.620786028950633 -->> Avg.: 133.29229759939102 -->> Std. Dev.: 375.40065224493736
Aug 30, 2024 7:22:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.52425289722739; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u5(k)*u5(k)*27*Math.pow(10,-4)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(5,k)*27*Math.pow(10,-4)+getVariable(8,k)
Aug 30, 2024 7:22:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.428111082975863; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u5(k)*u5(k)*16*Math.pow(10,-4)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(5,k)*16*Math.pow(10,-4)+getVariable(8,k)
Aug 30, 2024 7:22:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.424349313917405; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u5(k)*u5(k)*17*Math.pow(10,-4)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(5,k)*17*Math.pow(10,-4)+getVariable(8,k)
Aug 30, 2024 7:23:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.424349313917404; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u5(k)*u5(k)*17*Math.pow(10,-4)+u8(k)+u9(k)-u9(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(5,k)*17*Math.pow(10,-4)+getVariable(8,k)+getVariable(9,k)-getVariable(9,k)
Aug 30, 2024 7:23:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.423103448499692; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u5(k)*u5(k)*18*Math.pow(10,-4)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(5,k)*18*Math.pow(10,-4)+getVariable(8,k)
Aug 30, 2024 7:23:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.293462481729071; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u5(k)*u5(k)*17*Math.pow(10,-4)+u8(k)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(5,k)*17*Math.pow(10,-4)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:23:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.06196062258404; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u1(k)*u5(k)*17*Math.pow(10,-4)+u8(k)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(1,k)*getVariable(5,k)*17*Math.pow(10,-4)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:23:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.045249882443151; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u5(k)*u5(k)*18*Math.pow(10,-4)+u8(k)*u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(5,k)*18*Math.pow(10,-4)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:23:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.958451797758432; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u5(k)*u5(k)*27*Math.pow(10,-4)+u8(k)*u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(5,k)*27*Math.pow(10,-4)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:23:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.949555030879638; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u1(k)*u5(k)*15*Math.pow(10,-4)+u8(k)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(1,k)*getVariable(5,k)*15*Math.pow(10,-4)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:24:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.909778333172145; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u1(k)*u5(k)*12*Math.pow(10,-4)+u8(k)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(1,k)*getVariable(5,k)*12*Math.pow(10,-4)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:24:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.825375298677014; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u1(k)*u5(k)*12*Math.pow(10,-4)+u8(k)*u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(1,k)*getVariable(5,k)*12*Math.pow(10,-4)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:24:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.735945867271687; Expression=68*Math.pow(10,-2)*u7(k)-u4(k)-u1(k)*u5(k)*15*Math.pow(10,-4)+u8(k)*u8(k); Java Expression: 68*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(1,k)*getVariable(5,k)*15*Math.pow(10,-4)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:24:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.611095571732012; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u1(k)*u5(k)*17*Math.pow(10,-4)+u8(k)*u8(k)*u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(1,k)*getVariable(5,k)*17*Math.pow(10,-4)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:24:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.586886619222089; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u1(k)*u5(k)*17*Math.pow(10,-4)+u8(k)+u8(k)*u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(1,k)*getVariable(5,k)*17*Math.pow(10,-4)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:25:00 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 4.586886619222089 -->> Avg.: 16.455986131836955 -->> Std. Dev.: 24.401829540809054
Aug 30, 2024 7:25:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.576741728306118; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u1(k)*u5(k)*15*Math.pow(10,-4)+u8(k)+u8(k)*u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(1,k)*getVariable(5,k)*15*Math.pow(10,-4)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:25:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.572379752387297; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u1(k)*u5(k)*16*Math.pow(10,-4)+u8(k)+u8(k)*u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(1,k)*getVariable(5,k)*16*Math.pow(10,-4)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:27:43 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.572379752387297 -->> Avg.: 5.739650041437814 -->> Std. Dev.: 1.6588839406144433
Aug 30, 2024 7:30:34 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.572379752387297 -->> Avg.: 5.209163525980848 -->> Std. Dev.: 0.6004640797500326
Aug 30, 2024 7:33:28 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.572379752387297 -->> Avg.: 4.950883081812269 -->> Std. Dev.: 0.5302309570443722
Aug 30, 2024 7:35:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.5439990272159125; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u1(k)*u7(k)*5*Math.pow(10,-4)+u8(k)+u8(k)*u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(1,k)*getVariable(7,k)*5*Math.pow(10,-4)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:35:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.53207985129189; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u1(k)*u7(k)*5*Math.pow(10,-4)+u8(k)*u8(k)*u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(1,k)*getVariable(7,k)*5*Math.pow(10,-4)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:35:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.488363762262638; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-u1(k)*u1(k)*6*Math.pow(10,-4)+u8(k)+u8(k)*u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(1,k)*getVariable(1,k)*6*Math.pow(10,-4)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:36:23 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.488363762262638 -->> Avg.: 4.69441178597201 -->> Std. Dev.: 0.29021129745397606
Aug 30, 2024 7:39:18 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.488363762262638 -->> Avg.: 4.553797844252332 -->> Std. Dev.: 0.04017550655162791
Aug 30, 2024 7:42:13 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.488363762262638 -->> Avg.: 4.534977141727724 -->> Std. Dev.: 0.040707601664744755

Execution time: 1581.286 seconds.



@@;67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(1,k)*getVariable(1,k)*6*Math.pow(10,-4)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)



Run #7
========
Aug 30, 2024 7:42:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=98.19033839626061; Expression=99*Math.pow(10,-1)+u3(k)-49*Math.pow(10,-8)+u1(k); Java Expression: 99*Math.pow(10,-1)+getVariable(3,k)-49*Math.pow(10,-8)+getVariable(1,k)
Aug 30, 2024 7:42:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=34.27998628933396; Expression=5*Math.pow(10,-4)*92*Math.pow(10,-4)*u1(k)*u9(k); Java Expression: 5*Math.pow(10,-4)*92*Math.pow(10,-4)*getVariable(1,k)*getVariable(9,k)
Aug 30, 2024 7:42:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330471458279948; Expression=30*Math.pow(10,-9)*u1(k)+u5(k); Java Expression: 30*Math.pow(10,-9)*getVariable(1,k)+getVariable(5,k)
Aug 30, 2024 7:42:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.323696566703976; Expression=48*Math.pow(10,-5)*u4(k)*u8(k)+u5(k); Java Expression: 48*Math.pow(10,-5)*getVariable(4,k)*getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 7:42:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037571107949905; Expression=30*Math.pow(10,-8)*u7(k)+u8(k)+u3(k)+u5(k)-u3(k); Java Expression: 30*Math.pow(10,-8)*getVariable(7,k)+getVariable(8,k)+getVariable(3,k)+getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 7:42:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 7:42:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.476605425733824; Expression=32*Math.pow(10,-1)*90*Math.pow(10,-3)*u7(k); Java Expression: 32*Math.pow(10,-1)*90*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 7:42:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131407440615971; Expression=u7(k)-u5(k)-33*Math.pow(10,-9)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)-33*Math.pow(10,-9)-getVariable(3,k)
Aug 30, 2024 7:42:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131407434882134; Expression=u7(k)-u5(k)-2*Math.pow(10,-9)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)-2*Math.pow(10,-9)-getVariable(3,k)
Aug 30, 2024 7:42:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.079026643498299; Expression=u7(k)-u5(k)+33*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+33*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 7:42:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.030158768745207; Expression=u7(k)-u5(k)+90*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+90*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 7:42:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.987000155296582; Expression=u2(k)-u5(k)-u3(k)-u2(k)-94*Math.pow(10,-3)+u7(k)+u8(k); Java Expression: getVariable(2,k)-getVariable(5,k)-getVariable(3,k)-getVariable(2,k)-94*Math.pow(10,-3)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 7:42:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.986754723005068; Expression=u2(k)-u5(k)-u3(k)-u2(k)-99*Math.pow(10,-3)+u7(k)+u8(k); Java Expression: getVariable(2,k)-getVariable(5,k)-getVariable(3,k)-getVariable(2,k)-99*Math.pow(10,-3)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 7:42:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.982689649501103; Expression=u2(k)-u5(k)-u3(k)-u2(k)-2*Math.pow(10,-1)+u7(k)+u8(k); Java Expression: getVariable(2,k)-getVariable(5,k)-getVariable(3,k)-getVariable(2,k)-2*Math.pow(10,-1)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 7:42:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.979964719269209; Expression=u2(k)-u5(k)-u3(k)-u2(k)-33*Math.pow(10,-2)+u7(k)+u8(k); Java Expression: getVariable(2,k)-getVariable(5,k)-getVariable(3,k)-getVariable(2,k)-33*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 7:43:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9798658538091445; Expression=u2(k)-u5(k)-u3(k)-u2(k)-44*Math.pow(10,-2)+u7(k)+u8(k); Java Expression: getVariable(2,k)-getVariable(5,k)-getVariable(3,k)-getVariable(2,k)-44*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 7:43:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9796599477337145; Expression=u2(k)-u5(k)-u3(k)-u2(k)-39*Math.pow(10,-2)+u7(k)+u8(k); Java Expression: getVariable(2,k)-getVariable(5,k)-getVariable(3,k)-getVariable(2,k)-39*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 7:44:32 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.9796599477337145 -->> Avg.: 4099112.21854786 -->> Std. Dev.: 1.903488809652727E7
Aug 30, 2024 7:44:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.979659947733714; Expression=u2(k)-u5(k)-39*Math.pow(10,-2)-u3(k)-u2(k)+u7(k)+u8(k); Java Expression: getVariable(2,k)-getVariable(5,k)-39*Math.pow(10,-2)-getVariable(3,k)-getVariable(2,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 7:46:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.979659947733713; Expression=u8(k)-u5(k)-u3(k)-u2(k)-39*Math.pow(10,-2)+u7(k)+u2(k); Java Expression: getVariable(8,k)-getVariable(5,k)-getVariable(3,k)-getVariable(2,k)-39*Math.pow(10,-2)+getVariable(7,k)+getVariable(2,k)
Aug 30, 2024 7:46:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.934198230328734; Expression=u2(k)-u5(k)-39*Math.pow(10,-1)-u4(k)-u2(k)+u7(k)+u8(k); Java Expression: getVariable(2,k)-getVariable(5,k)-39*Math.pow(10,-1)-getVariable(4,k)-getVariable(2,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 7:46:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.852288167461104; Expression=u2(k)-u5(k)-32*Math.pow(10,-1)-u4(k)-u2(k)+u7(k)+u8(k); Java Expression: getVariable(2,k)-getVariable(5,k)-32*Math.pow(10,-1)-getVariable(4,k)-getVariable(2,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 7:46:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7855864174747795; Expression=u2(k)-u1(k)*39*Math.pow(10,-2)-u3(k)-u2(k)+u7(k)+u8(k); Java Expression: getVariable(2,k)-getVariable(1,k)*39*Math.pow(10,-2)-getVariable(3,k)-getVariable(2,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 7:46:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.286989193388742; Expression=u2(k)-u1(k)*39*Math.pow(10,-2)-u3(k)-u2(k)+u7(k)-u8(k); Java Expression: getVariable(2,k)-getVariable(1,k)*39*Math.pow(10,-2)-getVariable(3,k)-getVariable(2,k)+getVariable(7,k)-getVariable(8,k)
Aug 30, 2024 7:46:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.28698307278703; Expression=u2(k)-u1(k)*39*Math.pow(10,-2)-u3(k)-u2(k)+45*Math.pow(10,-6)+u7(k)-u8(k); Java Expression: getVariable(2,k)-getVariable(1,k)*39*Math.pow(10,-2)-getVariable(3,k)-getVariable(2,k)+45*Math.pow(10,-6)+getVariable(7,k)-getVariable(8,k)
Aug 30, 2024 7:46:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.286976000559902; Expression=u2(k)-u1(k)*39*Math.pow(10,-2)-u3(k)-u2(k)+97*Math.pow(10,-6)+u7(k)-u8(k); Java Expression: getVariable(2,k)-getVariable(1,k)*39*Math.pow(10,-2)-getVariable(3,k)-getVariable(2,k)+97*Math.pow(10,-6)+getVariable(7,k)-getVariable(8,k)
Aug 30, 2024 7:46:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.216582224013726; Expression=u2(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u2(k)+u7(k)-u8(k); Java Expression: getVariable(2,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(2,k)+getVariable(7,k)-getVariable(8,k)
Aug 30, 2024 7:47:00 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.216582224013726 -->> Avg.: 4119.957358539598 -->> Std. Dev.: 13985.608752035921
Aug 30, 2024 7:47:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.216582224013725; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-getVariable(8,k)
Aug 30, 2024 7:49:33 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.216582224013725 -->> Avg.: 154.74135919566822 -->> Std. Dev.: 466.81801575594034
Aug 30, 2024 7:50:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.21648169065498; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-71*Math.pow(10,-4)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-71*Math.pow(10,-4)-getVariable(8,k)
Aug 30, 2024 7:50:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.216444700146618; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-99*Math.pow(10,-4)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-99*Math.pow(10,-4)-getVariable(8,k)
Aug 30, 2024 7:50:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.216011722602106; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-71*Math.pow(10,-3)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-71*Math.pow(10,-3)-getVariable(8,k)
Aug 30, 2024 7:50:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.21600841981567; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-80*Math.pow(10,-3)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-80*Math.pow(10,-3)-getVariable(8,k)
Aug 30, 2024 7:50:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.216007970546379; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-76*Math.pow(10,-3)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-76*Math.pow(10,-3)-getVariable(8,k)
Aug 30, 2024 7:50:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.216007795287451; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-77*Math.pow(10,-3)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-77*Math.pow(10,-3)-getVariable(8,k)
Aug 30, 2024 7:50:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.21600779528745; Expression=u2(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u2(k)+u7(k)-77*Math.pow(10,-3)-u8(k); Java Expression: getVariable(2,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(2,k)+getVariable(7,k)-77*Math.pow(10,-3)-getVariable(8,k)
Aug 30, 2024 7:51:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.215907533609093; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-77*Math.pow(10,-3)-u8(k)+94*Math.pow(10,-8)*u4(k)*u1(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-77*Math.pow(10,-3)-getVariable(8,k)+94*Math.pow(10,-8)*getVariable(4,k)*getVariable(1,k)
Aug 30, 2024 7:51:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.215905059823879; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-77*Math.pow(10,-3)-u8(k)+94*Math.pow(10,-8)*u4(k)*u6(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-77*Math.pow(10,-3)-getVariable(8,k)+94*Math.pow(10,-8)*getVariable(4,k)*getVariable(6,k)
Aug 30, 2024 7:51:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2155936693641385; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-77*Math.pow(10,-3)-u8(k)+94*Math.pow(10,-8)*u2(k)*u1(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-77*Math.pow(10,-3)-getVariable(8,k)+94*Math.pow(10,-8)*getVariable(2,k)*getVariable(1,k)
Aug 30, 2024 7:51:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.214091347006262; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-77*Math.pow(10,-3)-u8(k)+94*Math.pow(10,-6)*u4(k)*u1(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-77*Math.pow(10,-3)-getVariable(8,k)+94*Math.pow(10,-6)*getVariable(4,k)*getVariable(1,k)
Aug 30, 2024 7:51:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.208510175579841; Expression=u2(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u2(k)+u7(k)-77*Math.pow(10,-3)-u8(k)+94*Math.pow(10,-6)*u3(k)*u1(k); Java Expression: getVariable(2,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(2,k)+getVariable(7,k)-77*Math.pow(10,-3)-getVariable(8,k)+94*Math.pow(10,-6)*getVariable(3,k)*getVariable(1,k)
Aug 30, 2024 7:52:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.200705718988446; Expression=u2(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u2(k)+u7(k)-77*Math.pow(10,-2)-u8(k)+94*Math.pow(10,-6)*u1(k)*u1(k); Java Expression: getVariable(2,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(2,k)+getVariable(7,k)-77*Math.pow(10,-2)-getVariable(8,k)+94*Math.pow(10,-6)*getVariable(1,k)*getVariable(1,k)
Aug 30, 2024 7:52:11 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.200705718988446 -->> Avg.: 14.220999676417001 -->> Std. Dev.: 19.94020729190777
Aug 30, 2024 7:52:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.184885501946791; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-17*Math.pow(10,-1)-u8(k)+63*Math.pow(10,-5)*u4(k)*u1(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-17*Math.pow(10,-1)-getVariable(8,k)+63*Math.pow(10,-5)*getVariable(4,k)*getVariable(1,k)
Aug 30, 2024 7:52:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.150095857544269; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-17*Math.pow(10,-1)-u8(k)+63*Math.pow(10,-5)*u3(k)*u1(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-17*Math.pow(10,-1)-getVariable(8,k)+63*Math.pow(10,-5)*getVariable(3,k)*getVariable(1,k)
Aug 30, 2024 7:52:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.144343768129449; Expression=u2(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u2(k)+u7(k)-17*Math.pow(10,-1)-u8(k)+56*Math.pow(10,-5)*u3(k)*u1(k); Java Expression: getVariable(2,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(2,k)+getVariable(7,k)-17*Math.pow(10,-1)-getVariable(8,k)+56*Math.pow(10,-5)*getVariable(3,k)*getVariable(1,k)
Aug 30, 2024 7:52:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.141636589440952; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-23*Math.pow(10,-1)-u8(k)+63*Math.pow(10,-5)*u3(k)*u1(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-23*Math.pow(10,-1)-getVariable(8,k)+63*Math.pow(10,-5)*getVariable(3,k)*getVariable(1,k)
Aug 30, 2024 7:53:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.134425505021528; Expression=u2(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u2(k)+u7(k)-27*Math.pow(10,-1)-u8(k)+94*Math.pow(10,-5)*u3(k)*u1(k); Java Expression: getVariable(2,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(2,k)+getVariable(7,k)-27*Math.pow(10,-1)-getVariable(8,k)+94*Math.pow(10,-5)*getVariable(3,k)*getVariable(1,k)
Aug 30, 2024 7:53:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.117585788887298; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-23*Math.pow(10,-1)-u8(k)+63*Math.pow(10,-5)*u3(k)*u6(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-23*Math.pow(10,-1)-getVariable(8,k)+63*Math.pow(10,-5)*getVariable(3,k)*getVariable(6,k)
Aug 30, 2024 7:53:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.101921108793554; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-29*Math.pow(10,-1)-u8(k)+83*Math.pow(10,-5)*u3(k)*u6(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-29*Math.pow(10,-1)-getVariable(8,k)+83*Math.pow(10,-5)*getVariable(3,k)*getVariable(6,k)
Aug 30, 2024 7:54:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.09899226102684; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-29*Math.pow(10,-1)-u8(k)+77*Math.pow(10,-5)*u3(k)*u6(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-29*Math.pow(10,-1)-getVariable(8,k)+77*Math.pow(10,-5)*getVariable(3,k)*getVariable(6,k)
Aug 30, 2024 7:54:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.086299558595789; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-50*Math.pow(10,-1)-u8(k)+77*Math.pow(10,-5)*u3(k)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-50*Math.pow(10,-1)-getVariable(8,k)+77*Math.pow(10,-5)*getVariable(3,k)*getVariable(2,k)
Aug 30, 2024 7:55:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.086299558595788; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-50*Math.pow(10,-1)+u7(k)-u7(k)-u8(k)+77*Math.pow(10,-5)*u3(k)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-50*Math.pow(10,-1)+getVariable(7,k)-getVariable(7,k)-getVariable(8,k)+77*Math.pow(10,-5)*getVariable(3,k)*getVariable(2,k)
Aug 30, 2024 7:55:10 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.086299558595788 -->> Avg.: 5.673204401100196 -->> Std. Dev.: 1.2104552150758385
Aug 30, 2024 7:55:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.085767278018154; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-50*Math.pow(10,-1)-u8(k)+76*Math.pow(10,-5)*u3(k)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-50*Math.pow(10,-1)-getVariable(8,k)+76*Math.pow(10,-5)*getVariable(3,k)*getVariable(2,k)
Aug 30, 2024 7:56:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.085720528891884; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-53*Math.pow(10,-1)-u8(k)+77*Math.pow(10,-5)*u3(k)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-53*Math.pow(10,-1)-getVariable(8,k)+77*Math.pow(10,-5)*getVariable(3,k)*getVariable(2,k)
Aug 30, 2024 7:57:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.067374831735152; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-63*Math.pow(10,-1)+u7(k)-u7(k)-u8(k)+94*Math.pow(10,-5)*u3(k)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-63*Math.pow(10,-1)+getVariable(7,k)-getVariable(7,k)-getVariable(8,k)+94*Math.pow(10,-5)*getVariable(3,k)*getVariable(2,k)
Aug 30, 2024 7:58:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0669987949087245; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-63*Math.pow(10,-1)-u8(k)+96*Math.pow(10,-5)*u3(k)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-63*Math.pow(10,-1)-getVariable(8,k)+96*Math.pow(10,-5)*getVariable(3,k)*getVariable(2,k)
Aug 30, 2024 7:58:19 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.0669987949087245 -->> Avg.: 5.308031613426018 -->> Std. Dev.: 0.3140505786050463
Aug 30, 2024 7:58:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.052023486824417; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-79*Math.pow(10,-1)+u8(k)+76*Math.pow(10,-5)*u3(k)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-79*Math.pow(10,-1)+getVariable(8,k)+76*Math.pow(10,-5)*getVariable(3,k)*getVariable(2,k)
Aug 30, 2024 7:59:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.03323866512844; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-85*Math.pow(10,-1)+u7(k)-u7(k)+u8(k)+86*Math.pow(10,-5)*u3(k)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-85*Math.pow(10,-1)+getVariable(7,k)-getVariable(7,k)+getVariable(8,k)+86*Math.pow(10,-5)*getVariable(3,k)*getVariable(2,k)
Aug 30, 2024 7:59:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.033238665128439; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-85*Math.pow(10,-1)+u8(k)+86*Math.pow(10,-5)*u3(k)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-85*Math.pow(10,-1)+getVariable(8,k)+86*Math.pow(10,-5)*getVariable(3,k)*getVariable(2,k)
Aug 30, 2024 7:59:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.025174931530761; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-87*Math.pow(10,-1)+u8(k)+86*Math.pow(10,-5)*u3(k)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-87*Math.pow(10,-1)+getVariable(8,k)+86*Math.pow(10,-5)*getVariable(3,k)*getVariable(2,k)
Aug 30, 2024 8:00:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0241246907949915; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-88*Math.pow(10,-1)+u8(k)+86*Math.pow(10,-5)*u3(k)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-88*Math.pow(10,-1)+getVariable(8,k)+86*Math.pow(10,-5)*getVariable(3,k)*getVariable(2,k)
Aug 30, 2024 8:00:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.014834692996493; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-96*Math.pow(10,-1)+u8(k)+94*Math.pow(10,-5)*u3(k)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-96*Math.pow(10,-1)+getVariable(8,k)+94*Math.pow(10,-5)*getVariable(3,k)*getVariable(2,k)
Aug 30, 2024 8:00:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.014834692996492; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-96*Math.pow(10,-1)+u7(k)-u7(k)+u8(k)+94*Math.pow(10,-5)*u3(k)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-96*Math.pow(10,-1)+getVariable(7,k)-getVariable(7,k)+getVariable(8,k)+94*Math.pow(10,-5)*getVariable(3,k)*getVariable(2,k)
Aug 30, 2024 8:01:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.008082675717539; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-94*Math.pow(10,-1)+u8(k)+94*Math.pow(10,-5)*u3(k)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-94*Math.pow(10,-1)+getVariable(8,k)+94*Math.pow(10,-5)*getVariable(3,k)*getVariable(2,k)
Aug 30, 2024 8:01:32 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.008082675717539 -->> Avg.: 5.1362337187212725 -->> Std. Dev.: 0.07589363408391256
Aug 30, 2024 8:01:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.002178384538899; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-96*Math.pow(10,-1)+u8(k)+97*Math.pow(10,-5)*u3(k)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-96*Math.pow(10,-1)+getVariable(8,k)+97*Math.pow(10,-5)*getVariable(3,k)*getVariable(2,k)
Aug 30, 2024 8:01:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.998167000707757; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-96*Math.pow(10,-1)+u8(k)+99*Math.pow(10,-5)*u3(k)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-96*Math.pow(10,-1)+getVariable(8,k)+99*Math.pow(10,-5)*getVariable(3,k)*getVariable(2,k)
Aug 30, 2024 8:03:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.997950139532746; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-97*Math.pow(10,-1)+u8(k)+99*Math.pow(10,-5)*u3(k)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-97*Math.pow(10,-1)+getVariable(8,k)+99*Math.pow(10,-5)*getVariable(3,k)*getVariable(2,k)
Aug 30, 2024 8:04:48 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.997950139532746 -->> Avg.: 5.093605286296347 -->> Std. Dev.: 0.07998373046729183
Aug 30, 2024 8:05:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.997950139532745; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u7(k)+u7(k)-97*Math.pow(10,-1)+u8(k)+u3(k)*99*Math.pow(10,-5)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)+getVariable(7,k)-97*Math.pow(10,-1)+getVariable(8,k)+getVariable(3,k)*99*Math.pow(10,-5)*getVariable(2,k)
Aug 30, 2024 8:08:05 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.997950139532745 -->> Avg.: 5.05098263928369 -->> Std. Dev.: 0.05857019035452162
Aug 30, 2024 8:10:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.997950139532744; Expression=u6(k)-u1(k)*38*Math.pow(10,-2)-u3(k)-u6(k)+u7(k)-97*Math.pow(10,-1)+u8(k)+u3(k)*99*Math.pow(10,-5)*u2(k); Java Expression: getVariable(6,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(6,k)+getVariable(7,k)-97*Math.pow(10,-1)+getVariable(8,k)+getVariable(3,k)*99*Math.pow(10,-5)*getVariable(2,k)
Aug 30, 2024 8:11:22 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.997950139532744 -->> Avg.: 5.0227203768221065 -->> Std. Dev.: 0.034473374173636634

Execution time: 1750.767 seconds.



@@;getVariable(6,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(6,k)+getVariable(7,k)-97*Math.pow(10,-1)+getVariable(8,k)+getVariable(3,k)*99*Math.pow(10,-5)*getVariable(2,k)



Run #8
========
Aug 30, 2024 8:11:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9689999998499836E13; Expression=49*Math.pow(10,+4)*81*Math.pow(10,+6)-u4(k)*u3(k); Java Expression: 49*Math.pow(10,+4)*81*Math.pow(10,+6)-getVariable(4,k)*getVariable(3,k)
Aug 30, 2024 8:11:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=2.6719277549614072E11; Expression=8*Math.pow(10,+9)*u5(k)+u1(k)-u7(k)+u6(k)-51*Math.pow(10,-9)-u2(k)*u5(k)+u3(k)*u7(k); Java Expression: 8*Math.pow(10,+9)*getVariable(5,k)+getVariable(1,k)-getVariable(7,k)+getVariable(6,k)-51*Math.pow(10,-9)-getVariable(2,k)*getVariable(5,k)+getVariable(3,k)*getVariable(7,k)
Aug 30, 2024 8:11:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3891.335861690298; Expression=u4(k)*u7(k); Java Expression: getVariable(4,k)*getVariable(7,k)
Aug 30, 2024 8:11:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=34.29410356124133; Expression=95*Math.pow(10,-9)*u3(k); Java Expression: 95*Math.pow(10,-9)*getVariable(3,k)
Aug 30, 2024 8:11:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=34.29410331404376; Expression=24*Math.pow(10,-9)*u2(k); Java Expression: 24*Math.pow(10,-9)*getVariable(2,k)
Aug 30, 2024 8:11:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=24.443414341753133; Expression=u1(k)-u9(k); Java Expression: getVariable(1,k)-getVariable(9,k)
Aug 30, 2024 8:11:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.39803178110792; Expression=19*Math.pow(10,-8)+u4(k); Java Expression: 19*Math.pow(10,-8)+getVariable(4,k)
Aug 30, 2024 8:11:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.398031743795919; Expression=88*Math.pow(10,-9)+u4(k); Java Expression: 88*Math.pow(10,-9)+getVariable(4,k)
Aug 30, 2024 8:11:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330474082308582; Expression=4*Math.pow(10,-8)*u5(k)*u4(k)+u5(k); Java Expression: 4*Math.pow(10,-8)*getVariable(5,k)*getVariable(4,k)+getVariable(5,k)
Aug 30, 2024 8:11:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330010187273672; Expression=21*Math.pow(10,-3)+u5(k); Java Expression: 21*Math.pow(10,-3)+getVariable(5,k)
Aug 30, 2024 8:11:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 8:11:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.747527283819505; Expression=32*Math.pow(10,-2)*u6(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)
Aug 30, 2024 8:11:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709785324194373; Expression=32*Math.pow(10,-2)*u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 8:12:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131407434512216; Expression=u7(k)-u3(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 30, 2024 8:12:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837859; Expression=u7(k)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)
Aug 30, 2024 8:12:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.989683490844856; Expression=u7(k)-u3(k)-44*Math.pow(10,-3)-u5(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-44*Math.pow(10,-3)-getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 8:12:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.975516827250811; Expression=u7(k)-u5(k)-59*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-59*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:12:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.969481228669545; Expression=u7(k)-u5(k)-64*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-64*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:12:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.954782913099654; Expression=u7(k)-u5(k)-78*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-78*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:12:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.951181678581833; Expression=u7(k)-u5(k)-82*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-82*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:12:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9419807185417035; Expression=u7(k)-u5(k)-94*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-94*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:12:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.93885844638529; Expression=u7(k)-u5(k)-99*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-99*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:12:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.938858446152276; Expression=u7(k)-u5(k)-99*Math.pow(10,-2)-4*Math.pow(10,-9)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-99*Math.pow(10,-2)-4*Math.pow(10,-9)-getVariable(4,k)
Aug 30, 2024 8:12:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.938856116427752; Expression=u7(k)-u5(k)-99*Math.pow(10,-2)-4*Math.pow(10,-5)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-99*Math.pow(10,-2)-4*Math.pow(10,-5)-getVariable(4,k)
Aug 30, 2024 8:12:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.936662654686241; Expression=u7(k)-u5(k)-99*Math.pow(10,-2)-4*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-99*Math.pow(10,-2)-4*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:12:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.929019981383617; Expression=u7(k)-u5(k)-99*Math.pow(10,-2)-4*Math.pow(10,-1)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-99*Math.pow(10,-2)-4*Math.pow(10,-1)-getVariable(4,k)
Aug 30, 2024 8:13:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928776618799997; Expression=u7(k)-u5(k)-58*Math.pow(10,-2)-75*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-58*Math.pow(10,-2)-75*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:13:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928775012847562; Expression=u7(k)-u5(k)-99*Math.pow(10,-2)-35*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-99*Math.pow(10,-2)-35*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:13:36 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.928775012847562 -->> Avg.: 2.2641755834264353E7 -->> Std. Dev.: 1.2875658226189473E8
Aug 30, 2024 8:14:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.92877501284756; Expression=u7(k)-u5(k)-44*Math.pow(10,-2)-90*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-44*Math.pow(10,-2)-90*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:14:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9287750128475585; Expression=u7(k)-u4(k)-44*Math.pow(10,-2)-90*Math.pow(10,-2)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-44*Math.pow(10,-2)-90*Math.pow(10,-2)-getVariable(5,k)
Aug 30, 2024 8:15:57 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.9287750128475585 -->> Avg.: 8859.969886308598 -->> Std. Dev.: 31422.073451059474
Aug 30, 2024 8:17:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8946310451441; Expression=u7(k)-u4(k)-44*Math.pow(10,-3)*u5(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-44*Math.pow(10,-3)*getVariable(5,k)-getVariable(5,k)
Aug 30, 2024 8:17:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.878427128067509; Expression=99*Math.pow(10,-2)*u7(k)-u4(k)-35*Math.pow(10,-2)-u5(k); Java Expression: 99*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-35*Math.pow(10,-2)-getVariable(5,k)
Aug 30, 2024 8:17:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.798275334308068; Expression=u7(k)-u4(k)-99*Math.pow(10,-3)*u5(k)-u5(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-99*Math.pow(10,-3)*getVariable(5,k)-getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 8:17:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.788471450782536; Expression=u7(k)-u4(k)-88*Math.pow(10,-3)*u5(k)-u5(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-88*Math.pow(10,-3)*getVariable(5,k)-getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 8:17:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.78839991434302; Expression=u7(k)-u4(k)-89*Math.pow(10,-3)*u5(k)-u5(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-89*Math.pow(10,-3)*getVariable(5,k)-getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 8:18:22 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.78839991434302 -->> Avg.: 279.9397457327992 -->> Std. Dev.: 777.7896435421782
Aug 30, 2024 8:18:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.627224721923781; Expression=u7(k)-u4(k)-38*Math.pow(10,-3)*u1(k)-u5(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-38*Math.pow(10,-3)*getVariable(1,k)-getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 8:18:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.625459561663984; Expression=u7(k)-u4(k)-40*Math.pow(10,-3)*u1(k)-u5(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-40*Math.pow(10,-3)*getVariable(1,k)-getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 8:18:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.595180896570604; Expression=u7(k)-u4(k)-44*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-44*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 8:18:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.48267476261824; Expression=u7(k)-u4(k)-44*Math.pow(10,-2)*98*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-44*Math.pow(10,-2)*98*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 8:19:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.273495089061907; Expression=u7(k)-u3(k)-44*Math.pow(10,-2)*90*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(3,k)-44*Math.pow(10,-2)*90*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 8:20:49 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.273495089061907 -->> Avg.: 15.780190006304082 -->> Std. Dev.: 23.143387545631864
Aug 30, 2024 8:21:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.273495089061906; Expression=u7(k)-u3(k)-44*Math.pow(10,-2)*u1(k)*90*Math.pow(10,-2)+u5(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(3,k)-44*Math.pow(10,-2)*getVariable(1,k)*90*Math.pow(10,-2)+getVariable(5,k)-getVariable(5,k)
Aug 30, 2024 8:22:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.272974046471987; Expression=u7(k)-u3(k)-61*Math.pow(10,-2)*65*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(3,k)-61*Math.pow(10,-2)*65*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 8:22:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.272974046471986; Expression=u7(k)-u3(k)-61*Math.pow(10,-2)*u1(k)*65*Math.pow(10,-2)+u5(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(3,k)-61*Math.pow(10,-2)*getVariable(1,k)*65*Math.pow(10,-2)+getVariable(5,k)-getVariable(5,k)
Aug 30, 2024 8:22:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.272974046471985; Expression=u7(k)-u3(k)-61*Math.pow(10,+2)*65*Math.pow(10,-6)*u1(k); Java Expression: getVariable(7,k)-getVariable(3,k)-61*Math.pow(10,+2)*65*Math.pow(10,-6)*getVariable(1,k)
Aug 30, 2024 8:23:18 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.272974046471985 -->> Avg.: 5.927236388394669 -->> Std. Dev.: 1.2040137501897037
Aug 30, 2024 8:25:47 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.272974046471985 -->> Avg.: 5.55717263772038 -->> Std. Dev.: 0.3006813529468142
Aug 30, 2024 8:28:13 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.272974046471985 -->> Avg.: 5.429086511475152 -->> Std. Dev.: 0.25056142453646113
Aug 30, 2024 8:30:39 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.272974046471985 -->> Avg.: 5.310699328718909 -->> Std. Dev.: 0.11444508577494825
Aug 30, 2024 8:33:07 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 5.272974046471985 -->> Avg.: 5.273062074175165 -->> Std. Dev.: 1.9533193861015342E-4
Aug 30, 2024 8:35:33 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 5.272974046471985 -->> Avg.: 5.272974046471985 -->> Std. Dev.: 0.0

Execution time: 1448.175 seconds.



@@;getVariable(7,k)-getVariable(3,k)-61*Math.pow(10,+2)*65*Math.pow(10,-6)*getVariable(1,k)



Run #9
========
Aug 30, 2024 8:35:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=65.61231641345937; Expression=15*Math.pow(10,-9)*70*Math.pow(10,+4)*u8(k)*u6(k)-u5(k); Java Expression: 15*Math.pow(10,-9)*70*Math.pow(10,+4)*getVariable(8,k)*getVariable(6,k)-getVariable(5,k)
Aug 30, 2024 8:35:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=27.35534689066922; Expression=99*Math.pow(10,-4)*u7(k)*u8(k)+u4(k)*u8(k); Java Expression: 99*Math.pow(10,-4)*getVariable(7,k)*getVariable(8,k)+getVariable(4,k)*getVariable(8,k)
Aug 30, 2024 8:35:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=15.200838604392706; Expression=u8(k)+u9(k); Java Expression: getVariable(8,k)+getVariable(9,k)
Aug 30, 2024 8:35:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=12.872813051518879; Expression=62*Math.pow(10,-4)+u8(k)+u3(k); Java Expression: 62*Math.pow(10,-4)+getVariable(8,k)+getVariable(3,k)
Aug 30, 2024 8:35:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=11.93849526090675; Expression=u3(k)-u8(k); Java Expression: getVariable(3,k)-getVariable(8,k)
Aug 30, 2024 8:35:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.333798849481484; Expression=37*Math.pow(10,-4)*u4(k)+u5(k); Java Expression: 37*Math.pow(10,-4)*getVariable(4,k)+getVariable(5,k)
Aug 30, 2024 8:35:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.329443142272702; Expression=51*Math.pow(10,-3)+u5(k); Java Expression: 51*Math.pow(10,-3)+getVariable(5,k)
Aug 30, 2024 8:35:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.329278130413053; Expression=61*Math.pow(10,-3)+u5(k); Java Expression: 61*Math.pow(10,-3)+getVariable(5,k)
Aug 30, 2024 8:35:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.32902515703954; Expression=78*Math.pow(10,-3)+u5(k); Java Expression: 78*Math.pow(10,-3)+getVariable(5,k)
Aug 30, 2024 8:35:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 8:35:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.747527283819505; Expression=32*Math.pow(10,-2)*u6(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)
Aug 30, 2024 8:35:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.420752558560338; Expression=35*Math.pow(10,-2)*u6(k); Java Expression: 35*Math.pow(10,-2)*getVariable(6,k)
Aug 30, 2024 8:35:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709785324194373; Expression=32*Math.pow(10,-2)*u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 8:36:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.62870933101887; Expression=32*Math.pow(10,-2)*u7(k)+u7(k)*95*Math.pow(10,-9)*u9(k)*u5(k)*u8(k)*u1(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)+getVariable(7,k)*95*Math.pow(10,-9)*getVariable(9,k)*getVariable(5,k)*getVariable(8,k)*getVariable(1,k)
Aug 30, 2024 8:36:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.623544847814256; Expression=32*Math.pow(10,-2)*u7(k)+u7(k)*27*Math.pow(10,-9)*u9(k)*u5(k)*u8(k)*u1(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)+getVariable(7,k)*27*Math.pow(10,-9)*getVariable(9,k)*getVariable(5,k)*getVariable(8,k)*getVariable(1,k)
Aug 30, 2024 8:36:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.6078413617943275; Expression=32*Math.pow(10,-2)*u7(k)+u7(k)*85*Math.pow(10,-9)*u9(k)*u5(k)*u8(k)*u1(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)+getVariable(7,k)*85*Math.pow(10,-9)*getVariable(9,k)*getVariable(5,k)*getVariable(8,k)*getVariable(1,k)
Aug 30, 2024 8:36:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.578049953564858; Expression=32*Math.pow(10,-2)*u7(k)+u7(k)*95*Math.pow(10,-9)*u9(k)*u5(k)*u8(k)*u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)+getVariable(7,k)*95*Math.pow(10,-9)*getVariable(9,k)*getVariable(5,k)*getVariable(8,k)*getVariable(5,k)
Aug 30, 2024 8:36:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.521203069987254; Expression=29*Math.pow(10,-2)*u7(k)+u7(k)*95*Math.pow(10,-9)*u9(k)*u5(k)*u8(k)*u1(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)+getVariable(7,k)*95*Math.pow(10,-9)*getVariable(9,k)*getVariable(5,k)*getVariable(8,k)*getVariable(1,k)
Aug 30, 2024 8:36:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.4070529324640715; Expression=31*Math.pow(10,-2)*u7(k)+u8(k); Java Expression: 31*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 8:36:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.280932335558582; Expression=32*Math.pow(10,-2)*u7(k)+u8(k)*27*Math.pow(10,-6)*u1(k)*u8(k)*u8(k)*u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*27*Math.pow(10,-6)*getVariable(1,k)*getVariable(8,k)*getVariable(8,k)*getVariable(7,k)
Aug 30, 2024 8:36:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.223621033993111; Expression=32*Math.pow(10,-2)*u7(k)+u8(k)*33*Math.pow(10,-6)*u1(k)*u8(k)*u8(k)*u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*33*Math.pow(10,-6)*getVariable(1,k)*getVariable(8,k)*getVariable(8,k)*getVariable(7,k)
Aug 30, 2024 8:36:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.809962081062703; Expression=31*Math.pow(10,-2)*u7(k)+u8(k)*79*Math.pow(10,-6)*u1(k)*u8(k)*u8(k)*u7(k); Java Expression: 31*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*79*Math.pow(10,-6)*getVariable(1,k)*getVariable(8,k)*getVariable(8,k)*getVariable(7,k)
Aug 30, 2024 8:37:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.257656349421516; Expression=29*Math.pow(10,-2)*u7(k)+u8(k)*95*Math.pow(10,-6)*u1(k)*u8(k)*u8(k)*u7(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*95*Math.pow(10,-6)*getVariable(1,k)*getVariable(8,k)*getVariable(8,k)*getVariable(7,k)
Aug 30, 2024 8:37:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.166841538756755; Expression=29*Math.pow(10,-2)*u7(k)+u8(k)*95*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*u7(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*95*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*getVariable(7,k)
Aug 30, 2024 8:37:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.031607197706271; Expression=29*Math.pow(10,-2)*u7(k)+u7(k)*95*Math.pow(10,-6)*u8(k)*u6(k)*u8(k)*u8(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)+getVariable(7,k)*95*Math.pow(10,-6)*getVariable(8,k)*getVariable(6,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 8:37:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.020895312757972; Expression=29*Math.pow(10,-2)*u7(k)+u6(k)*95*Math.pow(10,-6)*u8(k)*u6(k)*u8(k)*u8(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)+getVariable(6,k)*95*Math.pow(10,-6)*getVariable(8,k)*getVariable(6,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 8:37:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.010485708288897; Expression=29*Math.pow(10,-2)*u7(k)+u7(k)*90*Math.pow(10,-6)*u8(k)*u6(k)*u8(k)*u8(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)+getVariable(7,k)*90*Math.pow(10,-6)*getVariable(8,k)*getVariable(6,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 8:37:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.008733116415139; Expression=29*Math.pow(10,-2)*u7(k)+u7(k)*85*Math.pow(10,-6)*u8(k)*u6(k)*u8(k)*u8(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)+getVariable(7,k)*85*Math.pow(10,-6)*getVariable(8,k)*getVariable(6,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 8:37:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.008581791691611; Expression=29*Math.pow(10,-2)*u7(k)+u7(k)*89*Math.pow(10,-6)*u8(k)*u6(k)*u8(k)*u8(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)+getVariable(7,k)*89*Math.pow(10,-6)*getVariable(8,k)*getVariable(6,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 8:37:51 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.008581791691611 -->> Avg.: 7185325.298130254 -->> Std. Dev.: 3.794446922535934E7
Aug 30, 2024 8:38:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.007454230391335; Expression=29*Math.pow(10,-2)*u7(k)+u7(k)*88*Math.pow(10,-6)*u8(k)*u6(k)*u8(k)*u8(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)+getVariable(7,k)*88*Math.pow(10,-6)*getVariable(8,k)*getVariable(6,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 8:38:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.789052963962404; Expression=28*Math.pow(10,-2)*u7(k)+u7(k)*96*Math.pow(10,-6)*u8(k)*u6(k)*u8(k)*u8(k); Java Expression: 28*Math.pow(10,-2)*getVariable(7,k)+getVariable(7,k)*96*Math.pow(10,-6)*getVariable(8,k)*getVariable(6,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 8:38:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.7801232427239535; Expression=27*Math.pow(10,-2)*u7(k)+u7(k)*95*Math.pow(10,-6)*u8(k)*u6(k)*u8(k)*u8(k); Java Expression: 27*Math.pow(10,-2)*getVariable(7,k)+getVariable(7,k)*95*Math.pow(10,-6)*getVariable(8,k)*getVariable(6,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 8:38:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.6924711608786644; Expression=27*Math.pow(10,-2)*u7(k)+u8(k)*95*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*u7(k); Java Expression: 27*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*95*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*getVariable(7,k)
Aug 30, 2024 8:39:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.679492707243809; Expression=27*Math.pow(10,-2)*u7(k)+u8(k)*97*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*u7(k); Java Expression: 27*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*97*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*getVariable(7,k)
Aug 30, 2024 8:39:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.670588293878016; Expression=27*Math.pow(10,-2)*u7(k)+u8(k)*99*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*u7(k); Java Expression: 27*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*99*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*getVariable(7,k)
Aug 30, 2024 8:40:32 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 4.670588293878016 -->> Avg.: 6545.106202447864 -->> Std. Dev.: 22537.159030154126
Aug 30, 2024 8:40:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.244463871942164; Expression=27*Math.pow(10,-2)*u6(k)+u8(k)*95*Math.pow(10,-6)*u7(k)*33*Math.pow(10,+1)*u8(k); Java Expression: 27*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*95*Math.pow(10,-6)*getVariable(7,k)*33*Math.pow(10,+1)*getVariable(8,k)
Aug 30, 2024 8:40:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.206973089532973; Expression=27*Math.pow(10,-2)*u6(k)+u8(k)*99*Math.pow(10,-6)*u7(k)*3*Math.pow(10,+2)*u8(k); Java Expression: 27*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*99*Math.pow(10,-6)*getVariable(7,k)*3*Math.pow(10,+2)*getVariable(8,k)
Aug 30, 2024 8:40:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.11134580301639; Expression=27*Math.pow(10,-2)*u6(k)+u8(k)*99*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*u2(k); Java Expression: 27*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*99*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*getVariable(2,k)
Aug 30, 2024 8:41:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.092158100478927; Expression=27*Math.pow(10,-2)*u6(k)+u8(k)*97*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*u2(k); Java Expression: 27*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*97*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*getVariable(2,k)
Aug 30, 2024 8:41:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.08280298353752; Expression=27*Math.pow(10,-2)*u6(k)+u8(k)*95*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*u2(k); Java Expression: 27*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*95*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*getVariable(2,k)
Aug 30, 2024 8:41:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.059476608038384; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*95*Math.pow(10,-6)*u7(k)*33*Math.pow(10,+1)*u8(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*95*Math.pow(10,-6)*getVariable(7,k)*33*Math.pow(10,+1)*getVariable(8,k)
Aug 30, 2024 8:41:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.051233703316956; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*95*Math.pow(10,-6)*u7(k)*34*Math.pow(10,+1)*u8(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*95*Math.pow(10,-6)*getVariable(7,k)*34*Math.pow(10,+1)*getVariable(8,k)
Aug 30, 2024 8:42:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.034301297075141; Expression=25*Math.pow(10,-2)*u6(k)+u8(k)*95*Math.pow(10,-6)*u7(k)*34*Math.pow(10,+1)*u8(k); Java Expression: 25*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*95*Math.pow(10,-6)*getVariable(7,k)*34*Math.pow(10,+1)*getVariable(8,k)
Aug 30, 2024 8:42:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.931164932557345; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*95*Math.pow(10,-6)*17*Math.pow(10,+1)*u7(k)*u8(k)*u8(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*95*Math.pow(10,-6)*17*Math.pow(10,+1)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 8:43:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9311649325573446; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*u7(k)*95*Math.pow(10,-6)*17*Math.pow(10,+1)*u8(k)*u8(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*getVariable(7,k)*95*Math.pow(10,-6)*17*Math.pow(10,+1)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 8:43:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.931164932557344; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*95*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)-u7(k)+u7(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*95*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)-getVariable(7,k)+getVariable(7,k)
Aug 30, 2024 8:43:27 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 3.931164932557344 -->> Avg.: 182.2920101727478 -->> Std. Dev.: 556.2102112344959
Aug 30, 2024 8:43:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.927103072845841; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*96*Math.pow(10,-6)*17*Math.pow(10,+1)*u7(k)*u8(k)*u8(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*96*Math.pow(10,-6)*17*Math.pow(10,+1)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 8:44:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9271030728458407; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*96*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+u2(k)-u2(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*96*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+getVariable(2,k)-getVariable(2,k)
Aug 30, 2024 8:45:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.925906765085574; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*97*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)-u7(k)+u7(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*97*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)-getVariable(7,k)+getVariable(7,k)
Aug 30, 2024 8:45:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9259067650855735; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*97*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+u2(k)-u2(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*97*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+getVariable(2,k)-getVariable(2,k)
Aug 30, 2024 8:46:33 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 3.9259067650855735 -->> Avg.: 15.125688612715978 -->> Std. Dev.: 23.297173622830385
Aug 30, 2024 8:49:42 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 3.9259067650855735 -->> Avg.: 4.814627864454201 -->> Std. Dev.: 1.7787723626691687
Aug 30, 2024 8:50:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.925803554314348; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*97*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+73*Math.pow(10,-6)*u9(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*97*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+73*Math.pow(10,-6)*getVariable(9,k)
Aug 30, 2024 8:51:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.924973463484226; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*97*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+73*Math.pow(10,-5)*u9(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*97*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+73*Math.pow(10,-5)*getVariable(9,k)
Aug 30, 2024 8:51:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.923475316165752; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*97*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+30*Math.pow(10,-4)*u9(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*97*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+30*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:51:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.923458209439591; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*97*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+31*Math.pow(10,-4)*u9(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*97*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+31*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:51:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.923436376561772; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*97*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+33*Math.pow(10,-4)*u9(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*97*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+33*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:51:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9232144901122328; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*96*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+88*Math.pow(10,-4)*u9(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*96*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+88*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:52:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9224002118572883; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*96*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+28*Math.pow(10,-4)*u9(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*96*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+28*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:52:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9217294164390757; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*96*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+35*Math.pow(10,-4)*u9(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*96*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+35*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:52:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9215038324518363; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*96*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+38*Math.pow(10,-4)*u9(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*96*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+38*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:52:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.920928242930965; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*96*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+54*Math.pow(10,-4)*u9(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*96*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+54*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:52:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9198295582841647; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*95*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+65*Math.pow(10,-4)*u9(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*95*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+65*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:52:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9196534783868824; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*95*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+78*Math.pow(10,-4)*u9(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*95*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+78*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:52:54 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 3.9196534783868824 -->> Avg.: 4.14354119664244 -->> Std. Dev.: 0.3597731973623946
Aug 30, 2024 8:53:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.919638584733371; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*95*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+73*Math.pow(10,-4)*u9(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*95*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+73*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:53:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.91963214942615; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*95*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+75*Math.pow(10,-4)*u9(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*95*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+75*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:55:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.919334525348832; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*95*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+u9(k)*65*Math.pow(10,-4)*u8(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*95*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+getVariable(9,k)*65*Math.pow(10,-4)*getVariable(8,k)
Aug 30, 2024 8:55:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9181446670017754; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*95*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+u9(k)*54*Math.pow(10,-4)*u8(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*95*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+getVariable(9,k)*54*Math.pow(10,-4)*getVariable(8,k)
Aug 30, 2024 8:56:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9155877974888185; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*93*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*17*Math.pow(10,+1)+u9(k)*65*Math.pow(10,-4)*u8(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*93*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*17*Math.pow(10,+1)+getVariable(9,k)*65*Math.pow(10,-4)*getVariable(8,k)
Aug 30, 2024 8:56:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9152529553858146; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*29*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*54*Math.pow(10,+1)+u9(k)*75*Math.pow(10,-4)*u8(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*29*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*54*Math.pow(10,+1)+getVariable(9,k)*75*Math.pow(10,-4)*getVariable(8,k)
Aug 30, 2024 8:56:15 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 3.9152529553858146 -->> Avg.: 3.9708551738551425 -->> Std. Dev.: 0.14225687766150039
Aug 30, 2024 8:56:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9138675181733986; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*29*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*54*Math.pow(10,+1)+u9(k)*87*Math.pow(10,-4)*u8(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*29*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*54*Math.pow(10,+1)+getVariable(9,k)*87*Math.pow(10,-4)*getVariable(8,k)
Aug 30, 2024 8:57:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9138220612097263; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*29*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*54*Math.pow(10,+1)+u9(k)*88*Math.pow(10,-4)*u8(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*29*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*54*Math.pow(10,+1)+getVariable(9,k)*88*Math.pow(10,-4)*getVariable(8,k)
Aug 30, 2024 8:57:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9137873757743358; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*29*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*54*Math.pow(10,+1)+u9(k)*89*Math.pow(10,-4)*u8(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*29*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*54*Math.pow(10,+1)+getVariable(9,k)*89*Math.pow(10,-4)*getVariable(8,k)
Aug 30, 2024 8:57:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9137755284321933; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*29*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*54*Math.pow(10,+1)+u9(k)*94*Math.pow(10,-4)*u8(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*29*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*54*Math.pow(10,+1)+getVariable(9,k)*94*Math.pow(10,-4)*getVariable(8,k)
Aug 30, 2024 8:57:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.913750320544984; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*29*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*54*Math.pow(10,+1)+u9(k)*91*Math.pow(10,-4)*u8(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*29*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*54*Math.pow(10,+1)+getVariable(9,k)*91*Math.pow(10,-4)*getVariable(8,k)
Aug 30, 2024 8:58:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9137479510569895; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*29*Math.pow(10,-6)*u7(k)*u8(k)*u8(k)*54*Math.pow(10,+1)+u9(k)*92*Math.pow(10,-4)*u8(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*29*Math.pow(10,-6)*getVariable(7,k)*getVariable(8,k)*getVariable(8,k)*54*Math.pow(10,+1)+getVariable(9,k)*92*Math.pow(10,-4)*getVariable(8,k)
Aug 30, 2024 8:59:40 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 3.9137479510569895 -->> Avg.: 3.922313144521342 -->> Std. Dev.: 0.005159963961790715
Aug 30, 2024 9:01:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.913747951056989; Expression=26*Math.pow(10,-2)*u6(k)+u8(k)*u7(k)*u8(k)*29*Math.pow(10,-6)*u8(k)*54*Math.pow(10,+1)+u9(k)*92*Math.pow(10,-4)*u8(k); Java Expression: 26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*getVariable(7,k)*getVariable(8,k)*29*Math.pow(10,-6)*getVariable(8,k)*54*Math.pow(10,+1)+getVariable(9,k)*92*Math.pow(10,-4)*getVariable(8,k)
Aug 30, 2024 9:03:11 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 3.913747951056989 -->> Avg.: 3.9195500771192084 -->> Std. Dev.: 0.005149716768952938
Aug 30, 2024 9:06:38 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 3.913747951056989 -->> Avg.: 3.9171753087542505 -->> Std. Dev.: 0.004422250769440595

Execution time: 8753.215 seconds.



@@;26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*getVariable(7,k)*getVariable(8,k)*29*Math.pow(10,-6)*getVariable(8,k)*54*Math.pow(10,+1)+getVariable(9,k)*92*Math.pow(10,-4)*getVariable(8,k)




 Execution report
==================

#Run;Obj.;Model;Time
0;4.861004517714285;getVariable(7,k)-getVariable(5,k)*63*Math.pow(10,-4)*getVariable(7,k)+getVariable(6,k)-getVariable(6,k)-99*Math.pow(10,-2)*getVariable(3,k)-97*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)-97*Math.pow(10,-4)*getVariable(2,k);1415.52
1;4.959373187073189;40*Math.pow(10,-2)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-83*Math.pow(10,-5)*getVariable(2,k)*getVariable(7,k)*96*Math.pow(10,-4)*getVariable(7,k);1617.554
2;5.42914253230246;44*Math.pow(10,-9)+12*Math.pow(10,-1)*getVariable(8,k)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*97*Math.pow(10,-4)*getVariable(4,k);1515.516
3;4.935499012427506;getVariable(7,k)-getVariable(3,k)*8*Math.pow(10,-1)-getVariable(5,k)-94*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*36*Math.pow(10,-3)*getVariable(8,k)*getVariable(3,k);1623.49
4;4.123450871634556;1*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+49*Math.pow(10,-2)*getVariable(7,k)*85*Math.pow(10,-2)-getVariable(2,k)*99*Math.pow(10,-3)+getVariable(8,k);1693.388
5;4.631413427353211;76*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-16*Math.pow(10,-2)*getVariable(1,k)+13*Math.pow(10,-1)*getVariable(8,k)*getVariable(8,k);1615.912
6;4.488363762262638;67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-getVariable(1,k)*getVariable(1,k)*6*Math.pow(10,-4)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k);1581.286
7;4.997950139532744;getVariable(6,k)-getVariable(1,k)*38*Math.pow(10,-2)-getVariable(3,k)-getVariable(6,k)+getVariable(7,k)-97*Math.pow(10,-1)+getVariable(8,k)+getVariable(3,k)*99*Math.pow(10,-5)*getVariable(2,k);1750.767
8;5.272974046471985;getVariable(7,k)-getVariable(3,k)-61*Math.pow(10,+2)*65*Math.pow(10,-6)*getVariable(1,k);1448.175
9;3.913747951056989;26*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*getVariable(7,k)*getVariable(8,k)*29*Math.pow(10,-6)*getVariable(8,k)*54*Math.pow(10,+1)+getVariable(9,k)*92*Math.pow(10,-4)*getVariable(8,k);8753.215
