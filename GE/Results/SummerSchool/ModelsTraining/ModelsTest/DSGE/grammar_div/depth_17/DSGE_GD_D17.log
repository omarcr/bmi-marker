{MutationProb=0.05, Executions=10, ChangeProbabilityDynamic=0.25, TrainingPath=/home/jmmc/Projects/PMT_3/Data/train_bmi_marker.csv, MutationTypeDynamic=All genes, GrammaticalEvolutionType=2, Objectives=0, ClassPathSeparator=:, TestPath=/Users/hidalgo/GitHub/bmi-marker/linear-exp/test_bmi_marker.csv, NumGenerations=1000, NumIndividuals=1024, RealDataCopied=0, ErrorThreshold=0.0, TypeOfDepthForDynamicSGE=0, TournamentSize=5, ModelWidth=0, BnfPathFile=/home/jmmc/Projects/PMT_3/exp_3_sg/grammar_sg.bnf, LoggerLevel=INFO, LoggerBasePath=/home/jmmc/Projects/PMT_3/work, ViewResults=false, CrossoverTypeDynamic=Uniform, AlgorithmType=1, LogPopulation=0, CrossoverProb=0.9, MaxTreeDepth=17, WorkDir=/home/jmmc/Projects/PMT_3/work, NormalizeData=false}
Tree: true
Depth: 17
Aug 30, 2024 11:34:39 PM data.NormalizedDataTable <init>
INFO: Reading data file ...

Detecting file format ...

Aug 30, 2024 11:34:39 PM data.NormalizedDataTable <init>
INFO: ... done.
Uniform: 0.25
jeco.core.algorithm.ga.StaticSimpleGeneticAlgorithm@74aef940
algorithm.DynamicSGE@7a6919a5

Run #0
========
Aug 30, 2024 11:34:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=30968.32774710767; Expression=31*Math.pow(10,+3)+u8(k); Java Expression: 31*Math.pow(10,+3)+getVariable(8,k)
Aug 30, 2024 11:34:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=32.22094356592178; Expression=u2(k)/u1(k); Java Expression: getVariable(2,k)/getVariable(1,k)
Aug 30, 2024 11:34:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=31.711499299686725; Expression=u6(k)/u4(k); Java Expression: getVariable(6,k)/getVariable(4,k)
Aug 30, 2024 11:34:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=22.340465113605063; Expression=46*Math.pow(10,+1)/u4(k); Java Expression: 46*Math.pow(10,+1)/getVariable(4,k)
Aug 30, 2024 11:34:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=15.55622945041116; Expression=u7(k)-u1(k); Java Expression: getVariable(7,k)-getVariable(1,k)
Aug 30, 2024 11:34:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.731668056345766; Expression=u4(k)+u8(k); Java Expression: getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 11:34:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.907174206296354; Expression=u5(k)-u8(k); Java Expression: getVariable(5,k)-getVariable(8,k)
Aug 30, 2024 11:34:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 11:34:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.780883602472543; Expression=31*Math.pow(10,-2)*u7(k); Java Expression: 31*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 11:34:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.561808567769754; Expression=u4(k)*u6(k)/u2(k)*u8(k); Java Expression: getVariable(4,k)*getVariable(6,k)/getVariable(2,k)*getVariable(8,k)
Aug 30, 2024 11:34:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131407434512216; Expression=u7(k)-u3(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 30, 2024 11:34:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837859; Expression=u7(k)-u4(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)
Aug 30, 2024 11:34:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.058143099562467; Expression=u7(k)-u4(k)-u5(k)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(8,k)
Aug 30, 2024 11:35:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.018752166368448; Expression=88*Math.pow(10,-5)+u7(k)-u4(k)-30*Math.pow(10,-2)-u5(k); Java Expression: 88*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)-30*Math.pow(10,-2)-getVariable(5,k)
Aug 30, 2024 11:35:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9743851867994; Expression=88*Math.pow(10,-5)+u7(k)-u4(k)-60*Math.pow(10,-2)-u5(k); Java Expression: 88*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)-60*Math.pow(10,-2)-getVariable(5,k)
Aug 30, 2024 11:35:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.954874488074842; Expression=98*Math.pow(10,-5)+u7(k)-u4(k)-78*Math.pow(10,-2)-u5(k); Java Expression: 98*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)-78*Math.pow(10,-2)-getVariable(5,k)
Aug 30, 2024 11:35:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.946327848390953; Expression=62*Math.pow(10,-5)+u7(k)-u4(k)-88*Math.pow(10,-2)-u5(k); Java Expression: 62*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)-88*Math.pow(10,-2)-getVariable(5,k)
Aug 30, 2024 11:35:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.938915614216361; Expression=98*Math.pow(10,-5)+u7(k)-u4(k)-99*Math.pow(10,-2)-u5(k); Java Expression: 98*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)-99*Math.pow(10,-2)-getVariable(5,k)
Aug 30, 2024 11:35:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.93886310710586; Expression=8*Math.pow(10,-5)+u7(k)-u4(k)-99*Math.pow(10,-2)-u5(k); Java Expression: 8*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)-99*Math.pow(10,-2)-getVariable(5,k)
Aug 30, 2024 11:35:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.938861941825042; Expression=60*Math.pow(10,-6)+u7(k)-u4(k)-99*Math.pow(10,-2)-u5(k); Java Expression: 60*Math.pow(10,-6)+getVariable(7,k)-getVariable(4,k)-99*Math.pow(10,-2)-getVariable(5,k)
Aug 30, 2024 11:35:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.938858449880421; Expression=60*Math.pow(10,-9)+u7(k)-u4(k)-99*Math.pow(10,-2)-u5(k); Java Expression: 60*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)-99*Math.pow(10,-2)-getVariable(5,k)
Aug 30, 2024 11:35:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9388584468513015; Expression=8*Math.pow(10,-9)+u7(k)-u4(k)-99*Math.pow(10,-2)-u5(k); Java Expression: 8*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)-99*Math.pow(10,-2)-getVariable(5,k)
Aug 30, 2024 11:35:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.930332180579136; Expression=80*Math.pow(10,-9)+u7(k)-u4(k)-12*Math.pow(10,-1)-u5(k); Java Expression: 80*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)-12*Math.pow(10,-1)-getVariable(5,k)
Aug 30, 2024 11:35:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928882637025394; Expression=4*Math.pow(10,-1)+u7(k)-u4(k)-17*Math.pow(10,-1)-u5(k); Java Expression: 4*Math.pow(10,-1)+getVariable(7,k)-getVariable(4,k)-17*Math.pow(10,-1)-getVariable(5,k)
Aug 30, 2024 11:35:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.925644210819229; Expression=u7(k)-u4(k)-u5(k)-88*Math.pow(10,-2)/u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-88*Math.pow(10,-2)/getVariable(8,k)
Aug 30, 2024 11:35:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.913178653634802; Expression=u7(k)-u4(k)-u5(k)-98*Math.pow(10,-2)/u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-98*Math.pow(10,-2)/getVariable(8,k)
Aug 30, 2024 11:35:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8456283996749585; Expression=98*Math.pow(10,-5)+u7(k)-u4(k)-99*Math.pow(10,-9)-29*Math.pow(10,-2)/98*Math.pow(10,-2)-u5(k)-64*Math.pow(10,-4)*3*Math.pow(10,+2)/u8(k); Java Expression: 98*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)-99*Math.pow(10,-9)-29*Math.pow(10,-2)/98*Math.pow(10,-2)-getVariable(5,k)-64*Math.pow(10,-4)*3*Math.pow(10,+2)/getVariable(8,k)
Aug 30, 2024 11:35:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.845628163421882; Expression=98*Math.pow(10,-5)+u7(k)-u4(k)-99*Math.pow(10,-9)-12*Math.pow(10,-2)/98*Math.pow(10,-2)-u5(k)-64*Math.pow(10,-4)*3*Math.pow(10,+2)/u8(k); Java Expression: 98*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)-99*Math.pow(10,-9)-12*Math.pow(10,-2)/98*Math.pow(10,-2)-getVariable(5,k)-64*Math.pow(10,-4)*3*Math.pow(10,+2)/getVariable(8,k)
Aug 30, 2024 11:35:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8456279939900755; Expression=98*Math.pow(10,-5)+u7(k)-u4(k)+99*Math.pow(10,-9)-29*Math.pow(10,-8)/98*Math.pow(10,-8)-u5(k)-64*Math.pow(10,-6)*3*Math.pow(10,+4)/u8(k); Java Expression: 98*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+99*Math.pow(10,-9)-29*Math.pow(10,-8)/98*Math.pow(10,-8)-getVariable(5,k)-64*Math.pow(10,-6)*3*Math.pow(10,+4)/getVariable(8,k)
Aug 30, 2024 11:35:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.809063882215368; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)
Aug 30, 2024 11:35:57 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.809063882215368 -->> Avg.: 1.5644501730223825E9 -->> Std. Dev.: 6.916319666886622E9
Aug 30, 2024 11:36:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.667885998785431; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-98*Math.pow(10,-2)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-98*Math.pow(10,-2)+getVariable(8,k)
Aug 30, 2024 11:36:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.66062851920065; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-88*Math.pow(10,-2)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-88*Math.pow(10,-2)+getVariable(8,k)
Aug 30, 2024 11:36:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.657540537314641; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-21*Math.pow(10,-2)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-21*Math.pow(10,-2)+getVariable(8,k)
Aug 30, 2024 11:36:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.650150250837474; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-41*Math.pow(10,-2)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-41*Math.pow(10,-2)+getVariable(8,k)
Aug 30, 2024 11:36:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.649651564113569; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-44*Math.pow(10,-2)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-44*Math.pow(10,-2)+getVariable(8,k)
Aug 30, 2024 11:36:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6491320283380695; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-50*Math.pow(10,-2)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-50*Math.pow(10,-2)+getVariable(8,k)
Aug 30, 2024 11:36:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.649107391427345; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-51*Math.pow(10,-2)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-51*Math.pow(10,-2)+getVariable(8,k)
Aug 30, 2024 11:36:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.64910045637029; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-52*Math.pow(10,-2)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-52*Math.pow(10,-2)+getVariable(8,k)
Aug 30, 2024 11:36:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.644664675458404; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)/90*Math.pow(10,+2)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)/90*Math.pow(10,+2)+getVariable(8,k)
Aug 30, 2024 11:37:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6293781275321315; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)/80*Math.pow(10,+2)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)/80*Math.pow(10,+2)+getVariable(8,k)
Aug 30, 2024 11:37:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.629025270888201; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)/78*Math.pow(10,+2)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)/78*Math.pow(10,+2)+getVariable(8,k)
Aug 30, 2024 11:37:48 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.629025270888201 -->> Avg.: 128125.31889806941 -->> Std. Dev.: 622577.562729792
Aug 30, 2024 11:37:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.629025120063813; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)/78*Math.pow(10,+2)+12*Math.pow(10,+3)/2*Math.pow(10,-9)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)/78*Math.pow(10,+2)+12*Math.pow(10,+3)/2*Math.pow(10,-9)+getVariable(8,k)
Aug 30, 2024 11:38:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.62320388458145; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-52*Math.pow(10,-2)+u8(k)-u9(k)*u1(k)/60*Math.pow(10,-2)+u6(k)/u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-52*Math.pow(10,-2)+getVariable(8,k)-getVariable(9,k)*getVariable(1,k)/60*Math.pow(10,-2)+getVariable(6,k)/getVariable(2,k)
Aug 30, 2024 11:38:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5837882643587395; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-52*Math.pow(10,-2)+u8(k)-u6(k)*u1(k)/60*Math.pow(10,-2)+u6(k)/u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-52*Math.pow(10,-2)+getVariable(8,k)-getVariable(6,k)*getVariable(1,k)/60*Math.pow(10,-2)+getVariable(6,k)/getVariable(2,k)
Aug 30, 2024 11:38:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4941650080895394; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-52*Math.pow(10,-2)+u8(k)-u6(k)*u1(k)/60*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-52*Math.pow(10,-2)+getVariable(8,k)-getVariable(6,k)*getVariable(1,k)/60*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:38:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.489086048752792; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-52*Math.pow(10,-2)+u8(k)-u6(k)*u1(k)/51*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-52*Math.pow(10,-2)+getVariable(8,k)-getVariable(6,k)*getVariable(1,k)/51*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:38:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.464481871335003; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-64*Math.pow(10,-5)+u8(k)-u6(k)*u1(k)/42*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-64*Math.pow(10,-5)+getVariable(8,k)-getVariable(6,k)*getVariable(1,k)/42*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:39:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.464465632170762; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-97*Math.pow(10,-9)+u8(k)-u6(k)*u1(k)/42*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-97*Math.pow(10,-9)+getVariable(8,k)-getVariable(6,k)*getVariable(1,k)/42*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:39:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.464465631335233; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-64*Math.pow(10,-9)+u8(k)-u6(k)*u1(k)/42*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-64*Math.pow(10,-9)+getVariable(8,k)-getVariable(6,k)*getVariable(1,k)/42*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:39:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.441790621321127; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-64*Math.pow(10,-5)+u8(k)-u1(k)*u1(k)/42*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-64*Math.pow(10,-5)+getVariable(8,k)-getVariable(1,k)*getVariable(1,k)/42*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:39:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4211959288155755; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-64*Math.pow(10,-5)+u8(k)-u7(k)*u1(k)/42*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-64*Math.pow(10,-5)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/42*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:39:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.421162722681316; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-42*Math.pow(10,-9)+u8(k)-u7(k)*u1(k)/42*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-42*Math.pow(10,-9)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/42*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:39:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.42063845259733; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-97*Math.pow(10,-5)+u8(k)-u7(k)*u1(k)/41*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-97*Math.pow(10,-5)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/41*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:39:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.420581640103365; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)-4*Math.pow(10,-5)+u8(k)-u7(k)*u1(k)/41*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-4*Math.pow(10,-5)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/41*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:39:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.420520120577776; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)+97*Math.pow(10,-5)+u8(k)-u7(k)*u1(k)/41*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+97*Math.pow(10,-5)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/41*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:39:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.420294549581554; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)+47*Math.pow(10,-4)+u8(k)-u7(k)*u1(k)/41*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+47*Math.pow(10,-4)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/41*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:39:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.415661272392277; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)+42*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/42*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+42*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/42*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:40:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.415528141868598; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)+97*Math.pow(10,-3)+u8(k)-u7(k)*u1(k)/41*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+97*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/41*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:40:05 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.415528141868598 -->> Avg.: 98.66965770531654 -->> Std. Dev.: 317.3191661492475
Aug 30, 2024 11:40:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.412280832409675; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)+47*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/41*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+47*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/41*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:40:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.409098613765033; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)+47*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)/41*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+47*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/41*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:40:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.391606931125493; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)+47*Math.pow(10,-2)+u8(k)-u1(k)*u7(k)/34*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+47*Math.pow(10,-2)+getVariable(8,k)-getVariable(1,k)*getVariable(7,k)/34*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:40:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.38388391986277; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)+73*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/34*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+73*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/34*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:41:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.383809486114086; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)+75*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/34*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+75*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/34*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:41:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.375477760284556; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)+97*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/32*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+97*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/32*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:41:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.370589298538159; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)+88*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/30*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+88*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/30*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:41:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.368622317347986; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u6(k)+47*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/22*Math.pow(10,-2)+u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(6,k)+47*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/22*Math.pow(10,-2)+getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:42:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.367453415390756; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)+42*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/22*Math.pow(10,-2)+u6(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+42*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/22*Math.pow(10,-2)+getVariable(6,k)/getVariable(4,k)
Aug 30, 2024 11:42:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.357465056560934; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)+42*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/22*Math.pow(10,-2)+u6(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+42*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/22*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)
Aug 30, 2024 11:42:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.356808883427965; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)+86*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/22*Math.pow(10,-2)+u6(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+86*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/22*Math.pow(10,-2)+getVariable(6,k)/getVariable(4,k)
Aug 30, 2024 11:42:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.353070595515912; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)+47*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/22*Math.pow(10,-2)+u6(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+47*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/22*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)
Aug 30, 2024 11:42:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.338844112238397; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)+70*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/22*Math.pow(10,-2)+u6(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+70*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/22*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)
Aug 30, 2024 11:42:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.334762832931995; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)+97*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/22*Math.pow(10,-2)+u6(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+97*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/22*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)
Aug 30, 2024 11:43:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.334487933750247; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u9(k)+92*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/22*Math.pow(10,-2)+u6(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+92*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/22*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)
Aug 30, 2024 11:43:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.330689498457699; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u5(k)+70*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/22*Math.pow(10,-2)+u6(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)+70*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/22*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)
Aug 30, 2024 11:43:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.324367507759293; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u5(k)+97*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/22*Math.pow(10,-2)+u6(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)+97*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/22*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)
Aug 30, 2024 11:43:19 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.324367507759293 -->> Avg.: 12.09616392653862 -->> Std. Dev.: 13.622629664878591
Aug 30, 2024 11:43:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.324366542047455; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u5(k)+95*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/22*Math.pow(10,-2)+u6(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)+95*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/22*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)
Aug 30, 2024 11:43:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.313000638531816; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u5(k)+97*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/20*Math.pow(10,-2)+u6(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)+97*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/20*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)
Aug 30, 2024 11:43:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.307828801937003; Expression=u7(k)-u4(k)-u5(k)-u4(k)/u9(k)+86*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/15*Math.pow(10,-2)+u6(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(4,k)/getVariable(9,k)+86*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/15*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)
Aug 30, 2024 11:44:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.293450462348751; Expression=u7(k)-u4(k)-u5(k)+u1(k)*u9(k)/86*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/15*Math.pow(10,-2)+u6(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(1,k)*getVariable(9,k)/86*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/15*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)
Aug 30, 2024 11:44:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.288921101975433; Expression=u7(k)-u4(k)-u5(k)-u4(k)/u9(k)+97*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/16*Math.pow(10,-2)+u6(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(4,k)/getVariable(9,k)+97*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/16*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)
Aug 30, 2024 11:44:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.288344023850358; Expression=u7(k)-u4(k)-u5(k)-u4(k)/u9(k)+99*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/16*Math.pow(10,-2)+u6(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(4,k)/getVariable(9,k)+99*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/16*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)
Aug 30, 2024 11:44:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.276698496256041; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u9(k)+97*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/16*Math.pow(10,-2)+u6(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(9,k)+97*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/16*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)
Aug 30, 2024 11:45:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.275806997569931; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u9(k)+99*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/16*Math.pow(10,-2)+u6(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(9,k)+99*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/16*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)
Aug 30, 2024 11:46:04 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.275806997569931 -->> Avg.: 5.749968488574269 -->> Std. Dev.: 1.1271004158028384
Aug 30, 2024 11:47:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.267667155826387; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u9(k)+99*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/16*Math.pow(10,-2)+u6(k)/u3(k)+u9(k)/u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(9,k)+99*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/16*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)+getVariable(9,k)/getVariable(2,k)
Aug 30, 2024 11:47:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.261122480723593; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u9(k)+99*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/16*Math.pow(10,-2)+u6(k)/u3(k)+u9(k)/u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(9,k)+99*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/16*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)+getVariable(9,k)/getVariable(7,k)
Aug 30, 2024 11:48:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.23897044944663; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u9(k)+99*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/16*Math.pow(10,-2)+u6(k)/u3(k)/u7(k)*u6(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(9,k)+99*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/16*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)/getVariable(7,k)*getVariable(6,k)
Aug 30, 2024 11:48:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.235293344439093; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u9(k)+99*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/16*Math.pow(10,-2)+u6(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(9,k)+99*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/16*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:48:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.231688880192076; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u9(k)+93*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/16*Math.pow(10,-2)+u6(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(9,k)+93*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/16*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:49:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.224066338506201; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u9(k)+68*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/16*Math.pow(10,-2)+u6(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(9,k)+68*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/16*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:49:08 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.224066338506201 -->> Avg.: 5.43209058575861 -->> Std. Dev.: 0.17040564707420314
Aug 30, 2024 11:49:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.214639226584979; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u9(k)+86*Math.pow(10,-2)+u8(k)-u7(k)*u1(k)/15*Math.pow(10,-2)+u6(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(9,k)+86*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)/15*Math.pow(10,-2)+getVariable(6,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:49:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.128601118954618; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u9(k)+76*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)/15*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(9,k)+76*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/15*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:50:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.121404770703069; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u9(k)+36*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)/15*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(9,k)+36*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/15*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:50:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1206479995664855; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u9(k)+53*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)/15*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(9,k)+53*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/15*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:50:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1204932591669845; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u9(k)+42*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)/15*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(9,k)+42*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/15*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:50:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.118701104302608; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+76*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)/15*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+76*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/15*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:50:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.112581936668407; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+55*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)/15*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+55*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/15*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:50:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.112448678843712; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+53*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)/15*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+53*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/15*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:51:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.108667367385979; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+76*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)/14*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+76*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/14*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:52:02 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.108667367385979 -->> Avg.: 5.322856971715857 -->> Std. Dev.: 0.13440476441585497
Aug 30, 2024 11:52:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.102816662982388; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+91*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)/14*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+91*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/14*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:52:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.102000202154876; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+95*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)/14*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+95*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/14*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:53:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.101593592973832; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+98*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)/14*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+98*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/14*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:53:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.10149725370563; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+99*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)/14*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+99*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/14*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 30, 2024 11:55:14 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.10149725370563 -->> Avg.: 5.2401318327104445 -->> Std. Dev.: 0.1063580966795478
Aug 30, 2024 11:59:01 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 5.10149725370563 -->> Avg.: 5.18430875309643 -->> Std. Dev.: 0.08722163327442949
Aug 30, 2024 11:59:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.101111577916142; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+99*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)/14*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k)+u8(k)/u6(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+99*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/14*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)+getVariable(8,k)/getVariable(6,k)
Aug 30, 2024 11:59:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.099533703005207; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+99*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)/14*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k)+u8(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+99*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/14*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)+getVariable(8,k)/getVariable(3,k)
Aug 31, 2024 12:00:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.096893772109029; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+99*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)/14*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k)+u9(k)/u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+99*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/14*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)+getVariable(9,k)/getVariable(7,k)
Aug 31, 2024 12:00:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.09669794383403; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+99*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)/14*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k)+u5(k)/u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+99*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/14*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)+getVariable(5,k)/getVariable(2,k)
Aug 31, 2024 12:00:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0734755972172705; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+99*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)/14*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k)+u9(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+99*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/14*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 12:00:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.073314412991378; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+78*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)/14*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k)+u9(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+78*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/14*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 12:00:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.073303595382781; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+76*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)/14*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k)+u9(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+76*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/14*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 12:01:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.073271942585585; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+69*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)/14*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k)+u9(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+69*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/14*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 12:01:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.073241915524573; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+41*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)/14*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k)+u9(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+41*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/14*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 12:01:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.051477349036092; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+78*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)/14*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k)+u1(k)/u7(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+78*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/14*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)+getVariable(1,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 12:02:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.050102089527943; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+25*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)/14*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k)+u1(k)/u7(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+25*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/14*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)+getVariable(1,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 12:02:04 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 5.050102089527943 -->> Avg.: 5.142564907402017 -->> Std. Dev.: 0.07047066999561129
Aug 31, 2024 12:02:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.042341979397864; Expression=u7(k)-u4(k)-u5(k)-u3(k)/u5(k)+78*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)/14*Math.pow(10,-2)+u2(k)/u3(k)*u6(k)/u1(k)+u5(k)/u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+78*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/14*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)+getVariable(5,k)/getVariable(3,k)*getVariable(8,k)

Execution time: 1654.484 seconds.



@@;getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+78*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)/14*Math.pow(10,-2)+getVariable(2,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)+getVariable(5,k)/getVariable(3,k)*getVariable(8,k)



Run #1
========
Aug 31, 2024 12:02:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=72.00266865378119; Expression=32*Math.pow(10,-5)/u2(k)+45*Math.pow(10,-3)*u3(k)/43*Math.pow(10,+5)/36*Math.pow(10,+5)/u6(k)/25*Math.pow(10,-8)+u7(k); Java Expression: 32*Math.pow(10,-5)/getVariable(2,k)+45*Math.pow(10,-3)*getVariable(3,k)/43*Math.pow(10,+5)/36*Math.pow(10,+5)/getVariable(6,k)/25*Math.pow(10,-8)+getVariable(7,k)
Aug 31, 2024 12:02:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=35.37307298502272; Expression=u7(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)
Aug 31, 2024 12:02:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=34.55006652344093; Expression=u5(k)+u5(k); Java Expression: getVariable(5,k)+getVariable(5,k)
Aug 31, 2024 12:02:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=31.51820876214874; Expression=12*Math.pow(10,-2)+u7(k)/u3(k); Java Expression: 12*Math.pow(10,-2)+getVariable(7,k)/getVariable(3,k)
Aug 31, 2024 12:02:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=29.459068185715708; Expression=u2(k)/u5(k); Java Expression: getVariable(2,k)/getVariable(5,k)
Aug 31, 2024 12:02:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=14.777350461049624; Expression=29*Math.pow(10,-4)/u5(k)+u9(k); Java Expression: 29*Math.pow(10,-4)/getVariable(5,k)+getVariable(9,k)
Aug 31, 2024 12:02:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=12.8690551574372; Expression=u3(k)+u8(k); Java Expression: getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:02:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330465576558694; Expression=25*Math.pow(10,-5)+u5(k); Java Expression: 25*Math.pow(10,-5)+getVariable(5,k)
Aug 31, 2024 12:02:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.304325173860098; Expression=u7(k)/u1(k)+u5(k); Java Expression: getVariable(7,k)/getVariable(1,k)+getVariable(5,k)
Aug 31, 2024 12:02:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.035972877440148; Expression=42*Math.pow(10,-6)-97*Math.pow(10,-4)+u5(k)+u8(k)+u5(k)-u5(k); Java Expression: 42*Math.pow(10,-6)-97*Math.pow(10,-4)+getVariable(5,k)+getVariable(8,k)+getVariable(5,k)-getVariable(5,k)
Aug 31, 2024 12:02:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.400004039008523; Expression=98*Math.pow(10,-4)+85*Math.pow(10,-5)/u4(k)/68*Math.pow(10,+6)*u6(k); Java Expression: 98*Math.pow(10,-4)+85*Math.pow(10,-5)/getVariable(4,k)/68*Math.pow(10,+6)*getVariable(6,k)
Aug 31, 2024 12:02:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.121905497370335; Expression=53*Math.pow(10,-3)-45*Math.pow(10,-5)+u7(k)-u3(k)-u5(k); Java Expression: 53*Math.pow(10,-3)-45*Math.pow(10,-5)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 31, 2024 12:02:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.114686505961981; Expression=95*Math.pow(10,-3)-81*Math.pow(10,-5)+u7(k)-u3(k)-u5(k); Java Expression: 95*Math.pow(10,-3)-81*Math.pow(10,-5)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 31, 2024 12:02:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.036703269569908; Expression=5*Math.pow(10,+1)*u7(k)/u2(k); Java Expression: 5*Math.pow(10,+1)*getVariable(7,k)/getVariable(2,k)
Aug 31, 2024 12:02:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.028422434899145; Expression=95*Math.pow(10,-2)+81*Math.pow(10,-6)+u7(k)-u3(k)-u5(k); Java Expression: 95*Math.pow(10,-2)+81*Math.pow(10,-6)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 31, 2024 12:02:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.028183009554419; Expression=95*Math.pow(10,-2)+81*Math.pow(10,-4)+u7(k)-u3(k)-u5(k); Java Expression: 95*Math.pow(10,-2)+81*Math.pow(10,-4)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 31, 2024 12:02:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.027334314177806; Expression=99*Math.pow(10,-2)+75*Math.pow(10,-6)+u7(k)-u3(k)-u5(k); Java Expression: 99*Math.pow(10,-2)+75*Math.pow(10,-6)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 31, 2024 12:02:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.026495420739282; Expression=95*Math.pow(10,-2)+81*Math.pow(10,-3)+u7(k)-u3(k)-u5(k); Java Expression: 95*Math.pow(10,-2)+81*Math.pow(10,-3)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 31, 2024 12:02:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.026009764218761; Expression=99*Math.pow(10,-2)+75*Math.pow(10,-3)+u7(k)-u3(k)-u5(k); Java Expression: 99*Math.pow(10,-2)+75*Math.pow(10,-3)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 31, 2024 12:02:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.025805618912692; Expression=99*Math.pow(10,-2)+96*Math.pow(10,-3)+u7(k)-u3(k)-u5(k); Java Expression: 99*Math.pow(10,-2)+96*Math.pow(10,-3)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 31, 2024 12:02:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0257977230198545; Expression=99*Math.pow(10,-2)+97*Math.pow(10,-3)+u7(k)-u3(k)-u5(k); Java Expression: 99*Math.pow(10,-2)+97*Math.pow(10,-3)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 31, 2024 12:02:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.921945310587088; Expression=u7(k)-u3(k)/u4(k)-u4(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(3,k)/getVariable(4,k)-getVariable(4,k)-getVariable(5,k)
Aug 31, 2024 12:02:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.818769412064564; Expression=u7(k)-u1(k)/u4(k)-u4(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(1,k)/getVariable(4,k)-getVariable(4,k)-getVariable(5,k)
Aug 31, 2024 12:03:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.809063882215368; Expression=u7(k)-u1(k)/u9(k)-u4(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)-getVariable(5,k)
Aug 31, 2024 12:03:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.723401583074114; Expression=98*Math.pow(10,-4)+85*Math.pow(10,-5)/u3(k)/68*Math.pow(10,+6)*u7(k); Java Expression: 98*Math.pow(10,-4)+85*Math.pow(10,-5)/getVariable(3,k)/68*Math.pow(10,+6)*getVariable(7,k)
Aug 31, 2024 12:03:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.723095128644708; Expression=98*Math.pow(10,-8)+85*Math.pow(10,-5)/u3(k)/68*Math.pow(10,+6)*u7(k); Java Expression: 98*Math.pow(10,-8)+85*Math.pow(10,-5)/getVariable(3,k)/68*Math.pow(10,+6)*getVariable(7,k)
Aug 31, 2024 12:03:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.723095099138614; Expression=1*Math.pow(10,-8)+85*Math.pow(10,-5)/u3(k)/68*Math.pow(10,+6)*u7(k); Java Expression: 1*Math.pow(10,-8)+85*Math.pow(10,-5)/getVariable(3,k)/68*Math.pow(10,+6)*getVariable(7,k)
Aug 31, 2024 12:03:33 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.723095099138614 -->> Avg.: 2.433624711931186E9 -->> Std. Dev.: 9.757598965408249E9
Aug 31, 2024 12:03:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.723095098864857; Expression=1*Math.pow(10,-9)+85*Math.pow(10,-5)/u3(k)/68*Math.pow(10,+6)*u7(k); Java Expression: 1*Math.pow(10,-9)+85*Math.pow(10,-5)/getVariable(3,k)/68*Math.pow(10,+6)*getVariable(7,k)
Aug 31, 2024 12:04:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.722957169828035; Expression=1*Math.pow(10,-9)+85*Math.pow(10,-5)/u3(k)/68*Math.pow(10,+6)*u7(k)-81*Math.pow(10,-5)/u8(k); Java Expression: 1*Math.pow(10,-9)+85*Math.pow(10,-5)/getVariable(3,k)/68*Math.pow(10,+6)*getVariable(7,k)-81*Math.pow(10,-5)/getVariable(8,k)
Aug 31, 2024 12:04:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.698473030515184; Expression=1*Math.pow(10,-9)+85*Math.pow(10,-5)/u3(k)/68*Math.pow(10,+6)*u7(k)+u8(k); Java Expression: 1*Math.pow(10,-9)+85*Math.pow(10,-5)/getVariable(3,k)/68*Math.pow(10,+6)*getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:04:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6683319335474955; Expression=1*Math.pow(10,-9)+85*Math.pow(10,-5)/u3(k)/68*Math.pow(10,+6)*u7(k)+81*Math.pow(10,-2)*u8(k); Java Expression: 1*Math.pow(10,-9)+85*Math.pow(10,-5)/getVariable(3,k)/68*Math.pow(10,+6)*getVariable(7,k)+81*Math.pow(10,-2)*getVariable(8,k)
Aug 31, 2024 12:04:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.618959509098825; Expression=1*Math.pow(10,-9)+85*Math.pow(10,-5)/u3(k)/68*Math.pow(10,+6)*u7(k)-81*Math.pow(10,-2)/u8(k); Java Expression: 1*Math.pow(10,-9)+85*Math.pow(10,-5)/getVariable(3,k)/68*Math.pow(10,+6)*getVariable(7,k)-81*Math.pow(10,-2)/getVariable(8,k)
Aug 31, 2024 12:04:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.59851437421471; Expression=98*Math.pow(10,-9)+85*Math.pow(10,-5)/u3(k)/68*Math.pow(10,+6)*u7(k)-11*Math.pow(10,-1)/u8(k); Java Expression: 98*Math.pow(10,-9)+85*Math.pow(10,-5)/getVariable(3,k)/68*Math.pow(10,+6)*getVariable(7,k)-11*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 12:04:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.511538517953792; Expression=1*Math.pow(10,-9)+85*Math.pow(10,-5)/u3(k)/68*Math.pow(10,+6)*u7(k)-81*Math.pow(10,-2)+u8(k); Java Expression: 1*Math.pow(10,-9)+85*Math.pow(10,-5)/getVariable(3,k)/68*Math.pow(10,+6)*getVariable(7,k)-81*Math.pow(10,-2)+getVariable(8,k)
Aug 31, 2024 12:04:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.961360553156613; Expression=1*Math.pow(10,-9)+85*Math.pow(10,-5)/u3(k)/60*Math.pow(10,+6)*u7(k)-81*Math.pow(10,-1)/u8(k); Java Expression: 1*Math.pow(10,-9)+85*Math.pow(10,-5)/getVariable(3,k)/60*Math.pow(10,+6)*getVariable(7,k)-81*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 12:04:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.961357827800765; Expression=1*Math.pow(10,-5)+85*Math.pow(10,-5)/u3(k)/60*Math.pow(10,+6)*u7(k)-81*Math.pow(10,-1)/u8(k); Java Expression: 1*Math.pow(10,-5)+85*Math.pow(10,-5)/getVariable(3,k)/60*Math.pow(10,+6)*getVariable(7,k)-81*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 12:04:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.961088082952799; Expression=1*Math.pow(10,-3)+85*Math.pow(10,-5)/u3(k)/60*Math.pow(10,+6)*u7(k)-81*Math.pow(10,-1)/u8(k); Java Expression: 1*Math.pow(10,-3)+85*Math.pow(10,-5)/getVariable(3,k)/60*Math.pow(10,+6)*getVariable(7,k)-81*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 12:04:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.960000067498926; Expression=5*Math.pow(10,-3)+85*Math.pow(10,-5)/u3(k)/60*Math.pow(10,+6)*u7(k)-81*Math.pow(10,-1)/u8(k); Java Expression: 5*Math.pow(10,-3)+85*Math.pow(10,-5)/getVariable(3,k)/60*Math.pow(10,+6)*getVariable(7,k)-81*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 12:05:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.872470528278792; Expression=1*Math.pow(10,-5)+27*Math.pow(10,-5)/u3(k)/18*Math.pow(10,+6)*u7(k)-81*Math.pow(10,-1)/u8(k); Java Expression: 1*Math.pow(10,-5)+27*Math.pow(10,-5)/getVariable(3,k)/18*Math.pow(10,+6)*getVariable(7,k)-81*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 12:05:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.772662440852147; Expression=1*Math.pow(10,-3)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u7(k)-81*Math.pow(10,-1)/u8(k); Java Expression: 1*Math.pow(10,-3)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(7,k)-81*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 12:05:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.7724585290245205; Expression=1*Math.pow(10,-9)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u7(k)-81*Math.pow(10,-1)/u8(k); Java Expression: 1*Math.pow(10,-9)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(7,k)-81*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 12:05:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.604195404155449; Expression=1*Math.pow(10,-9)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u7(k)-92*Math.pow(10,-1)/u8(k); Java Expression: 1*Math.pow(10,-9)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(7,k)-92*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 12:05:15 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 4.604195404155449 -->> Avg.: 196387.15113140582 -->> Std. Dev.: 970543.8703063787
Aug 31, 2024 12:05:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.587864982033863; Expression=1*Math.pow(10,-9)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u7(k)-92*Math.pow(10,-1)/90*Math.pow(10,+2)/u8(k); Java Expression: 1*Math.pow(10,-9)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(7,k)-92*Math.pow(10,-1)/90*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:05:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.585097413373036; Expression=1*Math.pow(10,-9)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u7(k)-95*Math.pow(10,-1)/u8(k); Java Expression: 1*Math.pow(10,-9)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(7,k)-95*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 12:05:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.584874950108336; Expression=1*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u7(k)-95*Math.pow(10,-1)/u8(k); Java Expression: 1*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(7,k)-95*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 12:05:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.578034689068468; Expression=1*Math.pow(10,-9)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u7(k)-92*Math.pow(10,-1)/93*Math.pow(10,+2)/u8(k); Java Expression: 1*Math.pow(10,-9)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(7,k)-92*Math.pow(10,-1)/93*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:05:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.566341037943556; Expression=1*Math.pow(10,-9)+85*Math.pow(10,-5)/u4(k)/59*Math.pow(10,+6)*u7(k)-92*Math.pow(10,-1)/93*Math.pow(10,+2)/u8(k); Java Expression: 1*Math.pow(10,-9)+85*Math.pow(10,-5)/getVariable(4,k)/59*Math.pow(10,+6)*getVariable(7,k)-92*Math.pow(10,-1)/93*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:06:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.550809931186333; Expression=1*Math.pow(10,-9)+85*Math.pow(10,-5)/u4(k)/59*Math.pow(10,+6)*u7(k)-92*Math.pow(10,-1)/82*Math.pow(10,+2)/u8(k); Java Expression: 1*Math.pow(10,-9)+85*Math.pow(10,-5)/getVariable(4,k)/59*Math.pow(10,+6)*getVariable(7,k)-92*Math.pow(10,-1)/82*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:06:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.550809927197126; Expression=29*Math.pow(10,-9)+85*Math.pow(10,-5)/u4(k)/59*Math.pow(10,+6)*u7(k)-92*Math.pow(10,-1)/82*Math.pow(10,+2)/u8(k); Java Expression: 29*Math.pow(10,-9)+85*Math.pow(10,-5)/getVariable(4,k)/59*Math.pow(10,+6)*getVariable(7,k)-92*Math.pow(10,-1)/82*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:06:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.530834251741183; Expression=1*Math.pow(10,-9)+85*Math.pow(10,-5)/u4(k)/59*Math.pow(10,+6)*u7(k)-92*Math.pow(10,-1)/85*Math.pow(10,+2)/u8(k); Java Expression: 1*Math.pow(10,-9)+85*Math.pow(10,-5)/getVariable(4,k)/59*Math.pow(10,+6)*getVariable(7,k)-92*Math.pow(10,-1)/85*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:06:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.530834251033597; Expression=1*Math.pow(10,-8)+85*Math.pow(10,-5)/u4(k)/59*Math.pow(10,+6)*u7(k)-92*Math.pow(10,-1)/85*Math.pow(10,+2)/u8(k); Java Expression: 1*Math.pow(10,-8)+85*Math.pow(10,-5)/getVariable(4,k)/59*Math.pow(10,+6)*getVariable(7,k)-92*Math.pow(10,-1)/85*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:06:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.530834249303947; Expression=32*Math.pow(10,-9)+85*Math.pow(10,-5)/u4(k)/59*Math.pow(10,+6)*u7(k)-92*Math.pow(10,-1)/85*Math.pow(10,+2)/u8(k); Java Expression: 32*Math.pow(10,-9)+85*Math.pow(10,-5)/getVariable(4,k)/59*Math.pow(10,+6)*getVariable(7,k)-92*Math.pow(10,-1)/85*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:06:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.530834173199531; Expression=1*Math.pow(10,-6)+85*Math.pow(10,-5)/u4(k)/59*Math.pow(10,+6)*u7(k)-92*Math.pow(10,-1)/85*Math.pow(10,+2)/u8(k); Java Expression: 1*Math.pow(10,-6)+85*Math.pow(10,-5)/getVariable(4,k)/59*Math.pow(10,+6)*getVariable(7,k)-92*Math.pow(10,-1)/85*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:06:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.530827334075757; Expression=88*Math.pow(10,-6)+85*Math.pow(10,-5)/u4(k)/59*Math.pow(10,+6)*u7(k)-92*Math.pow(10,-1)/85*Math.pow(10,+2)/u8(k); Java Expression: 88*Math.pow(10,-6)+85*Math.pow(10,-5)/getVariable(4,k)/59*Math.pow(10,+6)*getVariable(7,k)-92*Math.pow(10,-1)/85*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:06:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.476040269285856; Expression=1*Math.pow(10,-9)+27*Math.pow(10,-5)/u4(k)/18*Math.pow(10,+6)*u7(k)-81*Math.pow(10,-1)/63*Math.pow(10,+2)/u8(k); Java Expression: 1*Math.pow(10,-9)+27*Math.pow(10,-5)/getVariable(4,k)/18*Math.pow(10,+6)*getVariable(7,k)-81*Math.pow(10,-1)/63*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:07:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.47604023012683; Expression=1*Math.pow(10,-6)+27*Math.pow(10,-5)/u4(k)/18*Math.pow(10,+6)*u7(k)-81*Math.pow(10,-1)/63*Math.pow(10,+2)/u8(k); Java Expression: 1*Math.pow(10,-6)+27*Math.pow(10,-5)/getVariable(4,k)/18*Math.pow(10,+6)*getVariable(7,k)-81*Math.pow(10,-1)/63*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:07:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.473236616630385; Expression=1*Math.pow(10,-1)+27*Math.pow(10,-5)/u4(k)/18*Math.pow(10,+6)*u7(k)-81*Math.pow(10,-1)/63*Math.pow(10,+2)/u8(k); Java Expression: 1*Math.pow(10,-1)+27*Math.pow(10,-5)/getVariable(4,k)/18*Math.pow(10,+6)*getVariable(7,k)-81*Math.pow(10,-1)/63*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:07:28 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 4.473236616630385 -->> Avg.: 96.15309876462852 -->> Std. Dev.: 353.13283387547824
Aug 31, 2024 12:08:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.434291847850507; Expression=38*Math.pow(10,-1)+27*Math.pow(10,-5)/u4(k)/18*Math.pow(10,+6)*u6(k)-81*Math.pow(10,-1)/63*Math.pow(10,+2)/u8(k); Java Expression: 38*Math.pow(10,-1)+27*Math.pow(10,-5)/getVariable(4,k)/18*Math.pow(10,+6)*getVariable(6,k)-81*Math.pow(10,-1)/63*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:09:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.409768603109833; Expression=38*Math.pow(10,-1)+27*Math.pow(10,-5)/u4(k)/18*Math.pow(10,+6)*u6(k)-89*Math.pow(10,-1)/63*Math.pow(10,+2)/u8(k); Java Expression: 38*Math.pow(10,-1)+27*Math.pow(10,-5)/getVariable(4,k)/18*Math.pow(10,+6)*getVariable(6,k)-89*Math.pow(10,-1)/63*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:09:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.400701660424435; Expression=38*Math.pow(10,-1)+27*Math.pow(10,-5)/u4(k)/18*Math.pow(10,+6)*u6(k)-88*Math.pow(10,-1)/63*Math.pow(10,+2)/u8(k); Java Expression: 38*Math.pow(10,-1)+27*Math.pow(10,-5)/getVariable(4,k)/18*Math.pow(10,+6)*getVariable(6,k)-88*Math.pow(10,-1)/63*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:09:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.37706921738226; Expression=53*Math.pow(10,-1)+27*Math.pow(10,-5)/u4(k)/18*Math.pow(10,+6)*u6(k)-89*Math.pow(10,-1)/63*Math.pow(10,+2)/u8(k); Java Expression: 53*Math.pow(10,-1)+27*Math.pow(10,-5)/getVariable(4,k)/18*Math.pow(10,+6)*getVariable(6,k)-89*Math.pow(10,-1)/63*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:09:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.282076610644287; Expression=64*Math.pow(10,-1)+27*Math.pow(10,-5)/u4(k)/18*Math.pow(10,+6)*u6(k)-89*Math.pow(10,-1)/57*Math.pow(10,+2)/u8(k); Java Expression: 64*Math.pow(10,-1)+27*Math.pow(10,-5)/getVariable(4,k)/18*Math.pow(10,+6)*getVariable(6,k)-89*Math.pow(10,-1)/57*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:09:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.254470392330344; Expression=53*Math.pow(10,-1)+27*Math.pow(10,-5)/u4(k)/18*Math.pow(10,+6)*u6(k)-89*Math.pow(10,-1)/57*Math.pow(10,+2)/u8(k); Java Expression: 53*Math.pow(10,-1)+27*Math.pow(10,-5)/getVariable(4,k)/18*Math.pow(10,+6)*getVariable(6,k)-89*Math.pow(10,-1)/57*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:09:43 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 4.254470392330344 -->> Avg.: 11.25566350012513 -->> Std. Dev.: 12.503347418673384
Aug 31, 2024 12:09:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.233767791674296; Expression=56*Math.pow(10,-1)+27*Math.pow(10,-5)/u4(k)/18*Math.pow(10,+6)*u6(k)-89*Math.pow(10,-1)/57*Math.pow(10,+2)/u8(k); Java Expression: 56*Math.pow(10,-1)+27*Math.pow(10,-5)/getVariable(4,k)/18*Math.pow(10,+6)*getVariable(6,k)-89*Math.pow(10,-1)/57*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:10:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.142631725115927; Expression=89*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-92*Math.pow(10,-1)/56*Math.pow(10,+2)/u8(k); Java Expression: 89*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-92*Math.pow(10,-1)/56*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:10:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.096977674964638; Expression=89*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-96*Math.pow(10,-1)/56*Math.pow(10,+2)/u8(k); Java Expression: 89*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-96*Math.pow(10,-1)/56*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:11:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.094876621089311; Expression=90*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-96*Math.pow(10,-1)/56*Math.pow(10,+2)/u8(k); Java Expression: 90*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-96*Math.pow(10,-1)/56*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:12:08 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.094876621089311 -->> Avg.: 5.126787033437702 -->> Std. Dev.: 1.4634786400776034
Aug 31, 2024 12:12:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.092905575466503; Expression=90*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-96*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k); Java Expression: 90*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-96*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:12:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.092305617265837; Expression=90*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-95*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k); Java Expression: 90*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-95*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:12:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.091985789318733; Expression=90*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-97*Math.pow(10,-1)/56*Math.pow(10,+2)/u8(k); Java Expression: 90*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-97*Math.pow(10,-1)/56*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:13:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.090304487303195; Expression=91*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-95*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k); Java Expression: 91*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-95*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:13:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.087624428537756; Expression=91*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-96*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k); Java Expression: 91*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-96*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)
Aug 31, 2024 12:13:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.084574999222754; Expression=91*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-96*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)+u9(k)/46*Math.pow(10,+1)/u9(k); Java Expression: 91*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-96*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)+getVariable(9,k)/46*Math.pow(10,+1)/getVariable(9,k)
Aug 31, 2024 12:13:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.077603149094699; Expression=91*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-96*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)+u3(k)/46*Math.pow(10,+1)/u9(k); Java Expression: 91*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-96*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)+getVariable(3,k)/46*Math.pow(10,+1)/getVariable(9,k)
Aug 31, 2024 12:14:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9883173457621233; Expression=91*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-96*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)*u2(k)/46*Math.pow(10,+1)/u4(k); Java Expression: 91*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-96*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)*getVariable(2,k)/46*Math.pow(10,+1)/getVariable(4,k)
Aug 31, 2024 12:14:36 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 3.9883173457621233 -->> Avg.: 4.567799727882292 -->> Std. Dev.: 0.5616229724488152
Aug 31, 2024 12:15:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.988317345762122; Expression=91*Math.pow(10,-1)+85*Math.pow(10,-4)/u4(k)/60*Math.pow(10,+5)*u6(k)-96*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)*u2(k)/46*Math.pow(10,+1)/u4(k); Java Expression: 91*Math.pow(10,-1)+85*Math.pow(10,-4)/getVariable(4,k)/60*Math.pow(10,+5)*getVariable(6,k)-96*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)*getVariable(2,k)/46*Math.pow(10,+1)/getVariable(4,k)
Aug 31, 2024 12:15:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9797219348874218; Expression=91*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)*u2(k)/46*Math.pow(10,+1)/u4(k); Java Expression: 91*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)*getVariable(2,k)/46*Math.pow(10,+1)/getVariable(4,k)
Aug 31, 2024 12:15:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9758146550363964; Expression=91*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-96*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)*u2(k)/45*Math.pow(10,+1)/u4(k); Java Expression: 91*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-96*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)*getVariable(2,k)/45*Math.pow(10,+1)/getVariable(4,k)
Aug 31, 2024 12:16:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.975814655036396; Expression=91*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-96*Math.pow(10,-1)/55*Math.pow(10,+4)/u8(k)*u2(k)/45*Math.pow(10,-1)/u4(k); Java Expression: 91*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-96*Math.pow(10,-1)/55*Math.pow(10,+4)/getVariable(8,k)*getVariable(2,k)/45*Math.pow(10,-1)/getVariable(4,k)
Aug 31, 2024 12:17:15 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 3.975814655036396 -->> Avg.: 4.249773351778817 -->> Std. Dev.: 0.23412706454603957
Aug 31, 2024 12:17:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.975814655025074; Expression=91*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-96*Math.pow(10,-1)/55*Math.pow(10,+4)/u8(k)*u2(k)/45*Math.pow(10,-1)/u4(k)+10*Math.pow(10,-9)*u4(k)*25*Math.pow(10,-6)*u9(k); Java Expression: 91*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-96*Math.pow(10,-1)/55*Math.pow(10,+4)/getVariable(8,k)*getVariable(2,k)/45*Math.pow(10,-1)/getVariable(4,k)+10*Math.pow(10,-9)*getVariable(4,k)*25*Math.pow(10,-6)*getVariable(9,k)
Aug 31, 2024 12:17:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.97245770235585; Expression=92*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-96*Math.pow(10,-1)/55*Math.pow(10,+4)/u8(k)*u2(k)/45*Math.pow(10,-1)/u4(k); Java Expression: 92*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-96*Math.pow(10,-1)/55*Math.pow(10,+4)/getVariable(8,k)*getVariable(2,k)/45*Math.pow(10,-1)/getVariable(4,k)
Aug 31, 2024 12:18:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.971163760605672; Expression=92*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-96*Math.pow(10,-1)/88*Math.pow(10,+4)/u8(k)*u2(k)/28*Math.pow(10,-1)/u4(k); Java Expression: 92*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-96*Math.pow(10,-1)/88*Math.pow(10,+4)/getVariable(8,k)*getVariable(2,k)/28*Math.pow(10,-1)/getVariable(4,k)
Aug 31, 2024 12:19:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9711637606056716; Expression=92*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-96*Math.pow(10,+1)/88*Math.pow(10,+2)/u8(k)*u2(k)/28*Math.pow(10,-1)/u4(k); Java Expression: 92*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-96*Math.pow(10,+1)/88*Math.pow(10,+2)/getVariable(8,k)*getVariable(2,k)/28*Math.pow(10,-1)/getVariable(4,k)
Aug 31, 2024 12:19:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.945325081684066; Expression=92*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-96*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)-u2(k)/45*Math.pow(10,+1)+u4(k); Java Expression: 92*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-96*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)-getVariable(2,k)/45*Math.pow(10,+1)+getVariable(4,k)
Aug 31, 2024 12:20:16 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 3.945325081684066 -->> Avg.: 4.128335071252852 -->> Std. Dev.: 0.17836122170094784
Aug 31, 2024 12:20:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9434510828437905; Expression=92*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)-u2(k)/45*Math.pow(10,+1)+u4(k); Java Expression: 92*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)-getVariable(2,k)/45*Math.pow(10,+1)+getVariable(4,k)
Aug 31, 2024 12:21:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9434510828401383; Expression=92*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)-u2(k)/45*Math.pow(10,+1)+70*Math.pow(10,-8)*97*Math.pow(10,-6)+u4(k)+u4(k)-u4(k); Java Expression: 92*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)-getVariable(2,k)/45*Math.pow(10,+1)+70*Math.pow(10,-8)*97*Math.pow(10,-6)+getVariable(4,k)+getVariable(4,k)-getVariable(4,k)
Aug 31, 2024 12:21:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9430810116662958; Expression=92*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)-u2(k)/45*Math.pow(10,+1)+70*Math.pow(10,-4)+u4(k); Java Expression: 92*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)-getVariable(2,k)/45*Math.pow(10,+1)+70*Math.pow(10,-4)+getVariable(4,k)
Aug 31, 2024 12:21:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.940308447392918; Expression=92*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)-u2(k)/45*Math.pow(10,+1)+70*Math.pow(10,-3)+u4(k); Java Expression: 92*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)-getVariable(2,k)/45*Math.pow(10,+1)+70*Math.pow(10,-3)+getVariable(4,k)
Aug 31, 2024 12:21:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.937768212284631; Expression=94*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)-u2(k)/45*Math.pow(10,+1)+u4(k); Java Expression: 94*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)-getVariable(2,k)/45*Math.pow(10,+1)+getVariable(4,k)
Aug 31, 2024 12:22:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.937750732603877; Expression=94*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)-u2(k)/45*Math.pow(10,+1)+96*Math.pow(10,-4)+u4(k); Java Expression: 94*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)-getVariable(2,k)/45*Math.pow(10,+1)+96*Math.pow(10,-4)+getVariable(4,k)
Aug 31, 2024 12:22:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.937061942928511; Expression=94*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)-u2(k)/45*Math.pow(10,+1)+u4(k)+96*Math.pow(10,-4)*u8(k); Java Expression: 94*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)-getVariable(2,k)/45*Math.pow(10,+1)+getVariable(4,k)+96*Math.pow(10,-4)*getVariable(8,k)
Aug 31, 2024 12:23:09 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 3.937061942928511 -->> Avg.: 4.028328864451052 -->> Std. Dev.: 0.08830437633014303
Aug 31, 2024 12:23:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9349942138793588; Expression=94*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-99*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)-u2(k)/45*Math.pow(10,+1)+96*Math.pow(10,-4)+u4(k); Java Expression: 94*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-99*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)-getVariable(2,k)/45*Math.pow(10,+1)+96*Math.pow(10,-4)+getVariable(4,k)
Aug 31, 2024 12:23:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.933413971044326; Expression=94*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)-u2(k)/45*Math.pow(10,+1)+u4(k)+96*Math.pow(10,-3)*u8(k); Java Expression: 94*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)-getVariable(2,k)/45*Math.pow(10,+1)+getVariable(4,k)+96*Math.pow(10,-3)*getVariable(8,k)
Aug 31, 2024 12:23:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.932842735717004; Expression=92*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)-u2(k)/45*Math.pow(10,+1)+u4(k)+u4(k)/u6(k); Java Expression: 92*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-97*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)-getVariable(2,k)/45*Math.pow(10,+1)+getVariable(4,k)+getVariable(4,k)/getVariable(6,k)
Aug 31, 2024 12:23:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9224197780124905; Expression=94*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-99*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)-u2(k)/45*Math.pow(10,+1)+u4(k)+96*Math.pow(10,-3)*u8(k); Java Expression: 94*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-99*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)-getVariable(2,k)/45*Math.pow(10,+1)+getVariable(4,k)+96*Math.pow(10,-3)*getVariable(8,k)
Aug 31, 2024 12:24:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9179919145835345; Expression=94*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-99*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)-u2(k)/45*Math.pow(10,+1)+u4(k)+u4(k)/u6(k); Java Expression: 94*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-99*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)-getVariable(2,k)/45*Math.pow(10,+1)+getVariable(4,k)+getVariable(4,k)/getVariable(6,k)
Aug 31, 2024 12:24:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.916442111296047; Expression=94*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-99*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)-u2(k)/45*Math.pow(10,+1)+u4(k)+u4(k)/u1(k); Java Expression: 94*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-99*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)-getVariable(2,k)/45*Math.pow(10,+1)+getVariable(4,k)+getVariable(4,k)/getVariable(1,k)
Aug 31, 2024 12:24:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9147174286415853; Expression=94*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-99*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)-u2(k)/45*Math.pow(10,+1)+u4(k)+u3(k)/u6(k); Java Expression: 94*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-99*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)-getVariable(2,k)/45*Math.pow(10,+1)+getVariable(4,k)+getVariable(3,k)/getVariable(6,k)
Aug 31, 2024 12:25:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.913235278950391; Expression=94*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-99*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)-u2(k)/45*Math.pow(10,+1)+u4(k)+u3(k)/u1(k); Java Expression: 94*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-99*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)-getVariable(2,k)/45*Math.pow(10,+1)+getVariable(4,k)+getVariable(3,k)/getVariable(1,k)
Aug 31, 2024 12:25:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.88489149633399; Expression=79*Math.pow(10,-1)+85*Math.pow(10,-5)/u4(k)/60*Math.pow(10,+6)*u6(k)-99*Math.pow(10,-1)/55*Math.pow(10,+2)/u8(k)-u2(k)/45*Math.pow(10,+1)+u4(k)+u2(k)/u6(k); Java Expression: 79*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-99*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)-getVariable(2,k)/45*Math.pow(10,+1)+getVariable(4,k)+getVariable(2,k)/getVariable(6,k)
Aug 31, 2024 12:26:16 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 3.88489149633399 -->> Avg.: 3.982423299114095 -->> Std. Dev.: 0.06156186215186962

Execution time: 1451.068 seconds.



@@;79*Math.pow(10,-1)+85*Math.pow(10,-5)/getVariable(4,k)/60*Math.pow(10,+6)*getVariable(6,k)-99*Math.pow(10,-1)/55*Math.pow(10,+2)/getVariable(8,k)-getVariable(2,k)/45*Math.pow(10,+1)+getVariable(4,k)+getVariable(2,k)/getVariable(6,k)



Run #2
========
Aug 31, 2024 12:26:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=34.28455324960733; Expression=u8(k)/u2(k); Java Expression: getVariable(8,k)/getVariable(2,k)
Aug 31, 2024 12:26:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=34.251070853337374; Expression=u8(k)/u4(k); Java Expression: getVariable(8,k)/getVariable(4,k)
Aug 31, 2024 12:26:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=18.01396168555768; Expression=13*Math.pow(10,-1)*u4(k); Java Expression: 13*Math.pow(10,-1)*getVariable(4,k)
Aug 31, 2024 12:26:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=15.143024381315357; Expression=u2(k)/u2(k)-80*Math.pow(10,-4)+u9(k); Java Expression: getVariable(2,k)/getVariable(2,k)-80*Math.pow(10,-4)+getVariable(9,k)
Aug 31, 2024 12:26:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=10.935344224713448; Expression=u4(k)+u4(k)/u5(k); Java Expression: getVariable(4,k)+getVariable(4,k)/getVariable(5,k)
Aug 31, 2024 12:26:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.328490999629246; Expression=26*Math.pow(10,-2)+u5(k); Java Expression: 26*Math.pow(10,-2)+getVariable(5,k)
Aug 31, 2024 12:26:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.32282273009526; Expression=45*Math.pow(10,-1)/u3(k)+u5(k); Java Expression: 45*Math.pow(10,-1)/getVariable(3,k)+getVariable(5,k)
Aug 31, 2024 12:26:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 31, 2024 12:26:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.663329760570942; Expression=59*Math.pow(10,+2)/u2(k)-27*Math.pow(10,-3)*u3(k)-u4(k)/u1(k)/u6(k)/17*Math.pow(10,-6)+u8(k)/u4(k)*83*Math.pow(10,-1)/u5(k)*u7(k)-u2(k)/u2(k)/u8(k); Java Expression: 59*Math.pow(10,+2)/getVariable(2,k)-27*Math.pow(10,-3)*getVariable(3,k)-getVariable(4,k)/getVariable(1,k)/getVariable(6,k)/17*Math.pow(10,-6)+getVariable(8,k)/getVariable(4,k)*83*Math.pow(10,-1)/getVariable(5,k)*getVariable(7,k)-getVariable(2,k)/getVariable(2,k)/getVariable(8,k)
Aug 31, 2024 12:26:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.663329395795161; Expression=59*Math.pow(10,+2)/u2(k)-27*Math.pow(10,-3)*u3(k)-u4(k)*u1(k)/u6(k)/17*Math.pow(10,-6)+u8(k)/u4(k)*83*Math.pow(10,-1)/u5(k)*u7(k)-u2(k)/u2(k)/u8(k); Java Expression: 59*Math.pow(10,+2)/getVariable(2,k)-27*Math.pow(10,-3)*getVariable(3,k)-getVariable(4,k)*getVariable(1,k)/getVariable(6,k)/17*Math.pow(10,-6)+getVariable(8,k)/getVariable(4,k)*83*Math.pow(10,-1)/getVariable(5,k)*getVariable(7,k)-getVariable(2,k)/getVariable(2,k)/getVariable(8,k)
Aug 31, 2024 12:26:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.644117650146171; Expression=59*Math.pow(10,+2)/u2(k)-27*Math.pow(10,-3)*u3(k)-u4(k)/u1(k)/u6(k)*17*Math.pow(10,-6)+u8(k)/u4(k)*83*Math.pow(10,-1)/u9(k)*u7(k)-u2(k)/u2(k)/u8(k); Java Expression: 59*Math.pow(10,+2)/getVariable(2,k)-27*Math.pow(10,-3)*getVariable(3,k)-getVariable(4,k)/getVariable(1,k)/getVariable(6,k)*17*Math.pow(10,-6)+getVariable(8,k)/getVariable(4,k)*83*Math.pow(10,-1)/getVariable(9,k)*getVariable(7,k)-getVariable(2,k)/getVariable(2,k)/getVariable(8,k)
Aug 31, 2024 12:26:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.175349527654886; Expression=59*Math.pow(10,+2)/u2(k)-27*Math.pow(10,-3)*u3(k)-u4(k)/u1(k)/u6(k)/17*Math.pow(10,-6)+u8(k)/u4(k)*83*Math.pow(10,-1)/u5(k)*u7(k)-u2(k)/u1(k)/u8(k); Java Expression: 59*Math.pow(10,+2)/getVariable(2,k)-27*Math.pow(10,-3)*getVariable(3,k)-getVariable(4,k)/getVariable(1,k)/getVariable(6,k)/17*Math.pow(10,-6)+getVariable(8,k)/getVariable(4,k)*83*Math.pow(10,-1)/getVariable(5,k)*getVariable(7,k)-getVariable(2,k)/getVariable(1,k)/getVariable(8,k)
Aug 31, 2024 12:26:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.1752921718941955; Expression=59*Math.pow(10,+2)/u2(k)-72*Math.pow(10,-3)*u3(k)-u4(k)/u6(k)/u1(k)/26*Math.pow(10,-6)+u8(k)/u4(k)*u5(k)/u7(k)*u2(k)-u2(k)/u8(k)/u4(k); Java Expression: 59*Math.pow(10,+2)/getVariable(2,k)-72*Math.pow(10,-3)*getVariable(3,k)-getVariable(4,k)/getVariable(6,k)/getVariable(1,k)/26*Math.pow(10,-6)+getVariable(8,k)/getVariable(4,k)*getVariable(5,k)/getVariable(7,k)*getVariable(2,k)-getVariable(2,k)/getVariable(8,k)/getVariable(4,k)
Aug 31, 2024 12:26:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837859; Expression=u7(k)-u4(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)
Aug 31, 2024 12:27:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.058143099562467; Expression=u7(k)-u4(k)-u5(k)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(8,k)
Aug 31, 2024 12:27:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.984658273569579; Expression=u7(k)-u4(k)-52*Math.pow(10,-2)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-52*Math.pow(10,-2)-getVariable(5,k)
Aug 31, 2024 12:27:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.944780149860618; Expression=u7(k)-u4(k)-90*Math.pow(10,-2)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-90*Math.pow(10,-2)-getVariable(5,k)
Aug 31, 2024 12:27:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.933466960968021; Expression=u7(k)-u4(k)-11*Math.pow(10,-1)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-11*Math.pow(10,-1)-getVariable(5,k)
Aug 31, 2024 12:27:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.931042781024546; Expression=u7(k)-u4(k)-15*Math.pow(10,-1)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-15*Math.pow(10,-1)-getVariable(5,k)
Aug 31, 2024 12:27:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928882637025394; Expression=u7(k)-u4(k)-13*Math.pow(10,-1)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-13*Math.pow(10,-1)-getVariable(5,k)
Aug 31, 2024 12:27:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.880048365661797; Expression=u7(k)-u4(k)-u5(k)-13*Math.pow(10,-1)/u8(k)+u5(k)*33*Math.pow(10,-2)/78*Math.pow(10,-9)/u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-13*Math.pow(10,-1)/getVariable(8,k)+getVariable(5,k)*33*Math.pow(10,-2)/78*Math.pow(10,-9)/getVariable(4,k)
Aug 31, 2024 12:27:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.880048365661491; Expression=u7(k)-u4(k)-u5(k)-13*Math.pow(10,-1)/u8(k)+u5(k)*33*Math.pow(10,-2)/u4(k)/78*Math.pow(10,-9)/u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-13*Math.pow(10,-1)/getVariable(8,k)+getVariable(5,k)*33*Math.pow(10,-2)/getVariable(4,k)/78*Math.pow(10,-9)/getVariable(9,k)
Aug 31, 2024 12:27:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.880048365661481; Expression=u7(k)-u4(k)-u5(k)-13*Math.pow(10,-1)/u8(k)+u5(k)*7*Math.pow(10,-2)/u4(k)/32*Math.pow(10,-9)/u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-13*Math.pow(10,-1)/getVariable(8,k)+getVariable(5,k)*7*Math.pow(10,-2)/getVariable(4,k)/32*Math.pow(10,-9)/getVariable(9,k)
Aug 31, 2024 12:27:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.880048365661473; Expression=u7(k)-u4(k)-u5(k)-13*Math.pow(10,-1)/u8(k)+u5(k)/33*Math.pow(10,-2)/u4(k)/78*Math.pow(10,-9)/u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-13*Math.pow(10,-1)/getVariable(8,k)+getVariable(5,k)/33*Math.pow(10,-2)/getVariable(4,k)/78*Math.pow(10,-9)/getVariable(9,k)
Aug 31, 2024 12:27:57 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.880048365661473 -->> Avg.: 1.1106318053726118E9 -->> Std. Dev.: 5.267346029601468E9
Aug 31, 2024 12:27:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.864628356923247; Expression=u7(k)-u4(k)-u5(k)-15*Math.pow(10,-1)/u8(k)+u4(k)*12*Math.pow(10,-3)/u7(k)/35*Math.pow(10,-9)/u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-15*Math.pow(10,-1)/getVariable(8,k)+getVariable(4,k)*12*Math.pow(10,-3)/getVariable(7,k)/35*Math.pow(10,-9)/getVariable(9,k)
Aug 31, 2024 12:27:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.817299834705241; Expression=u7(k)-u4(k)-52*Math.pow(10,-1)-u5(k)+u8(k)+33*Math.pow(10,+8)*78*Math.pow(10,-9)/u4(k)/u6(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-52*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)+33*Math.pow(10,+8)*78*Math.pow(10,-9)/getVariable(4,k)/getVariable(6,k)*getVariable(5,k)
Aug 31, 2024 12:28:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.817215907738713; Expression=u7(k)-u4(k)-52*Math.pow(10,-1)-u5(k)+u8(k)+33*Math.pow(10,+8)*77*Math.pow(10,-9)/u4(k)/u6(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-52*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)+33*Math.pow(10,+8)*77*Math.pow(10,-9)/getVariable(4,k)/getVariable(6,k)*getVariable(5,k)
Aug 31, 2024 12:28:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.772651136542635; Expression=u7(k)-u4(k)-52*Math.pow(10,-1)-u5(k)+u8(k)+33*Math.pow(10,+8)*78*Math.pow(10,-9)/u5(k)/u2(k)*u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-52*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)+33*Math.pow(10,+8)*78*Math.pow(10,-9)/getVariable(5,k)/getVariable(2,k)*getVariable(9,k)
Aug 31, 2024 12:28:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.767882864671699; Expression=u7(k)-u4(k)-52*Math.pow(10,-1)-u5(k)+u8(k)+33*Math.pow(10,+8)*78*Math.pow(10,-9)/u1(k)/u2(k)*u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-52*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)+33*Math.pow(10,+8)*78*Math.pow(10,-9)/getVariable(1,k)/getVariable(2,k)*getVariable(2,k)
Aug 31, 2024 12:28:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.720439162499485; Expression=u7(k)-u4(k)-52*Math.pow(10,-1)-u5(k)+u8(k)+33*Math.pow(10,+8)*78*Math.pow(10,-9)/u4(k)/u1(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-52*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)+33*Math.pow(10,+8)*78*Math.pow(10,-9)/getVariable(4,k)/getVariable(1,k)*getVariable(5,k)
Aug 31, 2024 12:28:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.69234880424729; Expression=u7(k)-u4(k)-52*Math.pow(10,-1)-u5(k)+u8(k)+33*Math.pow(10,+8)*78*Math.pow(10,-9)/u1(k)/u3(k)*u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)-52*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)+33*Math.pow(10,+8)*78*Math.pow(10,-9)/getVariable(1,k)/getVariable(3,k)*getVariable(4,k)
Aug 31, 2024 12:28:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.663538638628651; Expression=u7(k)-u4(k)-52*Math.pow(10,-1)-u5(k)+u8(k)+33*Math.pow(10,+8)*67*Math.pow(10,-9)/u1(k)/u3(k)*u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)-52*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)+33*Math.pow(10,+8)*67*Math.pow(10,-9)/getVariable(1,k)/getVariable(3,k)*getVariable(4,k)
Aug 31, 2024 12:28:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.62223532818793; Expression=u7(k)-u4(k)-61*Math.pow(10,-1)-u5(k)+u8(k)+33*Math.pow(10,+8)*78*Math.pow(10,-9)/u1(k)/u3(k)*u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)+33*Math.pow(10,+8)*78*Math.pow(10,-9)/getVariable(1,k)/getVariable(3,k)*getVariable(4,k)
Aug 31, 2024 12:28:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.617087064269305; Expression=u7(k)-u4(k)-61*Math.pow(10,-1)-u5(k)+u8(k)+33*Math.pow(10,+8)*81*Math.pow(10,-9)/u1(k)/u3(k)*u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)+33*Math.pow(10,+8)*81*Math.pow(10,-9)/getVariable(1,k)/getVariable(3,k)*getVariable(4,k)
Aug 31, 2024 12:28:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.596433689034555; Expression=u7(k)-u4(k)-61*Math.pow(10,-1)-u5(k)+u8(k)+33*Math.pow(10,+8)*78*Math.pow(10,-9)/u1(k)/u3(k)*u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)+33*Math.pow(10,+8)*78*Math.pow(10,-9)/getVariable(1,k)/getVariable(3,k)*getVariable(9,k)
Aug 31, 2024 12:28:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.57862981990044; Expression=u7(k)-u4(k)-52*Math.pow(10,-1)-u5(k)+u8(k)*33*Math.pow(10,+8)*67*Math.pow(10,-9)/u1(k)/u3(k)*u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)-52*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)*33*Math.pow(10,+8)*67*Math.pow(10,-9)/getVariable(1,k)/getVariable(3,k)*getVariable(4,k)
Aug 31, 2024 12:29:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.577115508829454; Expression=u7(k)-u4(k)-61*Math.pow(10,-1)-u5(k)+u8(k)*33*Math.pow(10,+8)*78*Math.pow(10,-9)/u1(k)/u3(k)*u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)*33*Math.pow(10,+8)*78*Math.pow(10,-9)/getVariable(1,k)/getVariable(3,k)*getVariable(4,k)
Aug 31, 2024 12:29:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5603048446879; Expression=u7(k)-u4(k)-52*Math.pow(10,-1)-u5(k)+u8(k)*30*Math.pow(10,+8)*67*Math.pow(10,-9)/u1(k)/u3(k)*u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)-52*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)*30*Math.pow(10,+8)*67*Math.pow(10,-9)/getVariable(1,k)/getVariable(3,k)*getVariable(4,k)
Aug 31, 2024 12:29:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5579661993645555; Expression=u7(k)-u4(k)-58*Math.pow(10,-1)-u5(k)+u8(k)*33*Math.pow(10,+8)*67*Math.pow(10,-9)/u1(k)/u3(k)*u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)-58*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)*33*Math.pow(10,+8)*67*Math.pow(10,-9)/getVariable(1,k)/getVariable(3,k)*getVariable(4,k)
Aug 31, 2024 12:30:11 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.5579661993645555 -->> Avg.: 34411.317175685064 -->> Std. Dev.: 183577.02599150978
Aug 31, 2024 12:30:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.556918391127054; Expression=u7(k)-u4(k)-57*Math.pow(10,-1)-u5(k)+u8(k)*33*Math.pow(10,+8)*67*Math.pow(10,-9)/u1(k)/u3(k)*u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)-57*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)*33*Math.pow(10,+8)*67*Math.pow(10,-9)/getVariable(1,k)/getVariable(3,k)*getVariable(4,k)
Aug 31, 2024 12:30:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.555175271580007; Expression=u7(k)-u4(k)-58*Math.pow(10,-1)-u5(k)+u8(k)*33*Math.pow(10,+8)*93*Math.pow(10,-9)/u7(k)/u3(k)*u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)-58*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)*33*Math.pow(10,+8)*93*Math.pow(10,-9)/getVariable(7,k)/getVariable(3,k)*getVariable(4,k)
Aug 31, 2024 12:31:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.539525310805427; Expression=u7(k)-u4(k)-57*Math.pow(10,-1)-u5(k)+u8(k)*81*Math.pow(10,+8)*67*Math.pow(10,-9)/u1(k)/u7(k)*u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)-57*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)*81*Math.pow(10,+8)*67*Math.pow(10,-9)/getVariable(1,k)/getVariable(7,k)*getVariable(4,k)
Aug 31, 2024 12:31:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.539525310805426; Expression=u7(k)-u4(k)-u5(k)-57*Math.pow(10,-1)+u8(k)*81*Math.pow(10,+8)*67*Math.pow(10,-9)/u1(k)/u7(k)*u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-57*Math.pow(10,-1)+getVariable(8,k)*81*Math.pow(10,+8)*67*Math.pow(10,-9)/getVariable(1,k)/getVariable(7,k)*getVariable(4,k)
Aug 31, 2024 12:31:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.534713816607657; Expression=u7(k)-u4(k)-57*Math.pow(10,-1)-u5(k)+u8(k)*81*Math.pow(10,+8)*75*Math.pow(10,-9)/u1(k)/u7(k)*u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)-57*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)*81*Math.pow(10,+8)*75*Math.pow(10,-9)/getVariable(1,k)/getVariable(7,k)*getVariable(4,k)
Aug 31, 2024 12:31:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.482416346707834; Expression=u7(k)-u4(k)-57*Math.pow(10,-1)-u5(k)+u8(k)*81*Math.pow(10,+8)*75*Math.pow(10,-9)/u1(k)/u7(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-57*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)*81*Math.pow(10,+8)*75*Math.pow(10,-9)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 12:32:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.468536686572868; Expression=u7(k)-u4(k)-u5(k)-57*Math.pow(10,-1)+u8(k)*81*Math.pow(10,+8)*77*Math.pow(10,-9)/u1(k)/u7(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-57*Math.pow(10,-1)+getVariable(8,k)*81*Math.pow(10,+8)*77*Math.pow(10,-9)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 12:32:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.43373470787689; Expression=u7(k)-u4(k)-57*Math.pow(10,-1)-u5(k)+u8(k)*95*Math.pow(10,+8)*75*Math.pow(10,-9)/u1(k)/u7(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-57*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)*95*Math.pow(10,+8)*75*Math.pow(10,-9)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 12:32:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.429621758260539; Expression=u7(k)-u4(k)-59*Math.pow(10,-1)-u5(k)+u8(k)*95*Math.pow(10,+8)*75*Math.pow(10,-9)/u1(k)/u7(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-59*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)*95*Math.pow(10,+8)*75*Math.pow(10,-9)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 12:32:43 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.429621758260539 -->> Avg.: 48.932874485574764 -->> Std. Dev.: 126.77741335645644
Aug 31, 2024 12:33:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.426667714671607; Expression=u7(k)-u4(k)-59*Math.pow(10,-1)-u5(k)+u8(k)*98*Math.pow(10,+8)*75*Math.pow(10,-9)/u1(k)/u7(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-59*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)*98*Math.pow(10,+8)*75*Math.pow(10,-9)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 12:33:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4266464767374805; Expression=u7(k)-u4(k)-59*Math.pow(10,-1)-u5(k)+u8(k)*95*Math.pow(10,+8)*78*Math.pow(10,-9)/u1(k)/u7(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-59*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)*95*Math.pow(10,+8)*78*Math.pow(10,-9)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 12:33:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.423154023471617; Expression=u7(k)-u4(k)-61*Math.pow(10,-1)-u5(k)+u8(k)*95*Math.pow(10,+8)*78*Math.pow(10,-9)/u1(k)/u7(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)*95*Math.pow(10,+8)*78*Math.pow(10,-9)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 12:33:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.420615127669571; Expression=u7(k)-u4(k)-61*Math.pow(10,-1)-u5(k)+u8(k)*98*Math.pow(10,+8)*78*Math.pow(10,-9)/u1(k)/u7(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)*98*Math.pow(10,+8)*78*Math.pow(10,-9)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 12:34:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.420615127669569; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+u8(k)*98*Math.pow(10,+8)*78*Math.pow(10,-9)/u1(k)/u7(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+getVariable(8,k)*98*Math.pow(10,+8)*78*Math.pow(10,-9)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 12:35:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.41895423947379; Expression=u7(k)-u4(k)-u5(k)-63*Math.pow(10,-1)+u8(k)*98*Math.pow(10,+8)*78*Math.pow(10,-9)/u1(k)/u7(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-63*Math.pow(10,-1)+getVariable(8,k)*98*Math.pow(10,+8)*78*Math.pow(10,-9)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 12:35:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4189542394737895; Expression=u7(k)-u4(k)-63*Math.pow(10,-1)-u5(k)+u8(k)*98*Math.pow(10,+8)*78*Math.pow(10,-9)/u1(k)/u7(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-63*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)*98*Math.pow(10,+8)*78*Math.pow(10,-9)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 12:35:31 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.4189542394737895 -->> Avg.: 11.60341308819797 -->> Std. Dev.: 11.780217926657228
Aug 31, 2024 12:35:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.368808545437867; Expression=u7(k)-u4(k)-61*Math.pow(10,-1)-u5(k)+98*Math.pow(10,+8)*94*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-1)-getVariable(5,k)+98*Math.pow(10,+8)*94*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)
Aug 31, 2024 12:36:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3516093991514735; Expression=u7(k)-u4(k)-61*Math.pow(10,-1)-u5(k)+98*Math.pow(10,+8)*98*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-1)-getVariable(5,k)+98*Math.pow(10,+8)*98*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)
Aug 31, 2024 12:36:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.350835255790418; Expression=u7(k)-u4(k)-59*Math.pow(10,-1)-u5(k)+98*Math.pow(10,+8)*98*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-59*Math.pow(10,-1)-getVariable(5,k)+98*Math.pow(10,+8)*98*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)
Aug 31, 2024 12:36:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.349485577133716; Expression=u7(k)-u4(k)-61*Math.pow(10,-1)-u5(k)+98*Math.pow(10,+8)*99*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-1)-getVariable(5,k)+98*Math.pow(10,+8)*99*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)
Aug 31, 2024 12:38:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3494855771337155; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+u8(k)*98*Math.pow(10,+8)*99*Math.pow(10,-9)/u1(k)/u7(k)*u5(k)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+getVariable(8,k)*98*Math.pow(10,+8)*99*Math.pow(10,-9)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)
Aug 31, 2024 12:38:35 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.3494855771337155 -->> Avg.: 5.901968655107507 -->> Std. Dev.: 1.5213791458137425
Aug 31, 2024 12:38:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3482265921895085; Expression=u7(k)-u4(k)-61*Math.pow(10,-1)-u5(k)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-1)-getVariable(5,k)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)
Aug 31, 2024 12:39:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.348226592189508; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)
Aug 31, 2024 12:39:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3478584868697405; Expression=u7(k)-u4(k)-61*Math.pow(10,-1)-u5(k)+98*Math.pow(10,+8)/99*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-1)-getVariable(5,k)+98*Math.pow(10,+8)/99*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)
Aug 31, 2024 12:40:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.34785848686974; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+98*Math.pow(10,+8)/99*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+98*Math.pow(10,+8)/99*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)
Aug 31, 2024 12:40:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.347714383692419; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)-u8(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)-getVariable(8,k)/getVariable(1,k)
Aug 31, 2024 12:40:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.347572101321826; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)-u8(k)/u6(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)-getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 12:40:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.346226632649624; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)-u8(k)/u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)-getVariable(8,k)/getVariable(5,k)
Aug 31, 2024 12:41:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.345273362164289; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)-u8(k)/u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)-getVariable(8,k)/getVariable(9,k)
Aug 31, 2024 12:41:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.329731295796596; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+98*Math.pow(10,+8)*94*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u6(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+98*Math.pow(10,+8)*94*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(6,k)
Aug 31, 2024 12:41:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.326685125501111; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u3(k)*u8(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(3,k)*getVariable(8,k)/getVariable(4,k)
Aug 31, 2024 12:41:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.313924618142388; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)/99*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)/u9(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)/99*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)/getVariable(9,k)*getVariable(3,k)
Aug 31, 2024 12:41:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.296933699961584; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+98*Math.pow(10,+8)*99*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u6(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+98*Math.pow(10,+8)*99*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(6,k)
Aug 31, 2024 12:41:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.292963800195596; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u6(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(6,k)
Aug 31, 2024 12:41:47 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.292963800195596 -->> Avg.: 5.4669117701912455 -->> Std. Dev.: 0.1372380102567466
Aug 31, 2024 12:42:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.290408678677619; Expression=u7(k)-u4(k)-u5(k)-59*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u6(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-59*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(6,k)
Aug 31, 2024 12:43:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.289919418897978; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+98*Math.pow(10,+8)/99*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u6(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+98*Math.pow(10,+8)/99*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(6,k)
Aug 31, 2024 12:43:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2846079194433875; Expression=u7(k)-u4(k)-u5(k)-21*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)-u7(k)/u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-21*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)-getVariable(7,k)/getVariable(5,k)
Aug 31, 2024 12:43:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.261192571828962; Expression=u7(k)-u4(k)-u5(k)-21*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-21*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)
Aug 31, 2024 12:44:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.230398876117963; Expression=u7(k)-u4(k)-u5(k)-32*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)-u7(k)/u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-32*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)-getVariable(7,k)/getVariable(5,k)
Aug 31, 2024 12:44:47 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.230398876117963 -->> Avg.: 5.388243103110245 -->> Std. Dev.: 0.08843656807965358
Aug 31, 2024 12:45:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.230398874963326; Expression=u7(k)-u4(k)-u5(k)-32*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)-u7(k)/u5(k)+40*Math.pow(10,-9)*u5(k)/u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-32*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)-getVariable(7,k)/getVariable(5,k)+40*Math.pow(10,-9)*getVariable(5,k)/getVariable(7,k)
Aug 31, 2024 12:45:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.223093939890694; Expression=u7(k)-u4(k)-u5(k)-30*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)-u7(k)/u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-30*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)-getVariable(7,k)/getVariable(5,k)
Aug 31, 2024 12:45:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.217626557338051; Expression=u7(k)-u4(k)-u5(k)-27*Math.pow(10,-1)+99*Math.pow(10,+8)/99*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-27*Math.pow(10,-1)+99*Math.pow(10,+8)/99*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)
Aug 31, 2024 12:46:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.216662650956972; Expression=u7(k)-u4(k)-u5(k)-28*Math.pow(10,-1)+99*Math.pow(10,+8)/99*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-28*Math.pow(10,-1)+99*Math.pow(10,+8)/99*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)
Aug 31, 2024 12:46:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.215873835413818; Expression=u7(k)-u4(k)-u5(k)-30*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)-u7(k)/u5(k)+4*Math.pow(10,-9)+u5(k)/u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-30*Math.pow(10,-1)+99*Math.pow(10,+8)*99*Math.pow(10,-9)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)-getVariable(7,k)/getVariable(5,k)+4*Math.pow(10,-9)+getVariable(5,k)/getVariable(7,k)
Aug 31, 2024 12:46:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.197351539244847; Expression=u7(k)-u4(k)-u5(k)-28*Math.pow(10,-1)+99*Math.pow(10,+8)/95*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-28*Math.pow(10,-1)+99*Math.pow(10,+8)/95*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)
Aug 31, 2024 12:47:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.195017690274548; Expression=u7(k)-u4(k)-u5(k)-28*Math.pow(10,-1)+99*Math.pow(10,+8)/94*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-28*Math.pow(10,-1)+99*Math.pow(10,+8)/94*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)
Aug 31, 2024 12:47:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.175796749572736; Expression=u7(k)-u4(k)-u5(k)-32*Math.pow(10,-1)+99*Math.pow(10,+8)/84*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-32*Math.pow(10,-1)+99*Math.pow(10,+8)/84*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)
Aug 31, 2024 12:47:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.175695234354688; Expression=u7(k)-u4(k)-u5(k)-32*Math.pow(10,-1)+99*Math.pow(10,+8)/84*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k)-2*Math.pow(10,-3)/u6(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-32*Math.pow(10,-1)+99*Math.pow(10,+8)/84*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)-2*Math.pow(10,-3)/getVariable(6,k)*getVariable(5,k)
Aug 31, 2024 12:47:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.175626412030094; Expression=u7(k)-u4(k)-u5(k)-32*Math.pow(10,-1)+99*Math.pow(10,+8)/84*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k)-2*Math.pow(10,-3)/u3(k)*u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-32*Math.pow(10,-1)+99*Math.pow(10,+8)/84*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)-2*Math.pow(10,-3)/getVariable(3,k)*getVariable(9,k)
Aug 31, 2024 12:47:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.169597964502623; Expression=u7(k)-u4(k)-u5(k)-32*Math.pow(10,-1)+99*Math.pow(10,+8)/84*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k)-2*Math.pow(10,-3)/u8(k)*u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-32*Math.pow(10,-1)+99*Math.pow(10,+8)/84*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)-2*Math.pow(10,-3)/getVariable(8,k)*getVariable(9,k)
Aug 31, 2024 12:47:52 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.169597964502623 -->> Avg.: 5.32526515516353 -->> Std. Dev.: 0.07548707219434932
Aug 31, 2024 12:48:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.161518337790841; Expression=u7(k)-u4(k)-u5(k)-32*Math.pow(10,-1)+95*Math.pow(10,+8)/84*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-32*Math.pow(10,-1)+95*Math.pow(10,+8)/84*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)
Aug 31, 2024 12:48:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.161284270872293; Expression=u7(k)-u4(k)-u5(k)-32*Math.pow(10,-1)+94*Math.pow(10,+8)/84*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-32*Math.pow(10,-1)+94*Math.pow(10,+8)/84*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)
Aug 31, 2024 12:48:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0877274624667885; Expression=u7(k)-u4(k)-u5(k)-32*Math.pow(10,-1)+99*Math.pow(10,+8)/84*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k)-2*Math.pow(10,-3)/u5(k)*u7(k)*u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-32*Math.pow(10,-1)+99*Math.pow(10,+8)/84*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)-2*Math.pow(10,-3)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)
Aug 31, 2024 12:48:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.069383814419951; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)/67*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)/67*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)
Aug 31, 2024 12:49:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.064156099244587; Expression=u7(k)-u4(k)-u5(k)-59*Math.pow(10,-1)+99*Math.pow(10,+8)/67*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-59*Math.pow(10,-1)+99*Math.pow(10,+8)/67*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)
Aug 31, 2024 12:50:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.064156099244586; Expression=u7(k)-u4(k)-59*Math.pow(10,-1)-u5(k)+99*Math.pow(10,+8)/67*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-59*Math.pow(10,-1)-getVariable(5,k)+99*Math.pow(10,+8)/67*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)
Aug 31, 2024 12:50:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0562317195545665; Expression=u7(k)-u4(k)-u5(k)-59*Math.pow(10,-1)+99*Math.pow(10,+8)/67*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k)+80*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-59*Math.pow(10,-1)+99*Math.pow(10,+8)/67*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)+80*Math.pow(10,-4)*getVariable(9,k)
Aug 31, 2024 12:51:00 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 5.0562317195545665 -->> Avg.: 5.258989369377352 -->> Std. Dev.: 0.10479407297683176
Aug 31, 2024 12:51:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.05229429057613; Expression=u7(k)-u4(k)-u5(k)-59*Math.pow(10,-1)+99*Math.pow(10,+8)/67*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k)+u9(k)/u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-59*Math.pow(10,-1)+99*Math.pow(10,+8)/67*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)+getVariable(9,k)/getVariable(7,k)
Aug 31, 2024 12:51:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.049372256570262; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)/67*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k)+80*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)/67*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)+80*Math.pow(10,-4)*getVariable(9,k)
Aug 31, 2024 12:51:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.042908777274457; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)/67*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k)+u9(k)/u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)/67*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)+getVariable(9,k)/getVariable(7,k)
Aug 31, 2024 12:53:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.042835475261404; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)/69*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k)+u9(k)/u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)/69*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)+getVariable(9,k)/getVariable(7,k)
Aug 31, 2024 12:53:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.042587078628524; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+95*Math.pow(10,+8)/67*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k)+u6(k)/u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+95*Math.pow(10,+8)/67*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 12:53:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.031790026280698; Expression=u7(k)-u4(k)-u5(k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)/67*Math.pow(10,-5)*u8(k)/u1(k)/u7(k)*u5(k)-u8(k)*u7(k)/u5(k)*93*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)/67*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)*93*Math.pow(10,-4)*getVariable(7,k)
Aug 31, 2024 12:54:13 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 5.031790026280698 -->> Avg.: 5.196686482733779 -->> Std. Dev.: 0.11571662250629665

Execution time: 1678.255 seconds.



@@;getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-61*Math.pow(10,-1)+99*Math.pow(10,+8)/67*Math.pow(10,-5)*getVariable(8,k)/getVariable(1,k)/getVariable(7,k)*getVariable(5,k)-getVariable(8,k)*getVariable(7,k)/getVariable(5,k)*93*Math.pow(10,-4)*getVariable(7,k)



Run #3
========
Aug 31, 2024 12:54:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=889965.3724968114; Expression=89*Math.pow(10,+4)-u8(k)+21*Math.pow(10,-3)/u4(k)*u2(k); Java Expression: 89*Math.pow(10,+4)-getVariable(8,k)+21*Math.pow(10,-3)/getVariable(4,k)*getVariable(2,k)
Aug 31, 2024 12:54:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=33.32701840980393; Expression=u9(k)/u9(k); Java Expression: getVariable(9,k)/getVariable(9,k)
Aug 31, 2024 12:54:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=24.443414341753133; Expression=u1(k)-u9(k); Java Expression: getVariable(1,k)-getVariable(9,k)
Aug 31, 2024 12:54:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=14.63523884992973; Expression=u9(k)-u5(k)/u1(k); Java Expression: getVariable(9,k)-getVariable(5,k)/getVariable(1,k)
Aug 31, 2024 12:54:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=10.102072320861637; Expression=u4(k)-u1(k)/u6(k); Java Expression: getVariable(4,k)-getVariable(1,k)/getVariable(6,k)
Aug 31, 2024 12:54:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.33047137813305; Expression=u1(k)+u5(k)-u1(k); Java Expression: getVariable(1,k)+getVariable(5,k)-getVariable(1,k)
Aug 31, 2024 12:54:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330471378133048; Expression=u5(k)*u2(k)/u2(k); Java Expression: getVariable(5,k)*getVariable(2,k)/getVariable(2,k)
Aug 31, 2024 12:54:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.328417089548399; Expression=25*Math.pow(10,-2)+u5(k); Java Expression: 25*Math.pow(10,-2)+getVariable(5,k)
Aug 31, 2024 12:54:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 31, 2024 12:54:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.826617352510731; Expression=37*Math.pow(10,-2)*u6(k); Java Expression: 37*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 12:54:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.404135094767029; Expression=34*Math.pow(10,-2)*u6(k); Java Expression: 34*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 12:54:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.053960890414428; Expression=34*Math.pow(10,-2)*u7(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 12:54:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837859; Expression=u7(k)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 12:54:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.058143081826715; Expression=57*Math.pow(10,-8)+u7(k)-u5(k)-u8(k)-u4(k); Java Expression: 57*Math.pow(10,-8)+getVariable(7,k)-getVariable(5,k)-getVariable(8,k)-getVariable(4,k)
Aug 31, 2024 12:54:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0566374860013426; Expression=57*Math.pow(10,-3)+u7(k)-u5(k)-u8(k)-u4(k); Java Expression: 57*Math.pow(10,-3)+getVariable(7,k)-getVariable(5,k)-getVariable(8,k)-getVariable(4,k)
Aug 31, 2024 12:54:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.055428726816687; Expression=24*Math.pow(10,-2)+u7(k)-u5(k)-u8(k)-u4(k); Java Expression: 24*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(8,k)-getVariable(4,k)
Aug 31, 2024 12:54:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.055247902374365; Expression=21*Math.pow(10,-2)+u7(k)-u5(k)-u8(k)-u4(k); Java Expression: 21*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(8,k)-getVariable(4,k)
Aug 31, 2024 12:54:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.055209923829576; Expression=19*Math.pow(10,-2)+u7(k)-u5(k)-u8(k)-u4(k); Java Expression: 19*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(8,k)-getVariable(4,k)
Aug 31, 2024 12:55:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.055209923823383; Expression=19*Math.pow(10,-2)+u7(k)-u5(k)-u8(k)-25*Math.pow(10,-9)-u4(k); Java Expression: 19*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(8,k)-25*Math.pow(10,-9)-getVariable(4,k)
Aug 31, 2024 12:55:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9493439162809905; Expression=57*Math.pow(10,-5)+u7(k)-u5(k)-u4(k)-u4(k)/u5(k); Java Expression: 57*Math.pow(10,-5)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(4,k)/getVariable(5,k)
Aug 31, 2024 12:55:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9493296107999; Expression=13*Math.pow(10,-5)+u7(k)-u5(k)-u4(k)-u4(k)/u5(k); Java Expression: 13*Math.pow(10,-5)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(4,k)/getVariable(5,k)
Aug 31, 2024 12:55:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.949327987233927; Expression=8*Math.pow(10,-5)+u7(k)-u5(k)-u4(k)-u4(k)/u5(k); Java Expression: 8*Math.pow(10,-5)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(4,k)/getVariable(5,k)
Aug 31, 2024 12:55:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9340142955586925; Expression=57*Math.pow(10,-3)+u7(k)-u5(k)/u4(k)-u4(k)-u5(k); Java Expression: 57*Math.pow(10,-3)+getVariable(7,k)-getVariable(5,k)/getVariable(4,k)-getVariable(4,k)-getVariable(5,k)
Aug 31, 2024 12:55:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.933102897485136; Expression=57*Math.pow(10,-5)+u7(k)-u5(k)-u4(k)-u3(k)/u5(k); Java Expression: 57*Math.pow(10,-5)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(3,k)/getVariable(5,k)
Aug 31, 2024 12:55:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.894641768720567; Expression=38*Math.pow(10,-5)+u7(k)-u5(k)-u4(k)-u4(k)/u9(k); Java Expression: 38*Math.pow(10,-5)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(4,k)/getVariable(9,k)
Aug 31, 2024 12:55:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.88113360141333; Expression=57*Math.pow(10,-8)+u7(k)-u5(k)-u4(k)-u1(k)/u5(k); Java Expression: 57*Math.pow(10,-8)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(1,k)/getVariable(5,k)
Aug 31, 2024 12:55:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.809063849326799; Expression=19*Math.pow(10,-8)+u7(k)-u5(k)-u4(k)-u1(k)/u9(k); Java Expression: 19*Math.pow(10,-8)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 12:55:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8065549019156135; Expression=57*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-u1(k)/u5(k); Java Expression: 57*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(1,k)/getVariable(5,k)
Aug 31, 2024 12:55:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.729001837660392; Expression=71*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-u1(k)/u9(k); Java Expression: 71*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 12:55:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.725432411145295; Expression=79*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-u1(k)/u9(k); Java Expression: 79*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 12:55:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.724714390627903; Expression=81*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-u1(k)/u9(k); Java Expression: 81*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 12:55:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.723224725051017; Expression=86*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-u1(k)/u9(k); Java Expression: 86*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 12:55:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.722171585386824; Expression=91*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-u1(k)/u9(k); Java Expression: 91*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 12:55:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.721555212683116; Expression=96*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-u1(k)/u9(k); Java Expression: 96*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 12:55:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.721484364360004; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-u1(k)/u9(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 12:55:46 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.721484364360004 -->> Avg.: 1.7105180735779727E9 -->> Std. Dev.: 7.850840352555446E9
Aug 31, 2024 12:55:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.613609165041626; Expression=96*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-u1(k)/6*Math.pow(10,+6)*64*Math.pow(10,-9)/u9(k)*u7(k); Java Expression: 96*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(1,k)/6*Math.pow(10,+6)*64*Math.pow(10,-9)/getVariable(9,k)*getVariable(7,k)
Aug 31, 2024 12:56:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.60086915027043; Expression=75*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-u1(k)/6*Math.pow(10,+6)*64*Math.pow(10,-9)/u9(k)*u1(k); Java Expression: 75*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(1,k)/6*Math.pow(10,+6)*64*Math.pow(10,-9)/getVariable(9,k)*getVariable(1,k)
Aug 31, 2024 12:56:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.587813398117902; Expression=75*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-u1(k)/6*Math.pow(10,+6)*74*Math.pow(10,-9)/u9(k)*u1(k); Java Expression: 75*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(1,k)/6*Math.pow(10,+6)*74*Math.pow(10,-9)/getVariable(9,k)*getVariable(1,k)
Aug 31, 2024 12:56:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.58651454242649; Expression=75*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-u1(k)/6*Math.pow(10,+6)*74*Math.pow(10,-9)/u4(k)*u1(k); Java Expression: 75*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(1,k)/6*Math.pow(10,+6)*74*Math.pow(10,-9)/getVariable(4,k)*getVariable(1,k)
Aug 31, 2024 12:56:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.585555427726311; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-u1(k)/6*Math.pow(10,+6)*74*Math.pow(10,-9)/u4(k)*u1(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(1,k)/6*Math.pow(10,+6)*74*Math.pow(10,-9)/getVariable(4,k)*getVariable(1,k)
Aug 31, 2024 12:56:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.570035694316844; Expression=75*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-u1(k)/6*Math.pow(10,+6)*90*Math.pow(10,-9)/u4(k)*u1(k); Java Expression: 75*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(1,k)/6*Math.pow(10,+6)*90*Math.pow(10,-9)/getVariable(4,k)*getVariable(1,k)
Aug 31, 2024 12:56:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.535738534109715; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/35*Math.pow(10,-9)*u1(k)/u9(k)*u1(k)*u1(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/35*Math.pow(10,-9)*getVariable(1,k)/getVariable(9,k)*getVariable(1,k)*getVariable(1,k)
Aug 31, 2024 12:56:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.518651393241444; Expression=96*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-6*Math.pow(10,+6)/64*Math.pow(10,-9)*u1(k)/u9(k)*u7(k)*u7(k); Java Expression: 96*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-6*Math.pow(10,+6)/64*Math.pow(10,-9)*getVariable(1,k)/getVariable(9,k)*getVariable(7,k)*getVariable(7,k)
Aug 31, 2024 12:56:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.49827363754663; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/35*Math.pow(10,-9)*u1(k)/u9(k)*u1(k)*u7(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/35*Math.pow(10,-9)*getVariable(1,k)/getVariable(9,k)*getVariable(1,k)*getVariable(7,k)
Aug 31, 2024 12:57:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.489661750965955; Expression=96*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-6*Math.pow(10,+6)/59*Math.pow(10,-9)*u1(k)/u4(k)*u7(k)*u7(k); Java Expression: 96*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-6*Math.pow(10,+6)/59*Math.pow(10,-9)*getVariable(1,k)/getVariable(4,k)*getVariable(7,k)*getVariable(7,k)
Aug 31, 2024 12:57:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.469767993428354; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/35*Math.pow(10,-9)*u1(k)/u4(k)*u1(k)*u7(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/35*Math.pow(10,-9)*getVariable(1,k)/getVariable(4,k)*getVariable(1,k)*getVariable(7,k)
Aug 31, 2024 12:57:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.440728818127534; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/31*Math.pow(10,-9)*u1(k)/u4(k)*u1(k)*u7(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/31*Math.pow(10,-9)*getVariable(1,k)/getVariable(4,k)*getVariable(1,k)*getVariable(7,k)
Aug 31, 2024 12:57:37 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.440728818127534 -->> Avg.: 133317.25715897762 -->> Std. Dev.: 688079.9517107725
Aug 31, 2024 12:57:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.433350975597675; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*u1(k)/u4(k)*u1(k)*u7(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(1,k)/getVariable(4,k)*getVariable(1,k)*getVariable(7,k)
Aug 31, 2024 12:58:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.432393562417817; Expression=98*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*u1(k)/u4(k)*u1(k)*u7(k); Java Expression: 98*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(1,k)/getVariable(4,k)*getVariable(1,k)*getVariable(7,k)
Aug 31, 2024 12:58:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.418711745347921; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*u1(k)/u4(k)*u1(k)*u7(k)-35*Math.pow(10,-3)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(1,k)/getVariable(4,k)*getVariable(1,k)*getVariable(7,k)-35*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 12:58:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.412249766208164; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*u1(k)/u4(k)*u1(k)*u7(k)-72*Math.pow(10,-3)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(1,k)/getVariable(4,k)*getVariable(1,k)*getVariable(7,k)-72*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 12:58:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.334538441537415; Expression=20*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*u1(k)/u4(k)*u1(k)*u7(k)-72*Math.pow(10,-3)+u8(k); Java Expression: 20*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(1,k)/getVariable(4,k)*getVariable(1,k)*getVariable(7,k)-72*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 12:58:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.332320772614188; Expression=97*Math.pow(10,-4)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*u1(k)/u4(k)*u1(k)*u7(k)-72*Math.pow(10,-3)+u8(k); Java Expression: 97*Math.pow(10,-4)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(1,k)/getVariable(4,k)*getVariable(1,k)*getVariable(7,k)-72*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 12:58:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.332221721150319; Expression=97*Math.pow(10,-8)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*u1(k)/u4(k)*u1(k)*u7(k)-35*Math.pow(10,-3)+u8(k); Java Expression: 97*Math.pow(10,-8)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(1,k)/getVariable(4,k)*getVariable(1,k)*getVariable(7,k)-35*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 12:58:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.288361923438197; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-34*Math.pow(10,+2)*55*Math.pow(10,-9)*u1(k)/u4(k)*u1(k)*u7(k)-40*Math.pow(10,-3)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-34*Math.pow(10,+2)*55*Math.pow(10,-9)*getVariable(1,k)/getVariable(4,k)*getVariable(1,k)*getVariable(7,k)-40*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 12:59:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.283487210899985; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u4(k)*u1(k)*u7(k)-35*Math.pow(10,-3)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(4,k)*getVariable(1,k)*getVariable(7,k)-35*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 12:59:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.282027130889539; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u4(k)*u1(k)*u7(k)-72*Math.pow(10,-3)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(4,k)*getVariable(1,k)*getVariable(7,k)-72*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 12:59:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.281377935457924; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u4(k)*u1(k)*u7(k)-91*Math.pow(10,-3)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(4,k)*getVariable(1,k)*getVariable(7,k)-91*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 12:59:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.281125016365777; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u4(k)*u1(k)*u7(k)-99*Math.pow(10,-3)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(4,k)*getVariable(1,k)*getVariable(7,k)-99*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 12:59:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.250734215271416; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*u7(k)/u4(k)*u1(k)*u7(k)-35*Math.pow(10,-3)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*getVariable(7,k)/getVariable(4,k)*getVariable(1,k)*getVariable(7,k)-35*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 12:59:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.249509267496489; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*u7(k)/u4(k)*u1(k)*u7(k)-35*Math.pow(10,-9)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*getVariable(7,k)/getVariable(4,k)*getVariable(1,k)*getVariable(7,k)-35*Math.pow(10,-9)+getVariable(8,k)
Aug 31, 2024 12:59:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.247401467844411; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*u7(k)/u4(k)*u1(k)*u7(k)+92*Math.pow(10,-3)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*getVariable(7,k)/getVariable(4,k)*getVariable(1,k)*getVariable(7,k)+92*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 1:00:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.246032196187458; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)-35*Math.pow(10,-9)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)-35*Math.pow(10,-9)+getVariable(8,k)
Aug 31, 2024 1:00:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.238024028774693; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)+92*Math.pow(10,-3)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)+92*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 1:00:17 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.238024028774693 -->> Avg.: 63.40298657490247 -->> Std. Dev.: 178.21802265173696
Aug 31, 2024 1:00:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.236495390784272; Expression=99*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)+92*Math.pow(10,-3)+u8(k); Java Expression: 99*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)+92*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 1:01:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.20089900869252; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)-35*Math.pow(10,-9)+u8(k)*u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)-35*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 1:01:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.20089900690583; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)-52*Math.pow(10,-9)+u8(k)*u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)-52*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 1:01:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.20089354743616; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)-52*Math.pow(10,-6)+u8(k)*u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)-52*Math.pow(10,-6)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 1:02:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.186524281153868; Expression=81*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)-52*Math.pow(10,-9)+u8(k)*u8(k); Java Expression: 81*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)-52*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 1:02:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.172121424918809; Expression=44*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)-52*Math.pow(10,-9)+u8(k)*u8(k); Java Expression: 44*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/25*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)-52*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 1:02:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.152793634947059; Expression=44*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-4*Math.pow(10,+6)/22*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)-52*Math.pow(10,-9)+u8(k)*u8(k); Java Expression: 44*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-4*Math.pow(10,+6)/22*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)-52*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 1:02:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.106508007634277; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/44*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)+u8(k)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/44*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 1:02:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.092913908380579; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/44*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)+92*Math.pow(10,-3)+u8(k)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/44*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)+92*Math.pow(10,-3)+getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 1:03:12 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.092913908380579 -->> Avg.: 11.72361327122303 -->> Std. Dev.: 12.721408002210984
Aug 31, 2024 1:03:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.04496427078195; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/44*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)+92*Math.pow(10,-2)+u8(k)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/44*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)+92*Math.pow(10,-2)+getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 1:03:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.04401812211402; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/44*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)+87*Math.pow(10,-2)+u8(k)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/44*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)+87*Math.pow(10,-2)+getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 1:03:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.044005444080081; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/44*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)+73*Math.pow(10,-2)+u8(k)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/44*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)+73*Math.pow(10,-2)+getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 1:04:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.043888349355513; Expression=91*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/44*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)+92*Math.pow(10,-2)+u8(k)+u8(k); Java Expression: 91*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/44*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)+92*Math.pow(10,-2)+getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 1:04:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.043612540799599; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/44*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)+77*Math.pow(10,-2)+u8(k)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/44*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)+77*Math.pow(10,-2)+getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 1:04:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.033918088704963; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/42*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)+92*Math.pow(10,-2)+u8(k)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/42*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)+92*Math.pow(10,-2)+getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 1:04:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.031363536055115; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/42*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)+92*Math.pow(10,-2)+65*Math.pow(10,-4)+23*Math.pow(10,-2)+u8(k)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/42*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)+92*Math.pow(10,-2)+65*Math.pow(10,-4)+23*Math.pow(10,-2)+getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 1:05:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.031000087077871; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/42*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)+95*Math.pow(10,-2)+20*Math.pow(10,-4)+12*Math.pow(10,-2)+u8(k)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/42*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)+95*Math.pow(10,-2)+20*Math.pow(10,-4)+12*Math.pow(10,-2)+getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 1:06:23 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.031000087077871 -->> Avg.: 5.6716210922318995 -->> Std. Dev.: 1.3198001988047312
Aug 31, 2024 1:06:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.030976011056099; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/42*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)+95*Math.pow(10,-2)+91*Math.pow(10,-4)+12*Math.pow(10,-2)+u8(k)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/42*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)+95*Math.pow(10,-2)+91*Math.pow(10,-4)+12*Math.pow(10,-2)+getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 1:06:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0309690593042475; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/42*Math.pow(10,-9)*u7(k)/u5(k)*u1(k)*u7(k)+96*Math.pow(10,-2)+20*Math.pow(10,-4)+12*Math.pow(10,-2)+u8(k)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/42*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(1,k)*getVariable(7,k)+96*Math.pow(10,-2)+20*Math.pow(10,-4)+12*Math.pow(10,-2)+getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 1:07:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.901726840524946; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/42*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+92*Math.pow(10,-2)+29*Math.pow(10,-5)+23*Math.pow(10,-1)+u8(k)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/42*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+92*Math.pow(10,-2)+29*Math.pow(10,-5)+23*Math.pow(10,-1)+getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 1:07:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.814365282922085; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/42*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+92*Math.pow(10,-2)+29*Math.pow(10,-5)+23*Math.pow(10,-1)*u8(k)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/42*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+92*Math.pow(10,-2)+29*Math.pow(10,-5)+23*Math.pow(10,-1)*getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 1:08:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.813669996361739; Expression=99*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/42*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+92*Math.pow(10,-2)+29*Math.pow(10,-5)+23*Math.pow(10,-1)*u8(k)+u8(k); Java Expression: 99*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/42*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+92*Math.pow(10,-2)+29*Math.pow(10,-5)+23*Math.pow(10,-1)*getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 1:08:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.812409094914907; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/42*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+92*Math.pow(10,-2)+29*Math.pow(10,-2)+23*Math.pow(10,-1)*u8(k)+u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/42*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+92*Math.pow(10,-2)+29*Math.pow(10,-2)+23*Math.pow(10,-1)*getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 1:08:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.72521329058691; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+92*Math.pow(10,-2)+40*Math.pow(10,-5)+64*Math.pow(10,-1)+u8(k)*u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+92*Math.pow(10,-2)+40*Math.pow(10,-5)+64*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 1:09:45 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.72521329058691 -->> Avg.: 5.221575414685505 -->> Std. Dev.: 0.25611109491205386
Aug 31, 2024 1:09:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.7073056685084556; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+92*Math.pow(10,-2)+40*Math.pow(10,-2)+64*Math.pow(10,-1)*u8(k)-u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+92*Math.pow(10,-2)+40*Math.pow(10,-2)+64*Math.pow(10,-1)*getVariable(8,k)-getVariable(8,k)
Aug 31, 2024 1:09:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.7070369114021835; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)*92*Math.pow(10,-2)+40*Math.pow(10,-2)+64*Math.pow(10,-1)+u8(k)*u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)*92*Math.pow(10,-2)+40*Math.pow(10,-2)+64*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 1:09:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.7038599323821195; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+92*Math.pow(10,-2)+40*Math.pow(10,-2)+64*Math.pow(10,-1)+u8(k)*u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+92*Math.pow(10,-2)+40*Math.pow(10,-2)+64*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 1:10:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.7038146522766064; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+92*Math.pow(10,-2)+40*Math.pow(10,-2)+65*Math.pow(10,-1)+u8(k)*u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+92*Math.pow(10,-2)+40*Math.pow(10,-2)+65*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 1:10:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.647427154657098; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+92*Math.pow(10,-2)+93*Math.pow(10,-2)+64*Math.pow(10,-1)*u8(k)-u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+92*Math.pow(10,-2)+93*Math.pow(10,-2)+64*Math.pow(10,-1)*getVariable(8,k)-getVariable(8,k)
Aug 31, 2024 1:12:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.644861144767591; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+92*Math.pow(10,-2)+98*Math.pow(10,-2)+64*Math.pow(10,-1)*u8(k)-u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+92*Math.pow(10,-2)+98*Math.pow(10,-2)+64*Math.pow(10,-1)*getVariable(8,k)-getVariable(8,k)
Aug 31, 2024 1:12:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.6439850788630626; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+99*Math.pow(10,-2)+93*Math.pow(10,-2)+64*Math.pow(10,-1)*u8(k)-u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+99*Math.pow(10,-2)+93*Math.pow(10,-2)+64*Math.pow(10,-1)*getVariable(8,k)-getVariable(8,k)
Aug 31, 2024 1:13:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.642490940192011; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+99*Math.pow(10,-2)+97*Math.pow(10,-2)+64*Math.pow(10,-1)*u8(k)-u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+99*Math.pow(10,-2)+97*Math.pow(10,-2)+64*Math.pow(10,-1)*getVariable(8,k)-getVariable(8,k)
Aug 31, 2024 1:13:12 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.642490940192011 -->> Avg.: 5.0387898181625825 -->> Std. Dev.: 0.2541734915715299
Aug 31, 2024 1:13:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.642171184804625; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+64*Math.pow(10,-1)*u8(k)-u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+64*Math.pow(10,-1)*getVariable(8,k)-getVariable(8,k)
Aug 31, 2024 1:15:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.64187295046901; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+99*Math.pow(10,-2)+99*Math.pow(10,-2)+64*Math.pow(10,-1)*u8(k)-u8(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+99*Math.pow(10,-2)+99*Math.pow(10,-2)+64*Math.pow(10,-1)*getVariable(8,k)-getVariable(8,k)
Aug 31, 2024 1:15:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.641596241333514; Expression=99*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+64*Math.pow(10,-1)*u8(k)-u8(k); Java Expression: 99*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+64*Math.pow(10,-1)*getVariable(8,k)-getVariable(8,k)
Aug 31, 2024 1:15:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.607724987883727; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+99*Math.pow(10,-2)+98*Math.pow(10,-5)+u8(k)*u8(k)+64*Math.pow(10,-1)+u8(k)+u4(k)/63*Math.pow(10,-2)+u8(k)-37*Math.pow(10,+1)/u6(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+99*Math.pow(10,-2)+98*Math.pow(10,-5)+getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-1)+getVariable(8,k)+getVariable(4,k)/63*Math.pow(10,-2)+getVariable(8,k)-37*Math.pow(10,+1)/getVariable(6,k)
Aug 31, 2024 1:16:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.432899751292047; Expression=97*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+u8(k)*u8(k)+64*Math.pow(10,-1)+u8(k)+u2(k)/63*Math.pow(10,-2)+u8(k)-37*Math.pow(10,+1)/u6(k); Java Expression: 97*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-1)+getVariable(8,k)+getVariable(2,k)/63*Math.pow(10,-2)+getVariable(8,k)-37*Math.pow(10,+1)/getVariable(6,k)
Aug 31, 2024 1:16:43 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.432899751292047 -->> Avg.: 4.893183850950912 -->> Std. Dev.: 0.22547415223325667
Aug 31, 2024 1:17:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.421379407485641; Expression=99*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+u8(k)*u8(k)+64*Math.pow(10,-1)+u8(k)+u2(k)/6*Math.pow(10,-2)+u8(k)-38*Math.pow(10,+1)/u6(k); Java Expression: 99*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-1)+getVariable(8,k)+getVariable(2,k)/6*Math.pow(10,-2)+getVariable(8,k)-38*Math.pow(10,+1)/getVariable(6,k)
Aug 31, 2024 1:18:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.421169949973198; Expression=99*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+u8(k)*u8(k)+64*Math.pow(10,-1)+u8(k)+u6(k)/6*Math.pow(10,-2)+u8(k)-38*Math.pow(10,+1)/u6(k); Java Expression: 99*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-1)+getVariable(8,k)+getVariable(6,k)/6*Math.pow(10,-2)+getVariable(8,k)-38*Math.pow(10,+1)/getVariable(6,k)
Aug 31, 2024 1:20:25 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.421169949973198 -->> Avg.: 4.749449856964305 -->> Std. Dev.: 0.21395027506500033
Aug 31, 2024 1:20:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.419134549487027; Expression=79*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+u8(k)*u8(k)+64*Math.pow(10,-1)+u8(k)+u2(k)/1*Math.pow(10,-2)+u8(k)-44*Math.pow(10,+1)/u6(k); Java Expression: 79*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-1)+getVariable(8,k)+getVariable(2,k)/1*Math.pow(10,-2)+getVariable(8,k)-44*Math.pow(10,+1)/getVariable(6,k)
Aug 31, 2024 1:20:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.413001499702333; Expression=79*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+u8(k)*u8(k)+64*Math.pow(10,-1)+u8(k)+u1(k)*1*Math.pow(10,-2)+u8(k)-44*Math.pow(10,+1)/u6(k); Java Expression: 79*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-1)+getVariable(8,k)+getVariable(1,k)*1*Math.pow(10,-2)+getVariable(8,k)-44*Math.pow(10,+1)/getVariable(6,k)
Aug 31, 2024 1:21:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.378251382499089; Expression=99*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+u8(k)*u8(k)+64*Math.pow(10,-2)+u8(k)+u6(k)*6*Math.pow(10,-2)+u8(k)-38*Math.pow(10,+1)/u6(k); Java Expression: 99*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-10*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-2)+getVariable(8,k)+getVariable(6,k)*6*Math.pow(10,-2)+getVariable(8,k)-38*Math.pow(10,+1)/getVariable(6,k)
Aug 31, 2024 1:23:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.25950470490789; Expression=99*Math.pow(10,-2)+u7(k)-u5(k)-u4(k)-15*Math.pow(10,+6)/28*Math.pow(10,-9)*u7(k)/u5(k)*u7(k)*u7(k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+u8(k)*u8(k)+64*Math.pow(10,-1)+u8(k)+u6(k)*6*Math.pow(10,-2)+u8(k)-38*Math.pow(10,+1)/u6(k); Java Expression: 99*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-15*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-1)+getVariable(8,k)+getVariable(6,k)*6*Math.pow(10,-2)+getVariable(8,k)-38*Math.pow(10,+1)/getVariable(6,k)
Aug 31, 2024 1:24:31 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.25950470490789 -->> Avg.: 4.622422982768574 -->> Std. Dev.: 0.19003236572602267

Execution time: 1820.473 seconds.



@@;99*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-15*Math.pow(10,+6)/28*Math.pow(10,-9)*getVariable(7,k)/getVariable(5,k)*getVariable(7,k)*getVariable(7,k)+99*Math.pow(10,-2)+98*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)+64*Math.pow(10,-1)+getVariable(8,k)+getVariable(6,k)*6*Math.pow(10,-2)+getVariable(8,k)-38*Math.pow(10,+1)/getVariable(6,k)



Run #4
========
Aug 31, 2024 1:24:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.926899415308914E9; Expression=2*Math.pow(10,+8)*u3(k); Java Expression: 2*Math.pow(10,+8)*getVariable(3,k)
Aug 31, 2024 1:24:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=1.6049663792624407E9; Expression=45*Math.pow(10,-8)+u7(k)+16*Math.pow(10,+4)*u6(k)*u6(k)-u3(k)*9*Math.pow(10,+2)-u5(k)+u1(k)-98*Math.pow(10,-3)+55*Math.pow(10,-3)+u1(k)-u9(k)+u9(k)*u7(k)*7*Math.pow(10,-3)*u3(k)-97*Math.pow(10,+6)/u4(k)+u2(k)*u8(k)*u2(k)/32*Math.pow(10,-8)*91*Math.pow(10,-6)/37*Math.pow(10,+5)/u6(k); Java Expression: 45*Math.pow(10,-8)+getVariable(7,k)+16*Math.pow(10,+4)*getVariable(6,k)*getVariable(6,k)-getVariable(3,k)*9*Math.pow(10,+2)-getVariable(5,k)+getVariable(1,k)-98*Math.pow(10,-3)+55*Math.pow(10,-3)+getVariable(1,k)-getVariable(9,k)+getVariable(9,k)*getVariable(7,k)*7*Math.pow(10,-3)*getVariable(3,k)-97*Math.pow(10,+6)/getVariable(4,k)+getVariable(2,k)*getVariable(8,k)*getVariable(2,k)/32*Math.pow(10,-8)*91*Math.pow(10,-6)/37*Math.pow(10,+5)/getVariable(6,k)
Aug 31, 2024 1:24:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=44.45942063552582; Expression=u9(k)+u4(k); Java Expression: getVariable(9,k)+getVariable(4,k)
Aug 31, 2024 1:24:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=33.095659744462964; Expression=u6(k)/u1(k); Java Expression: getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 1:24:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=10.398031733499327; Expression=31*Math.pow(10,-9)*u6(k)/u4(k)+u4(k); Java Expression: 31*Math.pow(10,-9)*getVariable(6,k)/getVariable(4,k)+getVariable(4,k)
Aug 31, 2024 1:24:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330651315406092; Expression=39*Math.pow(10,-8)-76*Math.pow(10,-4)+u5(k); Java Expression: 39*Math.pow(10,-8)-76*Math.pow(10,-4)+getVariable(5,k)
Aug 31, 2024 1:24:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.33024516417838; Expression=1*Math.pow(10,-2)+u5(k); Java Expression: 1*Math.pow(10,-2)+getVariable(5,k)
Aug 31, 2024 1:24:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 31, 2024 1:24:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037399956429118; Expression=81*Math.pow(10,-6)/47*Math.pow(10,-5)/73*Math.pow(10,+8)-u4(k)*24*Math.pow(10,-4)/u7(k)/u8(k)*u7(k)/u2(k)+u5(k)+u8(k); Java Expression: 81*Math.pow(10,-6)/47*Math.pow(10,-5)/73*Math.pow(10,+8)-getVariable(4,k)*24*Math.pow(10,-4)/getVariable(7,k)/getVariable(8,k)*getVariable(7,k)/getVariable(2,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:24:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.963466721882723; Expression=u8(k)+u5(k)-u4(k)/u6(k); Java Expression: getVariable(8,k)+getVariable(5,k)-getVariable(4,k)/getVariable(6,k)
Aug 31, 2024 1:24:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.866342216330135; Expression=u8(k)+u5(k)-u2(k)/u6(k); Java Expression: getVariable(8,k)+getVariable(5,k)-getVariable(2,k)/getVariable(6,k)
Aug 31, 2024 1:24:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.716844265344505; Expression=81*Math.pow(10,-6)/47*Math.pow(10,-5)/73*Math.pow(10,+8)-u4(k)*24*Math.pow(10,-1)/u7(k)+u8(k)*u7(k)/u2(k)+u5(k)+u8(k); Java Expression: 81*Math.pow(10,-6)/47*Math.pow(10,-5)/73*Math.pow(10,+8)-getVariable(4,k)*24*Math.pow(10,-1)/getVariable(7,k)+getVariable(8,k)*getVariable(7,k)/getVariable(2,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:24:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.716839835565499; Expression=81*Math.pow(10,-6)/47*Math.pow(10,+5)/73*Math.pow(10,-8)-u4(k)*24*Math.pow(10,-1)/u7(k)+u8(k)*u7(k)/u2(k)+u5(k)+u8(k); Java Expression: 81*Math.pow(10,-6)/47*Math.pow(10,+5)/73*Math.pow(10,-8)-getVariable(4,k)*24*Math.pow(10,-1)/getVariable(7,k)+getVariable(8,k)*getVariable(7,k)/getVariable(2,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:25:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.716839835561055; Expression=81*Math.pow(10,-6)/47*Math.pow(10,-5)/73*Math.pow(10,-8)-u4(k)*24*Math.pow(10,-1)/u7(k)+u8(k)*u7(k)/u2(k)+u5(k)+u8(k); Java Expression: 81*Math.pow(10,-6)/47*Math.pow(10,-5)/73*Math.pow(10,-8)-getVariable(4,k)*24*Math.pow(10,-1)/getVariable(7,k)+getVariable(8,k)*getVariable(7,k)/getVariable(2,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:25:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.660310451558609; Expression=81*Math.pow(10,-6)-47*Math.pow(10,+5)/73*Math.pow(10,-8)-u4(k)*24*Math.pow(10,-1)/u5(k)+u8(k)*u7(k)/u2(k)+u5(k)+u8(k); Java Expression: 81*Math.pow(10,-6)-47*Math.pow(10,+5)/73*Math.pow(10,-8)-getVariable(4,k)*24*Math.pow(10,-1)/getVariable(5,k)+getVariable(8,k)*getVariable(7,k)/getVariable(2,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:25:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.657509832311746; Expression=81*Math.pow(10,-6)/47*Math.pow(10,+5)/73*Math.pow(10,-8)-u4(k)*24*Math.pow(10,-1)/u7(k)+u8(k)*u7(k)/u1(k)+u5(k)+u8(k); Java Expression: 81*Math.pow(10,-6)/47*Math.pow(10,+5)/73*Math.pow(10,-8)-getVariable(4,k)*24*Math.pow(10,-1)/getVariable(7,k)+getVariable(8,k)*getVariable(7,k)/getVariable(1,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:25:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.629222771916027; Expression=81*Math.pow(10,-6)-47*Math.pow(10,+5)/73*Math.pow(10,-8)-u4(k)*24*Math.pow(10,-1)/u4(k)+u8(k)*u7(k)/u2(k)+u5(k)+u8(k); Java Expression: 81*Math.pow(10,-6)-47*Math.pow(10,+5)/73*Math.pow(10,-8)-getVariable(4,k)*24*Math.pow(10,-1)/getVariable(4,k)+getVariable(8,k)*getVariable(7,k)/getVariable(2,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:25:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.629215923415069; Expression=81*Math.pow(10,-6)/44*Math.pow(10,-5)/73*Math.pow(10,-8)-u7(k)*24*Math.pow(10,-1)/u7(k)+u8(k)*u7(k)/u2(k)+u5(k)+u8(k); Java Expression: 81*Math.pow(10,-6)/44*Math.pow(10,-5)/73*Math.pow(10,-8)-getVariable(7,k)*24*Math.pow(10,-1)/getVariable(7,k)+getVariable(8,k)*getVariable(7,k)/getVariable(2,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:25:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.536271016279481; Expression=34*Math.pow(10,-6)/10*Math.pow(10,-5)/98*Math.pow(10,-8)-u4(k)*99*Math.pow(10,-1)/u7(k)+u8(k)*u7(k)/u2(k)+u5(k)+u8(k); Java Expression: 34*Math.pow(10,-6)/10*Math.pow(10,-5)/98*Math.pow(10,-8)-getVariable(4,k)*99*Math.pow(10,-1)/getVariable(7,k)+getVariable(8,k)*getVariable(7,k)/getVariable(2,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:25:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.51514196412982; Expression=64*Math.pow(10,-6)/73*Math.pow(10,+5)/40*Math.pow(10,-8)-u4(k)*93*Math.pow(10,-1)/u7(k)+u8(k)*u7(k)/u2(k)+u5(k)+u8(k); Java Expression: 64*Math.pow(10,-6)/73*Math.pow(10,+5)/40*Math.pow(10,-8)-getVariable(4,k)*93*Math.pow(10,-1)/getVariable(7,k)+getVariable(8,k)*getVariable(7,k)/getVariable(2,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:25:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.493689621412409; Expression=94*Math.pow(10,-6)/54*Math.pow(10,-2)/62*Math.pow(10,-8)-u4(k)*83*Math.pow(10,-1)/u7(k)+u8(k)*u7(k)/u2(k)+u5(k)+u8(k); Java Expression: 94*Math.pow(10,-6)/54*Math.pow(10,-2)/62*Math.pow(10,-8)-getVariable(4,k)*83*Math.pow(10,-1)/getVariable(7,k)+getVariable(8,k)*getVariable(7,k)/getVariable(2,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:25:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.484323663064984; Expression=81*Math.pow(10,-6)/47*Math.pow(10,-5)/73*Math.pow(10,+8)-u4(k)*24*Math.pow(10,-1)/u9(k)+u8(k)*u7(k)/u2(k)+u5(k)+u8(k); Java Expression: 81*Math.pow(10,-6)/47*Math.pow(10,-5)/73*Math.pow(10,+8)-getVariable(4,k)*24*Math.pow(10,-1)/getVariable(9,k)+getVariable(8,k)*getVariable(7,k)/getVariable(2,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:25:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.734646442180904; Expression=37*Math.pow(10,-6)-86*Math.pow(10,+5)/82*Math.pow(10,-8)-u4(k)*47*Math.pow(10,-1)/u4(k)+u8(k)*u7(k)/u3(k)+u5(k)+u8(k); Java Expression: 37*Math.pow(10,-6)-86*Math.pow(10,+5)/82*Math.pow(10,-8)-getVariable(4,k)*47*Math.pow(10,-1)/getVariable(4,k)+getVariable(8,k)*getVariable(7,k)/getVariable(3,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:25:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.65999133983133; Expression=37*Math.pow(10,-6)-86*Math.pow(10,+2)/82*Math.pow(10,-8)-u4(k)*47*Math.pow(10,-1)/u4(k)+u8(k)*u7(k)/u5(k)+u5(k)+u8(k); Java Expression: 37*Math.pow(10,-6)-86*Math.pow(10,+2)/82*Math.pow(10,-8)-getVariable(4,k)*47*Math.pow(10,-1)/getVariable(4,k)+getVariable(8,k)*getVariable(7,k)/getVariable(5,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:25:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.598852294173236; Expression=37*Math.pow(10,-6)-86*Math.pow(10,-5)/82*Math.pow(10,-8)-u4(k)*47*Math.pow(10,-1)/u9(k)+u8(k)*u7(k)/u3(k)+u5(k)+u8(k); Java Expression: 37*Math.pow(10,-6)-86*Math.pow(10,-5)/82*Math.pow(10,-8)-getVariable(4,k)*47*Math.pow(10,-1)/getVariable(9,k)+getVariable(8,k)*getVariable(7,k)/getVariable(3,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:25:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.598802180212654; Expression=37*Math.pow(10,-6)-86*Math.pow(10,+5)/82*Math.pow(10,-8)-u4(k)*47*Math.pow(10,-1)/u9(k)+u8(k)*u7(k)/u3(k)+u5(k)+u8(k); Java Expression: 37*Math.pow(10,-6)-86*Math.pow(10,+5)/82*Math.pow(10,-8)-getVariable(4,k)*47*Math.pow(10,-1)/getVariable(9,k)+getVariable(8,k)*getVariable(7,k)/getVariable(3,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:25:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.598747119128057; Expression=37*Math.pow(10,-6)-86*Math.pow(10,+5)/39*Math.pow(10,-8)-u4(k)*47*Math.pow(10,-1)/u9(k)+u8(k)*u7(k)/u3(k)+u5(k)+u8(k); Java Expression: 37*Math.pow(10,-6)-86*Math.pow(10,+5)/39*Math.pow(10,-8)-getVariable(4,k)*47*Math.pow(10,-1)/getVariable(9,k)+getVariable(8,k)*getVariable(7,k)/getVariable(3,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:25:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.483887120794713; Expression=81*Math.pow(10,-6)-47*Math.pow(10,+5)*73*Math.pow(10,-8)-u4(k)*24*Math.pow(10,-1)/u4(k)+u8(k)*u7(k)/u5(k)+u5(k)+u8(k); Java Expression: 81*Math.pow(10,-6)-47*Math.pow(10,+5)*73*Math.pow(10,-8)-getVariable(4,k)*24*Math.pow(10,-1)/getVariable(4,k)+getVariable(8,k)*getVariable(7,k)/getVariable(5,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:25:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.062395904908206; Expression=u4(k)-u4(k)/u8(k)-u7(k)*u3(k)/37*Math.pow(10,-1)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*getVariable(3,k)/37*Math.pow(10,-1)+getVariable(5,k)
Aug 31, 2024 1:25:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.642733430831769; Expression=u4(k)-u4(k)/u8(k)-u7(k)*37*Math.pow(10,-1)/u3(k)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*37*Math.pow(10,-1)/getVariable(3,k)+getVariable(5,k)
Aug 31, 2024 1:25:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.619421180237152; Expression=u4(k)-u4(k)/u8(k)-u7(k)*u3(k)/48*Math.pow(10,-1)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*getVariable(3,k)/48*Math.pow(10,-1)+getVariable(5,k)
Aug 31, 2024 1:25:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.602968183641293; Expression=u4(k)-u4(k)/u8(k)-u7(k)*36*Math.pow(10,-1)/u3(k)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*36*Math.pow(10,-1)/getVariable(3,k)+getVariable(5,k)
Aug 31, 2024 1:26:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.598772460500472; Expression=u4(k)-u4(k)/u8(k)-u7(k)*31*Math.pow(10,-1)/u3(k)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*31*Math.pow(10,-1)/getVariable(3,k)+getVariable(5,k)
Aug 31, 2024 1:26:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.561228695296705; Expression=u4(k)-u4(k)/u8(k)-u7(k)*33*Math.pow(10,-1)/u3(k)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*33*Math.pow(10,-1)/getVariable(3,k)+getVariable(5,k)
Aug 31, 2024 1:26:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.147244320356234; Expression=u4(k)-u4(k)/u8(k)-u7(k)*81*Math.pow(10,-1)/u6(k)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*81*Math.pow(10,-1)/getVariable(6,k)+getVariable(5,k)
Aug 31, 2024 1:26:17 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.147244320356234 -->> Avg.: 2.5387715681782804E9 -->> Std. Dev.: 1.0294806112802341E10
Aug 31, 2024 1:26:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.138006312056642; Expression=u4(k)-u4(k)/u8(k)-u7(k)*83*Math.pow(10,-1)/u6(k)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*83*Math.pow(10,-1)/getVariable(6,k)+getVariable(5,k)
Aug 31, 2024 1:27:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1369499777614; Expression=u4(k)-u4(k)/u8(k)-u7(k)*84*Math.pow(10,-1)/u6(k)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*84*Math.pow(10,-1)/getVariable(6,k)+getVariable(5,k)
Aug 31, 2024 1:28:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1369499777613985; Expression=u4(k)-u4(k)/u8(k)-u7(k)*84*Math.pow(10,-1)/u6(k)+u5(k)+u7(k)-u7(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*84*Math.pow(10,-1)/getVariable(6,k)+getVariable(5,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 1:28:17 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.1369499777613985 -->> Avg.: 389113.21962407394 -->> Std. Dev.: 1993429.4027185875
Aug 31, 2024 1:28:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.133697806326313; Expression=u4(k)-u4(k)/u8(k)-u7(k)*84*Math.pow(10,-1)/u6(k)+u5(k)-u8(k)/u4(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*84*Math.pow(10,-1)/getVariable(6,k)+getVariable(5,k)-getVariable(8,k)/getVariable(4,k)
Aug 31, 2024 1:29:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.133636024686425; Expression=u4(k)-u4(k)/u8(k)-u7(k)*84*Math.pow(10,-1)/u6(k)+u5(k)-u8(k)/u3(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*84*Math.pow(10,-1)/getVariable(6,k)+getVariable(5,k)-getVariable(8,k)/getVariable(3,k)
Aug 31, 2024 1:29:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.128480554403371; Expression=u4(k)-u4(k)/u8(k)-u7(k)*84*Math.pow(10,-1)/u6(k)+u5(k)+u9(k)/u7(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*84*Math.pow(10,-1)/getVariable(6,k)+getVariable(5,k)+getVariable(9,k)/getVariable(7,k)
Aug 31, 2024 1:29:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0933090527029945; Expression=u4(k)-u4(k)/u8(k)-u7(k)*91*Math.pow(10,-1)/u6(k)+u5(k)+u9(k)/u4(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*91*Math.pow(10,-1)/getVariable(6,k)+getVariable(5,k)+getVariable(9,k)/getVariable(4,k)
Aug 31, 2024 1:29:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0794957162794425; Expression=u4(k)-u4(k)/u8(k)-u7(k)*91*Math.pow(10,-1)/u6(k)+u5(k)+u9(k)/u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*91*Math.pow(10,-1)/getVariable(6,k)+getVariable(5,k)+getVariable(9,k)/getVariable(5,k)
Aug 31, 2024 1:29:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0647764688772705; Expression=u4(k)-u4(k)/u8(k)-u7(k)*94*Math.pow(10,-1)/u6(k)+u5(k)+u9(k)/u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*94*Math.pow(10,-1)/getVariable(6,k)+getVariable(5,k)+getVariable(9,k)/getVariable(5,k)
Aug 31, 2024 1:30:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.064687594631335; Expression=u4(k)-u4(k)/u8(k)-u7(k)*95*Math.pow(10,-1)/u6(k)+u5(k)+u9(k)/u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*95*Math.pow(10,-1)/getVariable(6,k)+getVariable(5,k)+getVariable(9,k)/getVariable(5,k)
Aug 31, 2024 1:30:32 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.064687594631335 -->> Avg.: 111.6100704365601 -->> Std. Dev.: 394.43138453671406
Aug 31, 2024 1:32:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.953873474512874; Expression=u4(k)-u4(k)/u8(k)-u7(k)*77*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*77*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(5,k)
Aug 31, 2024 1:32:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.951449161589786; Expression=u4(k)-u4(k)/u8(k)-u7(k)*84*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*84*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(5,k)
Aug 31, 2024 1:32:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.937663925057652; Expression=u4(k)-u4(k)/u8(k)-u7(k)*81*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*81*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(5,k)
Aug 31, 2024 1:32:57 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 4.937663925057652 -->> Avg.: 11.27005276105698 -->> Std. Dev.: 11.667621029940838
Aug 31, 2024 1:33:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.937651440325295; Expression=u4(k)-u4(k)/u8(k)-u7(k)*81*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u5(k)*u4(k)/u1(k)/86*Math.pow(10,-3)+u5(k)+73*Math.pow(10,-3)/u2(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*81*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(5,k)*getVariable(4,k)/getVariable(1,k)/86*Math.pow(10,-3)+getVariable(5,k)+73*Math.pow(10,-3)/getVariable(2,k)
Aug 31, 2024 1:33:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.93664897014292; Expression=u4(k)-u4(k)/u8(k)-u7(k)*81*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u5(k)*u4(k)/u2(k)/86*Math.pow(10,-9)+u5(k)+73*Math.pow(10,-1)/u2(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*81*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(5,k)*getVariable(4,k)/getVariable(2,k)/86*Math.pow(10,-9)+getVariable(5,k)+73*Math.pow(10,-1)/getVariable(2,k)
Aug 31, 2024 1:33:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.936253090216387; Expression=u4(k)-u4(k)/u8(k)-u7(k)*81*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u6(k)*u4(k)/86*Math.pow(10,-3)/u1(k)+73*Math.pow(10,-3)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*81*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(6,k)*getVariable(4,k)/86*Math.pow(10,-3)/getVariable(1,k)+73*Math.pow(10,-3)+getVariable(5,k)
Aug 31, 2024 1:33:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.936234247593785; Expression=u4(k)-u4(k)/u8(k)-u7(k)*81*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u6(k)*u1(k)/86*Math.pow(10,-3)/u1(k)+73*Math.pow(10,-3)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*81*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(6,k)*getVariable(1,k)/86*Math.pow(10,-3)/getVariable(1,k)+73*Math.pow(10,-3)+getVariable(5,k)
Aug 31, 2024 1:33:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.934963149313503; Expression=u4(k)-u4(k)/u8(k)-u7(k)*81*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u6(k)*u4(k)/86*Math.pow(10,-1)/u9(k)+73*Math.pow(10,-8)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*81*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(6,k)*getVariable(4,k)/86*Math.pow(10,-1)/getVariable(9,k)+73*Math.pow(10,-8)+getVariable(5,k)
Aug 31, 2024 1:34:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9220388074578665; Expression=u4(k)-u4(k)/u8(k)-u7(k)*91*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u5(k)*u4(k)/u1(k)/96*Math.pow(10,-8)+u5(k)+u2(k)/u2(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*91*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(5,k)*getVariable(4,k)/getVariable(1,k)/96*Math.pow(10,-8)+getVariable(5,k)+getVariable(2,k)/getVariable(2,k)
Aug 31, 2024 1:34:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.922034972264853; Expression=u4(k)-u4(k)/u8(k)-u7(k)*91*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u5(k)*u4(k)/u1(k)/96*Math.pow(10,-3)+u5(k)+u2(k)/u2(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*91*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(5,k)*getVariable(4,k)/getVariable(1,k)/96*Math.pow(10,-3)+getVariable(5,k)+getVariable(2,k)/getVariable(2,k)
Aug 31, 2024 1:34:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.921682340867468; Expression=u4(k)-u4(k)/u8(k)-u7(k)*91*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u5(k)*u4(k)/u1(k)/96*Math.pow(10,-1)+u5(k)+u2(k)/u2(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*91*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(5,k)*getVariable(4,k)/getVariable(1,k)/96*Math.pow(10,-1)+getVariable(5,k)+getVariable(2,k)/getVariable(2,k)
Aug 31, 2024 1:34:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.912232879968295; Expression=u4(k)-u4(k)/u8(k)-u7(k)*81*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u5(k)*u4(k)/u1(k)/86*Math.pow(10,-2)+u5(k)+u2(k)/u8(k)/u2(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*81*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(5,k)*getVariable(4,k)/getVariable(1,k)/86*Math.pow(10,-2)+getVariable(5,k)+getVariable(2,k)/getVariable(8,k)/getVariable(2,k)
Aug 31, 2024 1:34:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9026454336695044; Expression=u4(k)-u4(k)/u8(k)-u7(k)*81*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u6(k)*u1(k)/86*Math.pow(10,-2)/u8(k)+73*Math.pow(10,-8)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*81*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(6,k)*getVariable(1,k)/86*Math.pow(10,-2)/getVariable(8,k)+73*Math.pow(10,-8)+getVariable(5,k)
Aug 31, 2024 1:34:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.893631075910729; Expression=u4(k)-u4(k)/u8(k)-u7(k)*84*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u6(k)*u4(k)/75*Math.pow(10,-2)/u8(k)+18*Math.pow(10,-8)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*84*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(6,k)*getVariable(4,k)/75*Math.pow(10,-2)/getVariable(8,k)+18*Math.pow(10,-8)+getVariable(5,k)
Aug 31, 2024 1:35:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.888364276777889; Expression=u4(k)-u4(k)/u8(k)-u7(k)*81*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u6(k)*u6(k)/86*Math.pow(10,-2)/u8(k)+73*Math.pow(10,-8)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*81*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(6,k)*getVariable(6,k)/86*Math.pow(10,-2)/getVariable(8,k)+73*Math.pow(10,-8)+getVariable(5,k)
Aug 31, 2024 1:35:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.876712521151424; Expression=u4(k)-u4(k)/u8(k)-u7(k)*84*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u5(k)*u4(k)/u1(k)/74*Math.pow(10,-4)+u5(k)+u2(k)/u8(k)/u2(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*84*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(5,k)*getVariable(4,k)/getVariable(1,k)/74*Math.pow(10,-4)+getVariable(5,k)+getVariable(2,k)/getVariable(8,k)/getVariable(2,k)
Aug 31, 2024 1:35:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.81617315942224; Expression=u4(k)-u4(k)/u8(k)-u7(k)*81*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u6(k)/u1(k)+86*Math.pow(10,-2)-u8(k)+73*Math.pow(10,-8)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*81*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(6,k)/getVariable(1,k)+86*Math.pow(10,-2)-getVariable(8,k)+73*Math.pow(10,-8)+getVariable(5,k)
Aug 31, 2024 1:35:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.806022934444713; Expression=u4(k)-u4(k)/u8(k)-u7(k)*81*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u6(k)/u1(k)+86*Math.pow(10,-8)-u8(k)+73*Math.pow(10,-2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*81*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(6,k)/getVariable(1,k)+86*Math.pow(10,-8)-getVariable(8,k)+73*Math.pow(10,-2)+getVariable(5,k)
Aug 31, 2024 1:35:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.804070248102698; Expression=u4(k)-u4(k)/u8(k)-u7(k)*91*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u6(k)*u2(k)/u8(k)/69*Math.pow(10,-2)+u5(k)+u5(k)/u3(k)/u2(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*91*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(6,k)*getVariable(2,k)/getVariable(8,k)/69*Math.pow(10,-2)+getVariable(5,k)+getVariable(5,k)/getVariable(3,k)/getVariable(2,k)
Aug 31, 2024 1:35:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.7977520180628845; Expression=u4(k)-u4(k)/u8(k)-u7(k)*81*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u6(k)/u1(k)+86*Math.pow(10,-8)-u8(k)+55*Math.pow(10,-2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*81*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(6,k)/getVariable(1,k)+86*Math.pow(10,-8)-getVariable(8,k)+55*Math.pow(10,-2)+getVariable(5,k)
Aug 31, 2024 1:35:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.792218993222154; Expression=u4(k)-u4(k)/u8(k)-u7(k)*81*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)*u6(k)*u2(k)/86*Math.pow(10,-2)/u8(k)+u5(k)-73*Math.pow(10,-8)/u2(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*81*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)*getVariable(6,k)*getVariable(2,k)/86*Math.pow(10,-2)/getVariable(8,k)+getVariable(5,k)-73*Math.pow(10,-8)/getVariable(2,k)
Aug 31, 2024 1:35:47 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.792218993222154 -->> Avg.: 5.593419082565622 -->> Std. Dev.: 1.4892972968933822
Aug 31, 2024 1:35:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.792218992440065; Expression=u4(k)-u4(k)/u8(k)-u7(k)*81*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)*u6(k)*u2(k)/86*Math.pow(10,-2)/u8(k)+u5(k)-73*Math.pow(10,-8)/u3(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*81*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)*getVariable(6,k)*getVariable(2,k)/86*Math.pow(10,-2)/getVariable(8,k)+getVariable(5,k)-73*Math.pow(10,-8)/getVariable(3,k)
Aug 31, 2024 1:36:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.792210597717361; Expression=u4(k)-u4(k)/u8(k)-u7(k)*81*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)*u6(k)*u2(k)/86*Math.pow(10,-2)/u8(k)+u5(k)-73*Math.pow(10,-8)*u2(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*81*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)*getVariable(6,k)*getVariable(2,k)/86*Math.pow(10,-2)/getVariable(8,k)+getVariable(5,k)-73*Math.pow(10,-8)*getVariable(2,k)
Aug 31, 2024 1:36:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.779565720078029; Expression=u4(k)-u4(k)/u8(k)-u7(k)*84*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)*u6(k)*u2(k)/86*Math.pow(10,-2)/u8(k)+u5(k)-35*Math.pow(10,-8)/u2(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*84*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)*getVariable(6,k)*getVariable(2,k)/86*Math.pow(10,-2)/getVariable(8,k)+getVariable(5,k)-35*Math.pow(10,-8)/getVariable(2,k)
Aug 31, 2024 1:36:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.7652583712583825; Expression=u4(k)-u4(k)/u8(k)-u7(k)*84*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)*u6(k)*u2(k)/74*Math.pow(10,-2)/u8(k)+u5(k)-19*Math.pow(10,-6)/u2(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*84*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)*getVariable(6,k)*getVariable(2,k)/74*Math.pow(10,-2)/getVariable(8,k)+getVariable(5,k)-19*Math.pow(10,-6)/getVariable(2,k)
Aug 31, 2024 1:36:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.762791312068082; Expression=u4(k)-u4(k)/u8(k)-u7(k)*91*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)*u6(k)*u2(k)/69*Math.pow(10,-2)/u8(k)+u5(k)-46*Math.pow(10,-8)/u2(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*91*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)*getVariable(6,k)*getVariable(2,k)/69*Math.pow(10,-2)/getVariable(8,k)+getVariable(5,k)-46*Math.pow(10,-8)/getVariable(2,k)
Aug 31, 2024 1:36:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.737444682736858; Expression=u4(k)-u4(k)/u8(k)-u7(k)*91*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u1(k)+u6(k)/u5(k)+69*Math.pow(10,-2)-u8(k)+46*Math.pow(10,-8)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*91*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(1,k)+getVariable(6,k)/getVariable(5,k)+69*Math.pow(10,-2)-getVariable(8,k)+46*Math.pow(10,-8)+getVariable(5,k)
Aug 31, 2024 1:37:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.737444666408602; Expression=u4(k)-u4(k)/u8(k)-u7(k)*91*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u1(k)+u6(k)/u5(k)+69*Math.pow(10,-2)-u8(k)+2*Math.pow(10,-8)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*91*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(1,k)+getVariable(6,k)/getVariable(5,k)+69*Math.pow(10,-2)-getVariable(8,k)+2*Math.pow(10,-8)+getVariable(5,k)
Aug 31, 2024 1:37:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.736070072919004; Expression=u4(k)-u4(k)/u8(k)-u7(k)*91*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u1(k)+u6(k)/u5(k)+38*Math.pow(10,-2)-u8(k)+46*Math.pow(10,-5)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*91*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(1,k)+getVariable(6,k)/getVariable(5,k)+38*Math.pow(10,-2)-getVariable(8,k)+46*Math.pow(10,-5)+getVariable(5,k)
Aug 31, 2024 1:37:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.73449965859427; Expression=u4(k)-u4(k)/u8(k)-u7(k)*91*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u1(k)+u6(k)/u5(k)-69*Math.pow(10,-5)-u8(k)+46*Math.pow(10,-2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*91*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(1,k)+getVariable(6,k)/getVariable(5,k)-69*Math.pow(10,-5)-getVariable(8,k)+46*Math.pow(10,-2)+getVariable(5,k)
Aug 31, 2024 1:37:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.7014071085129565; Expression=u4(k)-u4(k)/u8(k)-u7(k)*91*Math.pow(10,-1)/u6(k)-u8(k)+u7(k)/u1(k)*u6(k)/u5(k)+69*Math.pow(10,-6)-u8(k)+30*Math.pow(10,-5)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*91*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(7,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)+69*Math.pow(10,-6)-getVariable(8,k)+30*Math.pow(10,-5)+getVariable(5,k)
Aug 31, 2024 1:37:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.698186413735587; Expression=u4(k)-u4(k)/u8(k)-u7(k)*95*Math.pow(10,-1)/u6(k)-u8(k)+u9(k)/u5(k)+u6(k)/u5(k)+44*Math.pow(10,-8)-u8(k)+15*Math.pow(10,-2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*95*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(9,k)/getVariable(5,k)+getVariable(6,k)/getVariable(5,k)+44*Math.pow(10,-8)-getVariable(8,k)+15*Math.pow(10,-2)+getVariable(5,k)
Aug 31, 2024 1:37:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.660669151543291; Expression=u4(k)-u4(k)/u8(k)-u7(k)*91*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)+96*Math.pow(10,-3)-u8(k)+13*Math.pow(10,-6)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*91*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)+96*Math.pow(10,-3)-getVariable(8,k)+13*Math.pow(10,-6)+getVariable(5,k)
Aug 31, 2024 1:38:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.6606671456852125; Expression=u4(k)-u4(k)/u8(k)-u7(k)*91*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)+96*Math.pow(10,-3)-u8(k)+55*Math.pow(10,-6)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*91*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)+96*Math.pow(10,-3)-getVariable(8,k)+55*Math.pow(10,-6)+getVariable(5,k)
Aug 31, 2024 1:38:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.658366608356613; Expression=u4(k)-u4(k)/u8(k)-u7(k)*91*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)+96*Math.pow(10,-3)-u8(k)+55*Math.pow(10,-3)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*91*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)+96*Math.pow(10,-3)-getVariable(8,k)+55*Math.pow(10,-3)+getVariable(5,k)
Aug 31, 2024 1:38:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.65379810407764; Expression=u4(k)-u4(k)/u8(k)-u7(k)*95*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)+95*Math.pow(10,-2)-u8(k)+15*Math.pow(10,-8)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*95*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)+95*Math.pow(10,-2)-getVariable(8,k)+15*Math.pow(10,-8)+getVariable(5,k)
Aug 31, 2024 1:38:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.650386351905797; Expression=u4(k)-u4(k)/u8(k)-u7(k)*95*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)+69*Math.pow(10,-2)-u8(k)+15*Math.pow(10,-8)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*95*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)+69*Math.pow(10,-2)-getVariable(8,k)+15*Math.pow(10,-8)+getVariable(5,k)
Aug 31, 2024 1:38:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.635296263737382; Expression=u4(k)-u4(k)/u8(k)-u7(k)*91*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)/u8(k)-96*Math.pow(10,-3)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*91*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)/getVariable(8,k)-96*Math.pow(10,-3)+getVariable(5,k)
Aug 31, 2024 1:38:55 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.635296263737382 -->> Avg.: 4.998555317696329 -->> Std. Dev.: 0.1886494553671279
Aug 31, 2024 1:39:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.633006930019115; Expression=u4(k)-u4(k)/u8(k)-u7(k)*95*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)/u8(k)+82*Math.pow(10,-3)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*95*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)/getVariable(8,k)+82*Math.pow(10,-3)+getVariable(5,k)
Aug 31, 2024 1:40:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.632654260201995; Expression=u4(k)-u4(k)/u8(k)-u7(k)*95*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)/u8(k)+92*Math.pow(10,-3)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*95*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)/getVariable(8,k)+92*Math.pow(10,-3)+getVariable(5,k)
Aug 31, 2024 1:40:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.631406217205472; Expression=u4(k)-u4(k)/u8(k)-u7(k)*94*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)/u8(k)+80*Math.pow(10,-3)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*94*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)/getVariable(8,k)+80*Math.pow(10,-3)+getVariable(5,k)
Aug 31, 2024 1:41:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.63139330482269; Expression=u4(k)-u4(k)/u8(k)-u7(k)*94*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)/u8(k)+81*Math.pow(10,-3)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*94*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)/getVariable(8,k)+81*Math.pow(10,-3)+getVariable(5,k)
Aug 31, 2024 1:41:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.631286808289775; Expression=u4(k)-u4(k)/u8(k)-u7(k)*94*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)/u8(k)+90*Math.pow(10,-3)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*94*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)/getVariable(8,k)+90*Math.pow(10,-3)+getVariable(5,k)
Aug 31, 2024 1:41:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.631265517222352; Expression=u4(k)-u4(k)/u8(k)-u7(k)*94*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)/u8(k)+92*Math.pow(10,-3)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*94*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)/getVariable(8,k)+92*Math.pow(10,-3)+getVariable(5,k)
Aug 31, 2024 1:41:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.629945953655952; Expression=u4(k)-u4(k)/u8(k)-u7(k)*95*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)/u8(k)+25*Math.pow(10,-2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*95*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)/getVariable(8,k)+25*Math.pow(10,-2)+getVariable(5,k)
Aug 31, 2024 1:41:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.583854094800992; Expression=u4(k)-u4(k)/u8(k)-u7(k)*95*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)/u8(k)/82*Math.pow(10,+2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*95*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)/getVariable(8,k)/82*Math.pow(10,+2)+getVariable(5,k)
Aug 31, 2024 1:42:36 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.583854094800992 -->> Avg.: 4.883586246879963 -->> Std. Dev.: 0.18602763764127533
Aug 31, 2024 1:42:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.570885623320743; Expression=u4(k)-u4(k)/u8(k)-u7(k)*99*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)/u8(k)/82*Math.pow(10,+2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*99*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)/getVariable(8,k)/82*Math.pow(10,+2)+getVariable(5,k)
Aug 31, 2024 1:43:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.549925151797391; Expression=u4(k)-u4(k)/u8(k)-u7(k)*99*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)/u8(k)/66*Math.pow(10,+2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*99*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)/getVariable(8,k)/66*Math.pow(10,+2)+getVariable(5,k)
Aug 31, 2024 1:44:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.543943790871122; Expression=u4(k)-u4(k)/u8(k)-u7(k)*99*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)/u8(k)/68*Math.pow(10,+2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*99*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)/getVariable(8,k)/68*Math.pow(10,+2)+getVariable(5,k)
Aug 31, 2024 1:44:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.541022855902297; Expression=u4(k)-u4(k)/u8(k)-u7(k)*99*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)/u8(k)/71*Math.pow(10,+2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(7,k)*99*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)/getVariable(8,k)/71*Math.pow(10,+2)+getVariable(5,k)
Aug 31, 2024 1:46:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.532366268241179; Expression=u4(k)-u4(k)/u8(k)-u2(k)*64*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)/u8(k)/66*Math.pow(10,+2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(2,k)*64*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)/getVariable(8,k)/66*Math.pow(10,+2)+getVariable(5,k)
Aug 31, 2024 1:46:03 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.532366268241179 -->> Avg.: 4.774305786939859 -->> Std. Dev.: 0.18438960676183225
Aug 31, 2024 1:46:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.476434031930863; Expression=u4(k)-u4(k)/u8(k)-u2(k)*99*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)/u8(k)/26*Math.pow(10,+2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(2,k)*99*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)/getVariable(8,k)/26*Math.pow(10,+2)+getVariable(5,k)
Aug 31, 2024 1:47:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.446905044476891; Expression=u4(k)-u4(k)/u8(k)-u2(k)*94*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u6(k)/u5(k)/u8(k)/27*Math.pow(10,+2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(2,k)*94*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)/getVariable(8,k)/27*Math.pow(10,+2)+getVariable(5,k)
Aug 31, 2024 1:47:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.264577329721983; Expression=u4(k)-u4(k)/u8(k)-u2(k)*99*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u7(k)/u5(k)/u8(k)/26*Math.pow(10,+2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(2,k)*99*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(7,k)/getVariable(5,k)/getVariable(8,k)/26*Math.pow(10,+2)+getVariable(5,k)
Aug 31, 2024 1:47:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.218038798581606; Expression=u4(k)-u4(k)/u8(k)-u2(k)*99*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u7(k)/u5(k)/u8(k)/27*Math.pow(10,+2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(2,k)*99*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(7,k)/getVariable(5,k)/getVariable(8,k)/27*Math.pow(10,+2)+getVariable(5,k)
Aug 31, 2024 1:48:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.21467768280968; Expression=u4(k)-u4(k)/u8(k)-u2(k)*94*Math.pow(10,-1)/u6(k)-u8(k)+u7(k)/u1(k)*u6(k)/u5(k)/u8(k)/30*Math.pow(10,+2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(2,k)*94*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(7,k)/getVariable(1,k)*getVariable(6,k)/getVariable(5,k)/getVariable(8,k)/30*Math.pow(10,+2)+getVariable(5,k)
Aug 31, 2024 1:49:02 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.21467768280968 -->> Avg.: 4.639418658023196 -->> Std. Dev.: 0.1999340377174448
Aug 31, 2024 1:49:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.211510886530445; Expression=u4(k)-u4(k)/u8(k)-u2(k)*99*Math.pow(10,-1)/u6(k)-u8(k)+u6(k)/u1(k)*u7(k)/u5(k)/u8(k)/28*Math.pow(10,+2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(2,k)*99*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(6,k)/getVariable(1,k)*getVariable(7,k)/getVariable(5,k)/getVariable(8,k)/28*Math.pow(10,+2)+getVariable(5,k)
Aug 31, 2024 1:49:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.207294329161578; Expression=u4(k)-u4(k)/u8(k)-u2(k)*99*Math.pow(10,-1)/u6(k)-u8(k)+u7(k)/u1(k)*u7(k)/u5(k)/u8(k)/28*Math.pow(10,+2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(2,k)*99*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(7,k)/getVariable(1,k)*getVariable(7,k)/getVariable(5,k)/getVariable(8,k)/28*Math.pow(10,+2)+getVariable(5,k)
Aug 31, 2024 1:49:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.178580044838874; Expression=u4(k)-u4(k)/u8(k)-u2(k)*99*Math.pow(10,-1)/u6(k)-u8(k)+u7(k)/u1(k)*u7(k)/u5(k)/u8(k)/32*Math.pow(10,+2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(2,k)*99*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(7,k)/getVariable(1,k)*getVariable(7,k)/getVariable(5,k)/getVariable(8,k)/32*Math.pow(10,+2)+getVariable(5,k)
Aug 31, 2024 1:50:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.142391334251411; Expression=u4(k)-u4(k)/u8(k)-u2(k)*99*Math.pow(10,-1)/u6(k)-u8(k)+u7(k)/u1(k)*u7(k)/u5(k)/u8(k)/31*Math.pow(10,+2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(2,k)*99*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(7,k)/getVariable(1,k)*getVariable(7,k)/getVariable(5,k)/getVariable(8,k)/31*Math.pow(10,+2)+getVariable(5,k)
Aug 31, 2024 1:50:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.131195694923973; Expression=u4(k)-u4(k)/u8(k)-u2(k)*99*Math.pow(10,-1)/u6(k)-u8(k)+u7(k)/u1(k)*u7(k)/u5(k)/u8(k)/30*Math.pow(10,+2)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(2,k)*99*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(7,k)/getVariable(1,k)*getVariable(7,k)/getVariable(5,k)/getVariable(8,k)/30*Math.pow(10,+2)+getVariable(5,k)
Aug 31, 2024 1:52:10 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.131195694923973 -->> Avg.: 4.491369207676011 -->> Std. Dev.: 0.216265783900369

Execution time: 1654.531 seconds.



@@;getVariable(4,k)-getVariable(4,k)/getVariable(8,k)-getVariable(2,k)*99*Math.pow(10,-1)/getVariable(6,k)-getVariable(8,k)+getVariable(7,k)/getVariable(1,k)*getVariable(7,k)/getVariable(5,k)/getVariable(8,k)/30*Math.pow(10,+2)+getVariable(5,k)



Run #5
========
Aug 31, 2024 1:52:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=62.94452453211806; Expression=u6(k)-u8(k); Java Expression: getVariable(6,k)-getVariable(8,k)
Aug 31, 2024 1:52:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=46.894402255602074; Expression=24*Math.pow(10,-4)-66*Math.pow(10,-1)+u1(k)/u5(k)+u6(k)/u8(k); Java Expression: 24*Math.pow(10,-4)-66*Math.pow(10,-1)+getVariable(1,k)/getVariable(5,k)+getVariable(6,k)/getVariable(8,k)
Aug 31, 2024 1:52:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330418286495663; Expression=23*Math.pow(10,-4)+u5(k); Java Expression: 23*Math.pow(10,-4)+getVariable(5,k)
Aug 31, 2024 1:52:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.329565788465425; Expression=44*Math.pow(10,-3)-u5(k)*23*Math.pow(10,-3)*21*Math.pow(10,-8)+u5(k); Java Expression: 44*Math.pow(10,-3)-getVariable(5,k)*23*Math.pow(10,-3)*21*Math.pow(10,-8)+getVariable(5,k)
Aug 31, 2024 1:52:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.328576915915999; Expression=90*Math.pow(10,-9)*30*Math.pow(10,+5)+u5(k); Java Expression: 90*Math.pow(10,-9)*30*Math.pow(10,+5)+getVariable(5,k)
Aug 31, 2024 1:52:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:52:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.03249551813769; Expression=u5(k)+u8(k)+u8(k)/u4(k); Java Expression: getVariable(5,k)+getVariable(8,k)+getVariable(8,k)/getVariable(4,k)
Aug 31, 2024 1:52:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.545490207838515; Expression=u5(k)+u8(k)*u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 1:52:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.361059904227895; Expression=u5(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 1:52:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.011279224818129; Expression=30*Math.pow(10,-2)*u7(k); Java Expression: 30*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 1:52:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709785324194373; Expression=32*Math.pow(10,-2)*u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 1:52:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.139175392976099; Expression=u3(k)/u3(k)-u3(k)+u7(k)+u8(k)-u5(k); Java Expression: getVariable(3,k)/getVariable(3,k)-getVariable(3,k)+getVariable(7,k)+getVariable(8,k)-getVariable(5,k)
Aug 31, 2024 1:52:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.049236499497029; Expression=60*Math.pow(10,-2)+u7(k)-u3(k)-u5(k); Java Expression: 60*Math.pow(10,-2)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 31, 2024 1:52:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388946502078; Expression=u3(k)-u3(k)-u3(k)+u7(k)+u8(k)-u5(k); Java Expression: getVariable(3,k)-getVariable(3,k)-getVariable(3,k)+getVariable(7,k)+getVariable(8,k)-getVariable(5,k)
Aug 31, 2024 1:53:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992270235269218; Expression=u8(k)/u7(k)-u3(k)+u7(k)+u8(k)-u5(k); Java Expression: getVariable(8,k)/getVariable(7,k)-getVariable(3,k)+getVariable(7,k)+getVariable(8,k)-getVariable(5,k)
Aug 31, 2024 1:53:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992181333092122; Expression=u3(k)-u3(k)-u3(k)+u7(k)+u8(k)-32*Math.pow(10,-4)-u5(k); Java Expression: getVariable(3,k)-getVariable(3,k)-getVariable(3,k)+getVariable(7,k)+getVariable(8,k)-32*Math.pow(10,-4)-getVariable(5,k)
Aug 31, 2024 1:53:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.990085140756451; Expression=u7(k)-u5(k)-u8(k)/u3(k)-u3(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(8,k)/getVariable(3,k)-getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 1:53:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.980074041004854; Expression=u3(k)-u3(k)-u3(k)+u7(k)+u8(k)-32*Math.pow(10,-2)-u5(k); Java Expression: getVariable(3,k)-getVariable(3,k)-getVariable(3,k)+getVariable(7,k)+getVariable(8,k)-32*Math.pow(10,-2)-getVariable(5,k)
Aug 31, 2024 1:53:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.979964719269211; Expression=u3(k)-u3(k)-u3(k)+u7(k)+u8(k)-33*Math.pow(10,-2)-u5(k); Java Expression: getVariable(3,k)-getVariable(3,k)-getVariable(3,k)+getVariable(7,k)+getVariable(8,k)-33*Math.pow(10,-2)-getVariable(5,k)
Aug 31, 2024 1:53:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.979865853809145; Expression=u3(k)-u3(k)-u3(k)+u7(k)+u8(k)-44*Math.pow(10,-2)-u5(k); Java Expression: getVariable(3,k)-getVariable(3,k)-getVariable(3,k)+getVariable(7,k)+getVariable(8,k)-44*Math.pow(10,-2)-getVariable(5,k)
Aug 31, 2024 1:53:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.979032954750819; Expression=u8(k)/u7(k)-u3(k)+u7(k)+u8(k)-33*Math.pow(10,-2)-u5(k); Java Expression: getVariable(8,k)/getVariable(7,k)-getVariable(3,k)+getVariable(7,k)+getVariable(8,k)-33*Math.pow(10,-2)-getVariable(5,k)
Aug 31, 2024 1:53:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.97816525552164; Expression=u8(k)/u5(k)-u3(k)+u7(k)+u8(k)-33*Math.pow(10,-2)-u5(k); Java Expression: getVariable(8,k)/getVariable(5,k)-getVariable(3,k)+getVariable(7,k)+getVariable(8,k)-33*Math.pow(10,-2)-getVariable(5,k)
Aug 31, 2024 1:53:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9779292214097755; Expression=u8(k)/u1(k)-u3(k)+u7(k)+u8(k)-33*Math.pow(10,-2)-u5(k); Java Expression: getVariable(8,k)/getVariable(1,k)-getVariable(3,k)+getVariable(7,k)+getVariable(8,k)-33*Math.pow(10,-2)-getVariable(5,k)
Aug 31, 2024 1:53:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.977574161952588; Expression=u8(k)/u5(k)-u3(k)+u7(k)+u8(k)-37*Math.pow(10,-2)-u5(k); Java Expression: getVariable(8,k)/getVariable(5,k)-getVariable(3,k)+getVariable(7,k)+getVariable(8,k)-37*Math.pow(10,-2)-getVariable(5,k)
Aug 31, 2024 1:53:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.973774921383288; Expression=u3(k)/u7(k)-u3(k)+u7(k)+u8(k)-33*Math.pow(10,-2)-u5(k); Java Expression: getVariable(3,k)/getVariable(7,k)-getVariable(3,k)+getVariable(7,k)+getVariable(8,k)-33*Math.pow(10,-2)-getVariable(5,k)
Aug 31, 2024 1:53:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.969948080143227; Expression=u9(k)/u1(k)-u3(k)+u7(k)+u8(k)-33*Math.pow(10,-2)-u5(k); Java Expression: getVariable(9,k)/getVariable(1,k)-getVariable(3,k)+getVariable(7,k)+getVariable(8,k)-33*Math.pow(10,-2)-getVariable(5,k)
Aug 31, 2024 1:53:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9429792042017; Expression=u9(k)/u1(k)-u3(k)+u7(k)+u8(k)-92*Math.pow(10,-2)-u5(k); Java Expression: getVariable(9,k)/getVariable(1,k)-getVariable(3,k)+getVariable(7,k)+getVariable(8,k)-92*Math.pow(10,-2)-getVariable(5,k)
Aug 31, 2024 1:53:36 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.9429792042017 -->> Avg.: 1.6495286957179723E9 -->> Std. Dev.: 6.921105331882736E9
Aug 31, 2024 1:53:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8370097504227845; Expression=u4(k)/u5(k)-u4(k)+u7(k)+u8(k)-37*Math.pow(10,-1)-u5(k); Java Expression: getVariable(4,k)/getVariable(5,k)-getVariable(4,k)+getVariable(7,k)+getVariable(8,k)-37*Math.pow(10,-1)-getVariable(5,k)
Aug 31, 2024 1:53:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.835803869877341; Expression=u4(k)/u3(k)-u4(k)+u7(k)+u8(k)-36*Math.pow(10,-1)-u5(k); Java Expression: getVariable(4,k)/getVariable(3,k)-getVariable(4,k)+getVariable(7,k)+getVariable(8,k)-36*Math.pow(10,-1)-getVariable(5,k)
Aug 31, 2024 1:53:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.822490143711219; Expression=u4(k)/u1(k)-u4(k)+u7(k)+u8(k)-37*Math.pow(10,-1)-u5(k); Java Expression: getVariable(4,k)/getVariable(1,k)-getVariable(4,k)+getVariable(7,k)+getVariable(8,k)-37*Math.pow(10,-1)-getVariable(5,k)
Aug 31, 2024 1:53:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.796250521299669; Expression=u9(k)/u5(k)-u4(k)+u7(k)+u8(k)-37*Math.pow(10,-1)-u5(k); Java Expression: getVariable(9,k)/getVariable(5,k)-getVariable(4,k)+getVariable(7,k)+getVariable(8,k)-37*Math.pow(10,-1)-getVariable(5,k)
Aug 31, 2024 1:54:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.786368835157199; Expression=u9(k)/u5(k)-u4(k)+u7(k)+u8(k)-40*Math.pow(10,-1)-u5(k); Java Expression: getVariable(9,k)/getVariable(5,k)-getVariable(4,k)+getVariable(7,k)+getVariable(8,k)-40*Math.pow(10,-1)-getVariable(5,k)
Aug 31, 2024 1:54:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7615134612667545; Expression=u4(k)/u1(k)-u4(k)+u7(k)+u8(k)-11*Math.pow(10,-1)*u5(k); Java Expression: getVariable(4,k)/getVariable(1,k)-getVariable(4,k)+getVariable(7,k)+getVariable(8,k)-11*Math.pow(10,-1)*getVariable(5,k)
Aug 31, 2024 1:54:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.760711920001289; Expression=u9(k)/u6(k)-u4(k)+u7(k)+u8(k)-11*Math.pow(10,-1)*u5(k); Java Expression: getVariable(9,k)/getVariable(6,k)-getVariable(4,k)+getVariable(7,k)+getVariable(8,k)-11*Math.pow(10,-1)*getVariable(5,k)
Aug 31, 2024 1:54:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.737070027815794; Expression=u9(k)/u1(k)-u4(k)+u7(k)+u8(k)-11*Math.pow(10,-1)*u5(k); Java Expression: getVariable(9,k)/getVariable(1,k)-getVariable(4,k)+getVariable(7,k)+getVariable(8,k)-11*Math.pow(10,-1)*getVariable(5,k)
Aug 31, 2024 1:55:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.73541653021965; Expression=u9(k)/u1(k)-u4(k)+u7(k)+u8(k)-11*Math.pow(10,-1)*u5(k)+u9(k)/u2(k); Java Expression: getVariable(9,k)/getVariable(1,k)-getVariable(4,k)+getVariable(7,k)+getVariable(8,k)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(9,k)/getVariable(2,k)
Aug 31, 2024 1:55:26 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.73541653021965 -->> Avg.: 257065.73999174763 -->> Std. Dev.: 1284520.7427410905
Aug 31, 2024 1:55:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.725802921181266; Expression=u9(k)/u1(k)-u4(k)+u7(k)+u8(k)-11*Math.pow(10,-1)*u5(k)+u9(k)/u1(k); Java Expression: getVariable(9,k)/getVariable(1,k)-getVariable(4,k)+getVariable(7,k)+getVariable(8,k)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 1:55:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.725500821863357; Expression=u9(k)/u1(k)-u4(k)+u7(k)+u8(k)-11*Math.pow(10,-1)*u5(k)-u1(k)/u2(k); Java Expression: getVariable(9,k)/getVariable(1,k)-getVariable(4,k)+getVariable(7,k)+getVariable(8,k)-11*Math.pow(10,-1)*getVariable(5,k)-getVariable(1,k)/getVariable(2,k)
Aug 31, 2024 1:55:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.720313222612005; Expression=u9(k)/u5(k)-u4(k)+u7(k)+u8(k)-11*Math.pow(10,-1)*u5(k)-u1(k)/u2(k); Java Expression: getVariable(9,k)/getVariable(5,k)-getVariable(4,k)+getVariable(7,k)+getVariable(8,k)-11*Math.pow(10,-1)*getVariable(5,k)-getVariable(1,k)/getVariable(2,k)
Aug 31, 2024 1:56:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.711065287893763; Expression=u9(k)/u5(k)-u4(k)+u7(k)+u8(k)-11*Math.pow(10,-1)*u5(k)-u1(k)/u6(k); Java Expression: getVariable(9,k)/getVariable(5,k)-getVariable(4,k)+getVariable(7,k)+getVariable(8,k)-11*Math.pow(10,-1)*getVariable(5,k)-getVariable(1,k)/getVariable(6,k)
Aug 31, 2024 1:56:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.569383637342069; Expression=u5(k)+u8(k)*u8(k)*u2(k)/u1(k)-61*Math.pow(10,-1)/u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/getVariable(1,k)-61*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 1:57:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.332835676193818; Expression=u5(k)+u8(k)*u8(k)*u2(k)/u1(k)-78*Math.pow(10,-1)/u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/getVariable(1,k)-78*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 1:57:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.332835676193816; Expression=u5(k)+u8(k)*u8(k)*u2(k)/u1(k)-78*Math.pow(10,-1)/u8(k)-u6(k)+u6(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/getVariable(1,k)-78*Math.pow(10,-1)/getVariable(8,k)-getVariable(6,k)+getVariable(6,k)
Aug 31, 2024 1:57:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.332809472193797; Expression=u5(k)+u8(k)*u8(k)*u2(k)/u1(k)-86*Math.pow(10,-1)/u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/getVariable(1,k)-86*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 1:57:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3237140279405395; Expression=u5(k)+u8(k)*u8(k)*u2(k)/u1(k)-82*Math.pow(10,-1)/u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/getVariable(1,k)-82*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 1:57:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.746555685268303; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-82*Math.pow(10,-1)/u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-82*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 1:57:38 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 4.746555685268303 -->> Avg.: 120.80482105017421 -->> Std. Dev.: 436.60955283053966
Aug 31, 2024 1:57:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.554868788853786; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-82*Math.pow(10,-1)/u8(k)-u3(k)/u5(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-82*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(5,k)
Aug 31, 2024 1:57:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.507952226787447; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-82*Math.pow(10,-1)/u8(k)-u3(k)/u9(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-82*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(9,k)
Aug 31, 2024 1:58:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.5051961350658445; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-83*Math.pow(10,-1)/u8(k)-u3(k)/u9(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-83*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(9,k)
Aug 31, 2024 1:58:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.503785557330119; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-84*Math.pow(10,-1)/u8(k)-u3(k)/u9(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-84*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(9,k)
Aug 31, 2024 1:58:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.503721757836237; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-85*Math.pow(10,-1)/u8(k)-u3(k)/u9(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-85*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(9,k)
Aug 31, 2024 2:00:01 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 4.503721757836237 -->> Avg.: 12.132069549632119 -->> Std. Dev.: 14.00284538080311
Aug 31, 2024 2:02:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.5032567851167755; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-85*Math.pow(10,-1)/u8(k)-u3(k)/u9(k)+u8(k)/u1(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-85*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)/getVariable(1,k)
Aug 31, 2024 2:02:31 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.5032567851167755 -->> Avg.: 5.588900778952604 -->> Std. Dev.: 1.470307318985122
Aug 31, 2024 2:02:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.502499220832261; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-85*Math.pow(10,-1)/u8(k)-u3(k)/u9(k)+u8(k)/u4(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-85*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)/getVariable(4,k)
Aug 31, 2024 2:02:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.499729336977039; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-85*Math.pow(10,-1)/u8(k)-u3(k)/u9(k)+u9(k)/u2(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-85*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(9,k)+getVariable(9,k)/getVariable(2,k)
Aug 31, 2024 2:02:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.498086783313772; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-89*Math.pow(10,-1)/u8(k)-u3(k)/u9(k)+u9(k)/u2(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-89*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(9,k)+getVariable(9,k)/getVariable(2,k)
Aug 31, 2024 2:03:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.484226801503819; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-85*Math.pow(10,-1)/u8(k)-u3(k)/u9(k)*u1(k)/u6(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-85*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(9,k)*getVariable(1,k)/getVariable(6,k)
Aug 31, 2024 2:03:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.479054788236661; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-85*Math.pow(10,-1)/u8(k)-u3(k)/u9(k)*u1(k)/u6(k)-u4(k)/u7(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-85*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(9,k)*getVariable(1,k)/getVariable(6,k)-getVariable(4,k)/getVariable(7,k)
Aug 31, 2024 2:03:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.473585305932348; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-85*Math.pow(10,-1)/u8(k)-u3(k)/u9(k)*u1(k)/u6(k)-u4(k)/u6(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-85*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(9,k)*getVariable(1,k)/getVariable(6,k)-getVariable(4,k)/getVariable(6,k)
Aug 31, 2024 2:04:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.472836020781285; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-85*Math.pow(10,-1)/u8(k)-u3(k)/u9(k)*u1(k)/u6(k)-u5(k)/u6(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-85*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(9,k)*getVariable(1,k)/getVariable(6,k)-getVariable(5,k)/getVariable(6,k)
Aug 31, 2024 2:04:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.467332011635217; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-82*Math.pow(10,-1)/u8(k)-u3(k)/u9(k)*u1(k)/u6(k)-u4(k)/u6(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-82*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(9,k)*getVariable(1,k)/getVariable(6,k)-getVariable(4,k)/getVariable(6,k)
Aug 31, 2024 2:04:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.460064283572031; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-85*Math.pow(10,-1)/u8(k)-u3(k)/u9(k)*u1(k)/u6(k)*u7(k)/u6(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-85*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(9,k)*getVariable(1,k)/getVariable(6,k)*getVariable(7,k)/getVariable(6,k)
Aug 31, 2024 2:05:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.41121834090875; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-82*Math.pow(10,-1)/u8(k)-u3(k)/u9(k)*u1(k)/u6(k)*u2(k)/u6(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-82*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(9,k)*getVariable(1,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)
Aug 31, 2024 2:05:16 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.41121834090875 -->> Avg.: 5.005228822068106 -->> Std. Dev.: 0.6066466790571705
Aug 31, 2024 2:05:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.394631826761196; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-79*Math.pow(10,-1)/u8(k)-u3(k)/u9(k)*u1(k)/u6(k)*u2(k)/u6(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-79*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(9,k)*getVariable(1,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)
Aug 31, 2024 2:06:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.393396785285644; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-79*Math.pow(10,-1)/u8(k)-u4(k)/u9(k)*u1(k)/u6(k)*u2(k)/u6(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-79*Math.pow(10,-1)/getVariable(8,k)-getVariable(4,k)/getVariable(9,k)*getVariable(1,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)
Aug 31, 2024 2:06:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.37989565286676; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-79*Math.pow(10,-1)/u8(k)-u3(k)/u6(k)*u2(k)/u6(k)*u2(k)/u6(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-79*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)
Aug 31, 2024 2:07:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.377287439643219; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-82*Math.pow(10,-1)/u8(k)-u3(k)/u6(k)*u2(k)/u6(k)*u2(k)/u6(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-82*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)
Aug 31, 2024 2:07:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.33996646803655; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-82*Math.pow(10,-1)/u8(k)-u3(k)/u6(k)*u2(k)/u6(k)*u2(k)/u6(k)/u9(k)*u5(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-82*Math.pow(10,-1)/getVariable(8,k)-getVariable(3,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)/getVariable(9,k)*getVariable(5,k)
Aug 31, 2024 2:07:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.338350342744023; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-82*Math.pow(10,-1)/u8(k)*u3(k)/u6(k)*u2(k)/u6(k)*u2(k)/u6(k)/u3(k)*u5(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-82*Math.pow(10,-1)/getVariable(8,k)*getVariable(3,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)/getVariable(3,k)*getVariable(5,k)
Aug 31, 2024 2:08:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.330604109623027; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-79*Math.pow(10,-1)/u8(k)*u3(k)/u6(k)*u2(k)/u6(k)*u2(k)/u6(k)/u3(k)*u5(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-79*Math.pow(10,-1)/getVariable(8,k)*getVariable(3,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)/getVariable(3,k)*getVariable(5,k)
Aug 31, 2024 2:08:18 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.330604109623027 -->> Avg.: 4.72590457291914 -->> Std. Dev.: 0.48792910943986656
Aug 31, 2024 2:08:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.328956570959713; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-79*Math.pow(10,-1)/u8(k)*u3(k)/u6(k)*u2(k)/u6(k)*u2(k)/u7(k)/u3(k)*u5(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-79*Math.pow(10,-1)/getVariable(8,k)*getVariable(3,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)*getVariable(2,k)/getVariable(7,k)/getVariable(3,k)*getVariable(5,k)
Aug 31, 2024 2:08:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.117010819344405; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-79*Math.pow(10,-1)/u8(k)*u1(k)/u6(k)*u6(k)/u6(k)*u2(k)/u6(k)/u3(k)*u5(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-79*Math.pow(10,-1)/getVariable(8,k)*getVariable(1,k)/getVariable(6,k)*getVariable(6,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)/getVariable(3,k)*getVariable(5,k)
Aug 31, 2024 2:09:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.113642546323041; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-82*Math.pow(10,-1)/u8(k)*u1(k)/u6(k)*u6(k)/u6(k)*u2(k)/u6(k)/u3(k)*u5(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-82*Math.pow(10,-1)/getVariable(8,k)*getVariable(1,k)/getVariable(6,k)*getVariable(6,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)/getVariable(3,k)*getVariable(5,k)
Aug 31, 2024 2:09:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.022291209931177; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-79*Math.pow(10,-1)/u8(k)*u1(k)/u6(k)*u7(k)/u6(k)*u2(k)/u6(k)/u3(k)*u5(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-79*Math.pow(10,-1)/getVariable(8,k)*getVariable(1,k)/getVariable(6,k)*getVariable(7,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)/getVariable(3,k)*getVariable(5,k)
Aug 31, 2024 2:09:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.012254980229368; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-78*Math.pow(10,-1)/u8(k)*u1(k)/u6(k)*u7(k)/u6(k)*u2(k)/u6(k)/u3(k)*u5(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-78*Math.pow(10,-1)/getVariable(8,k)*getVariable(1,k)/getVariable(6,k)*getVariable(7,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)/getVariable(3,k)*getVariable(5,k)
Aug 31, 2024 2:09:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.000625489353769; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-74*Math.pow(10,-1)/u8(k)*u1(k)/u6(k)*u7(k)/u6(k)*u2(k)/u6(k)/u3(k)*u5(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-74*Math.pow(10,-1)/getVariable(8,k)*getVariable(1,k)/getVariable(6,k)*getVariable(7,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)/getVariable(3,k)*getVariable(5,k)
Aug 31, 2024 2:11:27 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.000625489353769 -->> Avg.: 4.413250551321244 -->> Std. Dev.: 0.2256522067473231
Aug 31, 2024 2:11:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.999237010171052; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-75*Math.pow(10,-1)/u8(k)*u1(k)/u6(k)*u7(k)/u6(k)*u2(k)/u6(k)/u3(k)*u5(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-75*Math.pow(10,-1)/getVariable(8,k)*getVariable(1,k)/getVariable(6,k)*getVariable(7,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)/getVariable(3,k)*getVariable(5,k)
Aug 31, 2024 2:13:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.999231962574803; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-75*Math.pow(10,-1)/u8(k)*u1(k)/u6(k)*u7(k)/u6(k)*u2(k)/u6(k)/u3(k)*u5(k)+54*Math.pow(10,-9)-69*Math.pow(10,-6)*u9(k)*7*Math.pow(10,-2)+u3(k)*21*Math.pow(10,-5)+u1(k)/69*Math.pow(10,-6)*u9(k)/u5(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-75*Math.pow(10,-1)/getVariable(8,k)*getVariable(1,k)/getVariable(6,k)*getVariable(7,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)/getVariable(3,k)*getVariable(5,k)+54*Math.pow(10,-9)-69*Math.pow(10,-6)*getVariable(9,k)*7*Math.pow(10,-2)+getVariable(3,k)*21*Math.pow(10,-5)+getVariable(1,k)/69*Math.pow(10,-6)*getVariable(9,k)/getVariable(5,k)
Aug 31, 2024 2:15:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.99660534813136; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-75*Math.pow(10,-1)/u8(k)*u1(k)/u6(k)*u7(k)/u6(k)*u2(k)/u6(k)/u3(k)*u5(k)+21*Math.pow(10,-2)/u8(k)+u6(k)*22*Math.pow(10,-8)/u9(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-75*Math.pow(10,-1)/getVariable(8,k)*getVariable(1,k)/getVariable(6,k)*getVariable(7,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)/getVariable(3,k)*getVariable(5,k)+21*Math.pow(10,-2)/getVariable(8,k)+getVariable(6,k)*22*Math.pow(10,-8)/getVariable(9,k)
Aug 31, 2024 2:15:20 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 3.99660534813136 -->> Avg.: 4.291497259758385 -->> Std. Dev.: 0.21838745266977463
Aug 31, 2024 2:16:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.993770966856805; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-75*Math.pow(10,-1)/u8(k)*u1(k)/u6(k)*u7(k)/u6(k)*u2(k)/u6(k)/u3(k)*u5(k)+13*Math.pow(10,+2)/u8(k)*u1(k)*54*Math.pow(10,-6)/u5(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-75*Math.pow(10,-1)/getVariable(8,k)*getVariable(1,k)/getVariable(6,k)*getVariable(7,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)/getVariable(3,k)*getVariable(5,k)+13*Math.pow(10,+2)/getVariable(8,k)*getVariable(1,k)*54*Math.pow(10,-6)/getVariable(5,k)
Aug 31, 2024 2:16:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9932820435936005; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-75*Math.pow(10,-1)/u8(k)*u1(k)/u6(k)*u7(k)/u6(k)*u2(k)/u6(k)/u3(k)*u5(k)+13*Math.pow(10,+2)/u8(k)*u7(k)*54*Math.pow(10,-6)/u5(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-75*Math.pow(10,-1)/getVariable(8,k)*getVariable(1,k)/getVariable(6,k)*getVariable(7,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)/getVariable(3,k)*getVariable(5,k)+13*Math.pow(10,+2)/getVariable(8,k)*getVariable(7,k)*54*Math.pow(10,-6)/getVariable(5,k)
Aug 31, 2024 2:17:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.958938370296025; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-87*Math.pow(10,-1)/u8(k)*u1(k)/u6(k)*u7(k)/u6(k)*u2(k)/u6(k)/u3(k)*u5(k)+99*Math.pow(10,+2)/u8(k)*u1(k)*54*Math.pow(10,-6)/u5(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-87*Math.pow(10,-1)/getVariable(8,k)*getVariable(1,k)/getVariable(6,k)*getVariable(7,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)/getVariable(3,k)*getVariable(5,k)+99*Math.pow(10,+2)/getVariable(8,k)*getVariable(1,k)*54*Math.pow(10,-6)/getVariable(5,k)
Aug 31, 2024 2:18:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.951257598125076; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-87*Math.pow(10,-1)/u8(k)*u1(k)/u6(k)*u7(k)/u6(k)*u2(k)/u6(k)/u3(k)*u5(k)+99*Math.pow(10,+2)/u8(k)*u6(k)*54*Math.pow(10,-6)/u9(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-87*Math.pow(10,-1)/getVariable(8,k)*getVariable(1,k)/getVariable(6,k)*getVariable(7,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)/getVariable(3,k)*getVariable(5,k)+99*Math.pow(10,+2)/getVariable(8,k)*getVariable(6,k)*54*Math.pow(10,-6)/getVariable(9,k)
Aug 31, 2024 2:18:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.939103826010024; Expression=u5(k)+u8(k)*u8(k)*u6(k)/u5(k)-87*Math.pow(10,-1)/u8(k)*u1(k)/u6(k)*u7(k)/u6(k)*u2(k)/u6(k)/u3(k)*u5(k)+99*Math.pow(10,+2)/u8(k)*u6(k)*54*Math.pow(10,-6)/u5(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-87*Math.pow(10,-1)/getVariable(8,k)*getVariable(1,k)/getVariable(6,k)*getVariable(7,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)/getVariable(3,k)*getVariable(5,k)+99*Math.pow(10,+2)/getVariable(8,k)*getVariable(6,k)*54*Math.pow(10,-6)/getVariable(5,k)
Aug 31, 2024 2:19:00 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 3.939103826010024 -->> Avg.: 4.190075320799024 -->> Std. Dev.: 0.21701297724478186

Execution time: 1612.658 seconds.



@@;getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/getVariable(5,k)-87*Math.pow(10,-1)/getVariable(8,k)*getVariable(1,k)/getVariable(6,k)*getVariable(7,k)/getVariable(6,k)*getVariable(2,k)/getVariable(6,k)/getVariable(3,k)*getVariable(5,k)+99*Math.pow(10,+2)/getVariable(8,k)*getVariable(6,k)*54*Math.pow(10,-6)/getVariable(5,k)



Run #6
========
Aug 31, 2024 2:19:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=98.53716752109338; Expression=u3(k)/u3(k)+1*Math.pow(10,-6)+u5(k)+u6(k); Java Expression: getVariable(3,k)/getVariable(3,k)+1*Math.pow(10,-6)+getVariable(5,k)+getVariable(6,k)
Aug 31, 2024 2:19:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=29.39563698871639; Expression=69*Math.pow(10,+1)*u9(k)/67*Math.pow(10,-6)*98*Math.pow(10,+2)+u3(k)/u5(k); Java Expression: 69*Math.pow(10,+1)*getVariable(9,k)/67*Math.pow(10,-6)*98*Math.pow(10,+2)+getVariable(3,k)/getVariable(5,k)
Aug 31, 2024 2:19:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=20.59712241098021; Expression=u1(k)-u5(k); Java Expression: getVariable(1,k)-getVariable(5,k)
Aug 31, 2024 2:19:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=19.9730410134687; Expression=u5(k)*u8(k); Java Expression: getVariable(5,k)*getVariable(8,k)
Aug 31, 2024 2:19:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=12.09604966340105; Expression=6*Math.pow(10,-8)*u6(k)-u5(k)/u1(k)+u3(k); Java Expression: 6*Math.pow(10,-8)*getVariable(6,k)-getVariable(5,k)/getVariable(1,k)+getVariable(3,k)
Aug 31, 2024 2:19:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=11.285613771429693; Expression=u8(k)+u7(k)*16*Math.pow(10,-9)+u4(k)+u8(k)*u8(k)/u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*16*Math.pow(10,-9)+getVariable(4,k)+getVariable(8,k)*getVariable(8,k)/getVariable(8,k)
Aug 31, 2024 2:19:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.33047138300952; Expression=u5(k)+u6(k)-21*Math.pow(10,-8)-u6(k); Java Expression: getVariable(5,k)+getVariable(6,k)-21*Math.pow(10,-8)-getVariable(6,k)
Aug 31, 2024 2:19:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330471359323823; Expression=81*Math.pow(10,-8)+u5(k); Java Expression: 81*Math.pow(10,-8)+getVariable(5,k)
Aug 31, 2024 2:19:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330471357466129; Expression=89*Math.pow(10,-8)+u5(k); Java Expression: 89*Math.pow(10,-8)+getVariable(5,k)
Aug 31, 2024 2:19:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.328842874336756; Expression=92*Math.pow(10,-3)+u5(k); Java Expression: 92*Math.pow(10,-3)+getVariable(5,k)
Aug 31, 2024 2:19:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:19:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.40413509475122; Expression=8*Math.pow(10,-9)*29*Math.pow(10,+1)*u7(k)*97*Math.pow(10,-9)*u1(k)+34*Math.pow(10,-2)*u6(k); Java Expression: 8*Math.pow(10,-9)*29*Math.pow(10,+1)*getVariable(7,k)*97*Math.pow(10,-9)*getVariable(1,k)+34*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 2:19:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.151417591999011; Expression=u1(k)/u1(k)-u3(k)+u7(k)-u9(k)/u4(k)+u4(k)*9*Math.pow(10,+2)*3*Math.pow(10,-9)-u5(k); Java Expression: getVariable(1,k)/getVariable(1,k)-getVariable(3,k)+getVariable(7,k)-getVariable(9,k)/getVariable(4,k)+getVariable(4,k)*9*Math.pow(10,+2)*3*Math.pow(10,-9)-getVariable(5,k)
Aug 31, 2024 2:19:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.148499212784027; Expression=u1(k)/u1(k)-u3(k)+u7(k)-u9(k)/u4(k)+u4(k)*67*Math.pow(10,+2)*67*Math.pow(10,-9)-u5(k); Java Expression: getVariable(1,k)/getVariable(1,k)-getVariable(3,k)+getVariable(7,k)-getVariable(9,k)/getVariable(4,k)+getVariable(4,k)*67*Math.pow(10,+2)*67*Math.pow(10,-9)-getVariable(5,k)
Aug 31, 2024 2:19:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.134435871908615; Expression=u1(k)/u1(k)-u3(k)+u7(k)-u9(k)/u4(k)+u4(k)*9*Math.pow(10,+5)*3*Math.pow(10,-9)-u5(k); Java Expression: getVariable(1,k)/getVariable(1,k)-getVariable(3,k)+getVariable(7,k)-getVariable(9,k)/getVariable(4,k)+getVariable(4,k)*9*Math.pow(10,+5)*3*Math.pow(10,-9)-getVariable(5,k)
Aug 31, 2024 2:19:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.054976621793515; Expression=u1(k)/u1(k)-u3(k)+u7(k)-u9(k)/u4(k)+u4(k)*7*Math.pow(10,+5)*47*Math.pow(10,-9)-u5(k); Java Expression: getVariable(1,k)/getVariable(1,k)-getVariable(3,k)+getVariable(7,k)-getVariable(9,k)/getVariable(4,k)+getVariable(4,k)*7*Math.pow(10,+5)*47*Math.pow(10,-9)-getVariable(5,k)
Aug 31, 2024 2:19:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.890221271429997; Expression=u2(k)/u1(k)-u3(k)+u7(k)-u9(k)/u4(k)+u4(k)*9*Math.pow(10,+5)*3*Math.pow(10,-9)-u5(k); Java Expression: getVariable(2,k)/getVariable(1,k)-getVariable(3,k)+getVariable(7,k)-getVariable(9,k)/getVariable(4,k)+getVariable(4,k)*9*Math.pow(10,+5)*3*Math.pow(10,-9)-getVariable(5,k)
Aug 31, 2024 2:19:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.88763254060459; Expression=u2(k)/u1(k)-u3(k)+u7(k)-u9(k)/u4(k)+u4(k)*9*Math.pow(10,-5)*3*Math.pow(10,-9)-u5(k); Java Expression: getVariable(2,k)/getVariable(1,k)-getVariable(3,k)+getVariable(7,k)-getVariable(9,k)/getVariable(4,k)+getVariable(4,k)*9*Math.pow(10,-5)*3*Math.pow(10,-9)-getVariable(5,k)
Aug 31, 2024 2:19:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.867141474510982; Expression=u2(k)/u1(k)-u3(k)+u7(k)-u5(k)/u4(k)+u4(k)*9*Math.pow(10,+5)*3*Math.pow(10,-9)-u5(k); Java Expression: getVariable(2,k)/getVariable(1,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)/getVariable(4,k)+getVariable(4,k)*9*Math.pow(10,+5)*3*Math.pow(10,-9)-getVariable(5,k)
Aug 31, 2024 2:19:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.819754216009572; Expression=u2(k)/u1(k)-u3(k)+u7(k)-u1(k)/u4(k)+u4(k)*9*Math.pow(10,-5)*3*Math.pow(10,-9)-u5(k); Java Expression: getVariable(2,k)/getVariable(1,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(4,k)+getVariable(4,k)*9*Math.pow(10,-5)*3*Math.pow(10,-9)-getVariable(5,k)
Aug 31, 2024 2:19:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8022152652592345; Expression=u2(k)/u1(k)-u3(k)+u7(k)-u1(k)/u4(k)+u9(k)*9*Math.pow(10,+5)*3*Math.pow(10,-9)-u5(k); Java Expression: getVariable(2,k)/getVariable(1,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(4,k)+getVariable(9,k)*9*Math.pow(10,+5)*3*Math.pow(10,-9)-getVariable(5,k)
Aug 31, 2024 2:19:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.749765149727628; Expression=u2(k)/u1(k)-u3(k)+u7(k)-u1(k)/u4(k)+u4(k)*20*Math.pow(10,+5)*20*Math.pow(10,-9)-u5(k); Java Expression: getVariable(2,k)/getVariable(1,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(4,k)+getVariable(4,k)*20*Math.pow(10,+5)*20*Math.pow(10,-9)-getVariable(5,k)
Aug 31, 2024 2:19:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.734285320869013; Expression=u2(k)/u1(k)-u3(k)+u7(k)-u1(k)/u4(k)+u4(k)*7*Math.pow(10,+5)*47*Math.pow(10,-9)-u5(k); Java Expression: getVariable(2,k)/getVariable(1,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(4,k)+getVariable(4,k)*7*Math.pow(10,+5)*47*Math.pow(10,-9)-getVariable(5,k)
Aug 31, 2024 2:19:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.734164103173691; Expression=u2(k)/u1(k)-u3(k)+u7(k)-u1(k)/u4(k)+u4(k)*73*Math.pow(10,+5)*3*Math.pow(10,-9)-u5(k); Java Expression: getVariable(2,k)/getVariable(1,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(4,k)+getVariable(4,k)*73*Math.pow(10,+5)*3*Math.pow(10,-9)-getVariable(5,k)
Aug 31, 2024 2:19:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.733421788929466; Expression=u2(k)/u1(k)-u3(k)+u7(k)-u1(k)/u4(k)+u4(k)*9*Math.pow(10,+5)*25*Math.pow(10,-9)-u5(k); Java Expression: getVariable(2,k)/getVariable(1,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(4,k)+getVariable(4,k)*9*Math.pow(10,+5)*25*Math.pow(10,-9)-getVariable(5,k)
Aug 31, 2024 2:19:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.720146685171669; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u4(k)*u5(k)*20*Math.pow(10,+5)*20*Math.pow(10,-9)-u5(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(4,k)*getVariable(5,k)*20*Math.pow(10,+5)*20*Math.pow(10,-9)-getVariable(5,k)
Aug 31, 2024 2:19:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.676354793628062; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u4(k)*u5(k)*20*Math.pow(10,+5)*28*Math.pow(10,-9)-u5(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(4,k)*getVariable(5,k)*20*Math.pow(10,+5)*28*Math.pow(10,-9)-getVariable(5,k)
Aug 31, 2024 2:19:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.58012493089516; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*u5(k)*20*Math.pow(10,+5)*28*Math.pow(10,-9)-u5(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*getVariable(5,k)*20*Math.pow(10,+5)*28*Math.pow(10,-9)-getVariable(5,k)
Aug 31, 2024 2:20:53 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.58012493089516 -->> Avg.: 1.3935306166065743E9 -->> Std. Dev.: 6.230282118500664E9
Aug 31, 2024 2:21:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5793697227506565; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*u5(k)*8*Math.pow(10,+5)*69*Math.pow(10,-9)-u5(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*getVariable(5,k)*8*Math.pow(10,+5)*69*Math.pow(10,-9)-getVariable(5,k)
Aug 31, 2024 2:21:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.579245529138775; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*u5(k)*68*Math.pow(10,+5)*8*Math.pow(10,-9)-u5(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*getVariable(5,k)*68*Math.pow(10,+5)*8*Math.pow(10,-9)-getVariable(5,k)
Aug 31, 2024 2:21:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5759054856131405; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*20*Math.pow(10,+5)*28*Math.pow(10,-9)*u5(k)-u5(k)+u8(k)/u3(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*20*Math.pow(10,+5)*28*Math.pow(10,-9)*getVariable(5,k)-getVariable(5,k)+getVariable(8,k)/getVariable(3,k)
Aug 31, 2024 2:21:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.57388526428651; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*20*Math.pow(10,+5)*28*Math.pow(10,-9)*u5(k)-u5(k)+u1(k)/u7(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*20*Math.pow(10,+5)*28*Math.pow(10,-9)*getVariable(5,k)-getVariable(5,k)+getVariable(1,k)/getVariable(7,k)
Aug 31, 2024 2:21:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.559386151922126; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*20*Math.pow(10,+5)*28*Math.pow(10,-9)*u5(k)-u5(k)+u4(k)/u6(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*20*Math.pow(10,+5)*28*Math.pow(10,-9)*getVariable(5,k)-getVariable(5,k)+getVariable(4,k)/getVariable(6,k)
Aug 31, 2024 2:22:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.547364450848842; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*20*Math.pow(10,+5)*28*Math.pow(10,-9)*u5(k)-u5(k)+u4(k)/u1(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*20*Math.pow(10,+5)*28*Math.pow(10,-9)*getVariable(5,k)-getVariable(5,k)+getVariable(4,k)/getVariable(1,k)
Aug 31, 2024 2:22:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.543111706096797; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*20*Math.pow(10,+5)*28*Math.pow(10,-9)*u5(k)-u5(k)+u5(k)/u1(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*20*Math.pow(10,+5)*28*Math.pow(10,-9)*getVariable(5,k)-getVariable(5,k)+getVariable(5,k)/getVariable(1,k)
Aug 31, 2024 2:22:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.542384463942579; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*20*Math.pow(10,+5)*28*Math.pow(10,-9)*u5(k)-u5(k)+u3(k)/u1(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*20*Math.pow(10,+5)*28*Math.pow(10,-9)*getVariable(5,k)-getVariable(5,k)+getVariable(3,k)/getVariable(1,k)
Aug 31, 2024 2:22:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.541053270305019; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*20*Math.pow(10,+5)*28*Math.pow(10,-9)*u5(k)-u5(k)+u9(k)/u1(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*20*Math.pow(10,+5)*28*Math.pow(10,-9)*getVariable(5,k)-getVariable(5,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 2:22:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.536448234706614; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*21*Math.pow(10,+5)*28*Math.pow(10,-9)*u5(k)-u5(k)+u5(k)/u1(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*21*Math.pow(10,+5)*28*Math.pow(10,-9)*getVariable(5,k)-getVariable(5,k)+getVariable(5,k)/getVariable(1,k)
Aug 31, 2024 2:22:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.496693893101005; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*91*Math.pow(10,-9)*81*Math.pow(10,+4)*u5(k)-u5(k)+u6(k)/u1(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*91*Math.pow(10,-9)*81*Math.pow(10,+4)*getVariable(5,k)-getVariable(5,k)+getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 2:23:31 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.496693893101005 -->> Avg.: 205962.58786582007 -->> Std. Dev.: 957702.2567685463
Aug 31, 2024 2:23:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.488753756935113; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*87*Math.pow(10,-9)*81*Math.pow(10,+4)*u5(k)-u5(k)+u6(k)/u1(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*87*Math.pow(10,-9)*81*Math.pow(10,+4)*getVariable(5,k)-getVariable(5,k)+getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 2:23:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.488502468245293; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*91*Math.pow(10,-9)*u5(k)*77*Math.pow(10,+4)-u5(k)+u6(k)/u1(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*91*Math.pow(10,-9)*getVariable(5,k)*77*Math.pow(10,+4)-getVariable(5,k)+getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 2:24:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.488470242597212; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*90*Math.pow(10,-9)*77*Math.pow(10,+4)*u5(k)-u5(k)+u6(k)/u1(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*90*Math.pow(10,-9)*77*Math.pow(10,+4)*getVariable(5,k)-getVariable(5,k)+getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 2:24:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.488411333737719; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*u5(k)*86*Math.pow(10,-9)*81*Math.pow(10,+4)-u5(k)+u6(k)/u1(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*getVariable(5,k)*86*Math.pow(10,-9)*81*Math.pow(10,+4)-getVariable(5,k)+getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 2:24:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.486202938784817; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*91*Math.pow(10,-9)*81*Math.pow(10,+4)*u5(k)-u5(k)+u2(k)/u7(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*91*Math.pow(10,-9)*81*Math.pow(10,+4)*getVariable(5,k)-getVariable(5,k)+getVariable(2,k)/getVariable(7,k)
Aug 31, 2024 2:26:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.486174702032765; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*92*Math.pow(10,-9)*81*Math.pow(10,+4)*u5(k)-u5(k)+u2(k)/u7(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*92*Math.pow(10,-9)*81*Math.pow(10,+4)*getVariable(5,k)-getVariable(5,k)+getVariable(2,k)/getVariable(7,k)
Aug 31, 2024 2:27:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.395130879900893; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*u1(k)-u5(k)+u8(k)/u3(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*getVariable(1,k)-getVariable(5,k)+getVariable(8,k)/getVariable(3,k)
Aug 31, 2024 2:27:45 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.395130879900893 -->> Avg.: 168.33931654653654 -->> Std. Dev.: 580.120800420344
Aug 31, 2024 2:27:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.368237288016297; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u6(k)/u3(k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*u1(k)-u5(k)+u2(k)/u7(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(6,k)/getVariable(3,k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*getVariable(1,k)-getVariable(5,k)+getVariable(2,k)/getVariable(7,k)
Aug 31, 2024 2:28:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.366867586672377; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u6(k)/u3(k)*95*Math.pow(10,-9)*28*Math.pow(10,+4)*u1(k)-u5(k)+u2(k)/u7(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(6,k)/getVariable(3,k)*95*Math.pow(10,-9)*28*Math.pow(10,+4)*getVariable(1,k)-getVariable(5,k)+getVariable(2,k)/getVariable(7,k)
Aug 31, 2024 2:28:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.343457327150801; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*u1(k)-u5(k)+u5(k)/u3(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*getVariable(1,k)-getVariable(5,k)+getVariable(5,k)/getVariable(3,k)
Aug 31, 2024 2:28:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.343402413823901; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*u1(k)-u5(k)+u5(k)/u1(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*getVariable(1,k)-getVariable(5,k)+getVariable(5,k)/getVariable(1,k)
Aug 31, 2024 2:28:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.275704519615539; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u7(k)/u3(k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*u1(k)-u5(k)+u2(k)/u7(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*getVariable(1,k)-getVariable(5,k)+getVariable(2,k)/getVariable(7,k)
Aug 31, 2024 2:30:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.275704519615538; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*u7(k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)-u5(k)+u2(k)/u7(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*getVariable(7,k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)-getVariable(5,k)+getVariable(2,k)/getVariable(7,k)
Aug 31, 2024 2:31:50 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.275704519615538 -->> Avg.: 13.212339916112917 -->> Std. Dev.: 16.11100435493657
Aug 31, 2024 2:33:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2626225808994604; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*91*Math.pow(10,-9)*36*Math.pow(10,+4)*u7(k)-u5(k)+u2(k)/u4(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*91*Math.pow(10,-9)*36*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 2:33:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.26262258089946; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*u7(k)*91*Math.pow(10,-9)*36*Math.pow(10,+4)-u5(k)+u2(k)/u4(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*getVariable(7,k)*91*Math.pow(10,-9)*36*Math.pow(10,+4)-getVariable(5,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 2:33:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.249769751557469; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u3(k)-77*Math.pow(10,-5)*u2(k)+u8(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(3,k)-77*Math.pow(10,-5)*getVariable(2,k)+getVariable(8,k)
Aug 31, 2024 2:33:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.23910348896663; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u3(k)*77*Math.pow(10,-5)*u2(k)+u8(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(3,k)*77*Math.pow(10,-5)*getVariable(2,k)+getVariable(8,k)
Aug 31, 2024 2:33:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.238376773152967; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u3(k)-64*Math.pow(10,-4)/u2(k)+u8(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(3,k)-64*Math.pow(10,-4)/getVariable(2,k)+getVariable(8,k)
Aug 31, 2024 2:34:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.238373871299044; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u3(k)-67*Math.pow(10,-5)/u2(k)+u8(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(3,k)-67*Math.pow(10,-5)/getVariable(2,k)+getVariable(8,k)
Aug 31, 2024 2:34:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.23837353239449; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u3(k)-77*Math.pow(10,-8)/u2(k)+u8(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(3,k)-77*Math.pow(10,-8)/getVariable(2,k)+getVariable(8,k)
Aug 31, 2024 2:34:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.196607336170165; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*u7(k)*91*Math.pow(10,-9)*41*Math.pow(10,+4)-u5(k)+u2(k)/u4(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*getVariable(7,k)*91*Math.pow(10,-9)*41*Math.pow(10,+4)-getVariable(5,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 2:34:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.192781008986259; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*u7(k)*89*Math.pow(10,-9)*41*Math.pow(10,+4)-u5(k)+u2(k)/u4(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*getVariable(7,k)*89*Math.pow(10,-9)*41*Math.pow(10,+4)-getVariable(5,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 2:34:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.192781008986258; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*89*Math.pow(10,-9)*41*Math.pow(10,+4)*u7(k)-u5(k)+u2(k)/u4(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*89*Math.pow(10,-9)*41*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 2:35:53 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.192781008986258 -->> Avg.: 5.830430234974821 -->> Std. Dev.: 2.1934262311763426
Aug 31, 2024 2:35:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.180390886727785; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u3(k)*u2(k)*u8(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(3,k)*getVariable(2,k)*getVariable(8,k)
Aug 31, 2024 2:37:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.149425609214782; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*91*Math.pow(10,-9)*27*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)
Aug 31, 2024 2:38:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.131070665688049; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*91*Math.pow(10,-9)*28*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*91*Math.pow(10,-9)*28*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)
Aug 31, 2024 2:38:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1246226092725955; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*49*Math.pow(10,-9)*57*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*49*Math.pow(10,-9)*57*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)
Aug 31, 2024 2:38:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.119686187146894; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*84*Math.pow(10,-9)*32*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*84*Math.pow(10,-9)*32*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)
Aug 31, 2024 2:39:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1086199913817225; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*84*Math.pow(10,-9)*32*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)+u9(k)/u2(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*84*Math.pow(10,-9)*32*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(9,k)/getVariable(2,k)
Aug 31, 2024 2:39:59 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.1086199913817225 -->> Avg.: 5.351102704175726 -->> Std. Dev.: 0.15577673374045384
Aug 31, 2024 2:40:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.108265758653899; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*91*Math.pow(10,-9)*28*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)*u6(k)/u1(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*91*Math.pow(10,-9)*28*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)*getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 2:40:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1065573203104755; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*84*Math.pow(10,-9)*32*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)+u3(k)/u2(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*84*Math.pow(10,-9)*32*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(3,k)/getVariable(2,k)
Aug 31, 2024 2:40:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.100831689772187; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*84*Math.pow(10,-9)*32*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)+u5(k)/u1(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*84*Math.pow(10,-9)*32*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(5,k)/getVariable(1,k)
Aug 31, 2024 2:40:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.098728318665564; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*84*Math.pow(10,-9)*32*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)+u5(k)/u7(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*84*Math.pow(10,-9)*32*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(5,k)/getVariable(7,k)
Aug 31, 2024 2:40:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0901404417834435; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*31*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)+u8(k)/u8(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*31*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(8,k)/getVariable(8,k)
Aug 31, 2024 2:41:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0747400847190525; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*31*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)+u1(k)/u7(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*31*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(1,k)/getVariable(7,k)
Aug 31, 2024 2:41:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.068830608541186; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*84*Math.pow(10,-9)*32*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)*u6(k)/u1(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*84*Math.pow(10,-9)*32*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)*getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 2:41:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.048683920093665; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*84*Math.pow(10,-9)*34*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)*u6(k)/u1(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*84*Math.pow(10,-9)*34*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)*getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 2:42:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.048238640554109; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*31*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)*u6(k)/u1(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*31*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)*getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 2:43:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.048119487811525; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*31*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)*u6(k)/u1(k)+u1(k)/u6(k)/u6(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*31*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)*getVariable(6,k)/getVariable(1,k)+getVariable(1,k)/getVariable(6,k)/getVariable(6,k)
Aug 31, 2024 2:43:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0478944897420845; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*31*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)*u6(k)/u1(k)+u1(k)/u7(k)/u6(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*31*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)*getVariable(6,k)/getVariable(1,k)+getVariable(1,k)/getVariable(7,k)/getVariable(6,k)
Aug 31, 2024 2:44:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.047477771204979; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*31*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)*u6(k)/u1(k)+u8(k)/u9(k)/u8(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*31*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)*getVariable(6,k)/getVariable(1,k)+getVariable(8,k)/getVariable(9,k)/getVariable(8,k)
Aug 31, 2024 2:44:29 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.047477771204979 -->> Avg.: 5.255459646530729 -->> Std. Dev.: 0.14795198699892462
Aug 31, 2024 2:44:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.047040376601987; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*31*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)*u6(k)/u1(k)+u1(k)/u9(k)/u7(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*31*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)*getVariable(6,k)/getVariable(1,k)+getVariable(1,k)/getVariable(9,k)/getVariable(7,k)
Aug 31, 2024 2:44:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.039349576582664; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*31*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)*u6(k)/u1(k)+u5(k)/u2(k)/u8(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*31*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)*getVariable(6,k)/getVariable(1,k)+getVariable(5,k)/getVariable(2,k)/getVariable(8,k)
Aug 31, 2024 2:45:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.036972854208533; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u7(k)/u3(k)*31*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)+u6(k)/u4(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*31*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(6,k)/getVariable(4,k)
Aug 31, 2024 2:45:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.586667628234495; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)+u9(k)/u7(k)+u5(k)/u2(k)*u5(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(9,k)/getVariable(7,k)+getVariable(5,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 2:48:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.579996176300313; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)+u9(k)/u7(k)+u5(k)/u2(k)*u5(k)+u5(k)/u2(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(9,k)/getVariable(7,k)+getVariable(5,k)/getVariable(2,k)*getVariable(5,k)+getVariable(5,k)/getVariable(2,k)
Aug 31, 2024 2:49:33 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.579996176300313 -->> Avg.: 5.1203572327099485 -->> Std. Dev.: 0.208308742542372
Aug 31, 2024 2:49:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.543584864859084; Expression=u9(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)+u6(k)/u7(k)+u5(k)/u2(k)*u5(k)+u6(k)/u4(k); Java Expression: getVariable(9,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(6,k)/getVariable(7,k)+getVariable(5,k)/getVariable(2,k)*getVariable(5,k)+getVariable(6,k)/getVariable(4,k)
Aug 31, 2024 2:50:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.467876473953481; Expression=u9(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)+u6(k)/u7(k)+u5(k)/u7(k)*u5(k); Java Expression: getVariable(9,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(6,k)/getVariable(7,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 2:51:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.423204388126798; Expression=u8(k)/u4(k)-u3(k)+u7(k)-u1(k)/u3(k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u7(k)/u4(k)*u2(k)*u8(k)+u6(k)/u7(k)+u5(k)/u7(k)*u5(k); Java Expression: getVariable(8,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/getVariable(3,k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(6,k)/getVariable(7,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 2:51:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.328668566880148; Expression=u9(k)/u4(k)-u3(k)+u7(k)-u7(k)/u3(k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u4(k)/u4(k)*u2(k)*u8(k)+u6(k)/u2(k)+u5(k)/u7(k)*u5(k); Java Expression: getVariable(9,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(4,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(6,k)/getVariable(2,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 2:52:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.263616693238372; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u7(k)/u3(k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u6(k)/u7(k)/u4(k)*u2(k)*u8(k)+u9(k)/u7(k)+u5(k)/u2(k)*u5(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(6,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(9,k)/getVariable(7,k)+getVariable(5,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 2:54:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.2636166932383714; Expression=u2(k)/u4(k)-u3(k)+u7(k)-u7(k)/u3(k)*u7(k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)-u5(k)+u6(k)/u7(k)/u4(k)*u2(k)*u8(k)+u9(k)/u7(k)+u5(k)/u2(k)*u5(k); Java Expression: getVariable(2,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*getVariable(7,k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)-getVariable(5,k)+getVariable(6,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(9,k)/getVariable(7,k)+getVariable(5,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 2:54:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.255602596732605; Expression=u9(k)/u4(k)-u3(k)+u7(k)-u7(k)/u3(k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u4(k)/u4(k)*u2(k)*u8(k)+u6(k)/u2(k)+u5(k)/u7(k)*u5(k); Java Expression: getVariable(9,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(4,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(6,k)/getVariable(2,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 2:54:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.232737365770227; Expression=u9(k)/u5(k)-u3(k)+u7(k)-u7(k)/u3(k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u5(k)/u4(k)/u4(k)*u2(k)*u8(k)+u6(k)/u2(k)+u5(k)/u7(k)*u5(k); Java Expression: getVariable(9,k)/getVariable(5,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(4,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(6,k)/getVariable(2,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 2:54:57 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.232737365770227 -->> Avg.: 4.945212761855878 -->> Std. Dev.: 0.3177597936711632
Aug 31, 2024 2:55:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.229476066859506; Expression=u9(k)/u4(k)-u3(k)+u7(k)-u7(k)/u3(k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u6(k)/u7(k)/u4(k)*u2(k)*u8(k)+u6(k)/u2(k)+u5(k)/u7(k)*u5(k); Java Expression: getVariable(9,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(6,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(6,k)/getVariable(2,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 2:55:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.208724829818512; Expression=u9(k)/u4(k)-u3(k)+u7(k)-u7(k)/u3(k)*u7(k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)-u5(k)+u5(k)/u4(k)/u5(k)*u2(k)*u8(k)+u6(k)/u2(k)+u5(k)/u7(k)*u5(k); Java Expression: getVariable(9,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*getVariable(7,k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)-getVariable(5,k)+getVariable(5,k)/getVariable(4,k)/getVariable(5,k)*getVariable(2,k)*getVariable(8,k)+getVariable(6,k)/getVariable(2,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 2:56:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.197283102723976; Expression=u9(k)/u4(k)-u3(k)+u7(k)-u7(k)/u3(k)*u7(k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)-u5(k)+u5(k)/u4(k)/u5(k)*u2(k)*u8(k)+u4(k)/u2(k)+u5(k)/u7(k)*u5(k); Java Expression: getVariable(9,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*getVariable(7,k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)-getVariable(5,k)+getVariable(5,k)/getVariable(4,k)/getVariable(5,k)*getVariable(2,k)*getVariable(8,k)+getVariable(4,k)/getVariable(2,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 2:56:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.194280840584015; Expression=u9(k)/u4(k)-u3(k)+u7(k)-u7(k)/u3(k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u6(k)/u7(k)/u4(k)*u2(k)*u8(k)-u3(k)/u2(k)+u5(k)/u7(k)*u5(k); Java Expression: getVariable(9,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*63*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(6,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)-getVariable(3,k)/getVariable(2,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 2:56:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.1695463987464985; Expression=u9(k)/u4(k)-u3(k)+u7(k)-u7(k)/u3(k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u6(k)/u7(k)/u4(k)*u2(k)*u8(k)+u6(k)/u2(k)+u5(k)/u7(k)*u5(k); Java Expression: getVariable(9,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(6,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(6,k)/getVariable(2,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 2:56:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.169546398746498; Expression=u9(k)/u4(k)-u3(k)+u7(k)-u7(k)/u3(k)*u7(k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)-u5(k)+u6(k)/u7(k)/u4(k)*u2(k)*u8(k)+u6(k)/u2(k)+u5(k)/u7(k)*u5(k); Java Expression: getVariable(9,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*getVariable(7,k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)-getVariable(5,k)+getVariable(6,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(6,k)/getVariable(2,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 2:57:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.16954639509701; Expression=u9(k)/u4(k)-u3(k)+u7(k)-u7(k)/u3(k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u6(k)/u7(k)/u4(k)*u2(k)*u8(k)+u6(k)/u2(k)+u5(k)/u7(k)*u5(k)+17*Math.pow(10,-9)*u8(k); Java Expression: getVariable(9,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(6,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(6,k)/getVariable(2,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)+17*Math.pow(10,-9)*getVariable(8,k)
Aug 31, 2024 2:57:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.1692799289923546; Expression=u9(k)/u4(k)-u3(k)+u7(k)-u7(k)/u3(k)*66*Math.pow(10,-9)*92*Math.pow(10,+4)*u7(k)-u5(k)+u6(k)/u7(k)/u4(k)*u2(k)*u8(k)+u6(k)/u2(k)+u5(k)/u7(k)*u5(k); Java Expression: getVariable(9,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*66*Math.pow(10,-9)*92*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(6,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(6,k)/getVariable(2,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 2:57:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.16855546415433; Expression=u9(k)/u4(k)-u3(k)+u7(k)-u7(k)/u3(k)*u7(k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)-u5(k)+u6(k)/u7(k)/u4(k)*u2(k)*u8(k)+u7(k)/u2(k)+u5(k)/u7(k)*u5(k); Java Expression: getVariable(9,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*getVariable(7,k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)-getVariable(5,k)+getVariable(6,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(7,k)/getVariable(2,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 2:58:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.161573051160092; Expression=u9(k)/u4(k)-u3(k)+u7(k)-u7(k)/u3(k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u6(k)/u7(k)/u4(k)*u2(k)*u8(k)+u6(k)/u1(k)+u5(k)/u7(k)*u5(k); Java Expression: getVariable(9,k)/getVariable(4,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(6,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)+getVariable(6,k)/getVariable(1,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 2:58:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.970504828202627; Expression=u9(k)/u6(k)-u3(k)+u7(k)-u7(k)/u3(k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u6(k)/u7(k)/u4(k)*u2(k)*u8(k)*u6(k)/u1(k)+u5(k)/u7(k)*u5(k); Java Expression: getVariable(9,k)/getVariable(6,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(6,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)*getVariable(6,k)/getVariable(1,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 2:58:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.952903603554236; Expression=u9(k)/u2(k)-u3(k)+u7(k)-u7(k)/u3(k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u6(k)/u7(k)/u4(k)*u2(k)*u8(k)*u6(k)/u1(k)+u5(k)/u7(k)*u5(k); Java Expression: getVariable(9,k)/getVariable(2,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(6,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)*getVariable(6,k)/getVariable(1,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 3:00:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9475910788248347; Expression=u5(k)/u2(k)-u3(k)+u7(k)-u7(k)/u3(k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)*u7(k)-u5(k)+u6(k)/u7(k)/u4(k)*u2(k)*u8(k)*u6(k)/u1(k)+u5(k)/u7(k)*u5(k); Java Expression: getVariable(5,k)/getVariable(2,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(6,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)*getVariable(6,k)/getVariable(1,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 3:00:25 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 3.9475910788248347 -->> Avg.: 4.729903007041302 -->> Std. Dev.: 0.4047683122290268

Execution time: 2490.902 seconds.



@@;getVariable(5,k)/getVariable(2,k)-getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(3,k)*66*Math.pow(10,-9)*93*Math.pow(10,+4)*getVariable(7,k)-getVariable(5,k)+getVariable(6,k)/getVariable(7,k)/getVariable(4,k)*getVariable(2,k)*getVariable(8,k)*getVariable(6,k)/getVariable(1,k)+getVariable(5,k)/getVariable(7,k)*getVariable(5,k)



Run #7
========
Aug 31, 2024 3:00:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=2.6814568455371023E18; Expression=72*Math.pow(10,-2)-18*Math.pow(10,-6)/68*Math.pow(10,+3)*u3(k)+u4(k)/70*Math.pow(10,-2)+66*Math.pow(10,-9)-u3(k)-u5(k)-u7(k)*u2(k)*12*Math.pow(10,+6)/1*Math.pow(10,-9)/33*Math.pow(10,+1)*u3(k)*u1(k)+73*Math.pow(10,-9)+u6(k)+21*Math.pow(10,+4)-u6(k)*7*Math.pow(10,-8)*u6(k)/u6(k)/u6(k)/u8(k)-u4(k)/u7(k)/u7(k)/37*Math.pow(10,+6)+u5(k)*66*Math.pow(10,-9)/u6(k)-53*Math.pow(10,+8)/u1(k)*76*Math.pow(10,+6)/u6(k)-u3(k)/u2(k)+u4(k)/u2(k)-8*Math.pow(10,+8)+u6(k)+u3(k)/64*Math.pow(10,+8)*u4(k)/u7(k)*98*Math.pow(10,+9)-u5(k)+u1(k)*u5(k)*35*Math.pow(10,+5)*97*Math.pow(10,-3)-u9(k)*u8(k)*u4(k)+u5(k)/u4(k)/u4(k)/u5(k)-u8(k)+u1(k)*97*Math.pow(10,+5)*u2(k)-u1(k)+u9(k)+u2(k)+u1(k)*u5(k)/u4(k)/6*Math.pow(10,+9)*40*Math.pow(10,+6)+u1(k)+u3(k)*u9(k)+u5(k)*u9(k)-u7(k)/82*Math.pow(10,+8)+u7(k)+59*Math.pow(10,+1)*u4(k)+52*Math.pow(10,-6)*u8(k)-u1(k)*u9(k)/u3(k)*53*Math.pow(10,+5)+u3(k)-32*Math.pow(10,-9)/u5(k)-u6(k)+96*Math.pow(10,-9)*90*Math.pow(10,+6)*u3(k)+11*Math.pow(10,+8)-u2(k)+u8(k)*u4(k)-74*Math.pow(10,-3)+u9(k)+u2(k)+u2(k)+u1(k)-47*Math.pow(10,+4)/u2(k)+44*Math.pow(10,-5)-u1(k)+u1(k)+u7(k)*u1(k)/u1(k)+u8(k)-u8(k); Java Expression: 72*Math.pow(10,-2)-18*Math.pow(10,-6)/68*Math.pow(10,+3)*getVariable(3,k)+getVariable(4,k)/70*Math.pow(10,-2)+66*Math.pow(10,-9)-getVariable(3,k)-getVariable(5,k)-getVariable(7,k)*getVariable(2,k)*12*Math.pow(10,+6)/1*Math.pow(10,-9)/33*Math.pow(10,+1)*getVariable(3,k)*getVariable(1,k)+73*Math.pow(10,-9)+getVariable(6,k)+21*Math.pow(10,+4)-getVariable(6,k)*7*Math.pow(10,-8)*getVariable(6,k)/getVariable(6,k)/getVariable(6,k)/getVariable(8,k)-getVariable(4,k)/getVariable(7,k)/getVariable(7,k)/37*Math.pow(10,+6)+getVariable(5,k)*66*Math.pow(10,-9)/getVariable(6,k)-53*Math.pow(10,+8)/getVariable(1,k)*76*Math.pow(10,+6)/getVariable(6,k)-getVariable(3,k)/getVariable(2,k)+getVariable(4,k)/getVariable(2,k)-8*Math.pow(10,+8)+getVariable(6,k)+getVariable(3,k)/64*Math.pow(10,+8)*getVariable(4,k)/getVariable(7,k)*98*Math.pow(10,+9)-getVariable(5,k)+getVariable(1,k)*getVariable(5,k)*35*Math.pow(10,+5)*97*Math.pow(10,-3)-getVariable(9,k)*getVariable(8,k)*getVariable(4,k)+getVariable(5,k)/getVariable(4,k)/getVariable(4,k)/getVariable(5,k)-getVariable(8,k)+getVariable(1,k)*97*Math.pow(10,+5)*getVariable(2,k)-getVariable(1,k)+getVariable(9,k)+getVariable(2,k)+getVariable(1,k)*getVariable(5,k)/getVariable(4,k)/6*Math.pow(10,+9)*40*Math.pow(10,+6)+getVariable(1,k)+getVariable(3,k)*getVariable(9,k)+getVariable(5,k)*getVariable(9,k)-getVariable(7,k)/82*Math.pow(10,+8)+getVariable(7,k)+59*Math.pow(10,+1)*getVariable(4,k)+52*Math.pow(10,-6)*getVariable(8,k)-getVariable(1,k)*getVariable(9,k)/getVariable(3,k)*53*Math.pow(10,+5)+getVariable(3,k)-32*Math.pow(10,-9)/getVariable(5,k)-getVariable(6,k)+96*Math.pow(10,-9)*90*Math.pow(10,+6)*getVariable(3,k)+11*Math.pow(10,+8)-getVariable(2,k)+getVariable(8,k)*getVariable(4,k)-74*Math.pow(10,-3)+getVariable(9,k)+getVariable(2,k)+getVariable(2,k)+getVariable(1,k)-47*Math.pow(10,+4)/getVariable(2,k)+44*Math.pow(10,-5)-getVariable(1,k)+getVariable(1,k)+getVariable(7,k)*getVariable(1,k)/getVariable(1,k)+getVariable(8,k)-getVariable(8,k)
Aug 31, 2024 3:00:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6647.439737130185; Expression=u1(k)-u2(k)*u9(k); Java Expression: getVariable(1,k)-getVariable(2,k)*getVariable(9,k)
Aug 31, 2024 3:00:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=1537.6135296051084; Expression=46*Math.pow(10,-9)/6*Math.pow(10,+6)-u1(k)+u4(k)*u3(k)+u7(k)-u5(k)-88*Math.pow(10,-1)+40*Math.pow(10,+2)/u6(k)-u7(k)+u2(k); Java Expression: 46*Math.pow(10,-9)/6*Math.pow(10,+6)-getVariable(1,k)+getVariable(4,k)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-88*Math.pow(10,-1)+40*Math.pow(10,+2)/getVariable(6,k)-getVariable(7,k)+getVariable(2,k)
Aug 31, 2024 3:00:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=33.998271560399864; Expression=44*Math.pow(10,-2)/u8(k); Java Expression: 44*Math.pow(10,-2)/getVariable(8,k)
Aug 31, 2024 3:00:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=31.96563776806014; Expression=80*Math.pow(10,-2)+u8(k); Java Expression: 80*Math.pow(10,-2)+getVariable(8,k)
Aug 31, 2024 3:00:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=31.58150357771533; Expression=u6(k)/u9(k); Java Expression: getVariable(6,k)/getVariable(9,k)
Aug 31, 2024 3:00:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=28.563754022618184; Expression=46*Math.pow(10,+1)/u1(k); Java Expression: 46*Math.pow(10,+1)/getVariable(1,k)
Aug 31, 2024 3:00:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=12.8690551574372; Expression=u3(k)+u8(k); Java Expression: getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 3:00:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=12.274460084773045; Expression=77*Math.pow(10,+1)/35*Math.pow(10,-5)*u8(k)*u9(k)*u5(k)+u3(k)-u8(k)*u8(k); Java Expression: 77*Math.pow(10,+1)/35*Math.pow(10,-5)*getVariable(8,k)*getVariable(9,k)*getVariable(5,k)+getVariable(3,k)-getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:00:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=9.825672521485744; Expression=84*Math.pow(10,-2)*u5(k); Java Expression: 84*Math.pow(10,-2)*getVariable(5,k)
Aug 31, 2024 3:00:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330471378133055; Expression=u5(k)+u3(k)+u4(k)*86*Math.pow(10,-9)/19*Math.pow(10,-6)-u3(k); Java Expression: getVariable(5,k)+getVariable(3,k)+getVariable(4,k)*86*Math.pow(10,-9)/19*Math.pow(10,-6)-getVariable(3,k)
Aug 31, 2024 3:00:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330471378133048; Expression=u1(k)-u1(k)+u5(k); Java Expression: getVariable(1,k)-getVariable(1,k)+getVariable(5,k)
Aug 31, 2024 3:00:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330471375973463; Expression=93*Math.pow(10,-9)+u5(k); Java Expression: 93*Math.pow(10,-9)+getVariable(5,k)
Aug 31, 2024 3:00:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 31, 2024 3:00:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.404135094767029; Expression=34*Math.pow(10,-2)*u6(k); Java Expression: 34*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 3:00:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.053960890414428; Expression=34*Math.pow(10,-2)*u7(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 3:01:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.011279224818129; Expression=30*Math.pow(10,-2)*u7(k); Java Expression: 30*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 3:01:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131331039676381; Expression=77*Math.pow(10,+1)/35*Math.pow(10,-5)*u8(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k); Java Expression: 77*Math.pow(10,+1)/35*Math.pow(10,-5)*getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 3:01:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131073683622839; Expression=5*Math.pow(10,+4)/52*Math.pow(10,-6)*u8(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k); Java Expression: 5*Math.pow(10,+4)/52*Math.pow(10,-6)*getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 3:01:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.130644357539129; Expression=77*Math.pow(10,+2)/35*Math.pow(10,-5)*u8(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k); Java Expression: 77*Math.pow(10,+2)/35*Math.pow(10,-5)*getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 3:01:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.08747589885335; Expression=20*Math.pow(10,-1)-26*Math.pow(10,-5)*u8(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k); Java Expression: 20*Math.pow(10,-1)-26*Math.pow(10,-5)*getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 3:01:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077547647496915; Expression=20*Math.pow(10,-1)*26*Math.pow(10,-5)*u8(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k); Java Expression: 20*Math.pow(10,-1)*26*Math.pow(10,-5)*getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 3:01:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.989856501510992; Expression=5*Math.pow(10,-4)/52*Math.pow(10,+5)*u8(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k); Java Expression: 5*Math.pow(10,-4)/52*Math.pow(10,+5)*getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 3:01:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.975832652358211; Expression=77*Math.pow(10,+2)/35*Math.pow(10,-5)*u8(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k)*u8(k); Java Expression: 77*Math.pow(10,+2)/35*Math.pow(10,-5)*getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:01:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.975823263201971; Expression=56*Math.pow(10,+2)/12*Math.pow(10,-5)*u8(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k)*u8(k); Java Expression: 56*Math.pow(10,+2)/12*Math.pow(10,-5)*getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:01:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.975802262130778; Expression=77*Math.pow(10,+2)/35*Math.pow(10,-5)/u8(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k)*u8(k); Java Expression: 77*Math.pow(10,+2)/35*Math.pow(10,-5)/getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:01:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.973939813472325; Expression=77*Math.pow(10,+2)/35*Math.pow(10,-5)*u3(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k)*u8(k); Java Expression: 77*Math.pow(10,+2)/35*Math.pow(10,-5)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:01:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9733187672079815; Expression=56*Math.pow(10,+2)/12*Math.pow(10,-5)*u3(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k)*u8(k); Java Expression: 56*Math.pow(10,+2)/12*Math.pow(10,-5)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:02:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.973311285218746; Expression=77*Math.pow(10,+2)/17*Math.pow(10,-5)*u3(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k)*u8(k); Java Expression: 77*Math.pow(10,+2)/17*Math.pow(10,-5)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:02:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.973308822936751; Expression=83*Math.pow(10,+2)/19*Math.pow(10,-5)*u3(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k)*u8(k); Java Expression: 83*Math.pow(10,+2)/19*Math.pow(10,-5)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:02:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.972448505199405; Expression=31*Math.pow(10,+2)/26*Math.pow(10,-5)*u3(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k)*u8(k)+u5(k)/u7(k); Java Expression: 31*Math.pow(10,+2)/26*Math.pow(10,-5)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)+getVariable(5,k)/getVariable(7,k)
Aug 31, 2024 3:02:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.97114824233408; Expression=31*Math.pow(10,+2)/26*Math.pow(10,-5)/u3(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k)*u8(k)+u5(k)/u7(k); Java Expression: 31*Math.pow(10,+2)/26*Math.pow(10,-5)/getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)+getVariable(5,k)/getVariable(7,k)
Aug 31, 2024 3:02:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9612249422134616; Expression=83*Math.pow(10,+2)/19*Math.pow(10,-5)*u3(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k)*u8(k)-u6(k)/u2(k); Java Expression: 83*Math.pow(10,+2)/19*Math.pow(10,-5)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(6,k)/getVariable(2,k)
Aug 31, 2024 3:02:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.938040021406588; Expression=52*Math.pow(10,+2)/4*Math.pow(10,-5)*u3(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k)*u8(k)-u6(k)/u2(k); Java Expression: 52*Math.pow(10,+2)/4*Math.pow(10,-5)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(6,k)/getVariable(2,k)
Aug 31, 2024 3:02:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.934174576617217; Expression=83*Math.pow(10,+2)/5*Math.pow(10,-5)*u3(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k)*u8(k)-u6(k)/u2(k); Java Expression: 83*Math.pow(10,+2)/5*Math.pow(10,-5)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(6,k)/getVariable(2,k)
Aug 31, 2024 3:03:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9219234857445535; Expression=83*Math.pow(10,+2)/5*Math.pow(10,-5)*u3(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k)*u8(k)-u1(k)/u2(k); Java Expression: 83*Math.pow(10,+2)/5*Math.pow(10,-5)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(2,k)
Aug 31, 2024 3:03:20 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.9219234857445535 -->> Avg.: 2.223790678244336E9 -->> Std. Dev.: 9.006288658588852E9
Aug 31, 2024 3:03:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.894685360997279; Expression=83*Math.pow(10,+2)/5*Math.pow(10,-5)*u3(k)+u7(k)-u5(k)-1*Math.pow(10,-5)-u3(k)+u3(k)*u8(k)*u8(k)/u1(k); Java Expression: 83*Math.pow(10,+2)/5*Math.pow(10,-5)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-1*Math.pow(10,-5)-getVariable(3,k)+getVariable(3,k)*getVariable(8,k)*getVariable(8,k)/getVariable(1,k)
Aug 31, 2024 3:03:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.839877403785405; Expression=83*Math.pow(10,+2)/5*Math.pow(10,-8)*u3(k)+u7(k)-u5(k)-1*Math.pow(10,-4)-u3(k)+u3(k)*u8(k)*u8(k)/u1(k); Java Expression: 83*Math.pow(10,+2)/5*Math.pow(10,-8)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-1*Math.pow(10,-4)-getVariable(3,k)+getVariable(3,k)*getVariable(8,k)*getVariable(8,k)/getVariable(1,k)
Aug 31, 2024 3:03:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.839723097717554; Expression=83*Math.pow(10,+2)/5*Math.pow(10,-8)*u3(k)+u7(k)-u5(k)-39*Math.pow(10,-4)-u3(k)+u3(k)*u8(k)*u8(k)/u1(k); Java Expression: 83*Math.pow(10,+2)/5*Math.pow(10,-8)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-39*Math.pow(10,-4)-getVariable(3,k)+getVariable(3,k)*getVariable(8,k)*getVariable(8,k)/getVariable(1,k)
Aug 31, 2024 3:03:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.839463776940996; Expression=83*Math.pow(10,+1)/55*Math.pow(10,-8)*u3(k)+u7(k)-u5(k)-1*Math.pow(10,-2)-u3(k)+u3(k)*u8(k)*u8(k)/u1(k); Java Expression: 83*Math.pow(10,+1)/55*Math.pow(10,-8)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-1*Math.pow(10,-2)-getVariable(3,k)+getVariable(3,k)*getVariable(8,k)*getVariable(8,k)/getVariable(1,k)
Aug 31, 2024 3:03:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.836635066847693; Expression=27*Math.pow(10,-4)/5*Math.pow(10,-5)*u3(k)+u7(k)-u5(k)-1*Math.pow(10,-1)-u3(k)+u3(k)*u8(k)*u8(k)/u1(k); Java Expression: 27*Math.pow(10,-4)/5*Math.pow(10,-5)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-1*Math.pow(10,-1)-getVariable(3,k)+getVariable(3,k)*getVariable(8,k)*getVariable(8,k)/getVariable(1,k)
Aug 31, 2024 3:03:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8366350646703635; Expression=83*Math.pow(10,-4)/89*Math.pow(10,-5)*u8(k)+u7(k)-u5(k)-1*Math.pow(10,-1)-u3(k)+u3(k)*u8(k)*u8(k)/u1(k); Java Expression: 83*Math.pow(10,-4)/89*Math.pow(10,-5)*getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-1*Math.pow(10,-1)-getVariable(3,k)+getVariable(3,k)*getVariable(8,k)*getVariable(8,k)/getVariable(1,k)
Aug 31, 2024 3:03:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.836471695251252; Expression=83*Math.pow(10,+1)/5*Math.pow(10,-8)*u3(k)+u7(k)-u5(k)-37*Math.pow(10,-2)-u3(k)+u3(k)*u8(k)*u8(k)/u1(k); Java Expression: 83*Math.pow(10,+1)/5*Math.pow(10,-8)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-37*Math.pow(10,-2)-getVariable(3,k)+getVariable(3,k)*getVariable(8,k)*getVariable(8,k)/getVariable(1,k)
Aug 31, 2024 3:04:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.828843842289233; Expression=83*Math.pow(10,+2)/5*Math.pow(10,-5)*u3(k)+u7(k)-u5(k)-73*Math.pow(10,-2)-u3(k)+u3(k)*u8(k)*u8(k)/u1(k); Java Expression: 83*Math.pow(10,+2)/5*Math.pow(10,-5)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-73*Math.pow(10,-2)-getVariable(3,k)+getVariable(3,k)*getVariable(8,k)*getVariable(8,k)/getVariable(1,k)
Aug 31, 2024 3:04:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.827043842387923; Expression=27*Math.pow(10,-4)/5*Math.pow(10,-5)*u3(k)+u7(k)-u5(k)-1*Math.pow(10,-1)-u3(k)+u3(k)*u8(k)*u8(k)/u1(k)-59*Math.pow(10,-6)*u2(k)-u5(k)/34*Math.pow(10,-3)*u6(k); Java Expression: 27*Math.pow(10,-4)/5*Math.pow(10,-5)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-1*Math.pow(10,-1)-getVariable(3,k)+getVariable(3,k)*getVariable(8,k)*getVariable(8,k)/getVariable(1,k)-59*Math.pow(10,-6)*getVariable(2,k)-getVariable(5,k)/34*Math.pow(10,-3)*getVariable(6,k)
Aug 31, 2024 3:04:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.826657495300668; Expression=83*Math.pow(10,+2)/5*Math.pow(10,-5)*u3(k)+u7(k)-u5(k)-93*Math.pow(10,-2)-u3(k)+u3(k)*u8(k)*u8(k)/u1(k); Java Expression: 83*Math.pow(10,+2)/5*Math.pow(10,-5)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-93*Math.pow(10,-2)-getVariable(3,k)+getVariable(3,k)*getVariable(8,k)*getVariable(8,k)/getVariable(1,k)
Aug 31, 2024 3:04:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.806729443286671; Expression=27*Math.pow(10,+1)/5*Math.pow(10,-8)*u3(k)+u7(k)-u5(k)-1*Math.pow(10,-2)-u3(k)+u3(k)*u8(k)*u8(k)/u1(k)-59*Math.pow(10,-9)*u7(k)-u5(k)/34*Math.pow(10,-2)*u6(k); Java Expression: 27*Math.pow(10,+1)/5*Math.pow(10,-8)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-1*Math.pow(10,-2)-getVariable(3,k)+getVariable(3,k)*getVariable(8,k)*getVariable(8,k)/getVariable(1,k)-59*Math.pow(10,-9)*getVariable(7,k)-getVariable(5,k)/34*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 3:04:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.803780439722828; Expression=83*Math.pow(10,-1)*5*Math.pow(10,-3)*u3(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k)*u8(k)-u1(k)/u4(k); Java Expression: 83*Math.pow(10,-1)*5*Math.pow(10,-3)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(4,k)
Aug 31, 2024 3:05:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.752708355427436; Expression=83*Math.pow(10,-1)*5*Math.pow(10,-3)*u3(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k)*u8(k)-u1(k)/u3(k); Java Expression: 83*Math.pow(10,-1)*5*Math.pow(10,-3)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(3,k)
Aug 31, 2024 3:05:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.741374684609473; Expression=6*Math.pow(10,-2)*75*Math.pow(10,-2)*u3(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k)*u8(k)-u1(k)/u3(k); Java Expression: 6*Math.pow(10,-2)*75*Math.pow(10,-2)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(3,k)
Aug 31, 2024 3:05:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.738255750230267; Expression=6*Math.pow(10,-1)*77*Math.pow(10,-3)*u3(k)+u7(k)-u5(k)-u3(k)-u8(k)+u8(k)*u8(k)-u1(k)/u3(k); Java Expression: 6*Math.pow(10,-1)*77*Math.pow(10,-3)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(3,k)
Aug 31, 2024 3:05:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6790667967882; Expression=83*Math.pow(10,-9)*55*Math.pow(10,-8)*u3(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u3(k); Java Expression: 83*Math.pow(10,-9)*55*Math.pow(10,-8)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(3,k)
Aug 31, 2024 3:06:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.679066796788077; Expression=6*Math.pow(10,-9)*75*Math.pow(10,-8)*u3(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u3(k); Java Expression: 6*Math.pow(10,-9)*75*Math.pow(10,-8)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(3,k)
Aug 31, 2024 3:06:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6691797095965; Expression=70*Math.pow(10,-9)*5*Math.pow(10,-8)*u3(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u5(k); Java Expression: 70*Math.pow(10,-9)*5*Math.pow(10,-8)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(5,k)
Aug 31, 2024 3:06:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.645869480968004; Expression=70*Math.pow(10,-9)*5*Math.pow(10,-8)*u3(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u4(k); Java Expression: 70*Math.pow(10,-9)*5*Math.pow(10,-8)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(4,k)
Aug 31, 2024 3:06:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.620607989894895; Expression=70*Math.pow(10,-9)*5*Math.pow(10,-8)*u3(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 70*Math.pow(10,-9)*5*Math.pow(10,-8)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:06:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.620607989894887; Expression=34*Math.pow(10,-9)/5*Math.pow(10,-8)*u3(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 34*Math.pow(10,-9)/5*Math.pow(10,-8)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:06:48 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.620607989894887 -->> Avg.: 418987.75974578166 -->> Std. Dev.: 2265860.79304
Aug 31, 2024 3:06:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.620607962238511; Expression=86*Math.pow(10,-9)-5*Math.pow(10,-8)*u3(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 86*Math.pow(10,-9)-5*Math.pow(10,-8)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:07:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.620605726904862; Expression=52*Math.pow(10,-9)-4*Math.pow(10,-6)*u3(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 52*Math.pow(10,-9)-4*Math.pow(10,-6)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:07:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.620605726766478; Expression=34*Math.pow(10,-9)-4*Math.pow(10,-6)*u3(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 34*Math.pow(10,-9)-4*Math.pow(10,-6)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:07:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.620603788941632; Expression=6*Math.pow(10,-9)-75*Math.pow(10,-8)*u7(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 6*Math.pow(10,-9)-75*Math.pow(10,-8)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:07:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.620587790701975; Expression=34*Math.pow(10,-4)-82*Math.pow(10,-6)*u3(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 34*Math.pow(10,-4)-82*Math.pow(10,-6)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:07:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.620583418822241; Expression=32*Math.pow(10,-4)-87*Math.pow(10,-6)*u3(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 32*Math.pow(10,-4)-87*Math.pow(10,-6)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:07:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.620571764033135; Expression=34*Math.pow(10,-9)-65*Math.pow(10,-6)*u3(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 34*Math.pow(10,-9)-65*Math.pow(10,-6)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:07:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6202617952402365; Expression=6*Math.pow(10,-6)-75*Math.pow(10,-5)*u3(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 6*Math.pow(10,-6)-75*Math.pow(10,-5)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:07:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.616946434976866; Expression=23*Math.pow(10,-4)-75*Math.pow(10,-5)*u7(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 23*Math.pow(10,-4)-75*Math.pow(10,-5)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:07:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.616906543530916; Expression=6*Math.pow(10,-2)-75*Math.pow(10,-5)*u7(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 6*Math.pow(10,-2)-75*Math.pow(10,-5)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:08:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.61635574997413; Expression=9*Math.pow(10,-4)-90*Math.pow(10,-5)*u7(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 9*Math.pow(10,-4)-90*Math.pow(10,-5)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:08:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.616159121819569; Expression=16*Math.pow(10,-4)-95*Math.pow(10,-5)*u7(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 16*Math.pow(10,-4)-95*Math.pow(10,-5)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:08:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.616059120195216; Expression=6*Math.pow(10,-9)-75*Math.pow(10,-6)*u3(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/93*Math.pow(10,+2)/u9(k); Java Expression: 6*Math.pow(10,-9)-75*Math.pow(10,-6)*getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/93*Math.pow(10,+2)/getVariable(9,k)
Aug 31, 2024 3:08:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.586955192630121; Expression=6*Math.pow(10,-1)-75*Math.pow(10,-4)*u7(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 6*Math.pow(10,-1)-75*Math.pow(10,-4)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:08:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.427505943194748; Expression=52*Math.pow(10,-1)-56*Math.pow(10,-3)*u7(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 52*Math.pow(10,-1)-56*Math.pow(10,-3)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:09:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.396338326432607; Expression=60*Math.pow(10,-1)-56*Math.pow(10,-3)*u7(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 60*Math.pow(10,-1)-56*Math.pow(10,-3)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:09:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.394798554370413; Expression=70*Math.pow(10,-1)-75*Math.pow(10,-3)*u7(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 70*Math.pow(10,-1)-75*Math.pow(10,-3)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:10:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.386849545047864; Expression=70*Math.pow(10,-1)-75*Math.pow(10,-3)*u7(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)+u8(k)-u1(k)/u9(k); Java Expression: 70*Math.pow(10,-1)-75*Math.pow(10,-3)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)+getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:10:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.383085021240406; Expression=70*Math.pow(10,-1)-74*Math.pow(10,-3)*u7(k)+u7(k)-u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 70*Math.pow(10,-1)-74*Math.pow(10,-3)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:10:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.335086491930209; Expression=70*Math.pow(10,-1)-96*Math.pow(10,-3)*u7(k)+u7(k)-u5(k)-u4(k)+u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 70*Math.pow(10,-1)-96*Math.pow(10,-3)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:10:40 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.335086491930209 -->> Avg.: 134.20599146767663 -->> Std. Dev.: 488.70199007512696
Aug 31, 2024 3:10:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.321166666363073; Expression=70*Math.pow(10,-1)-96*Math.pow(10,-3)*u7(k)+u7(k)-u5(k)-u4(k)+u8(k)+u8(k)*u8(k)-u1(k)/u5(k); Java Expression: 70*Math.pow(10,-1)-96*Math.pow(10,-3)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(5,k)
Aug 31, 2024 3:11:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.312832189173098; Expression=70*Math.pow(10,-1)-96*Math.pow(10,-3)*u7(k)+u7(k)-u5(k)-u4(k)+u8(k)+u8(k)+u8(k)-u1(k)/u9(k); Java Expression: 70*Math.pow(10,-1)-96*Math.pow(10,-3)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)+getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:11:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.304411420783424; Expression=70*Math.pow(10,-1)-96*Math.pow(10,-3)*u7(k)+u7(k)-u5(k)-u4(k)+u8(k)+u8(k)+u8(k)-u1(k)/u5(k); Java Expression: 70*Math.pow(10,-1)-96*Math.pow(10,-3)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)+getVariable(8,k)-getVariable(1,k)/getVariable(5,k)
Aug 31, 2024 3:11:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2897637195357765; Expression=68*Math.pow(10,-1)-96*Math.pow(10,-3)*u7(k)+u7(k)-u5(k)-u4(k)+u8(k)+u8(k)+u8(k)-u1(k)/u5(k)+38*Math.pow(10,-4)/u7(k)/u6(k); Java Expression: 68*Math.pow(10,-1)-96*Math.pow(10,-3)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)+getVariable(8,k)-getVariable(1,k)/getVariable(5,k)+38*Math.pow(10,-4)/getVariable(7,k)/getVariable(6,k)
Aug 31, 2024 3:11:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2517570767434485; Expression=70*Math.pow(10,-1)-96*Math.pow(10,-3)*u7(k)+u7(k)-u5(k)-u4(k)+u8(k)+u8(k)+u8(k)-u7(k)/u5(k); Java Expression: 70*Math.pow(10,-1)-96*Math.pow(10,-3)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)+getVariable(8,k)-getVariable(7,k)/getVariable(5,k)
Aug 31, 2024 3:12:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.251751163517481; Expression=70*Math.pow(10,-1)-96*Math.pow(10,-3)*u7(k)+u7(k)-u5(k)-u4(k)+u8(k)+u8(k)+u8(k)-u7(k)/u5(k)+92*Math.pow(10,-9)/65*Math.pow(10,+3)*u9(k); Java Expression: 70*Math.pow(10,-1)-96*Math.pow(10,-3)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)+getVariable(8,k)-getVariable(7,k)/getVariable(5,k)+92*Math.pow(10,-9)/65*Math.pow(10,+3)*getVariable(9,k)
Aug 31, 2024 3:12:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.123446817145352; Expression=70*Math.pow(10,-1)*96*Math.pow(10,-3)*u7(k)+u4(k)/u5(k)-u4(k)-u8(k)+u8(k)*u8(k)-u1(k)/u9(k); Java Expression: 70*Math.pow(10,-1)*96*Math.pow(10,-3)*getVariable(7,k)+getVariable(4,k)/getVariable(5,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:13:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.05443912689499; Expression=6*Math.pow(10,-1)-75*Math.pow(10,-3)*u7(k)+u7(k)-u5(k)-u4(k)+u8(k)+u8(k)+u8(k)-30*Math.pow(10,-2)*u7(k)+u5(k); Java Expression: 6*Math.pow(10,-1)-75*Math.pow(10,-3)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)+getVariable(8,k)-30*Math.pow(10,-2)*getVariable(7,k)+getVariable(5,k)
Aug 31, 2024 3:13:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.915876141458748; Expression=6*Math.pow(10,-1)-75*Math.pow(10,-3)*u7(k)+u7(k)-u5(k)-u4(k)+u8(k)*u8(k)+u8(k)-30*Math.pow(10,-2)*u7(k)+u5(k); Java Expression: 6*Math.pow(10,-1)-75*Math.pow(10,-3)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-30*Math.pow(10,-2)*getVariable(7,k)+getVariable(5,k)
Aug 31, 2024 3:14:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.856342308712411; Expression=6*Math.pow(10,-8)-75*Math.pow(10,-3)*u1(k)+u7(k)+u5(k)-u4(k)+u8(k)+u8(k)*u8(k)-30*Math.pow(10,-2)*u7(k)-u5(k); Java Expression: 6*Math.pow(10,-8)-75*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)+getVariable(5,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 3:14:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.833678356983105; Expression=6*Math.pow(10,-1)-75*Math.pow(10,-3)*u7(k)+u7(k)-u5(k)-u4(k)+u8(k)*u8(k)*u8(k)-30*Math.pow(10,-2)*u7(k)+u5(k); Java Expression: 6*Math.pow(10,-1)-75*Math.pow(10,-3)*getVariable(7,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-2)*getVariable(7,k)+getVariable(5,k)
Aug 31, 2024 3:14:41 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 4.833678356983105 -->> Avg.: 11.840430180737588 -->> Std. Dev.: 12.730530730698987
Aug 31, 2024 3:14:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.692488563958515; Expression=70*Math.pow(10,-8)-96*Math.pow(10,-3)*u1(k)+u7(k)+u5(k)-u4(k)+u8(k)+u8(k)+u8(k)-30*Math.pow(10,-2)*u7(k)-u5(k); Java Expression: 70*Math.pow(10,-8)-96*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)+getVariable(5,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)+getVariable(8,k)-30*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 3:14:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.659309878992791; Expression=70*Math.pow(10,-8)-96*Math.pow(10,-3)*u1(k)+u7(k)+u5(k)-u4(k)+u8(k)+u8(k)*u8(k)-30*Math.pow(10,-2)*u7(k)-u5(k); Java Expression: 70*Math.pow(10,-8)-96*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)+getVariable(5,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 3:15:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.651257816369593; Expression=70*Math.pow(10,-3)-96*Math.pow(10,-3)*u1(k)+u7(k)+u5(k)-u4(k)+u8(k)+u8(k)*u8(k)-30*Math.pow(10,-2)*u7(k)-u5(k); Java Expression: 70*Math.pow(10,-3)-96*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)+getVariable(5,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 3:15:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.626064052601534; Expression=70*Math.pow(10,-2)-96*Math.pow(10,-3)*u1(k)+u7(k)+u5(k)-u4(k)+u8(k)+u8(k)*u8(k)-30*Math.pow(10,-2)*u7(k)-u5(k); Java Expression: 70*Math.pow(10,-2)-96*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)+getVariable(5,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 3:16:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.4790625246273725; Expression=70*Math.pow(10,-1)-96*Math.pow(10,-3)*u1(k)+u7(k)+u5(k)-u4(k)+u8(k)+u8(k)*u8(k)-36*Math.pow(10,-2)*u7(k)-u5(k); Java Expression: 70*Math.pow(10,-1)-96*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)+getVariable(5,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 3:17:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.479062524627372; Expression=70*Math.pow(10,-1)-96*Math.pow(10,-3)*u1(k)+u7(k)-u5(k)-u4(k)+u8(k)*u8(k)+u8(k)-36*Math.pow(10,-2)*u7(k)+u5(k); Java Expression: 70*Math.pow(10,-1)-96*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)+getVariable(5,k)
Aug 31, 2024 3:18:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.476670228378731; Expression=69*Math.pow(10,-1)-96*Math.pow(10,-3)*u1(k)+u7(k)-u5(k)-u4(k)+u8(k)*u8(k)+u8(k)-36*Math.pow(10,-2)*u7(k)+u5(k); Java Expression: 69*Math.pow(10,-1)-96*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)+getVariable(5,k)
Aug 31, 2024 3:18:49 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.476670228378731 -->> Avg.: 5.67349969275422 -->> Std. Dev.: 1.5954379282442046
Aug 31, 2024 3:20:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.475757644079707; Expression=70*Math.pow(10,-1)-97*Math.pow(10,-3)*u1(k)+u7(k)-u5(k)-u4(k)+u8(k)*u8(k)+u8(k)-36*Math.pow(10,-2)*u7(k)+u5(k); Java Expression: 70*Math.pow(10,-1)-97*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)+getVariable(5,k)
Aug 31, 2024 3:20:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.475757644079704; Expression=70*Math.pow(10,-1)-97*Math.pow(10,-3)*u1(k)+u7(k)+u5(k)-u4(k)+u8(k)+u8(k)*u8(k)-36*Math.pow(10,-2)*u7(k)-u5(k); Java Expression: 70*Math.pow(10,-1)-97*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)+getVariable(5,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 3:20:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.4751274263954315; Expression=69*Math.pow(10,-1)-98*Math.pow(10,-3)*u1(k)+u7(k)+u5(k)-u4(k)+u8(k)+u8(k)*u8(k)-36*Math.pow(10,-2)*u7(k)-u5(k); Java Expression: 69*Math.pow(10,-1)-98*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)+getVariable(5,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 3:21:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.473674986364839; Expression=70*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u5(k)-u4(k)+u8(k)*u8(k)+u8(k)-36*Math.pow(10,-2)*u7(k)+u5(k); Java Expression: 70*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)+getVariable(5,k)
Aug 31, 2024 3:21:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.472963268554369; Expression=71*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u5(k)-u4(k)+u8(k)*u8(k)+u8(k)-36*Math.pow(10,-2)*u7(k)+u5(k); Java Expression: 71*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)+getVariable(5,k)
Aug 31, 2024 3:22:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.472963268554368; Expression=71*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-36*Math.pow(10,-2)*u7(k)+u1(k); Java Expression: 71*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)+getVariable(1,k)
Aug 31, 2024 3:23:01 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.472963268554368 -->> Avg.: 5.124363345352753 -->> Std. Dev.: 0.5286589838741734
Aug 31, 2024 3:24:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.47296116255019; Expression=71*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-u7(k)*36*Math.pow(10,-2)+u1(k)+u7(k)/83*Math.pow(10,-4)*u6(k)/u1(k); Java Expression: 71*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-getVariable(7,k)*36*Math.pow(10,-2)+getVariable(1,k)+getVariable(7,k)/83*Math.pow(10,-4)*getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 3:25:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.472960668688655; Expression=71*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-u7(k)*36*Math.pow(10,-2)+u1(k)+u9(k)/83*Math.pow(10,-4)*u1(k)/u4(k); Java Expression: 71*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-getVariable(7,k)*36*Math.pow(10,-2)+getVariable(1,k)+getVariable(9,k)/83*Math.pow(10,-4)*getVariable(1,k)/getVariable(4,k)
Aug 31, 2024 3:25:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.472958904612352; Expression=71*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-u7(k)*36*Math.pow(10,-2)+u1(k)+u7(k)/40*Math.pow(10,-4)*u6(k)/u1(k); Java Expression: 71*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-getVariable(7,k)*36*Math.pow(10,-2)+getVariable(1,k)+getVariable(7,k)/40*Math.pow(10,-4)*getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 3:25:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.472335433638726; Expression=71*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u5(k)-u4(k)+u8(k)*u8(k)+u8(k)-u7(k)*36*Math.pow(10,-2)+u5(k)+u8(k)/21*Math.pow(10,-1)*u6(k)/u3(k); Java Expression: 71*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-getVariable(7,k)*36*Math.pow(10,-2)+getVariable(5,k)+getVariable(8,k)/21*Math.pow(10,-1)*getVariable(6,k)/getVariable(3,k)
Aug 31, 2024 3:25:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.465135015042952; Expression=71*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-u7(k)*36*Math.pow(10,-2)+u1(k)+u5(k)/83*Math.pow(10,-4)+u9(k)/u7(k); Java Expression: 71*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-getVariable(7,k)*36*Math.pow(10,-2)+getVariable(1,k)+getVariable(5,k)/83*Math.pow(10,-4)+getVariable(9,k)/getVariable(7,k)
Aug 31, 2024 3:26:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.4575749046238515; Expression=70*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-u7(k)*36*Math.pow(10,-2)+u1(k)+u5(k)/29*Math.pow(10,-4)+u9(k)/u7(k); Java Expression: 70*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-getVariable(7,k)*36*Math.pow(10,-2)+getVariable(1,k)+getVariable(5,k)/29*Math.pow(10,-4)+getVariable(9,k)/getVariable(7,k)
Aug 31, 2024 3:26:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.457569449210629; Expression=70*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-u7(k)*36*Math.pow(10,-2)+u1(k)+u5(k)/94*Math.pow(10,-4)+u9(k)/u7(k); Java Expression: 70*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-getVariable(7,k)*36*Math.pow(10,-2)+getVariable(1,k)+getVariable(5,k)/94*Math.pow(10,-4)+getVariable(9,k)/getVariable(7,k)
Aug 31, 2024 3:26:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.4575462971955755; Expression=70*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-u7(k)*36*Math.pow(10,-2)+u1(k)-u1(k)/29*Math.pow(10,-4)+u9(k)/u7(k); Java Expression: 70*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-getVariable(7,k)*36*Math.pow(10,-2)+getVariable(1,k)-getVariable(1,k)/29*Math.pow(10,-4)+getVariable(9,k)/getVariable(7,k)
Aug 31, 2024 3:27:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.4511627895813275; Expression=70*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-u7(k)*36*Math.pow(10,-2)+u1(k)-u5(k)/29*Math.pow(10,-1)+u9(k)/u7(k); Java Expression: 70*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-getVariable(7,k)*36*Math.pow(10,-2)+getVariable(1,k)-getVariable(5,k)/29*Math.pow(10,-1)+getVariable(9,k)/getVariable(7,k)
Aug 31, 2024 3:27:20 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.4511627895813275 -->> Avg.: 4.862497715766201 -->> Std. Dev.: 0.4485389752590808
Aug 31, 2024 3:27:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.449148615719222; Expression=68*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-u7(k)*36*Math.pow(10,-2)+u1(k)+u5(k)/83*Math.pow(10,-4)+u9(k)/u7(k); Java Expression: 68*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-getVariable(7,k)*36*Math.pow(10,-2)+getVariable(1,k)+getVariable(5,k)/83*Math.pow(10,-4)+getVariable(9,k)/getVariable(7,k)
Aug 31, 2024 3:28:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.449147739333576; Expression=68*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-u7(k)*36*Math.pow(10,-2)+u1(k)+u5(k)/83*Math.pow(10,-5)+u9(k)/u7(k); Java Expression: 68*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-getVariable(7,k)*36*Math.pow(10,-2)+getVariable(1,k)+getVariable(5,k)/83*Math.pow(10,-5)+getVariable(9,k)/getVariable(7,k)
Aug 31, 2024 3:28:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.445892062679705; Expression=70*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-u7(k)*36*Math.pow(10,-2)+u1(k)-u1(k)/22*Math.pow(10,-1)+u9(k)/u7(k); Java Expression: 70*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-getVariable(7,k)*36*Math.pow(10,-2)+getVariable(1,k)-getVariable(1,k)/22*Math.pow(10,-1)+getVariable(9,k)/getVariable(7,k)
Aug 31, 2024 3:28:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.44416501869983; Expression=71*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-u7(k)*36*Math.pow(10,-2)+u1(k)-u5(k)/8*Math.pow(10,-1)+u9(k)/u1(k); Java Expression: 71*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-getVariable(7,k)*36*Math.pow(10,-2)+getVariable(1,k)-getVariable(5,k)/8*Math.pow(10,-1)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:29:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.429855036930865; Expression=71*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-u7(k)*36*Math.pow(10,-2)+u1(k)-u7(k)/8*Math.pow(10,-1)+u6(k)/u1(k); Java Expression: 71*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-getVariable(7,k)*36*Math.pow(10,-2)+getVariable(1,k)-getVariable(7,k)/8*Math.pow(10,-1)+getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 3:29:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.400476827901352; Expression=70*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-36*Math.pow(10,-2)*u7(k)+u1(k)-29*Math.pow(10,-1)/u5(k)+u9(k)/37*Math.pow(10,-2)*u7(k)-u8(k)+u8(k)-u7(k)/u8(k)/u6(k); Java Expression: 70*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)+getVariable(1,k)-29*Math.pow(10,-1)/getVariable(5,k)+getVariable(9,k)/37*Math.pow(10,-2)*getVariable(7,k)-getVariable(8,k)+getVariable(8,k)-getVariable(7,k)/getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 3:32:09 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.400476827901352 -->> Avg.: 4.643369565207946 -->> Std. Dev.: 0.305680368601379
Aug 31, 2024 3:35:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.399585238586159; Expression=70*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-36*Math.pow(10,-2)*u7(k)+u1(k)-29*Math.pow(10,-1)/u4(k)+u9(k)/37*Math.pow(10,-2)*u7(k)-u8(k)+u8(k)-u7(k)/u8(k)/u6(k); Java Expression: 70*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)+getVariable(1,k)-29*Math.pow(10,-1)/getVariable(4,k)+getVariable(9,k)/37*Math.pow(10,-2)*getVariable(7,k)-getVariable(8,k)+getVariable(8,k)-getVariable(7,k)/getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 3:35:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.378031450833682; Expression=70*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-36*Math.pow(10,-2)*u7(k)+u1(k)-29*Math.pow(10,-1)/u5(k)+u9(k)/37*Math.pow(10,-4)*u6(k)-u8(k)+u8(k)-u7(k)/u8(k)/u6(k)+u9(k)/u3(k); Java Expression: 70*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)+getVariable(1,k)-29*Math.pow(10,-1)/getVariable(5,k)+getVariable(9,k)/37*Math.pow(10,-4)*getVariable(6,k)-getVariable(8,k)+getVariable(8,k)-getVariable(7,k)/getVariable(8,k)/getVariable(6,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:36:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.375025757064583; Expression=70*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-36*Math.pow(10,-2)*u7(k)+u1(k)-29*Math.pow(10,-1)/u5(k)+u9(k)/37*Math.pow(10,-2)*u6(k)-u8(k)+u8(k)-u7(k)/u8(k)/u6(k); Java Expression: 70*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)+getVariable(1,k)-29*Math.pow(10,-1)/getVariable(5,k)+getVariable(9,k)/37*Math.pow(10,-2)*getVariable(6,k)-getVariable(8,k)+getVariable(8,k)-getVariable(7,k)/getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 3:37:33 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.375025757064583 -->> Avg.: 4.483118579321594 -->> Std. Dev.: 0.102196165106409
Aug 31, 2024 3:37:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.36751644611272; Expression=70*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-36*Math.pow(10,-2)*u7(k)+u1(k)-29*Math.pow(10,-1)/u7(k)+u9(k)/37*Math.pow(10,+2)/u7(k)-u8(k)+u8(k)-u7(k)/u8(k)/u6(k); Java Expression: 70*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)+getVariable(1,k)-29*Math.pow(10,-1)/getVariable(7,k)+getVariable(9,k)/37*Math.pow(10,+2)/getVariable(7,k)-getVariable(8,k)+getVariable(8,k)-getVariable(7,k)/getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 3:38:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.34241534185151; Expression=70*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-36*Math.pow(10,-2)*u7(k)+u1(k)-29*Math.pow(10,-1)/u9(k)+u9(k)/42*Math.pow(10,-2)*u2(k)-u8(k)+u8(k)-u2(k)/u8(k)/u6(k); Java Expression: 70*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)+getVariable(1,k)-29*Math.pow(10,-1)/getVariable(9,k)+getVariable(9,k)/42*Math.pow(10,-2)*getVariable(2,k)-getVariable(8,k)+getVariable(8,k)-getVariable(2,k)/getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 3:42:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.341792274695816; Expression=70*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-36*Math.pow(10,-2)*u7(k)+u1(k)-53*Math.pow(10,-1)/u9(k)+u9(k)/37*Math.pow(10,-2)*u2(k)-u8(k)+u8(k)-u2(k)/u8(k)/u6(k); Java Expression: 70*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)+getVariable(1,k)-53*Math.pow(10,-1)/getVariable(9,k)+getVariable(9,k)/37*Math.pow(10,-2)*getVariable(2,k)-getVariable(8,k)+getVariable(8,k)-getVariable(2,k)/getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 3:42:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.339136173812052; Expression=70*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-36*Math.pow(10,-2)*u7(k)+u1(k)-93*Math.pow(10,-1)/u9(k)+u9(k)/37*Math.pow(10,-2)*u2(k)-u8(k)+u8(k)-u2(k)/u8(k)/u6(k); Java Expression: 70*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)+getVariable(1,k)-93*Math.pow(10,-1)/getVariable(9,k)+getVariable(9,k)/37*Math.pow(10,-2)*getVariable(2,k)-getVariable(8,k)+getVariable(8,k)-getVariable(2,k)/getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 3:43:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.3391013842320625; Expression=70*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-36*Math.pow(10,-2)*u7(k)+u1(k)-95*Math.pow(10,-1)/u9(k)+u9(k)/37*Math.pow(10,-2)*u2(k)-u8(k)+u8(k)-u2(k)/u8(k)/u6(k); Java Expression: 70*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)+getVariable(1,k)-95*Math.pow(10,-1)/getVariable(9,k)+getVariable(9,k)/37*Math.pow(10,-2)*getVariable(2,k)-getVariable(8,k)+getVariable(8,k)-getVariable(2,k)/getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 3:43:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.329628492453153; Expression=70*Math.pow(10,-1)-99*Math.pow(10,-3)*u1(k)+u7(k)-u1(k)-u4(k)+u8(k)*u8(k)+u8(k)-36*Math.pow(10,-2)*u7(k)+u1(k)-34*Math.pow(10,-1)/u9(k)+u9(k)/10*Math.pow(10,-2)*u4(k)-u8(k)+u8(k)-u2(k)/u8(k)/u6(k); Java Expression: 70*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)+getVariable(1,k)-34*Math.pow(10,-1)/getVariable(9,k)+getVariable(9,k)/10*Math.pow(10,-2)*getVariable(4,k)-getVariable(8,k)+getVariable(8,k)-getVariable(2,k)/getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 3:43:43 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.329628492453153 -->> Avg.: 4.430004620221377 -->> Std. Dev.: 0.04406936592724476

Execution time: 2600.106 seconds.



@@;70*Math.pow(10,-1)-99*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(1,k)-getVariable(4,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)-36*Math.pow(10,-2)*getVariable(7,k)+getVariable(1,k)-34*Math.pow(10,-1)/getVariable(9,k)+getVariable(9,k)/10*Math.pow(10,-2)*getVariable(4,k)-getVariable(8,k)+getVariable(8,k)-getVariable(2,k)/getVariable(8,k)/getVariable(6,k)



Run #8
========
Aug 31, 2024 3:44:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=17.63623685752347; Expression=71*Math.pow(10,+1)/u9(k); Java Expression: 71*Math.pow(10,+1)/getVariable(9,k)
Aug 31, 2024 3:44:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=17.373610739799698; Expression=u2(k)/u5(k)+43*Math.pow(10,-4)+u9(k); Java Expression: getVariable(2,k)/getVariable(5,k)+43*Math.pow(10,-4)+getVariable(9,k)
Aug 31, 2024 3:44:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330451914573516; Expression=84*Math.pow(10,-5)+u5(k); Java Expression: 84*Math.pow(10,-5)+getVariable(5,k)
Aug 31, 2024 3:44:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 31, 2024 3:44:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.934221150594184; Expression=u5(k)+u3(k)*2*Math.pow(10,-4)+u8(k)-u8(k)/u8(k); Java Expression: getVariable(5,k)+getVariable(3,k)*2*Math.pow(10,-4)+getVariable(8,k)-getVariable(8,k)/getVariable(8,k)
Aug 31, 2024 3:44:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.9336812342842125; Expression=u5(k)+u3(k)/2*Math.pow(10,-4)+u8(k)-u8(k)/u8(k); Java Expression: getVariable(5,k)+getVariable(3,k)/2*Math.pow(10,-4)+getVariable(8,k)-getVariable(8,k)/getVariable(8,k)
Aug 31, 2024 3:44:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.933502244106714; Expression=u5(k)+u3(k)/67*Math.pow(10,-9)+u8(k)-u8(k)/u8(k); Java Expression: getVariable(5,k)+getVariable(3,k)/67*Math.pow(10,-9)+getVariable(8,k)-getVariable(8,k)/getVariable(8,k)
Aug 31, 2024 3:44:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.780883602472543; Expression=31*Math.pow(10,-2)*u7(k); Java Expression: 31*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 3:44:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709785324194373; Expression=32*Math.pow(10,-2)*u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 3:45:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.561808567769753; Expression=u8(k)*u4(k)/u2(k)*u6(k); Java Expression: getVariable(8,k)*getVariable(4,k)/getVariable(2,k)*getVariable(6,k)
Aug 31, 2024 3:45:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.2717627725157055; Expression=68*Math.pow(10,-2)*u7(k)-u3(k); Java Expression: 68*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)
Aug 31, 2024 3:45:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131416159860064; Expression=u7(k)-u3(k)-50*Math.pow(10,+2)/26*Math.pow(10,-5)/u3(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(3,k)-50*Math.pow(10,+2)/26*Math.pow(10,-5)/getVariable(3,k)-getVariable(5,k)
Aug 31, 2024 3:45:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.007616961204289; Expression=68*Math.pow(10,-2)*u7(k)-u4(k); Java Expression: 68*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)
Aug 31, 2024 3:45:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.892598583307356; Expression=67*Math.pow(10,-2)*u7(k)-u4(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)
Aug 31, 2024 3:46:25 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.892598583307356 -->> Avg.: 1.19949753836134E9 -->> Std. Dev.: 5.172300485623402E9
Aug 31, 2024 3:46:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.827001405095392; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)+79*Math.pow(10,-9)/u6(k)+44*Math.pow(10,-3)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+79*Math.pow(10,-9)/getVariable(6,k)+44*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 3:46:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.827001404973499; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)+21*Math.pow(10,-9)/u6(k)+44*Math.pow(10,-3)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+21*Math.pow(10,-9)/getVariable(6,k)+44*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 3:46:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.816505727454462; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)+79*Math.pow(10,-9)/u6(k)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+79*Math.pow(10,-9)/getVariable(6,k)+getVariable(8,k)
Aug 31, 2024 3:47:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.806324515563837; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)+79*Math.pow(10,-9)/u6(k)-44*Math.pow(10,-3)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+79*Math.pow(10,-9)/getVariable(6,k)-44*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 3:47:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.786608796515222; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-26*Math.pow(10,-1)+u7(k)/44*Math.pow(10,-6)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-26*Math.pow(10,-1)+getVariable(7,k)/44*Math.pow(10,-6)+getVariable(8,k)
Aug 31, 2024 3:47:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.786608456118102; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-26*Math.pow(10,-1)+u2(k)/44*Math.pow(10,-6)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-26*Math.pow(10,-1)+getVariable(2,k)/44*Math.pow(10,-6)+getVariable(8,k)
Aug 31, 2024 3:47:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.739471630207147; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)+79*Math.pow(10,-1)/u6(k)-44*Math.pow(10,-2)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+79*Math.pow(10,-1)/getVariable(6,k)-44*Math.pow(10,-2)+getVariable(8,k)
Aug 31, 2024 3:47:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.734986874985045; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)+46*Math.pow(10,-1)/u6(k)-44*Math.pow(10,-2)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+46*Math.pow(10,-1)/getVariable(6,k)-44*Math.pow(10,-2)+getVariable(8,k)
Aug 31, 2024 3:47:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.729105083234642; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)+79*Math.pow(10,-5)/u6(k)-44*Math.pow(10,-2)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+79*Math.pow(10,-5)/getVariable(6,k)-44*Math.pow(10,-2)+getVariable(8,k)
Aug 31, 2024 3:47:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.701013442489298; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-21*Math.pow(10,-1)+u6(k)/44*Math.pow(10,-6)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-21*Math.pow(10,-1)+getVariable(6,k)/44*Math.pow(10,-6)+getVariable(8,k)
Aug 31, 2024 3:47:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.681989730497593; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)+74*Math.pow(10,-5)/u6(k)-80*Math.pow(10,-2)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+74*Math.pow(10,-5)/getVariable(6,k)-80*Math.pow(10,-2)+getVariable(8,k)
Aug 31, 2024 3:47:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.666867633163437; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)+74*Math.pow(10,-5)/u6(k)-98*Math.pow(10,-2)+u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+74*Math.pow(10,-5)/getVariable(6,k)-98*Math.pow(10,-2)+getVariable(8,k)
Aug 31, 2024 3:47:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.613193766876695; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)+79*Math.pow(10,-9)/u6(k)+44*Math.pow(10,-3)+u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+79*Math.pow(10,-9)/getVariable(6,k)+44*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 3:47:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.608154148675067; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)+79*Math.pow(10,-9)/u6(k)-44*Math.pow(10,-3)+u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+79*Math.pow(10,-9)/getVariable(6,k)-44*Math.pow(10,-3)+getVariable(8,k)
Aug 31, 2024 3:47:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.602626705373207; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)+79*Math.pow(10,-5)/u8(k)-44*Math.pow(10,-2)+u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+79*Math.pow(10,-5)/getVariable(8,k)-44*Math.pow(10,-2)+getVariable(8,k)
Aug 31, 2024 3:47:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.597637426196406; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)+79*Math.pow(10,-1)/u6(k)-44*Math.pow(10,-2)+u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+79*Math.pow(10,-1)/getVariable(6,k)-44*Math.pow(10,-2)+getVariable(8,k)
Aug 31, 2024 3:48:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.320844167448147; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)+79*Math.pow(10,-5)/u6(k)-40*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+79*Math.pow(10,-5)/getVariable(6,k)-40*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:48:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.31369479180171; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)+79*Math.pow(10,-9)/u6(k)-44*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+79*Math.pow(10,-9)/getVariable(6,k)-44*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:48:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.282353990721463; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)+69*Math.pow(10,-9)/u5(k)-64*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+69*Math.pow(10,-9)/getVariable(5,k)-64*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:48:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.264827420853918; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)+79*Math.pow(10,-5)/u6(k)-78*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+79*Math.pow(10,-5)/getVariable(6,k)-78*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:48:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.264826838903768; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)+79*Math.pow(10,-8)/u4(k)-78*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+79*Math.pow(10,-8)/getVariable(4,k)-78*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:48:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.264826837359232; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)+79*Math.pow(10,-8)/u6(k)-78*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+79*Math.pow(10,-8)/getVariable(6,k)-78*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:48:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.247697933415453; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)+79*Math.pow(10,-5)/u3(k)-96*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+79*Math.pow(10,-5)/getVariable(3,k)-96*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:48:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.247696811910142; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)+79*Math.pow(10,-9)/u5(k)-96*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+79*Math.pow(10,-9)/getVariable(5,k)-96*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:48:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.247695412604595; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)-79*Math.pow(10,-5)/u4(k)-96*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-79*Math.pow(10,-5)/getVariable(4,k)-96*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:49:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.247408202441257; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)-79*Math.pow(10,-2)/u6(k)-96*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-79*Math.pow(10,-2)/getVariable(6,k)-96*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:49:12 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.247408202441257 -->> Avg.: 190835.77406224931 -->> Std. Dev.: 965133.4098960599
Aug 31, 2024 3:49:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.238108419840587; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)-79*Math.pow(10,-1)/u4(k)-96*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-79*Math.pow(10,-1)/getVariable(4,k)-96*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:49:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.229251184154027; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)-79*Math.pow(10,-4)*u4(k)-96*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-79*Math.pow(10,-4)*getVariable(4,k)-96*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:49:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.19497854768877; Expression=65*Math.pow(10,-2)*u7(k)-u4(k)-79*Math.pow(10,-5)/u1(k)-78*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 65*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-79*Math.pow(10,-5)/getVariable(1,k)-78*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:49:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.194976482490819; Expression=65*Math.pow(10,-2)*u7(k)-u4(k)-79*Math.pow(10,-8)/u1(k)-78*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 65*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-79*Math.pow(10,-8)/getVariable(1,k)-78*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:49:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.194976480630293; Expression=65*Math.pow(10,-2)*u7(k)-u4(k)-79*Math.pow(10,-9)/u1(k)-78*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 65*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-79*Math.pow(10,-9)/getVariable(1,k)-78*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:49:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.194976479752183; Expression=65*Math.pow(10,-2)*u7(k)-u4(k)-79*Math.pow(10,-9)/u8(k)-78*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 65*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-79*Math.pow(10,-9)/getVariable(8,k)-78*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:49:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.187171269060749; Expression=65*Math.pow(10,-2)*u7(k)-u4(k)-79*Math.pow(10,-9)/u1(k)-68*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 65*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-79*Math.pow(10,-9)/getVariable(1,k)-68*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:49:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1851816109010835; Expression=65*Math.pow(10,-2)*u7(k)-u4(k)+79*Math.pow(10,-6)/u1(k)*78*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 65*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+79*Math.pow(10,-6)/getVariable(1,k)*78*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:49:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.180880226849535; Expression=65*Math.pow(10,-2)*u7(k)-u4(k)-79*Math.pow(10,-8)/u1(k)-78*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: 65*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-79*Math.pow(10,-8)/getVariable(1,k)-78*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:49:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.158466906450043; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)-79*Math.pow(10,-4)*u1(k)-96*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-79*Math.pow(10,-4)*getVariable(1,k)-96*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:49:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.153896050942486; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)-79*Math.pow(10,-4)*u1(k)-77*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-79*Math.pow(10,-4)*getVariable(1,k)-77*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:50:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.143913254631806; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)-93*Math.pow(10,-4)*u1(k)-44*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-93*Math.pow(10,-4)*getVariable(1,k)-44*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:50:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.140982346193286; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)-2*Math.pow(10,-2)*u1(k)-78*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-2*Math.pow(10,-2)*getVariable(1,k)-78*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:50:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.119991456637731; Expression=65*Math.pow(10,-2)*u7(k)-u4(k)-79*Math.pow(10,-4)*u1(k)-15*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: 65*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-79*Math.pow(10,-4)*getVariable(1,k)-15*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:50:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.047142633477884; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)-2*Math.pow(10,-2)*u1(k)-88*Math.pow(10,-8)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-2*Math.pow(10,-2)*getVariable(1,k)-88*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:50:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.047142629062428; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)-2*Math.pow(10,-2)*u1(k)-78*Math.pow(10,-8)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-2*Math.pow(10,-2)*getVariable(1,k)-78*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:50:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.04714256018165; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)-2*Math.pow(10,-2)*u1(k)+78*Math.pow(10,-8)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-2*Math.pow(10,-2)*getVariable(1,k)+78*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:50:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.041978821022126; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)-93*Math.pow(10,-4)*u1(k)/44*Math.pow(10,+2)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-93*Math.pow(10,-4)*getVariable(1,k)/44*Math.pow(10,+2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:51:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.037651944172431; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)-2*Math.pow(10,-2)*u1(k)/88*Math.pow(10,+2)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-2*Math.pow(10,-2)*getVariable(1,k)/88*Math.pow(10,+2)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:51:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.032264811232552; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)-23*Math.pow(10,-3)*u1(k)+58*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-23*Math.pow(10,-3)*getVariable(1,k)+58*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:51:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0318660539811795; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)-23*Math.pow(10,-3)*u1(k)+63*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-23*Math.pow(10,-3)*getVariable(1,k)+63*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:51:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.03054721592589; Expression=66*Math.pow(10,-2)*u7(k)-u4(k)-23*Math.pow(10,-3)*u1(k)+80*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: 66*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-23*Math.pow(10,-3)*getVariable(1,k)+80*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:51:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.974741685783356; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-40*Math.pow(10,-3)*u1(k)+66*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-40*Math.pow(10,-3)*getVariable(1,k)+66*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:52:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.972917252635604; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-40*Math.pow(10,-3)*u1(k)+79*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-40*Math.pow(10,-3)*getVariable(1,k)+79*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:52:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.880212882323373; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-40*Math.pow(10,-3)*u1(k)+u8(k)+u8(k)*u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-40*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:52:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.870696342018772; Expression=65*Math.pow(10,-2)*u7(k)-u4(k)-21*Math.pow(10,-3)*u1(k)+u8(k)+u8(k)*u8(k); Java Expression: 65*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-21*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:52:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.7584571622752; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-49*Math.pow(10,-3)*u1(k)+u8(k)+u8(k)*u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-49*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:52:57 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 4.7584571622752 -->> Avg.: 144.33577645733016 -->> Std. Dev.: 531.8082985611902
Aug 31, 2024 3:53:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.74540773653187; Expression=67*Math.pow(10,-2)*u7(k)-u4(k)-57*Math.pow(10,-3)*u1(k)+u8(k)+u8(k)*u8(k); Java Expression: 67*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-57*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:53:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.627943577867169; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-23*Math.pow(10,-3)*u1(k)+58*Math.pow(10,-1)+u8(k)*u8(k)+u8(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-23*Math.pow(10,-3)*getVariable(1,k)+58*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 3:53:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.5292235796466995; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-23*Math.pow(10,-3)*u1(k)+58*Math.pow(10,-1)+u8(k)*u8(k)*u8(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-23*Math.pow(10,-3)*getVariable(1,k)+58*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:54:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.5277169192449325; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-23*Math.pow(10,-3)*u1(k)+57*Math.pow(10,-1)+u8(k)*u8(k)*u8(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-23*Math.pow(10,-3)*getVariable(1,k)+57*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:54:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.52103278883902; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-25*Math.pow(10,-3)*u1(k)+58*Math.pow(10,-1)+u8(k)*u8(k)*u8(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-25*Math.pow(10,-3)*getVariable(1,k)+58*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:55:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.518813584392952; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-27*Math.pow(10,-3)*u1(k)+58*Math.pow(10,-1)+u8(k)*u8(k)*u8(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-27*Math.pow(10,-3)*getVariable(1,k)+58*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:55:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.495671738107776; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-25*Math.pow(10,-3)*u1(k)+58*Math.pow(10,-1)+19*Math.pow(10,-1)*u8(k)*u8(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-25*Math.pow(10,-3)*getVariable(1,k)+58*Math.pow(10,-1)+19*Math.pow(10,-1)*getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:55:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.492731839541963; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-22*Math.pow(10,-3)*u1(k)+58*Math.pow(10,-1)+u8(k)*u8(k)*u2(k)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-22*Math.pow(10,-3)*getVariable(1,k)+58*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/getVariable(7,k)
Aug 31, 2024 3:56:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.475557929761192; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-65*Math.pow(10,-3)*u1(k)+92*Math.pow(10,-1)+u8(k)*u8(k)+u8(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-65*Math.pow(10,-3)*getVariable(1,k)+92*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 3:56:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.46387501807893; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-65*Math.pow(10,-3)*u1(k)+92*Math.pow(10,-1)+u8(k)*u8(k)*u8(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-65*Math.pow(10,-3)*getVariable(1,k)+92*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:56:30 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 4.46387501807893 -->> Avg.: 12.117750987131581 -->> Std. Dev.: 14.40391846039196
Aug 31, 2024 3:56:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.430015560384618; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-65*Math.pow(10,-3)*u1(k)+92*Math.pow(10,-1)+u8(k)*u8(k)*u2(k)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-65*Math.pow(10,-3)*getVariable(1,k)+92*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/getVariable(7,k)
Aug 31, 2024 3:57:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.406748617116076; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)+92*Math.pow(10,-1)+u8(k)*u8(k)*u2(k)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)+92*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/getVariable(7,k)
Aug 31, 2024 3:57:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.405355509609977; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-58*Math.pow(10,-3)*u1(k)+92*Math.pow(10,-1)+u8(k)*u8(k)*u2(k)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-58*Math.pow(10,-3)*getVariable(1,k)+92*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/getVariable(7,k)
Aug 31, 2024 3:58:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.404285681375253; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-59*Math.pow(10,-3)*u1(k)+92*Math.pow(10,-1)+u8(k)*u8(k)*u2(k)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-59*Math.pow(10,-3)*getVariable(1,k)+92*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/getVariable(7,k)
Aug 31, 2024 3:59:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.398512464408963; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-59*Math.pow(10,-3)*u1(k)+92*Math.pow(10,-1)+u8(k)*u8(k)*u2(k)/97*Math.pow(10,+2)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-59*Math.pow(10,-3)*getVariable(1,k)+92*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/97*Math.pow(10,+2)/getVariable(7,k)
Aug 31, 2024 4:00:20 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.398512464408963 -->> Avg.: 5.411262174912723 -->> Std. Dev.: 1.477219848910328
Aug 31, 2024 4:01:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.397252487203498; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-59*Math.pow(10,-3)*u1(k)+92*Math.pow(10,-1)+u8(k)*u8(k)*u2(k)/95*Math.pow(10,+2)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-59*Math.pow(10,-3)*getVariable(1,k)+92*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/95*Math.pow(10,+2)/getVariable(7,k)
Aug 31, 2024 4:01:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.396831883098249; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-59*Math.pow(10,-3)*u1(k)+90*Math.pow(10,-1)+u8(k)*u8(k)*u2(k)/97*Math.pow(10,+2)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-59*Math.pow(10,-3)*getVariable(1,k)+90*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/97*Math.pow(10,+2)/getVariable(7,k)
Aug 31, 2024 4:01:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.396758319378534; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)+92*Math.pow(10,-1)+u8(k)*u8(k)*u2(k)/97*Math.pow(10,+2)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)+92*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/97*Math.pow(10,+2)/getVariable(7,k)
Aug 31, 2024 4:01:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.381691534095352; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-58*Math.pow(10,-3)*u1(k)+77*Math.pow(10,-1)+u8(k)*u8(k)*u2(k)/78*Math.pow(10,+2)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-58*Math.pow(10,-3)*getVariable(1,k)+77*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/78*Math.pow(10,+2)/getVariable(7,k)
Aug 31, 2024 4:02:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.370311308292082; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-55*Math.pow(10,-3)*u1(k)+77*Math.pow(10,-1)+u8(k)*u8(k)*u2(k)/78*Math.pow(10,+2)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-55*Math.pow(10,-3)*getVariable(1,k)+77*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/78*Math.pow(10,+2)/getVariable(7,k)
Aug 31, 2024 4:03:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.365632928233001; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-55*Math.pow(10,-3)*u7(k)+94*Math.pow(10,-1)+u8(k)*u8(k)*u2(k)/78*Math.pow(10,+2)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-55*Math.pow(10,-3)*getVariable(7,k)+94*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/78*Math.pow(10,+2)/getVariable(7,k)
Aug 31, 2024 4:03:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.356481240549734; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-55*Math.pow(10,-3)*u7(k)+92*Math.pow(10,-1)+u8(k)*u8(k)*u2(k)/78*Math.pow(10,+2)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-55*Math.pow(10,-3)*getVariable(7,k)+92*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/78*Math.pow(10,+2)/getVariable(7,k)
Aug 31, 2024 4:04:07 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.356481240549734 -->> Avg.: 4.829919584469736 -->> Std. Dev.: 0.5054304437518312
Aug 31, 2024 4:04:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.3523018899965615; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-58*Math.pow(10,-3)*u1(k)+77*Math.pow(10,-1)+u8(k)*u8(k)*u2(k)/78*Math.pow(10,+2)/u7(k)+u9(k)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-58*Math.pow(10,-3)*getVariable(1,k)+77*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(2,k)/78*Math.pow(10,+2)/getVariable(7,k)+getVariable(9,k)/getVariable(7,k)
Aug 31, 2024 4:04:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.308851058715646; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-55*Math.pow(10,-3)*u1(k)+77*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/44*Math.pow(10,+2)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-55*Math.pow(10,-3)*getVariable(1,k)+77*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)
Aug 31, 2024 4:06:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.30885014804033; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-55*Math.pow(10,-3)*u1(k)+77*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/44*Math.pow(10,+2)/u7(k)+12*Math.pow(10,-4)*u9(k)/u7(k)/u5(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-55*Math.pow(10,-3)*getVariable(1,k)+77*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+12*Math.pow(10,-4)*getVariable(9,k)/getVariable(7,k)/getVariable(5,k)
Aug 31, 2024 4:06:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.306806134986604; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-58*Math.pow(10,-3)*u1(k)+77*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/44*Math.pow(10,+2)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-58*Math.pow(10,-3)*getVariable(1,k)+77*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)
Aug 31, 2024 4:06:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.303523102378909; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-58*Math.pow(10,-3)*u1(k)+80*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/44*Math.pow(10,+2)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-58*Math.pow(10,-3)*getVariable(1,k)+80*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)
Aug 31, 2024 4:07:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.303023264327021; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-65*Math.pow(10,-3)*u1(k)+92*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/51*Math.pow(10,+2)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-65*Math.pow(10,-3)*getVariable(1,k)+92*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/51*Math.pow(10,+2)/getVariable(7,k)
Aug 31, 2024 4:07:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.298949620437734; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)+80*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/44*Math.pow(10,+2)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)+80*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)
Aug 31, 2024 4:08:02 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.298949620437734 -->> Avg.: 4.563948745424551 -->> Std. Dev.: 0.2931785242317967
Aug 31, 2024 4:08:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.298949589571934; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)+80*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/44*Math.pow(10,+2)/u7(k)+31*Math.pow(10,-4)*u8(k)/u5(k)/u6(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)+80*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+31*Math.pow(10,-4)*getVariable(8,k)/getVariable(5,k)/getVariable(6,k)
Aug 31, 2024 4:08:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.298902811717476; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-60*Math.pow(10,-3)*u1(k)+80*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/44*Math.pow(10,+2)/u7(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-60*Math.pow(10,-3)*getVariable(1,k)+80*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)
Aug 31, 2024 4:09:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.298842886448403; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)+80*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/44*Math.pow(10,+2)/u7(k)+31*Math.pow(10,-4)*u7(k)/u8(k)/u4(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)+80*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+31*Math.pow(10,-4)*getVariable(7,k)/getVariable(8,k)/getVariable(4,k)
Aug 31, 2024 4:09:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.298772438545745; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)+80*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/44*Math.pow(10,+2)/u7(k)+31*Math.pow(10,-4)*u7(k)/u8(k)/u3(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)+80*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+31*Math.pow(10,-4)*getVariable(7,k)/getVariable(8,k)/getVariable(3,k)
Aug 31, 2024 4:09:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.296650969311128; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)+80*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/44*Math.pow(10,+2)/u7(k)+31*Math.pow(10,-3)*u6(k)/u8(k)/u4(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)+80*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+31*Math.pow(10,-3)*getVariable(6,k)/getVariable(8,k)/getVariable(4,k)
Aug 31, 2024 4:10:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.294648077466641; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)+80*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/44*Math.pow(10,+2)/u7(k)+31*Math.pow(10,-1)*u9(k)/u5(k)/u1(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)+80*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+31*Math.pow(10,-1)*getVariable(9,k)/getVariable(5,k)/getVariable(1,k)
Aug 31, 2024 4:10:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.291212679576782; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)+80*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/44*Math.pow(10,+2)/u7(k)+u9(k)*u1(k)/u6(k)/u1(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)+80*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+getVariable(9,k)*getVariable(1,k)/getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 4:10:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.280301588010041; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)+80*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/44*Math.pow(10,+2)/u7(k)+u9(k)*u9(k)/u6(k)/u1(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)+80*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+getVariable(9,k)*getVariable(9,k)/getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 4:11:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.275064614203576; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)+80*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/44*Math.pow(10,+2)/u7(k)+u9(k)*u9(k)/u7(k)/u1(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)+80*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+getVariable(9,k)*getVariable(9,k)/getVariable(7,k)/getVariable(1,k)
Aug 31, 2024 4:11:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.2746586090063765; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)+80*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/44*Math.pow(10,+2)/u7(k)+u9(k)*u9(k)/u1(k)/u1(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)+80*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+getVariable(9,k)*getVariable(9,k)/getVariable(1,k)/getVariable(1,k)
Aug 31, 2024 4:11:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.272595280309631; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-63*Math.pow(10,-3)*u1(k)+80*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/44*Math.pow(10,+2)/u7(k)+u9(k)*u9(k)/u7(k)/u1(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-63*Math.pow(10,-3)*getVariable(1,k)+80*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+getVariable(9,k)*getVariable(9,k)/getVariable(7,k)/getVariable(1,k)
Aug 31, 2024 4:11:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.267899000047008; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)+80*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/44*Math.pow(10,+2)/u7(k)+u9(k)*u9(k)/u7(k)/u3(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)+80*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+getVariable(9,k)*getVariable(9,k)/getVariable(7,k)/getVariable(3,k)
Aug 31, 2024 4:12:22 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.267899000047008 -->> Avg.: 4.4057013846367985 -->> Std. Dev.: 0.13044605159189968
Aug 31, 2024 4:12:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.261406345552146; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)+76*Math.pow(10,-1)+u8(k)*u8(k)*u6(k)/44*Math.pow(10,+2)/u7(k)+u9(k)*u9(k)/u7(k)/u3(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)+76*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+getVariable(9,k)*getVariable(9,k)/getVariable(7,k)/getVariable(3,k)
Aug 31, 2024 4:12:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.254232610255518; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/44*Math.pow(10,+2)/u7(k)+u9(k)*u9(k)/u6(k)/31*Math.pow(10,-4)/u1(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+getVariable(9,k)*getVariable(9,k)/getVariable(6,k)/31*Math.pow(10,-4)/getVariable(1,k)
Aug 31, 2024 4:13:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.254232449468737; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/44*Math.pow(10,+2)/u7(k)+u9(k)*u9(k)/u6(k)/98*Math.pow(10,-4)/u1(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+getVariable(9,k)*getVariable(9,k)/getVariable(6,k)/98*Math.pow(10,-4)/getVariable(1,k)
Aug 31, 2024 4:13:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.0079944061428145; Expression=59*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/48*Math.pow(10,+2)/u7(k)+u9(k)*u4(k)/u6(k)/98*Math.pow(10,-4)/u1(k); Java Expression: 59*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/48*Math.pow(10,+2)/getVariable(7,k)+getVariable(9,k)*getVariable(4,k)/getVariable(6,k)/98*Math.pow(10,-4)/getVariable(1,k)
Aug 31, 2024 4:13:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.996346660772937; Expression=58*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/44*Math.pow(10,+2)/u7(k)+u9(k)*u9(k)/u6(k)/98*Math.pow(10,-4)/u1(k); Java Expression: 58*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+getVariable(9,k)*getVariable(9,k)/getVariable(6,k)/98*Math.pow(10,-4)/getVariable(1,k)
Aug 31, 2024 4:14:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9963466412928326; Expression=58*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/44*Math.pow(10,+2)/u7(k)+u9(k)/u9(k)/u6(k)/98*Math.pow(10,-4)/u1(k); Java Expression: 58*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+getVariable(9,k)/getVariable(9,k)/getVariable(6,k)/98*Math.pow(10,-4)/getVariable(1,k)
Aug 31, 2024 4:14:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.996346641271674; Expression=58*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/44*Math.pow(10,+2)/u7(k)+u9(k)*u4(k)/u6(k)/98*Math.pow(10,-9)/u1(k); Java Expression: 58*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+getVariable(9,k)*getVariable(4,k)/getVariable(6,k)/98*Math.pow(10,-9)/getVariable(1,k)
Aug 31, 2024 4:15:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.99634664127149; Expression=58*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/44*Math.pow(10,+2)/u7(k)+u9(k)*98*Math.pow(10,-9)/u9(k)/u6(k)/32*Math.pow(10,-8)*u6(k); Java Expression: 58*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+getVariable(9,k)*98*Math.pow(10,-9)/getVariable(9,k)/getVariable(6,k)/32*Math.pow(10,-8)*getVariable(6,k)
Aug 31, 2024 4:15:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.996346641250147; Expression=58*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/44*Math.pow(10,+2)/u7(k)-u9(k)/u9(k)/u6(k)/98*Math.pow(10,-4)/u1(k); Java Expression: 58*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)-getVariable(9,k)/getVariable(9,k)/getVariable(6,k)/98*Math.pow(10,-4)/getVariable(1,k)
Aug 31, 2024 4:15:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.996346622168385; Expression=58*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/44*Math.pow(10,+2)/u7(k)-u9(k)*u4(k)/u6(k)/98*Math.pow(10,-4)/u1(k); Java Expression: 58*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)-getVariable(9,k)*getVariable(4,k)/getVariable(6,k)/98*Math.pow(10,-4)/getVariable(1,k)
Aug 31, 2024 4:15:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9838122949408645; Expression=58*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/44*Math.pow(10,+2)/u7(k)-u9(k)*u4(k)/u6(k)/u1(k); Java Expression: 58*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)-getVariable(9,k)*getVariable(4,k)/getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 4:15:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.979124736699881; Expression=58*Math.pow(10,-2)*u7(k)-u4(k)-68*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/44*Math.pow(10,+2)/u7(k)+u9(k)/u4(k)/u3(k)/33*Math.pow(10,+4)/u7(k); Java Expression: 58*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-68*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+getVariable(9,k)/getVariable(4,k)/getVariable(3,k)/33*Math.pow(10,+4)/getVariable(7,k)
Aug 31, 2024 4:16:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.964656840920416; Expression=58*Math.pow(10,-2)*u7(k)-u4(k)-68*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/44*Math.pow(10,+2)/u7(k)+u9(k)*u4(k)/u6(k)/u5(k); Java Expression: 58*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-68*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)+getVariable(9,k)*getVariable(4,k)/getVariable(6,k)/getVariable(5,k)
Aug 31, 2024 4:16:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9550266040583746; Expression=58*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/44*Math.pow(10,+2)/u7(k)-77*Math.pow(10,-4)*92*Math.pow(10,+5)/u9(k)/u4(k)/u6(k); Java Expression: 58*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)-77*Math.pow(10,-4)*92*Math.pow(10,+5)/getVariable(9,k)/getVariable(4,k)/getVariable(6,k)
Aug 31, 2024 4:17:07 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 3.9550266040583746 -->> Avg.: 4.2990503923736885 -->> Std. Dev.: 0.13510081912221
Aug 31, 2024 4:17:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.953843336128543; Expression=58*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/44*Math.pow(10,+2)/u7(k)-77*Math.pow(10,-4)*69*Math.pow(10,+5)/u9(k)/u4(k)/u6(k); Java Expression: 58*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)-77*Math.pow(10,-4)*69*Math.pow(10,+5)/getVariable(9,k)/getVariable(4,k)/getVariable(6,k)
Aug 31, 2024 4:17:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9533800442435845; Expression=58*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/44*Math.pow(10,+2)/u7(k)-77*Math.pow(10,-4)*77*Math.pow(10,+5)/u9(k)/u4(k)/u6(k); Java Expression: 58*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)-77*Math.pow(10,-4)*77*Math.pow(10,+5)/getVariable(9,k)/getVariable(4,k)/getVariable(6,k)
Aug 31, 2024 4:19:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9501716740304373; Expression=58*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/44*Math.pow(10,+2)/u7(k)-98*Math.pow(10,-4)*80*Math.pow(10,+5)/u4(k)/u4(k)/u6(k); Java Expression: 58*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)-98*Math.pow(10,-4)*80*Math.pow(10,+5)/getVariable(4,k)/getVariable(4,k)/getVariable(6,k)
Aug 31, 2024 4:20:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9499866824740804; Expression=58*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/44*Math.pow(10,+2)/u7(k)-77*Math.pow(10,-4)*92*Math.pow(10,+5)/u4(k)/u4(k)/u6(k); Java Expression: 58*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)-77*Math.pow(10,-4)*92*Math.pow(10,+5)/getVariable(4,k)/getVariable(4,k)/getVariable(6,k)
Aug 31, 2024 4:20:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9499417668300882; Expression=58*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/44*Math.pow(10,+2)/u7(k)-98*Math.pow(10,-4)*74*Math.pow(10,+5)/u4(k)/u4(k)/u6(k); Java Expression: 58*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)-98*Math.pow(10,-4)*74*Math.pow(10,+5)/getVariable(4,k)/getVariable(4,k)/getVariable(6,k)
Aug 31, 2024 4:21:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9499388507753372; Expression=58*Math.pow(10,-2)*u7(k)-u4(k)-61*Math.pow(10,-3)*u1(k)*u8(k)+u8(k)*55*Math.pow(10,-1)*u6(k)/44*Math.pow(10,+2)/u7(k)-80*Math.pow(10,-4)*92*Math.pow(10,+5)/u4(k)/u4(k)/u6(k); Java Expression: 58*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)-80*Math.pow(10,-4)*92*Math.pow(10,+5)/getVariable(4,k)/getVariable(4,k)/getVariable(6,k)
Aug 31, 2024 4:22:06 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 3.9499388507753372 -->> Avg.: 4.207564936831596 -->> Std. Dev.: 0.17418008970886373

Execution time: 2298.914 seconds.



@@;58*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)-61*Math.pow(10,-3)*getVariable(1,k)*getVariable(8,k)+getVariable(8,k)*55*Math.pow(10,-1)*getVariable(6,k)/44*Math.pow(10,+2)/getVariable(7,k)-80*Math.pow(10,-4)*92*Math.pow(10,+5)/getVariable(4,k)/getVariable(4,k)/getVariable(6,k)



Run #9
========
Aug 31, 2024 4:22:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.199999988714845E10; Expression=42*Math.pow(10,+9)-u1(k); Java Expression: 42*Math.pow(10,+9)-getVariable(1,k)
Aug 31, 2024 4:22:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=34.29410715618585; Expression=u3(k)-u3(k); Java Expression: getVariable(3,k)-getVariable(3,k)
Aug 31, 2024 4:22:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=34.29410677911245; Expression=56*Math.pow(10,-8)/u8(k); Java Expression: 56*Math.pow(10,-8)/getVariable(8,k)
Aug 31, 2024 4:22:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=33.06555631723379; Expression=u7(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)
Aug 31, 2024 4:22:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330431722630198; Expression=u4(k)*u8(k)/u9(k)/u6(k)/u6(k)+u5(k); Java Expression: getVariable(4,k)*getVariable(8,k)/getVariable(9,k)/getVariable(6,k)/getVariable(6,k)+getVariable(5,k)
Aug 31, 2024 4:22:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.328855114242758; Expression=91*Math.pow(10,-3)+u5(k); Java Expression: 91*Math.pow(10,-3)+getVariable(5,k)
Aug 31, 2024 4:22:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.328292213693647; Expression=16*Math.pow(10,-2)+u5(k); Java Expression: 16*Math.pow(10,-2)+getVariable(5,k)
Aug 31, 2024 4:22:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 31, 2024 4:22:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131407434512216; Expression=u7(k)-u3(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 31, 2024 4:22:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837859; Expression=u7(k)-u4(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)
Aug 31, 2024 4:23:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427410900173; Expression=u7(k)-u4(k)-35*Math.pow(10,-8)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-35*Math.pow(10,-8)-getVariable(5,k)
Aug 31, 2024 4:23:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0774273647375745; Expression=u7(k)-u4(k)-56*Math.pow(10,-8)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-56*Math.pow(10,-8)-getVariable(5,k)
Aug 31, 2024 4:23:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427272412404; Expression=u7(k)-u4(k)-98*Math.pow(10,-8)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-98*Math.pow(10,-8)-getVariable(5,k)
Aug 31, 2024 4:23:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077304412084196; Expression=u7(k)-u4(k)-56*Math.pow(10,-5)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-56*Math.pow(10,-5)-getVariable(5,k)
Aug 31, 2024 4:23:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.058143099562467; Expression=u7(k)-u4(k)-u5(k)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(8,k)
Aug 31, 2024 4:23:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.930624915052639; Expression=u7(k)-u4(k)-35*Math.pow(10,-8)-u5(k)/94*Math.pow(10,+2)+72*Math.pow(10,-8)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-35*Math.pow(10,-8)-getVariable(5,k)/94*Math.pow(10,+2)+72*Math.pow(10,-8)*getVariable(8,k)
Aug 31, 2024 4:23:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.818518311092568; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u6(k)/u5(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(6,k)/getVariable(5,k)
Aug 31, 2024 4:23:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.776591544837549; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u6(k)/u4(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(6,k)/getVariable(4,k)
Aug 31, 2024 4:23:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7194194959932965; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u7(k)/u4(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)/getVariable(4,k)
Aug 31, 2024 4:23:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.705425664212777; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u7(k)/u9(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)/getVariable(9,k)
Aug 31, 2024 4:24:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672883778061562; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u1(k)/u9(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 4:24:45 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.672883778061562 -->> Avg.: 1.3070481229594889E9 -->> Std. Dev.: 5.533829852252017E9
Aug 31, 2024 4:24:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.67288377352844; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u1(k)/u9(k)-u8(k)/u7(k)/75*Math.pow(10,+9)/u5(k)/72*Math.pow(10,-6)/u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(1,k)/getVariable(9,k)-getVariable(8,k)/getVariable(7,k)/75*Math.pow(10,+9)/getVariable(5,k)/72*Math.pow(10,-6)/getVariable(6,k)
Aug 31, 2024 4:24:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672839427617281; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u1(k)/u9(k)-u8(k)/u7(k)/83*Math.pow(10,+9)/u5(k)/30*Math.pow(10,-2)/u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(1,k)/getVariable(9,k)-getVariable(8,k)/getVariable(7,k)/83*Math.pow(10,+9)/getVariable(5,k)/30*Math.pow(10,-2)/getVariable(6,k)
Aug 31, 2024 4:25:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672835212108304; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u1(k)/u9(k)-u8(k)/u7(k)/83*Math.pow(10,+4)/u5(k)/30*Math.pow(10,-2)*u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(1,k)/getVariable(9,k)-getVariable(8,k)/getVariable(7,k)/83*Math.pow(10,+4)/getVariable(5,k)/30*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 4:25:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672783669928856; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u1(k)/u9(k)-u8(k)/u7(k)/40*Math.pow(10,+4)/u5(k)/30*Math.pow(10,-2)*u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(1,k)/getVariable(9,k)-getVariable(8,k)/getVariable(7,k)/40*Math.pow(10,+4)/getVariable(5,k)/30*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 4:25:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672361998227257; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u1(k)/u9(k)-u8(k)/u9(k)/40*Math.pow(10,+4)/u5(k)/30*Math.pow(10,-2)*u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(1,k)/getVariable(9,k)-getVariable(8,k)/getVariable(9,k)/40*Math.pow(10,+4)/getVariable(5,k)/30*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 4:25:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672145756389607; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u1(k)/u9(k)-u8(k)/u4(k)/40*Math.pow(10,+4)/u5(k)/30*Math.pow(10,-2)*u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(1,k)/getVariable(9,k)-getVariable(8,k)/getVariable(4,k)/40*Math.pow(10,+4)/getVariable(5,k)/30*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 4:25:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.651020281621796; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u1(k)/u9(k)-u8(k)/u4(k)/40*Math.pow(10,+4)/u8(k)/30*Math.pow(10,-2)*u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(1,k)/getVariable(9,k)-getVariable(8,k)/getVariable(4,k)/40*Math.pow(10,+4)/getVariable(8,k)/30*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 4:25:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.628204184700885; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u1(k)/u9(k)+78*Math.pow(10,-9)*u7(k)-u1(k)/u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(1,k)/getVariable(9,k)+78*Math.pow(10,-9)*getVariable(7,k)-getVariable(1,k)/getVariable(6,k)
Aug 31, 2024 4:25:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.628124311861063; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u1(k)/u9(k)+78*Math.pow(10,-6)*u7(k)-u1(k)/u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(1,k)/getVariable(9,k)+78*Math.pow(10,-6)*getVariable(7,k)-getVariable(1,k)/getVariable(6,k)
Aug 31, 2024 4:25:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.628107562532155; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u1(k)/u9(k)+96*Math.pow(10,-6)*u7(k)-u1(k)/u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(1,k)/getVariable(9,k)+96*Math.pow(10,-6)*getVariable(7,k)-getVariable(1,k)/getVariable(6,k)
Aug 31, 2024 4:25:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6280708885648405; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u1(k)/u9(k)+78*Math.pow(10,-6)*u3(k)-u1(k)/u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(1,k)/getVariable(9,k)+78*Math.pow(10,-6)*getVariable(3,k)-getVariable(1,k)/getVariable(6,k)
Aug 31, 2024 4:25:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.627913069674063; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u1(k)/u9(k)+69*Math.pow(10,-5)*u7(k)-u1(k)/u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(1,k)/getVariable(9,k)+69*Math.pow(10,-5)*getVariable(7,k)-getVariable(1,k)/getVariable(6,k)
Aug 31, 2024 4:25:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.621086332805779; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u1(k)/u9(k)+78*Math.pow(10,-8)*u7(k)-u1(k)/u2(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(1,k)/getVariable(9,k)+78*Math.pow(10,-8)*getVariable(7,k)-getVariable(1,k)/getVariable(2,k)
Aug 31, 2024 4:25:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.621082323647741; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u1(k)/u9(k)+8*Math.pow(10,-9)*u7(k)-u1(k)/u2(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(1,k)/getVariable(9,k)+8*Math.pow(10,-9)*getVariable(7,k)-getVariable(1,k)/getVariable(2,k)
Aug 31, 2024 4:25:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.621082308098341; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u1(k)/u9(k)+8*Math.pow(10,-9)*u6(k)-u1(k)/u2(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(1,k)/getVariable(9,k)+8*Math.pow(10,-9)*getVariable(6,k)-getVariable(1,k)/getVariable(2,k)
Aug 31, 2024 4:25:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.621082282106136; Expression=u8(k)-u4(k)-u5(k)+u7(k)-u1(k)/u9(k)+8*Math.pow(10,-9)/u7(k)-u1(k)/u2(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(1,k)/getVariable(9,k)+8*Math.pow(10,-9)/getVariable(7,k)-getVariable(1,k)/getVariable(2,k)
Aug 31, 2024 4:26:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4478651123041475; Expression=u8(k)-u4(k)-u5(k)/u7(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u1(k)/u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)/getVariable(7,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(1,k)/getVariable(6,k)
Aug 31, 2024 4:26:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4029828617364; Expression=u8(k)-u4(k)-u5(k)/u7(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)/getVariable(7,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 4:26:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.402982861736399; Expression=u8(k)-u4(k)-u5(k)/u7(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u6(k)+u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)/getVariable(7,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(6,k)+getVariable(6,k)
Aug 31, 2024 4:26:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.392101952413135; Expression=u8(k)-u4(k)-u5(k)/u7(k)-u1(k)/u9(k)+69*Math.pow(10,-2)*u7(k)-u1(k)/u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)/getVariable(7,k)-getVariable(1,k)/getVariable(9,k)+69*Math.pow(10,-2)*getVariable(7,k)-getVariable(1,k)/getVariable(6,k)
Aug 31, 2024 4:26:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.361704001637007; Expression=u8(k)-u4(k)+u5(k)/u7(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u1(k)/u2(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(5,k)/getVariable(7,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(1,k)/getVariable(2,k)
Aug 31, 2024 4:26:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.360687503694831; Expression=u8(k)-u4(k)+u5(k)/u6(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u1(k)/u2(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(5,k)/getVariable(6,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(1,k)/getVariable(2,k)
Aug 31, 2024 4:27:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.345197237168006; Expression=u8(k)-u4(k)+u4(k)/u6(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u1(k)/u2(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(4,k)/getVariable(6,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(1,k)/getVariable(2,k)
Aug 31, 2024 4:27:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.333299131702459; Expression=u8(k)-u4(k)+u5(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u1(k)/u2(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(5,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(1,k)/getVariable(2,k)
Aug 31, 2024 4:27:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3115042268635175; Expression=u8(k)-u4(k)+u3(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u1(k)/u7(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(3,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(1,k)/getVariable(7,k)
Aug 31, 2024 4:27:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.305698458962729; Expression=u8(k)-u4(k)+u9(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u1(k)/u2(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(1,k)/getVariable(2,k)
Aug 31, 2024 4:27:53 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.305698458962729 -->> Avg.: 271274.6046760141 -->> Std. Dev.: 1343729.0000758036
Aug 31, 2024 4:27:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.300257442205653; Expression=u8(k)-u4(k)+u7(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u1(k)/u7(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(7,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(1,k)/getVariable(7,k)
Aug 31, 2024 4:28:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.296923921674366; Expression=u8(k)-u4(k)+u6(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u1(k)/u7(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(6,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(1,k)/getVariable(7,k)
Aug 31, 2024 4:28:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2774005721514206; Expression=u8(k)-u4(k)+u7(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u1(k)/u5(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(7,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(1,k)/getVariable(5,k)
Aug 31, 2024 4:28:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.084009682674609; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u1(k)/u3(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(1,k)/getVariable(3,k)
Aug 31, 2024 4:28:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.051113394053953; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u1(k)/u4(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(1,k)/getVariable(4,k)
Aug 31, 2024 4:30:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.050925721351658; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u1(k)/u4(k)-85*Math.pow(10,-1)/u8(k)/10*Math.pow(10,-9)*u6(k)*2*Math.pow(10,+6)/u7(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(1,k)/getVariable(4,k)-85*Math.pow(10,-1)/getVariable(8,k)/10*Math.pow(10,-9)*getVariable(6,k)*2*Math.pow(10,+6)/getVariable(7,k)
Aug 31, 2024 4:30:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.98022824428429; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u1(k)/u4(k)-85*Math.pow(10,-1)/u8(k)/10*Math.pow(10,-2)*u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(1,k)/getVariable(4,k)-85*Math.pow(10,-1)/getVariable(8,k)/10*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 4:30:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.977449848326469; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u1(k)/u4(k)-95*Math.pow(10,-1)/u8(k)/10*Math.pow(10,-2)*u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(1,k)/getVariable(4,k)-95*Math.pow(10,-1)/getVariable(8,k)/10*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 4:30:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.928748888024656; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u1(k)/u4(k)-85*Math.pow(10,-1)/u8(k)/10*Math.pow(10,-5)*u5(k)*u5(k)*u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(1,k)/getVariable(4,k)-85*Math.pow(10,-1)/getVariable(8,k)/10*Math.pow(10,-5)*getVariable(5,k)*getVariable(5,k)*getVariable(6,k)
Aug 31, 2024 4:31:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.857169284198196; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u1(k)/u3(k)-35*Math.pow(10,-1)/u8(k)+2*Math.pow(10,-2)*u7(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(1,k)/getVariable(3,k)-35*Math.pow(10,-1)/getVariable(8,k)+2*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 4:31:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.775483986169613; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u8(k)/u4(k)-85*Math.pow(10,-1)/u8(k)/10*Math.pow(10,-5)*u7(k)*u5(k)*u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(8,k)/getVariable(4,k)-85*Math.pow(10,-1)/getVariable(8,k)/10*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(6,k)
Aug 31, 2024 4:31:33 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 4.775483986169613 -->> Avg.: 138.9473184357312 -->> Std. Dev.: 451.56403893497907
Aug 31, 2024 4:31:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.768444026442413; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)+u8(k)/u4(k)-85*Math.pow(10,-1)/u8(k)/10*Math.pow(10,-5)*u7(k)*u5(k)*u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)/getVariable(4,k)-85*Math.pow(10,-1)/getVariable(8,k)/10*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(6,k)
Aug 31, 2024 4:32:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.766832711401777; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)+u8(k)/u5(k)-85*Math.pow(10,-1)/u8(k)/10*Math.pow(10,-5)*u7(k)*u5(k)*u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)/getVariable(5,k)-85*Math.pow(10,-1)/getVariable(8,k)/10*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(6,k)
Aug 31, 2024 4:32:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.746741654825939; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u8(k)/u4(k)-95*Math.pow(10,-1)/u8(k)/10*Math.pow(10,-5)*u7(k)*u5(k)*u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(8,k)/getVariable(4,k)-95*Math.pow(10,-1)/getVariable(8,k)/10*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(6,k)
Aug 31, 2024 4:32:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.7369454021999085; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u8(k)/u4(k)-85*Math.pow(10,-1)/u8(k)/8*Math.pow(10,-5)*u7(k)*u5(k)*u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(8,k)/getVariable(4,k)-85*Math.pow(10,-1)/getVariable(8,k)/8*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(6,k)
Aug 31, 2024 4:32:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.732635154888029; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)-u3(k)/u4(k)*85*Math.pow(10,-1)/u8(k)/10*Math.pow(10,-5)*u7(k)*u5(k)*u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(4,k)*85*Math.pow(10,-1)/getVariable(8,k)/10*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(6,k)
Aug 31, 2024 4:33:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.731389173184133; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)+u8(k)/u4(k)-10*Math.pow(10,-5)/u8(k)*97*Math.pow(10,-3)*u7(k)*u5(k)*u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)/getVariable(4,k)-10*Math.pow(10,-5)/getVariable(8,k)*97*Math.pow(10,-3)*getVariable(7,k)*getVariable(5,k)*getVariable(6,k)
Aug 31, 2024 4:33:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.721384816999499; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)+u8(k)/u4(k)-85*Math.pow(10,-1)/u8(k)/8*Math.pow(10,-5)*u7(k)*u5(k)*u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)/getVariable(4,k)-85*Math.pow(10,-1)/getVariable(8,k)/8*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(6,k)
Aug 31, 2024 4:33:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.670905188875971; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u1(k)/u9(k)+68*Math.pow(10,-2)*u7(k)+u1(k)/u7(k)-85*Math.pow(10,-1)/u8(k)/10*Math.pow(10,-5)*u2(k)*u7(k)*u5(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(1,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)+getVariable(1,k)/getVariable(7,k)-85*Math.pow(10,-1)/getVariable(8,k)/10*Math.pow(10,-5)*getVariable(2,k)*getVariable(7,k)*getVariable(5,k)
Aug 31, 2024 4:33:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.60641960918209; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u5(k)/u9(k)+68*Math.pow(10,-2)*u7(k)+u8(k)/u4(k)-99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(5,k)/getVariable(9,k)+68*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)/getVariable(4,k)-99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)
Aug 31, 2024 4:34:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.589818613538727; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u5(k)/u1(k)+68*Math.pow(10,-2)*u7(k)+u8(k)/u4(k)-99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(5,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)/getVariable(4,k)-99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)
Aug 31, 2024 4:34:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.588193124660146; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u5(k)/u1(k)+68*Math.pow(10,-2)*u7(k)+u8(k)/u5(k)-99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(5,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)/getVariable(5,k)-99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)
Aug 31, 2024 4:34:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.569007559945119; Expression=u8(k)-u4(k)+u2(k)/u1(k)-u5(k)/u6(k)+68*Math.pow(10,-2)*u7(k)+u8(k)/u4(k)-99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)-getVariable(5,k)/getVariable(6,k)+68*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)/getVariable(4,k)-99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)
Aug 31, 2024 4:35:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.50965799036092; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u8(k)/u4(k)-99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(8,k)/getVariable(4,k)-99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)
Aug 31, 2024 4:35:50 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 4.50965799036092 -->> Avg.: 11.935726945895356 -->> Std. Dev.: 13.63613125449427
Aug 31, 2024 4:36:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.509522383288876; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u8(k)/u5(k)-99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(8,k)/getVariable(5,k)-99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)
Aug 31, 2024 4:37:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.486775796391611; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u4(k)/u4(k)-99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)/getVariable(4,k)-99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)
Aug 31, 2024 4:37:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.475413096457565; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u3(k)/u4(k)-99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(4,k)-99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)
Aug 31, 2024 4:37:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.467943852611529; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u4(k)/u6(k)-99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)/getVariable(6,k)-99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)
Aug 31, 2024 4:38:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.450467675579208; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)-99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)-99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)
Aug 31, 2024 4:39:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.340467070295057; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u7(k)/u6(k)*99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)
Aug 31, 2024 4:40:36 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.340467070295057 -->> Avg.: 5.412286169100621 -->> Std. Dev.: 1.828134038382793
Aug 31, 2024 4:42:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.340466918631021; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u7(k)/u6(k)*99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k)+u3(k)/u6(k)/50*Math.pow(10,-4)*42*Math.pow(10,-8)-u2(k)*90*Math.pow(10,-8)/u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)+getVariable(3,k)/getVariable(6,k)/50*Math.pow(10,-4)*42*Math.pow(10,-8)-getVariable(2,k)*90*Math.pow(10,-8)/getVariable(6,k)
Aug 31, 2024 4:43:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.338980664042013; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u7(k)/u6(k)*99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k)+u3(k)/u6(k)/50*Math.pow(10,-4)*42*Math.pow(10,-8)-u2(k)*90*Math.pow(10,-4)/u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)+getVariable(3,k)/getVariable(6,k)/50*Math.pow(10,-4)*42*Math.pow(10,-8)-getVariable(2,k)*90*Math.pow(10,-4)/getVariable(6,k)
Aug 31, 2024 4:43:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.328341320802615; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u7(k)/u6(k)*99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k)+u3(k)*u6(k)/50*Math.pow(10,-4)*42*Math.pow(10,-3)-u2(k)*90*Math.pow(10,-3)/u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)+getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-4)*42*Math.pow(10,-3)-getVariable(2,k)*90*Math.pow(10,-3)/getVariable(6,k)
Aug 31, 2024 4:44:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.32833286563783; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u7(k)/u6(k)*99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k)+u3(k)/u6(k)/50*Math.pow(10,-8)*16*Math.pow(10,-8)-u2(k)*90*Math.pow(10,-3)/u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)+getVariable(3,k)/getVariable(6,k)/50*Math.pow(10,-8)*16*Math.pow(10,-8)-getVariable(2,k)*90*Math.pow(10,-3)/getVariable(6,k)
Aug 31, 2024 4:44:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.328132295475383; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u7(k)/u6(k)*99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k)+u3(k)/u6(k)/56*Math.pow(10,-4)*36*Math.pow(10,-3)-u2(k)*92*Math.pow(10,-3)/u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)+getVariable(3,k)/getVariable(6,k)/56*Math.pow(10,-4)*36*Math.pow(10,-3)-getVariable(2,k)*92*Math.pow(10,-3)/getVariable(6,k)
Aug 31, 2024 4:45:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.32501401943438; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u7(k)/u6(k)*99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k)+50*Math.pow(10,+2)/42*Math.pow(10,-5)/u3(k)*90*Math.pow(10,-2)-u6(k)*u1(k)/29*Math.pow(10,-5)*u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)+50*Math.pow(10,+2)/42*Math.pow(10,-5)/getVariable(3,k)*90*Math.pow(10,-2)-getVariable(6,k)*getVariable(1,k)/29*Math.pow(10,-5)*getVariable(6,k)
Aug 31, 2024 4:45:30 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.32501401943438 -->> Avg.: 4.835509836326377 -->> Std. Dev.: 0.4502459036924631
Aug 31, 2024 4:45:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.319032372742523; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u7(k)/u6(k)*99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k)-u3(k)/u6(k)+19*Math.pow(10,-3)+42*Math.pow(10,-8)*u2(k)*90*Math.pow(10,-2)*u6(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)-getVariable(3,k)/getVariable(6,k)+19*Math.pow(10,-3)+42*Math.pow(10,-8)*getVariable(2,k)*90*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 4:46:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.313231920542358; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u7(k)/u6(k)*99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k)+u3(k)*u6(k)/50*Math.pow(10,-4)*42*Math.pow(10,-3)-u2(k)*90*Math.pow(10,-3)/u9(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)+getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-4)*42*Math.pow(10,-3)-getVariable(2,k)*90*Math.pow(10,-3)/getVariable(9,k)
Aug 31, 2024 4:48:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.311643551191131; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u7(k)/u6(k)*99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k)+u3(k)*u6(k)/50*Math.pow(10,-4)+42*Math.pow(10,-3)-u2(k)*90*Math.pow(10,-3)/u9(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)+getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-4)+42*Math.pow(10,-3)-getVariable(2,k)*90*Math.pow(10,-3)/getVariable(9,k)
Aug 31, 2024 4:49:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.2553171458694505; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u7(k)/u6(k)*99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k)/u4(k)*u3(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)/getVariable(4,k)*getVariable(3,k)
Aug 31, 2024 4:50:57 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.2553171458694505 -->> Avg.: 4.594261960123702 -->> Std. Dev.: 0.30682926900914237
Aug 31, 2024 4:51:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.255298754889904; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u7(k)/u6(k)*99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k)/u4(k)*u3(k)-55*Math.pow(10,-4)*88*Math.pow(10,-6)/u9(k)+82*Math.pow(10,-3)/u5(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)/getVariable(4,k)*getVariable(3,k)-55*Math.pow(10,-4)*88*Math.pow(10,-6)/getVariable(9,k)+82*Math.pow(10,-3)/getVariable(5,k)
Aug 31, 2024 4:52:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.2552907268925075; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u7(k)/u6(k)*99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k)/u4(k)*u3(k)-20*Math.pow(10,-4)*62*Math.pow(10,-1)/u9(k)+90*Math.pow(10,-3)/u1(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)/getVariable(4,k)*getVariable(3,k)-20*Math.pow(10,-4)*62*Math.pow(10,-1)/getVariable(9,k)+90*Math.pow(10,-3)/getVariable(1,k)
Aug 31, 2024 4:52:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.2551920950627835; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u7(k)/u6(k)*99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k)/u4(k)*u3(k)-55*Math.pow(10,-4)+88*Math.pow(10,-6)*u9(k)+82*Math.pow(10,-3)/u5(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)/getVariable(4,k)*getVariable(3,k)-55*Math.pow(10,-4)+88*Math.pow(10,-6)*getVariable(9,k)+82*Math.pow(10,-3)/getVariable(5,k)
Aug 31, 2024 4:52:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.255104269887102; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u7(k)/u6(k)*99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k)/u4(k)*u3(k)-20*Math.pow(10,-4)-62*Math.pow(10,-1)/u9(k)+90*Math.pow(10,-3)/u5(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)/getVariable(4,k)*getVariable(3,k)-20*Math.pow(10,-4)-62*Math.pow(10,-1)/getVariable(9,k)+90*Math.pow(10,-3)/getVariable(5,k)
Aug 31, 2024 4:52:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.254546446822819; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u7(k)/u6(k)*99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k)/u4(k)*u3(k)-20*Math.pow(10,-1)*62*Math.pow(10,-2)/u9(k)+90*Math.pow(10,-4)/u1(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)/getVariable(4,k)*getVariable(3,k)-20*Math.pow(10,-1)*62*Math.pow(10,-2)/getVariable(9,k)+90*Math.pow(10,-4)/getVariable(1,k)
Aug 31, 2024 4:53:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.25445669004015; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u7(k)/u6(k)*99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k)/u4(k)*u3(k)-20*Math.pow(10,-1)*72*Math.pow(10,-2)/u9(k)+90*Math.pow(10,-4)/u1(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)/getVariable(4,k)*getVariable(3,k)-20*Math.pow(10,-1)*72*Math.pow(10,-2)/getVariable(9,k)+90*Math.pow(10,-4)/getVariable(1,k)
Aug 31, 2024 4:53:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.254228060179324; Expression=u8(k)-u4(k)+u2(k)/u1(k)*u6(k)/u1(k)+68*Math.pow(10,-2)*u7(k)-u7(k)/u6(k)*99*Math.pow(10,-1)/u8(k)/6*Math.pow(10,-5)*u7(k)*u5(k)*u7(k)/u4(k)*u3(k)-50*Math.pow(10,-1)*42*Math.pow(10,-2)/u9(k)+90*Math.pow(10,-4)/u1(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)*getVariable(6,k)/getVariable(1,k)+68*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*99*Math.pow(10,-1)/getVariable(8,k)/6*Math.pow(10,-5)*getVariable(7,k)*getVariable(5,k)*getVariable(7,k)/getVariable(4,k)*getVariable(3,k)-50*Math.pow(10,-1)*42*Math.pow(10,-2)/getVariable(9,k)+90*Math.pow(10,-4)/getVariable(1,k)
