{MutationProb=0.05, ChangeProbabilityDynamic=0.25, Executions=10, TrainingPath=C:\Users\omgmv\Documents\PMT\Data\train_bmi_marker.csv, MutationTypeDynamic=All genes, GrammaticalEvolutionType=4, ValidationPath=C:\Users\omgmv\Documents\PMT\Data\test_bmi_marker.csv, Objectives=0, ClassPathSeparator=;, TestPath=C:\Users\omgmv\Documents\PMT\Data\test_bmi_marker.csv, NumGenerations=1000, NumIndividuals=1024, RealDataCopied=0, ErrorThreshold=0.0, TypeOfDepthForDynamicSGE=0, TournamentSize=5, ModelWidth=0, BnfPathFile=C:\Users\omgmv\Documents\PMT\Exp1\gr_BMI_SR.bnf, LoggerLevel=INFO, LoggerBasePath=C:\Users\omgmv\Documents\PMT\work, AlgorithmType=1, CrossoverTypeDynamic=Uniform, ViewResults=false, LogPopulation=0, CrossoverProb=0.9, MaxTreeDepth=4, WorkDir=C:\Users\omgmv\Documents\PMT, NormalizeData=false}
Tree: true
Depth: 4
Aug 30, 2024 10:27:44 PM data.NormalizedDataTable <init>
INFO: Reading data file ...

Detecting file format ...


Detecting file format ...

Aug 30, 2024 10:27:44 PM data.NormalizedDataTable <init>
INFO: ... done.
jeco.core.algorithm.ga.StaticSimpleGeneticAlgorithm@243655b1
algorithm.Tree_CFG_GP@2af1bf47

Run #0
========
Aug 30, 2024 10:27:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.506992637322708E11; Expression=45*Math.pow(10,+8)*u2(k); Java Expression: 45*Math.pow(10,+8)*getVariable(2,k)
Aug 30, 2024 10:27:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=121.00418728403803; Expression=u6(k)*u8(k); Java Expression: getVariable(6,k)*getVariable(8,k)
Aug 30, 2024 10:27:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=36.874613386216446; Expression=u7(k)-u9(k); Java Expression: getVariable(7,k)-getVariable(9,k)
Aug 30, 2024 10:27:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=32.84561421329959; Expression=45*Math.pow(10,-2)+u8(k)*u6(k)-u8(k)*u8(k)*u5(k); Java Expression: 45*Math.pow(10,-2)+getVariable(8,k)*getVariable(6,k)-getVariable(8,k)*getVariable(8,k)*getVariable(5,k)
Aug 30, 2024 10:27:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=22.757223532448492; Expression=15*Math.pow(10,-2)*u1(k); Java Expression: 15*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 10:27:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.059461641840322; Expression=u1(k)+u5(k)+u8(k)+u8(k)-u1(k); Java Expression: getVariable(1,k)+getVariable(5,k)+getVariable(8,k)+getVariable(8,k)-getVariable(1,k)
Aug 30, 2024 10:27:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 10:27:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566436284843; Expression=u6(k)+u5(k)+u8(k)-89*Math.pow(10,-8)-u6(k); Java Expression: getVariable(6,k)+getVariable(5,k)+getVariable(8,k)-89*Math.pow(10,-8)-getVariable(6,k)
Aug 30, 2024 10:27:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.03755184587587; Expression=u6(k)+u5(k)+u8(k)-89*Math.pow(10,-6)-u6(k); Java Expression: getVariable(6,k)+getVariable(5,k)+getVariable(8,k)-89*Math.pow(10,-6)-getVariable(6,k)
Aug 30, 2024 10:27:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.9388525566830666; Expression=u6(k)+u5(k)+u8(k)-89*Math.pow(10,-2)-u6(k); Java Expression: getVariable(6,k)+getVariable(5,k)+getVariable(8,k)-89*Math.pow(10,-2)-getVariable(6,k)
Aug 30, 2024 10:27:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.936731012673534; Expression=u6(k)+u5(k)+u8(k)-93*Math.pow(10,-2)-u6(k); Java Expression: getVariable(6,k)+getVariable(5,k)+getVariable(8,k)-93*Math.pow(10,-2)-getVariable(6,k)
Aug 30, 2024 10:27:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837859; Expression=u7(k)-u4(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)
Aug 30, 2024 10:28:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.058143099562467; Expression=u7(k)-u4(k)-u5(k)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(8,k)
Aug 30, 2024 10:28:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.976996161667195; Expression=u7(k)-u4(k)-u5(k)-41*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-41*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 10:28:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9687802892597395; Expression=u7(k)-u4(k)-u5(k)-45*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-45*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 10:28:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.912028496891081; Expression=u7(k)-u4(k)-u5(k)-78*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-78*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 10:28:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.895150324376855; Expression=u7(k)-u4(k)-u5(k)-91*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-91*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 10:28:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.892831752846931; Expression=u7(k)-u4(k)-u5(k)-93*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-93*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 10:28:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.861803031622948; Expression=u7(k)-u4(k)-u5(k)-93*Math.pow(10,-4)*u7(k)-41*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-93*Math.pow(10,-4)*getVariable(7,k)-41*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 10:28:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.859039805442657; Expression=u7(k)-u4(k)-u5(k)-93*Math.pow(10,-4)*u7(k)-51*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-93*Math.pow(10,-4)*getVariable(7,k)-51*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 10:28:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.858277079020985; Expression=u7(k)-u4(k)-u5(k)-93*Math.pow(10,-4)*u7(k)-64*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-93*Math.pow(10,-4)*getVariable(7,k)-64*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 10:28:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.778002937071327; Expression=u7(k)-u4(k)-u5(k)*93*Math.pow(10,-4)*u7(k)-41*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*93*Math.pow(10,-4)*getVariable(7,k)-41*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 10:28:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.698525342471611; Expression=u7(k)-u4(k)-u5(k)*93*Math.pow(10,-4)*u7(k)-93*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*93*Math.pow(10,-4)*getVariable(7,k)-93*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 10:28:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4529146440991445; Expression=u7(k)-u3(k)-u5(k)*93*Math.pow(10,-4)*u7(k)-41*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*93*Math.pow(10,-4)*getVariable(7,k)-41*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 10:28:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.236564353821867; Expression=u7(k)-u3(k)-u5(k)*89*Math.pow(10,-4)*u7(k)-41*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*89*Math.pow(10,-4)*getVariable(7,k)-41*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 10:28:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.235140569370613; Expression=u7(k)-u3(k)-u5(k)*89*Math.pow(10,-4)*u7(k)-47*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*89*Math.pow(10,-4)*getVariable(7,k)-47*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 10:28:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.214753680980547; Expression=u7(k)-u3(k)-u5(k)*89*Math.pow(10,-4)*u7(k)-47*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*89*Math.pow(10,-4)*getVariable(7,k)-47*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:28:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2145582435671; Expression=u7(k)-u3(k)-u5(k)*89*Math.pow(10,-4)*u7(k)-44*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*89*Math.pow(10,-4)*getVariable(7,k)-44*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:28:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.202556732614276; Expression=u7(k)-u3(k)-u5(k)*88*Math.pow(10,-4)*u7(k)-44*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*88*Math.pow(10,-4)*getVariable(7,k)-44*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:28:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.190613308149099; Expression=u7(k)-u3(k)-u5(k)*88*Math.pow(10,-4)*u7(k)-68*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*88*Math.pow(10,-4)*getVariable(7,k)-68*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:28:43 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.190613308149099 -->> Avg.: 3977488.875371465 -->> Std. Dev.: 1.5026313740774887E7
Aug 30, 2024 10:28:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1904615570838075; Expression=u7(k)-u3(k)-u5(k)*88*Math.pow(10,-4)*u7(k)-64*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*88*Math.pow(10,-4)*getVariable(7,k)-64*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:28:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1904302000104074; Expression=u7(k)-u3(k)-u5(k)*88*Math.pow(10,-4)*u7(k)-66*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*88*Math.pow(10,-4)*getVariable(7,k)-66*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:29:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.190419070015453; Expression=u7(k)-u3(k)-u5(k)*88*Math.pow(10,-4)*u7(k)-65*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*88*Math.pow(10,-4)*getVariable(7,k)-65*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:29:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.178947482554754; Expression=u7(k)-u3(k)-u5(k)*87*Math.pow(10,-4)*u7(k)-66*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)-66*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:29:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1680530270692575; Expression=u7(k)-u3(k)-u5(k)*87*Math.pow(10,-4)*u7(k)-89*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)-89*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:29:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.167870531205922; Expression=u7(k)-u3(k)-u5(k)*87*Math.pow(10,-4)*u7(k)-87*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)-87*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:29:53 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.167870531205922 -->> Avg.: 6067.559330882544 -->> Std. Dev.: 22150.166186949093
Aug 30, 2024 10:29:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.158048604400872; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-87*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-87*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:30:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.152439125131793; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-93*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-93*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:30:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.149776998385765; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-97*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-97*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:31:01 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.149776998385765 -->> Avg.: 206.3455938099294 -->> Std. Dev.: 646.410523016161
Aug 30, 2024 10:31:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.148769734846281; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:31:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.148751229351229; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-95*Math.pow(10,-6)*u4(k)*86*Math.pow(10,-4)*u7(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-95*Math.pow(10,-6)*getVariable(4,k)*86*Math.pow(10,-4)*getVariable(7,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:31:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.148624140856044; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-95*Math.pow(10,-6)*u2(k)*86*Math.pow(10,-4)*u7(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-95*Math.pow(10,-6)*getVariable(2,k)*86*Math.pow(10,-4)*getVariable(7,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:31:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.148599443367722; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-95*Math.pow(10,-6)*u4(k)*99*Math.pow(10,-4)*u2(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-95*Math.pow(10,-6)*getVariable(4,k)*99*Math.pow(10,-4)*getVariable(2,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:31:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.148595929875463; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-97*Math.pow(10,-6)*u4(k)*99*Math.pow(10,-4)*u2(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-97*Math.pow(10,-6)*getVariable(4,k)*99*Math.pow(10,-4)*getVariable(2,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:31:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.148592419335516; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-99*Math.pow(10,-6)*u4(k)*99*Math.pow(10,-4)*u2(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-99*Math.pow(10,-6)*getVariable(4,k)*99*Math.pow(10,-4)*getVariable(2,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:31:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.147909277060629; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-95*Math.pow(10,-6)*u2(k)*99*Math.pow(10,-4)*u2(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-95*Math.pow(10,-6)*getVariable(2,k)*99*Math.pow(10,-4)*getVariable(2,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:31:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.147876000266727; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-99*Math.pow(10,-6)*u2(k)*99*Math.pow(10,-4)*u2(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-99*Math.pow(10,-6)*getVariable(2,k)*99*Math.pow(10,-4)*getVariable(2,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:32:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1464163349748455; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-99*Math.pow(10,-5)*u2(k)*99*Math.pow(10,-4)*u2(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-99*Math.pow(10,-5)*getVariable(2,k)*99*Math.pow(10,-4)*getVariable(2,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:32:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.145922064178545; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-87*Math.pow(10,-5)*u2(k)*99*Math.pow(10,-4)*u2(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-87*Math.pow(10,-5)*getVariable(2,k)*99*Math.pow(10,-4)*getVariable(2,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:32:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.145890581128545; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-99*Math.pow(10,-5)*u2(k)*86*Math.pow(10,-4)*u2(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-99*Math.pow(10,-5)*getVariable(2,k)*86*Math.pow(10,-4)*getVariable(2,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:32:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.145638710283338; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-86*Math.pow(10,-5)*u2(k)*86*Math.pow(10,-4)*u2(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-86*Math.pow(10,-5)*getVariable(2,k)*86*Math.pow(10,-4)*getVariable(2,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:32:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.145376061726835; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-99*Math.pow(10,-5)*u2(k)*86*Math.pow(10,-4)*u2(k)-89*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-99*Math.pow(10,-5)*getVariable(2,k)*86*Math.pow(10,-4)*getVariable(2,k)-89*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:32:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.145305813219266; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-86*Math.pow(10,-5)*u2(k)*86*Math.pow(10,-4)*u2(k)-97*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-86*Math.pow(10,-5)*getVariable(2,k)*86*Math.pow(10,-4)*getVariable(2,k)-97*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:32:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.144905478811768; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-99*Math.pow(10,-5)*u2(k)*95*Math.pow(10,-4)*u2(k)-89*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-99*Math.pow(10,-5)*getVariable(2,k)*95*Math.pow(10,-4)*getVariable(2,k)-89*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:32:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.144817331898143; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-99*Math.pow(10,-5)*u2(k)*97*Math.pow(10,-4)*u2(k)-89*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-99*Math.pow(10,-5)*getVariable(2,k)*97*Math.pow(10,-4)*getVariable(2,k)-89*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:32:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.144735159168307; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-99*Math.pow(10,-5)*u2(k)*99*Math.pow(10,-4)*u2(k)-89*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-99*Math.pow(10,-5)*getVariable(2,k)*99*Math.pow(10,-4)*getVariable(2,k)-89*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:32:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.130622310413106; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-97*Math.pow(10,-6)*u4(k)*u2(k)+u8(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-97*Math.pow(10,-6)*getVariable(4,k)*getVariable(2,k)+getVariable(8,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:32:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0513048151608615; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-97*Math.pow(10,-6)*u7(k)*u2(k)+u8(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-97*Math.pow(10,-6)*getVariable(7,k)*getVariable(2,k)+getVariable(8,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:32:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.04939517390144; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-86*Math.pow(10,-6)*u7(k)*u2(k)+u8(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-86*Math.pow(10,-6)*getVariable(7,k)*getVariable(2,k)+getVariable(8,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:32:12 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.04939517390144 -->> Avg.: 15.55268939395113 -->> Std. Dev.: 22.98643372016651
Aug 30, 2024 10:32:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.049262776912431; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-87*Math.pow(10,-6)*u7(k)*u2(k)+u8(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-87*Math.pow(10,-6)*getVariable(7,k)*getVariable(2,k)+getVariable(8,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:32:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.049191585657028; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-88*Math.pow(10,-6)*u7(k)*u2(k)+u8(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-88*Math.pow(10,-6)*getVariable(7,k)*getVariable(2,k)+getVariable(8,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:32:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.049181602724153; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-89*Math.pow(10,-6)*u7(k)*u2(k)+u8(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-89*Math.pow(10,-6)*getVariable(7,k)*getVariable(2,k)+getVariable(8,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:33:29 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.049181602724153 -->> Avg.: 5.538343588099192 -->> Std. Dev.: 1.777639194132184
Aug 30, 2024 10:33:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.049181602724152; Expression=u8(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-89*Math.pow(10,-6)*u7(k)*u2(k)+u7(k)-99*Math.pow(10,-4)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-89*Math.pow(10,-6)*getVariable(7,k)*getVariable(2,k)+getVariable(7,k)-99*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 10:33:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.04891674545896; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-89*Math.pow(10,-6)*u7(k)*u2(k)+u8(k)-10*Math.pow(10,-3)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-89*Math.pow(10,-6)*getVariable(7,k)*getVariable(2,k)+getVariable(8,k)-10*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 10:34:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.038870660542008; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-89*Math.pow(10,-6)*u2(k)*u2(k)+u8(k)-99*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-89*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)-99*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 10:34:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.031892961546784; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-89*Math.pow(10,-6)*u2(k)*u2(k)+u8(k)-86*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-89*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)-86*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 10:34:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.031275496717149; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-86*Math.pow(10,-6)*u2(k)*u2(k)+u8(k)-86*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-86*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)-86*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 10:34:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.028893614003161; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-89*Math.pow(10,-6)*u2(k)*u2(k)+u8(k)-75*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-89*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)-75*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 10:34:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.970816884360352; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-86*Math.pow(10,-6)*u2(k)*u2(k)+u8(k)-86*Math.pow(10,-6)*u2(k)*u2(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-86*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)-86*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)
Aug 30, 2024 10:34:51 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.970816884360352 -->> Avg.: 5.112230636692415 -->> Std. Dev.: 0.0624016389490998
Aug 30, 2024 10:36:21 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.970816884360352 -->> Avg.: 5.071429106580593 -->> Std. Dev.: 0.07213977367440327
Aug 30, 2024 10:36:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.970714855451023; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-85*Math.pow(10,-6)*u2(k)*u2(k)+u8(k)-86*Math.pow(10,-6)*u2(k)*u2(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-85*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)-86*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)
Aug 30, 2024 10:36:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.970714855451022; Expression=u7(k)-u3(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-86*Math.pow(10,-6)*u2(k)*u2(k)+u8(k)-85*Math.pow(10,-6)*u2(k)*u2(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-86*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)-85*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)
Aug 30, 2024 10:36:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.964377931580171; Expression=u7(k)-u3(k)-u5(k)*85*Math.pow(10,-4)*u7(k)-86*Math.pow(10,-6)*u2(k)*u2(k)+u8(k)-86*Math.pow(10,-6)*u2(k)*u2(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*85*Math.pow(10,-4)*getVariable(7,k)-86*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)-86*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)
Aug 30, 2024 10:36:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.959712286281175; Expression=u7(k)-u3(k)-u5(k)*85*Math.pow(10,-4)*u7(k)-89*Math.pow(10,-6)*u2(k)*u2(k)+u8(k)-86*Math.pow(10,-6)*u2(k)*u2(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*85*Math.pow(10,-4)*getVariable(7,k)-89*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)-86*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)
Aug 30, 2024 10:36:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.954427270901584; Expression=u7(k)-u3(k)-u5(k)*85*Math.pow(10,-4)*u7(k)-86*Math.pow(10,-6)*u2(k)*u2(k)+u8(k)-99*Math.pow(10,-6)*u2(k)*u2(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*85*Math.pow(10,-4)*getVariable(7,k)-86*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)-99*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)
Aug 30, 2024 10:37:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9542437888833035; Expression=u7(k)-u3(k)-u5(k)*85*Math.pow(10,-4)*u7(k)-99*Math.pow(10,-6)*u2(k)*u2(k)+u8(k)-85*Math.pow(10,-6)*u2(k)*u2(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*85*Math.pow(10,-4)*getVariable(7,k)-99*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)-85*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)
Aug 30, 2024 10:37:55 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.9542437888833035 -->> Avg.: 5.033581829364055 -->> Std. Dev.: 0.06978763303602378
Aug 30, 2024 10:39:25 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.9542437888833035 -->> Avg.: 4.995565993612214 -->> Std. Dev.: 0.045332800269334395
Aug 30, 2024 10:39:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.950635883361298; Expression=u7(k)-u3(k)-u5(k)*84*Math.pow(10,-4)*u7(k)-99*Math.pow(10,-6)*u2(k)*u2(k)+u8(k)-85*Math.pow(10,-6)*u2(k)*u2(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*84*Math.pow(10,-4)*getVariable(7,k)-99*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)-85*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)
Aug 30, 2024 10:39:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.939916849938866; Expression=u7(k)-u3(k)-u5(k)*84*Math.pow(10,-4)*u7(k)-99*Math.pow(10,-6)*u2(k)*u2(k)+u8(k)-99*Math.pow(10,-6)*u2(k)*u2(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*84*Math.pow(10,-4)*getVariable(7,k)-99*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)-99*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)
Aug 30, 2024 10:39:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.939596968521154; Expression=u7(k)-u3(k)-u5(k)*84*Math.pow(10,-4)*u7(k)-96*Math.pow(10,-6)*u2(k)*u2(k)+u8(k)-99*Math.pow(10,-6)*u2(k)*u2(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*84*Math.pow(10,-4)*getVariable(7,k)-96*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)-99*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)
Aug 30, 2024 10:40:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.935190841831352; Expression=u7(k)-u3(k)-u5(k)*83*Math.pow(10,-4)*u7(k)-99*Math.pow(10,-6)*u2(k)*u2(k)+u8(k)-99*Math.pow(10,-6)*u2(k)*u2(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*83*Math.pow(10,-4)*getVariable(7,k)-99*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)-99*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)
Aug 30, 2024 10:41:00 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.935190841831352 -->> Avg.: 4.972264250871854 -->> Std. Dev.: 0.03477836676379613

Execution time: 800.946 seconds.



@@;getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*83*Math.pow(10,-4)*getVariable(7,k)-99*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)-99*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)



Run #1
========
Aug 30, 2024 10:41:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=45275.0384198721; Expression=29*Math.pow(10,-8)*u4(k)+u5(k)*u5(k)*u3(k)-u9(k)*u4(k)-u6(k); Java Expression: 29*Math.pow(10,-8)*getVariable(4,k)+getVariable(5,k)*getVariable(5,k)*getVariable(3,k)-getVariable(9,k)*getVariable(4,k)-getVariable(6,k)
Aug 30, 2024 10:41:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3875.283875625205; Expression=u3(k)+u2(k)-u3(k)*u7(k)-u5(k)+u2(k); Java Expression: getVariable(3,k)+getVariable(2,k)-getVariable(3,k)*getVariable(7,k)-getVariable(5,k)+getVariable(2,k)
Aug 30, 2024 10:41:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=590.2802676665231; Expression=u9(k)-u2(k)-u2(k)-u2(k)+30*Math.pow(10,-1)-u8(k)-u6(k); Java Expression: getVariable(9,k)-getVariable(2,k)-getVariable(2,k)-getVariable(2,k)+30*Math.pow(10,-1)-getVariable(8,k)-getVariable(6,k)
Aug 30, 2024 10:41:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.306121959491481; Expression=u4(k)-u8(k); Java Expression: getVariable(4,k)-getVariable(8,k)
Aug 30, 2024 10:41:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.329139882116188; Expression=7*Math.pow(10,-2)+u5(k); Java Expression: 7*Math.pow(10,-2)+getVariable(5,k)
Aug 30, 2024 10:41:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 10:41:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.446789423887677; Expression=35*Math.pow(10,-2)*u7(k); Java Expression: 35*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 10:41:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709785324194373; Expression=32*Math.pow(10,-2)*u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 10:41:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.579887333973399; Expression=32*Math.pow(10,-2)*u7(k)+u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 10:41:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.4070529324640715; Expression=31*Math.pow(10,-2)*u7(k)+u8(k); Java Expression: 31*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 10:41:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.405015834140299; Expression=30*Math.pow(10,-2)*u7(k)+u8(k); Java Expression: 30*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 10:41:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.167425837999321; Expression=30*Math.pow(10,-2)*u7(k)+u8(k)+u8(k); Java Expression: 30*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 10:41:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.766028011747602; Expression=30*Math.pow(10,-2)*u7(k)+u8(k)*u8(k); Java Expression: 30*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 10:41:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.502696619226485; Expression=30*Math.pow(10,-2)*u7(k)+u8(k)*u8(k)*u8(k); Java Expression: 30*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 10:41:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.064494287809905; Expression=26*Math.pow(10,-2)*u7(k)+u8(k)*u8(k)*u8(k); Java Expression: 26*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 10:41:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.749950484434393; Expression=30*Math.pow(10,-2)*u6(k)+u8(k)*u8(k)*u8(k); Java Expression: 30*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 10:41:49 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 4.749950484434393 -->> Avg.: 3759600.79656581 -->> Std. Dev.: 1.4722564776610518E7
Aug 30, 2024 10:42:43 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 4.749950484434393 -->> Avg.: 3913.5295159037005 -->> Std. Dev.: 13013.886930122684
Aug 30, 2024 10:43:41 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 4.749950484434393 -->> Avg.: 125.17597697766021 -->> Std. Dev.: 355.58189974220966
Aug 30, 2024 10:44:41 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 4.749950484434393 -->> Avg.: 13.028698178816311 -->> Std. Dev.: 17.922741807873873
Aug 30, 2024 10:45:41 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.749950484434393 -->> Avg.: 5.179265550767342 -->> Std. Dev.: 1.3131532531282626
Aug 30, 2024 10:46:49 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.749950484434393 -->> Avg.: 4.749950484434393 -->> Std. Dev.: 0.0
Aug 30, 2024 10:47:55 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.749950484434393 -->> Avg.: 4.749950484434393 -->> Std. Dev.: 0.0
Aug 30, 2024 10:49:03 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.749950484434393 -->> Avg.: 4.749950484434393 -->> Std. Dev.: 0.0
Aug 30, 2024 10:50:11 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.749950484434393 -->> Avg.: 4.749950484434393 -->> Std. Dev.: 0.0
Aug 30, 2024 10:51:20 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.749950484434393 -->> Avg.: 4.749950484434393 -->> Std. Dev.: 0.0

Execution time: 617.886 seconds.



@@;30*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)



Run #2
========
Aug 30, 2024 10:51:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=2.3281303673820883E11; Expression=30*Math.pow(10,-8)*12*Math.pow(10,-9)*u1(k)+u3(k)+66*Math.pow(10,-3)*u3(k)*89*Math.pow(10,+9)+u9(k)-u6(k); Java Expression: 30*Math.pow(10,-8)*12*Math.pow(10,-9)*getVariable(1,k)+getVariable(3,k)+66*Math.pow(10,-3)*getVariable(3,k)*89*Math.pow(10,+9)+getVariable(9,k)-getVariable(6,k)
Aug 30, 2024 10:51:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=12.56523233289398; Expression=49*Math.pow(10,-2)+u3(k); Java Expression: 49*Math.pow(10,-2)+getVariable(3,k)
Aug 30, 2024 10:51:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.398141456566654; Expression=30*Math.pow(10,-5)+u4(k); Java Expression: 30*Math.pow(10,-5)+getVariable(4,k)
Aug 30, 2024 10:51:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.398033450355952; Expression=54*Math.pow(10,-9)*u7(k)+u4(k); Java Expression: 54*Math.pow(10,-9)*getVariable(7,k)+getVariable(4,k)
Aug 30, 2024 10:51:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 10:51:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837859; Expression=u7(k)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)
Aug 30, 2024 10:51:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.048534036089369; Expression=u7(k)-u5(k)-u4(k)-37*Math.pow(10,-4)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-37*Math.pow(10,-4)*getVariable(5,k)
Aug 30, 2024 10:51:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.899654497793932; Expression=u7(k)-u5(k)-u4(k)-37*Math.pow(10,-3)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-37*Math.pow(10,-3)*getVariable(5,k)
Aug 30, 2024 10:51:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8956493431264345; Expression=u7(k)-u5(k)-u4(k)-41*Math.pow(10,-3)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-41*Math.pow(10,-3)*getVariable(5,k)
Aug 30, 2024 10:51:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.895120708814033; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-3)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-3)*getVariable(5,k)
Aug 30, 2024 10:51:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.894809970666438; Expression=u7(k)-u5(k)-u4(k)-37*Math.pow(10,-4)*u5(k)-42*Math.pow(10,-3)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-37*Math.pow(10,-4)*getVariable(5,k)-42*Math.pow(10,-3)*getVariable(5,k)
Aug 30, 2024 10:51:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.894638487489939; Expression=u7(k)-u5(k)-u4(k)-37*Math.pow(10,-4)*u5(k)-41*Math.pow(10,-3)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-37*Math.pow(10,-4)*getVariable(5,k)-41*Math.pow(10,-3)*getVariable(5,k)
Aug 30, 2024 10:51:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.880562394919021; Expression=u7(k)-u5(k)-u4(k)-37*Math.pow(10,-4)*u1(k)-42*Math.pow(10,-3)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-37*Math.pow(10,-4)*getVariable(1,k)-42*Math.pow(10,-3)*getVariable(5,k)
Aug 30, 2024 10:51:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.879378878684164; Expression=u7(k)-u5(k)-u4(k)-37*Math.pow(10,-4)*u1(k)-41*Math.pow(10,-3)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-37*Math.pow(10,-4)*getVariable(1,k)-41*Math.pow(10,-3)*getVariable(5,k)
Aug 30, 2024 10:51:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.876540961075712; Expression=u7(k)-u5(k)-u4(k)-37*Math.pow(10,-4)*u1(k)-37*Math.pow(10,-3)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-37*Math.pow(10,-4)*getVariable(1,k)-37*Math.pow(10,-3)*getVariable(5,k)
Aug 30, 2024 10:51:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.874980136801426; Expression=u7(k)-u5(k)-u4(k)-41*Math.pow(10,-4)*u1(k)-37*Math.pow(10,-3)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-41*Math.pow(10,-4)*getVariable(1,k)-37*Math.pow(10,-3)*getVariable(5,k)
Aug 30, 2024 10:51:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.866011871118509; Expression=u7(k)-u5(k)-u4(k)-69*Math.pow(10,-4)*u1(k)*41*Math.pow(10,-3)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-69*Math.pow(10,-4)*getVariable(1,k)*41*Math.pow(10,-3)*getVariable(5,k)
Aug 30, 2024 10:52:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.820284230371916; Expression=u7(k)-u5(k)-u4(k)-92*Math.pow(10,-4)*u1(k)*41*Math.pow(10,-3)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-92*Math.pow(10,-4)*getVariable(1,k)*41*Math.pow(10,-3)*getVariable(5,k)
Aug 30, 2024 10:52:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.768819350408092; Expression=u7(k)-u5(k)-u4(k)-69*Math.pow(10,-4)*u1(k)*81*Math.pow(10,-3)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-69*Math.pow(10,-4)*getVariable(1,k)*81*Math.pow(10,-3)*getVariable(5,k)
Aug 30, 2024 10:52:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.653741221683106; Expression=u7(k)-u5(k)-u4(k)-69*Math.pow(10,-4)*u1(k)*41*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-69*Math.pow(10,-4)*getVariable(1,k)*41*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:52:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.653338404134479; Expression=u7(k)-u5(k)-u4(k)-69*Math.pow(10,-4)*u1(k)*42*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-69*Math.pow(10,-4)*getVariable(1,k)*42*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:52:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6533337824628305; Expression=u7(k)-u5(k)-u4(k)-70*Math.pow(10,-4)*u1(k)*42*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-70*Math.pow(10,-4)*getVariable(1,k)*42*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:52:24 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.6533337824628305 -->> Avg.: 7310316.458235244 -->> Std. Dev.: 3.508584289768442E7
Aug 30, 2024 10:53:39 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.6533337824628305 -->> Avg.: 5141.869584878257 -->> Std. Dev.: 19150.569336412835
Aug 30, 2024 10:54:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.613483403412493; Expression=u7(k)-u5(k)-u4(k)-70*Math.pow(10,-4)*u1(k)*35*Math.pow(10,-3)+u8(k)-70*Math.pow(10,-4)*u1(k)*42*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-70*Math.pow(10,-4)*getVariable(1,k)*35*Math.pow(10,-3)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*42*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:54:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.535956779276399; Expression=u7(k)-u5(k)-u4(k)-70*Math.pow(10,-4)*u1(k)*42*Math.pow(10,-3)+u8(k)-70*Math.pow(10,-4)*u1(k)*42*Math.pow(10,-3)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-70*Math.pow(10,-4)*getVariable(1,k)*42*Math.pow(10,-3)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*42*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 10:54:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.485220603326256; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-3)*u1(k)*35*Math.pow(10,-3)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-3)*getVariable(1,k)*35*Math.pow(10,-3)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:54:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.477442854232129; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-3)*u1(k)*70*Math.pow(10,-4)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-3)*getVariable(1,k)*70*Math.pow(10,-4)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:54:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4771555751688075; Expression=u7(k)-u5(k)-u4(k)-70*Math.pow(10,-4)*u1(k)*35*Math.pow(10,-3)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-70*Math.pow(10,-4)*getVariable(1,k)*35*Math.pow(10,-3)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:54:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.476035941043875; Expression=u7(k)-u5(k)-u4(k)-u2(k)+u2(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-4)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(2,k)+getVariable(2,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-4)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:54:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.475926572775944; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-4)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-4)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:54:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.475763433185882; Expression=u7(k)-u5(k)-u4(k)-72*Math.pow(10,-8)*u1(k)*70*Math.pow(10,-4)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-72*Math.pow(10,-8)*getVariable(1,k)*70*Math.pow(10,-4)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:54:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.475763421568979; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-8)*u1(k)*70*Math.pow(10,-4)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-8)*getVariable(1,k)*70*Math.pow(10,-4)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:54:55 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.475763421568979 -->> Avg.: 163.43362945764375 -->> Std. Dev.: 474.553824036109
Aug 30, 2024 10:54:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.475763414961472; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-8)*u5(k)*70*Math.pow(10,-4)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-8)*getVariable(5,k)*70*Math.pow(10,-4)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:54:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.474070507796879; Expression=u7(k)-u5(k)-u4(k)-u2(k)+u2(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-4)+u8(k)-70*Math.pow(10,-4)*u1(k)*69*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(2,k)+getVariable(2,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-4)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*69*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:54:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.473836092108476; Expression=u7(k)-u5(k)-u4(k)-u2(k)+u2(k)-70*Math.pow(10,-9)*u1(k)*70*Math.pow(10,-4)+u8(k)-70*Math.pow(10,-4)*u1(k)*69*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(2,k)+getVariable(2,k)-70*Math.pow(10,-9)*getVariable(1,k)*70*Math.pow(10,-4)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*69*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4738360911767145; Expression=u7(k)-u5(k)-u4(k)-u2(k)+u2(k)-42*Math.pow(10,-9)*u1(k)*70*Math.pow(10,-4)+u8(k)-70*Math.pow(10,-4)*u1(k)*69*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(2,k)+getVariable(2,k)-42*Math.pow(10,-9)*getVariable(1,k)*70*Math.pow(10,-4)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*69*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4738360900120036; Expression=u7(k)-u5(k)-u4(k)-u2(k)+u2(k)-70*Math.pow(10,-9)*u1(k)*70*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*69*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-getVariable(2,k)+getVariable(2,k)-70*Math.pow(10,-9)*getVariable(1,k)*70*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*69*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.466396693917404; Expression=u7(k)-u5(k)-u4(k)-90*Math.pow(10,-9)+u2(k)*42*Math.pow(10,-3)*u1(k)*70*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*69*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-90*Math.pow(10,-9)+getVariable(2,k)*42*Math.pow(10,-3)*getVariable(1,k)*70*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*69*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.465724365151947; Expression=u7(k)-u5(k)-u4(k)-90*Math.pow(10,-9)+u2(k)*42*Math.pow(10,-3)*u1(k)*42*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*69*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-90*Math.pow(10,-9)+getVariable(2,k)*42*Math.pow(10,-3)*getVariable(1,k)*42*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*69*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.464439884621919; Expression=u7(k)-u5(k)-u4(k)-90*Math.pow(10,-9)+u2(k)*42*Math.pow(10,-3)*u1(k)*70*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-90*Math.pow(10,-9)+getVariable(2,k)*42*Math.pow(10,-3)*getVariable(1,k)*70*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.462281887575023; Expression=u7(k)-u5(k)-u4(k)-90*Math.pow(10,-9)+u2(k)*42*Math.pow(10,-3)*u5(k)*70*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*69*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-90*Math.pow(10,-9)+getVariable(2,k)*42*Math.pow(10,-3)*getVariable(5,k)*70*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*69*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.462281886689048; Expression=u7(k)-u5(k)-u4(k)-70*Math.pow(10,-9)+u2(k)*42*Math.pow(10,-3)*u5(k)*70*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*69*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-70*Math.pow(10,-9)+getVariable(2,k)*42*Math.pow(10,-3)*getVariable(5,k)*70*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*69*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.45731907249827; Expression=u7(k)-u5(k)-u4(k)-90*Math.pow(10,-9)+u2(k)*70*Math.pow(10,-3)*u5(k)*70*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*69*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-90*Math.pow(10,-9)+getVariable(2,k)*70*Math.pow(10,-3)*getVariable(5,k)*70*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*69*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.457319072007162; Expression=u7(k)-u5(k)-u4(k)-70*Math.pow(10,-9)+u2(k)*70*Math.pow(10,-3)*u5(k)*70*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*69*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-70*Math.pow(10,-9)+getVariable(2,k)*70*Math.pow(10,-3)*getVariable(5,k)*70*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*69*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.457319071319613; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*70*Math.pow(10,-3)*u5(k)*70*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*69*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*70*Math.pow(10,-3)*getVariable(5,k)*70*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*69*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.456718201575572; Expression=u7(k)-u5(k)-u4(k)-70*Math.pow(10,-9)+u2(k)*70*Math.pow(10,-3)*u5(k)*70*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-70*Math.pow(10,-9)+getVariable(2,k)*70*Math.pow(10,-3)*getVariable(5,k)*70*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.456718197687924; Expression=u7(k)-u5(k)-u4(k)+47*Math.pow(10,-9)+u2(k)*70*Math.pow(10,-3)*u5(k)*70*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+47*Math.pow(10,-9)+getVariable(2,k)*70*Math.pow(10,-3)*getVariable(5,k)*70*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.45461639351074; Expression=u7(k)-u5(k)-u4(k)-70*Math.pow(10,-9)+u2(k)*97*Math.pow(10,-3)*u5(k)*70*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*69*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-70*Math.pow(10,-9)+getVariable(2,k)*97*Math.pow(10,-3)*getVariable(5,k)*70*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*69*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.454616393357281; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*97*Math.pow(10,-3)*u5(k)*70*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*69*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*97*Math.pow(10,-3)*getVariable(5,k)*70*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*69*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4530370193265645; Expression=u7(k)-u5(k)-u4(k)-70*Math.pow(10,-9)+u2(k)*97*Math.pow(10,-3)*u5(k)*70*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-70*Math.pow(10,-9)+getVariable(2,k)*97*Math.pow(10,-3)*getVariable(5,k)*70*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.453037018930129; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*97*Math.pow(10,-3)*u5(k)*70*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*97*Math.pow(10,-3)*getVariable(5,k)*70*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.451388393903434; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*97*Math.pow(10,-3)*u5(k)*90*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*97*Math.pow(10,-3)*getVariable(5,k)*90*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.444145669546403; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*8*Math.pow(10,-2)*u9(k)*70*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*69*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*8*Math.pow(10,-2)*getVariable(9,k)*70*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*69*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.44291312119817; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*8*Math.pow(10,-2)*u9(k)*70*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*8*Math.pow(10,-2)*getVariable(9,k)*70*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4420235006602535; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*8*Math.pow(10,-2)*u9(k)*70*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*8*Math.pow(10,-2)*getVariable(9,k)*70*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.438236533319145; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*8*Math.pow(10,-2)*u9(k)*90*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*8*Math.pow(10,-2)*getVariable(9,k)*90*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4382365332866565; Expression=u7(k)-u5(k)-u4(k)-70*Math.pow(10,-9)+u2(k)*8*Math.pow(10,-2)*u9(k)*90*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-70*Math.pow(10,-9)+getVariable(2,k)*8*Math.pow(10,-2)*getVariable(9,k)*90*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.438232915981448; Expression=u7(k)-u5(k)-u4(k)-70*Math.pow(10,-4)+u2(k)*8*Math.pow(10,-2)*u9(k)*90*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-70*Math.pow(10,-4)+getVariable(2,k)*8*Math.pow(10,-2)*getVariable(9,k)*90*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.438232904218691; Expression=u7(k)-u5(k)-u4(k)-69*Math.pow(10,-4)+u2(k)*8*Math.pow(10,-2)*u9(k)*90*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-69*Math.pow(10,-4)+getVariable(2,k)*8*Math.pow(10,-2)*getVariable(9,k)*90*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4355318211404455; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*8*Math.pow(10,-2)*u9(k)*90*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*8*Math.pow(10,-2)*getVariable(9,k)*90*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.433756414207158; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*8*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-70*Math.pow(10,-4)*u1(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*8*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:55:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.432514904091755; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*8*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u1(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*8*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(1,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:56:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.432514901771724; Expression=u7(k)-u5(k)-u4(k)+42*Math.pow(10,-9)+u2(k)*8*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u1(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+42*Math.pow(10,-9)+getVariable(2,k)*8*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(1,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:56:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.431032328667451; Expression=u7(k)-u5(k)-u4(k)+70*Math.pow(10,-3)+u2(k)*8*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u1(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+70*Math.pow(10,-3)+getVariable(2,k)*8*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(1,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:56:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.431003220691213; Expression=u7(k)-u5(k)-u4(k)+72*Math.pow(10,-3)+u2(k)*8*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u1(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+72*Math.pow(10,-3)+getVariable(2,k)*8*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(1,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:56:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.430894152500817; Expression=u7(k)-u5(k)-u4(k)+8*Math.pow(10,-2)+u2(k)*8*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u1(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+8*Math.pow(10,-2)+getVariable(2,k)*8*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(1,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:56:15 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.430894152500817 -->> Avg.: 16.360158900870896 -->> Std. Dev.: 23.967199245997108
Aug 30, 2024 10:56:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.426858784771429; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*97*Math.pow(10,-3)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u1(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*97*Math.pow(10,-3)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(1,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:56:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.426858784487902; Expression=u7(k)-u5(k)-u4(k)-8*Math.pow(10,-9)+u2(k)*97*Math.pow(10,-3)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u1(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-8*Math.pow(10,-9)+getVariable(2,k)*97*Math.pow(10,-3)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(1,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:56:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.42227770986452; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*13*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u1(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*13*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(1,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:56:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.414176747458251; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*13*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*13*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:56:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.404440581637756; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*13*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*13*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:56:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3959675260077775; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*13*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-69*Math.pow(10,-4)*u7(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*13*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-69*Math.pow(10,-4)*getVariable(7,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:56:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.394671222415924; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*13*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-69*Math.pow(10,-4)*u7(k)*69*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*13*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-69*Math.pow(10,-4)*getVariable(7,k)*69*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:56:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.358147745394835; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:56:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.352099928675137; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-90*Math.pow(10,-4)*u7(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:56:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.344914207304821; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:56:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.344746909130886; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-4)+u2(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-4)+getVariable(2,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:56:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.344521121393807; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-2)+u2(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-2)+getVariable(2,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:57:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.343389534093557; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-3)+u2(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-3)+getVariable(2,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:57:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3422942208904605; Expression=u7(k)-u5(k)-u4(k)-8*Math.pow(10,-2)+u2(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-8*Math.pow(10,-2)+getVariable(2,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:57:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.34111473386571; Expression=u7(k)-u5(k)-u4(k)-29*Math.pow(10,-2)+u2(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-29*Math.pow(10,-2)+getVariable(2,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:57:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.329050174122085; Expression=u7(k)-u5(k)-u4(k)-8*Math.pow(10,-2)+u2(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*8*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-8*Math.pow(10,-2)+getVariable(2,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*8*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 10:57:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3242809475004105; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*8*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*8*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 10:57:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.32428094312155; Expression=u7(k)-u5(k)-u4(k)+42*Math.pow(10,-9)+u2(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*8*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+42*Math.pow(10,-9)+getVariable(2,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*8*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 10:57:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.322256785744591; Expression=u7(k)-u5(k)-u4(k)+42*Math.pow(10,-3)+u2(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*8*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+42*Math.pow(10,-3)+getVariable(2,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*8*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 10:57:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.318181868399136; Expression=u7(k)-u5(k)-u4(k)-8*Math.pow(10,-5)+u2(k)*31*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*8*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-8*Math.pow(10,-5)+getVariable(2,k)*31*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*8*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 10:57:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.317126951602693; Expression=u7(k)-u5(k)-u4(k)+42*Math.pow(10,-3)+u2(k)*31*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*8*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+42*Math.pow(10,-3)+getVariable(2,k)*31*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*8*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 10:57:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.31657811210282; Expression=u7(k)-u5(k)-u4(k)+72*Math.pow(10,-3)+u2(k)*31*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*8*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+72*Math.pow(10,-3)+getVariable(2,k)*31*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*8*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 10:57:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.316250024621041; Expression=u7(k)-u5(k)-u4(k)+97*Math.pow(10,-3)+u2(k)*31*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*8*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+97*Math.pow(10,-3)+getVariable(2,k)*31*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*8*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 10:58:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.298396619700306; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*42*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-90*Math.pow(10,-4)*u7(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*42*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:58:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.29428314157705; Expression=u7(k)-u5(k)-u4(k)-42*Math.pow(10,-9)+u2(k)*42*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-90*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-42*Math.pow(10,-9)+getVariable(2,k)*42*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:58:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.294283140986764; Expression=u7(k)-u5(k)-u4(k)-8*Math.pow(10,-9)+u2(k)*42*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-90*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)-8*Math.pow(10,-9)+getVariable(2,k)*42*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:58:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.294283140344407; Expression=u7(k)-u5(k)-u4(k)+29*Math.pow(10,-9)+u2(k)*42*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-90*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+29*Math.pow(10,-9)+getVariable(2,k)*42*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:58:31 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.294283140344407 -->> Avg.: 5.895709860414687 -->> Std. Dev.: 1.617012301888964
Aug 30, 2024 10:58:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.294283140309673; Expression=u7(k)-u5(k)-u4(k)+31*Math.pow(10,-9)+u2(k)*42*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-90*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+31*Math.pow(10,-9)+getVariable(2,k)*42*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:58:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.294267592192217; Expression=u7(k)-u5(k)-u4(k)+90*Math.pow(10,-5)+u2(k)*42*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-90*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+90*Math.pow(10,-5)+getVariable(2,k)*42*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:58:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.29416303428902; Expression=u7(k)-u5(k)-u4(k)+72*Math.pow(10,-4)+u2(k)*42*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-90*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+72*Math.pow(10,-4)+getVariable(2,k)*42*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:58:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.294134537218886; Expression=u7(k)-u5(k)-u4(k)+90*Math.pow(10,-4)+u2(k)*42*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-90*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+90*Math.pow(10,-4)+getVariable(2,k)*42*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:58:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.293522660490719; Expression=u7(k)-u5(k)-u4(k)+72*Math.pow(10,-3)+u2(k)*42*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-90*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+72*Math.pow(10,-3)+getVariable(2,k)*42*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:58:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.293487639248136; Expression=u7(k)-u5(k)-u4(k)+97*Math.pow(10,-3)+u2(k)*42*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-90*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+97*Math.pow(10,-3)+getVariable(2,k)*42*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 10:58:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.293485543811791; Expression=u7(k)-u5(k)-u4(k)+90*Math.pow(10,-3)+u2(k)*42*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-90*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+90*Math.pow(10,-3)+getVariable(2,k)*42*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:00:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.292425925900303; Expression=u7(k)-u5(k)-u4(k)+72*Math.pow(10,-3)+u2(k)*42*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-90*Math.pow(10,-4)*u7(k)*74*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+72*Math.pow(10,-3)+getVariable(2,k)*42*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*74*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:00:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.291865266766039; Expression=u7(k)-u5(k)-u4(k)+90*Math.pow(10,-3)+u2(k)*42*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-90*Math.pow(10,-4)*u7(k)*74*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+90*Math.pow(10,-3)+getVariable(2,k)*42*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*74*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:00:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.291663752083858; Expression=u7(k)-u5(k)-u4(k)+97*Math.pow(10,-3)+u2(k)*42*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-90*Math.pow(10,-4)*u7(k)*74*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+97*Math.pow(10,-3)+getVariable(2,k)*42*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*74*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:00:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2916241374538355; Expression=u7(k)-u5(k)-u4(k)+u8(k)+u1(k)*42*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-90*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+getVariable(8,k)+getVariable(1,k)*42*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:00:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2899592758922775; Expression=u7(k)-u5(k)-u4(k)+31*Math.pow(10,-2)+u2(k)*42*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-90*Math.pow(10,-4)*u7(k)*74*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+31*Math.pow(10,-2)+getVariable(2,k)*42*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*74*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:00:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.287433271083062; Expression=u7(k)-u5(k)-u4(k)+u8(k)+u1(k)*42*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-97*Math.pow(10,-4)*u7(k)*72*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+getVariable(8,k)+getVariable(1,k)*42*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-97*Math.pow(10,-4)*getVariable(7,k)*72*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:00:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.282589588007906; Expression=u7(k)-u5(k)-u4(k)+65*Math.pow(10,-1)*u5(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*8*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+65*Math.pow(10,-1)*getVariable(5,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*8*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 11:00:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.279269875015372; Expression=u7(k)-u5(k)-u4(k)+65*Math.pow(10,-1)*u5(k)*29*Math.pow(10,-2)*u9(k)*90*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*8*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+65*Math.pow(10,-1)*getVariable(5,k)*29*Math.pow(10,-2)*getVariable(9,k)*90*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*8*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 11:00:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.269547234944333; Expression=u7(k)-u5(k)-u4(k)+65*Math.pow(10,-1)*u5(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-74*Math.pow(10,-4)*u7(k)*8*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+65*Math.pow(10,-1)*getVariable(5,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-74*Math.pow(10,-4)*getVariable(7,k)*8*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 11:01:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2557812138456965; Expression=u7(k)-u5(k)-u4(k)+65*Math.pow(10,-1)*u5(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*90*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+65*Math.pow(10,-1)*getVariable(5,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*90*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:01:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2547762820948405; Expression=u7(k)-u5(k)-u4(k)+65*Math.pow(10,-1)*u5(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-90*Math.pow(10,-4)*u7(k)*70*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+65*Math.pow(10,-1)*getVariable(5,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*70*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:01:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.244757301796547; Expression=u7(k)-u5(k)-u4(k)+65*Math.pow(10,-1)*u5(k)*31*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*90*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+65*Math.pow(10,-1)*getVariable(5,k)*31*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*90*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:01:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.240983628825514; Expression=u7(k)-u5(k)-u4(k)+72*Math.pow(10,-1)*u5(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*90*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+72*Math.pow(10,-1)*getVariable(5,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*90*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:01:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.239228000741131; Expression=u7(k)-u5(k)-u4(k)+74*Math.pow(10,-1)*u5(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*90*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+74*Math.pow(10,-1)*getVariable(5,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*90*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:01:29 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.239228000741131 -->> Avg.: 5.476999021670495 -->> Std. Dev.: 0.15258120881252493
Aug 30, 2024 11:01:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.238652648548543; Expression=u7(k)-u5(k)-u4(k)+72*Math.pow(10,-1)*u5(k)*31*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*90*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+72*Math.pow(10,-1)*getVariable(5,k)*31*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*90*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:01:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.21738568461878; Expression=u7(k)-u5(k)-u4(k)+90*Math.pow(10,-1)*u5(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+90*Math.pow(10,-1)*getVariable(5,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:02:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.217118537441542; Expression=u7(k)-u5(k)-u4(k)+90*Math.pow(10,-1)*u5(k)*29*Math.pow(10,-2)*u9(k)*92*Math.pow(10,-5)+u8(k)-72*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+90*Math.pow(10,-1)*getVariable(5,k)*29*Math.pow(10,-2)*getVariable(9,k)*92*Math.pow(10,-5)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:02:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.209891091852435; Expression=u7(k)-u5(k)-u4(k)+90*Math.pow(10,-1)*u5(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-74*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+90*Math.pow(10,-1)*getVariable(5,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-74*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:03:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.209438848148555; Expression=u7(k)-u5(k)-u4(k)+92*Math.pow(10,-1)*u5(k)*29*Math.pow(10,-2)*u9(k)*97*Math.pow(10,-5)+u8(k)-74*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+92*Math.pow(10,-1)*getVariable(5,k)*29*Math.pow(10,-2)*getVariable(9,k)*97*Math.pow(10,-5)+getVariable(8,k)-74*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:03:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.186749142738759; Expression=u7(k)-u5(k)-u4(k)+90*Math.pow(10,-1)*u5(k)*29*Math.pow(10,-2)*u9(k)*13*Math.pow(10,-4)+u8(k)-90*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+90*Math.pow(10,-1)*getVariable(5,k)*29*Math.pow(10,-2)*getVariable(9,k)*13*Math.pow(10,-4)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:03:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.183463038126828; Expression=u7(k)-u5(k)-u4(k)+97*Math.pow(10,-1)*u5(k)*29*Math.pow(10,-2)*u9(k)*13*Math.pow(10,-4)+u8(k)-90*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+97*Math.pow(10,-1)*getVariable(5,k)*29*Math.pow(10,-2)*getVariable(9,k)*13*Math.pow(10,-4)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:04:00 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.183463038126828 -->> Avg.: 5.390752631358684 -->> Std. Dev.: 0.15339962316481162
Aug 30, 2024 11:04:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.179520851751847; Expression=u7(k)-u5(k)-u4(k)+97*Math.pow(10,-1)*u5(k)*29*Math.pow(10,-2)*u5(k)*13*Math.pow(10,-4)+u8(k)-90*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+97*Math.pow(10,-1)*getVariable(5,k)*29*Math.pow(10,-2)*getVariable(5,k)*13*Math.pow(10,-4)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:04:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1750038614965845; Expression=u7(k)-u5(k)-u4(k)+97*Math.pow(10,-1)*u5(k)*29*Math.pow(10,-2)*u4(k)*13*Math.pow(10,-4)+u8(k)-90*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+97*Math.pow(10,-1)*getVariable(5,k)*29*Math.pow(10,-2)*getVariable(4,k)*13*Math.pow(10,-4)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:04:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1694754987338944; Expression=u7(k)-u5(k)-u4(k)+97*Math.pow(10,-1)*u5(k)*31*Math.pow(10,-2)*u4(k)*13*Math.pow(10,-4)+u8(k)-90*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+97*Math.pow(10,-1)*getVariable(5,k)*31*Math.pow(10,-2)*getVariable(4,k)*13*Math.pow(10,-4)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:04:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.155332030051705; Expression=u7(k)-u5(k)-u4(k)+97*Math.pow(10,-1)*u5(k)*31*Math.pow(10,-2)*u5(k)*13*Math.pow(10,-4)+u8(k)-90*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+97*Math.pow(10,-1)*getVariable(5,k)*31*Math.pow(10,-2)*getVariable(5,k)*13*Math.pow(10,-4)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:06:13 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.155332030051705 -->> Avg.: 5.294432374012474 -->> Std. Dev.: 0.10659885740789282
Aug 30, 2024 11:06:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.151134147774312; Expression=u7(k)-u5(k)-u4(k)+99*Math.pow(10,-1)*u5(k)*31*Math.pow(10,-2)*u5(k)*13*Math.pow(10,-4)+u8(k)-90*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+99*Math.pow(10,-1)*getVariable(5,k)*31*Math.pow(10,-2)*getVariable(5,k)*13*Math.pow(10,-4)+getVariable(8,k)-90*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:06:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.141379271195277; Expression=u7(k)-u5(k)-u4(k)+99*Math.pow(10,-1)*u5(k)*4*Math.pow(10,-1)*u5(k)*13*Math.pow(10,-4)+u8(k)-97*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+99*Math.pow(10,-1)*getVariable(5,k)*4*Math.pow(10,-1)*getVariable(5,k)*13*Math.pow(10,-4)+getVariable(8,k)-97*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:06:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.110983479951516; Expression=u7(k)-u5(k)-u4(k)+90*Math.pow(10,-1)*u5(k)*4*Math.pow(10,-1)*u5(k)*13*Math.pow(10,-4)+u8(k)-97*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+90*Math.pow(10,-1)*getVariable(5,k)*4*Math.pow(10,-1)*getVariable(5,k)*13*Math.pow(10,-4)+getVariable(8,k)-97*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:06:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1033472300106375; Expression=u7(k)-u5(k)-u4(k)+90*Math.pow(10,-1)*u5(k)*4*Math.pow(10,-1)*u5(k)*13*Math.pow(10,-4)+u8(k)-99*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+90*Math.pow(10,-1)*getVariable(5,k)*4*Math.pow(10,-1)*getVariable(5,k)*13*Math.pow(10,-4)+getVariable(8,k)-99*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:07:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.100899015290445; Expression=u7(k)-u5(k)-u4(k)+92*Math.pow(10,-1)*u5(k)*4*Math.pow(10,-1)*u5(k)*13*Math.pow(10,-4)+u8(k)-99*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+92*Math.pow(10,-1)*getVariable(5,k)*4*Math.pow(10,-1)*getVariable(5,k)*13*Math.pow(10,-4)+getVariable(8,k)-99*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:07:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.09519170452042; Expression=u7(k)-u5(k)-u4(k)+92*Math.pow(10,-1)*u5(k)*4*Math.pow(10,-1)*u5(k)*13*Math.pow(10,-4)+u8(k)-99*Math.pow(10,-4)*u7(k)*99*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+92*Math.pow(10,-1)*getVariable(5,k)*4*Math.pow(10,-1)*getVariable(5,k)*13*Math.pow(10,-4)+getVariable(8,k)-99*Math.pow(10,-4)*getVariable(7,k)*99*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:07:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.091091179581193; Expression=u7(k)-u5(k)-u4(k)+97*Math.pow(10,-1)*u5(k)*4*Math.pow(10,-1)*u5(k)*13*Math.pow(10,-4)+u8(k)-99*Math.pow(10,-4)*u7(k)*99*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+97*Math.pow(10,-1)*getVariable(5,k)*4*Math.pow(10,-1)*getVariable(5,k)*13*Math.pow(10,-4)+getVariable(8,k)-99*Math.pow(10,-4)*getVariable(7,k)*99*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:08:25 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 5.091091179581193 -->> Avg.: 5.2269429347697995 -->> Std. Dev.: 0.09317738762009398
Aug 30, 2024 11:09:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.94967398034965; Expression=u7(k)-u5(k)-u4(k)+97*Math.pow(10,-1)*u5(k)*4*Math.pow(10,-1)*u5(k)*13*Math.pow(10,-4)+u8(k)-99*Math.pow(10,-4)*u7(k)*99*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+97*Math.pow(10,-1)*getVariable(5,k)*4*Math.pow(10,-1)*getVariable(5,k)*13*Math.pow(10,-4)+getVariable(8,k)-99*Math.pow(10,-4)*getVariable(7,k)*99*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:09:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.933417338393812; Expression=u7(k)-u5(k)-u4(k)+99*Math.pow(10,-1)*u5(k)*4*Math.pow(10,-1)*u5(k)*13*Math.pow(10,-4)+u8(k)-99*Math.pow(10,-4)*u7(k)*99*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+99*Math.pow(10,-1)*getVariable(5,k)*4*Math.pow(10,-1)*getVariable(5,k)*13*Math.pow(10,-4)+getVariable(8,k)-99*Math.pow(10,-4)*getVariable(7,k)*99*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:09:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.93053162088276; Expression=u7(k)-u5(k)-u4(k)+97*Math.pow(10,-1)*u5(k)*4*Math.pow(10,-1)*u5(k)*13*Math.pow(10,-4)+u8(k)-97*Math.pow(10,-4)*u7(k)*99*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+97*Math.pow(10,-1)*getVariable(5,k)*4*Math.pow(10,-1)*getVariable(5,k)*13*Math.pow(10,-4)+getVariable(8,k)-97*Math.pow(10,-4)*getVariable(7,k)*99*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:09:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.919029021865746; Expression=u7(k)-u5(k)-u4(k)+99*Math.pow(10,-1)*u5(k)*4*Math.pow(10,-1)*u5(k)*13*Math.pow(10,-4)+u8(k)-97*Math.pow(10,-4)*u7(k)*99*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+99*Math.pow(10,-1)*getVariable(5,k)*4*Math.pow(10,-1)*getVariable(5,k)*13*Math.pow(10,-4)+getVariable(8,k)-97*Math.pow(10,-4)*getVariable(7,k)*99*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:09:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.912927230822389; Expression=u7(k)-u5(k)-u4(k)+99*Math.pow(10,-1)*u5(k)*4*Math.pow(10,-1)*u5(k)*13*Math.pow(10,-4)+u8(k)-97*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-4)*u7(k)*97*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+99*Math.pow(10,-1)*getVariable(5,k)*4*Math.pow(10,-1)*getVariable(5,k)*13*Math.pow(10,-4)+getVariable(8,k)-97*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:10:38 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.912927230822389 -->> Avg.: 5.158875889164858 -->> Std. Dev.: 0.10146635595382819

Execution time: 1161.422 seconds.



@@;getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+99*Math.pow(10,-1)*getVariable(5,k)*4*Math.pow(10,-1)*getVariable(5,k)*13*Math.pow(10,-4)+getVariable(8,k)-97*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k)



Run #3
========
Aug 30, 2024 11:10:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=9.508857340992732E12; Expression=57*Math.pow(10,+9)*u2(k); Java Expression: 57*Math.pow(10,+9)*getVariable(2,k)
Aug 30, 2024 11:10:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.306121959491481; Expression=u4(k)-u8(k); Java Expression: getVariable(4,k)-getVariable(8,k)
Aug 30, 2024 11:10:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.328771955903482; Expression=98*Math.pow(10,-3)+u5(k); Java Expression: 98*Math.pow(10,-3)+getVariable(5,k)
Aug 30, 2024 11:10:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 11:10:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.546215964551545; Expression=23*Math.pow(10,-4)+u5(k)+u8(k)*u8(k); Java Expression: 23*Math.pow(10,-4)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 11:10:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.545504401371705; Expression=45*Math.pow(10,-6)+u5(k)+u8(k)*u8(k); Java Expression: 45*Math.pow(10,-6)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 11:10:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.545490207838515; Expression=u5(k)+u8(k)*u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 11:10:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.361087277807157; Expression=45*Math.pow(10,-6)+u5(k)+u8(k)*u8(k)*u8(k); Java Expression: 45*Math.pow(10,-6)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 11:10:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.361060098883844; Expression=32*Math.pow(10,-8)+u5(k)+u8(k)*u8(k)*u8(k); Java Expression: 32*Math.pow(10,-8)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 11:10:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.361059904227895; Expression=u5(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 11:11:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.505065264045398; Expression=u7(k)-u4(k)-u5(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 11:11:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.058143099562467; Expression=u7(k)-u4(k)-u5(k)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(8,k)
Aug 30, 2024 11:11:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388946502078; Expression=u7(k)-u3(k)-u5(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 11:11:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9783084453782225; Expression=u7(k)-u3(k)-u5(k)+u8(k)-13*Math.pow(10,-4)*u6(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-13*Math.pow(10,-4)*getVariable(6,k)
Aug 30, 2024 11:11:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.948845947344496; Expression=u7(k)-u3(k)-u5(k)+u8(k)-64*Math.pow(10,-4)*u6(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-64*Math.pow(10,-4)*getVariable(6,k)
Aug 30, 2024 11:11:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.94813301496398; Expression=u7(k)-u3(k)-u5(k)+u8(k)-80*Math.pow(10,-4)*u6(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-80*Math.pow(10,-4)*getVariable(6,k)
Aug 30, 2024 11:11:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.946020372676143; Expression=u7(k)-u3(k)-u5(k)+u8(k)-64*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-64*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:11:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9457132161818995; Expression=u7(k)-u3(k)-u5(k)+u8(k)-67*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-67*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:11:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.945573956097476; Expression=u7(k)-u3(k)-u5(k)+u8(k)-70*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:11:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.945572807705119; Expression=20*Math.pow(10,-6)+u7(k)-u3(k)-u5(k)+u8(k)-70*Math.pow(10,-4)*u7(k); Java Expression: 20*Math.pow(10,-6)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:11:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.945564848831459; Expression=u7(k)-u3(k)-u5(k)+u8(k)-71*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-71*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:11:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.945459448791728; Expression=20*Math.pow(10,-4)+u7(k)-u3(k)-u5(k)+u8(k)-70*Math.pow(10,-4)*u7(k); Java Expression: 20*Math.pow(10,-4)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:11:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.944459064157766; Expression=20*Math.pow(10,-3)+u7(k)-u3(k)-u5(k)+u8(k)-70*Math.pow(10,-4)*u7(k); Java Expression: 20*Math.pow(10,-3)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:11:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.927491042291047; Expression=20*Math.pow(10,-6)+u7(k)-u3(k)-u5(k)+u8(k)-70*Math.pow(10,-4)*u1(k); Java Expression: 20*Math.pow(10,-6)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:11:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.927489716868183; Expression=67*Math.pow(10,-6)+u7(k)-u3(k)-u5(k)+u8(k)-70*Math.pow(10,-4)*u1(k); Java Expression: 67*Math.pow(10,-6)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-70*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:11:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9269635774432; Expression=20*Math.pow(10,-6)+u7(k)-u3(k)-u5(k)+u8(k)-71*Math.pow(10,-4)*u1(k); Java Expression: 20*Math.pow(10,-6)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-71*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:11:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.922727797896459; Expression=20*Math.pow(10,-6)+u7(k)-u3(k)-u5(k)+u8(k)-80*Math.pow(10,-4)*u1(k); Java Expression: 20*Math.pow(10,-6)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-80*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:11:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.922674590744991; Expression=13*Math.pow(10,-4)+u7(k)-u3(k)-u5(k)+u8(k)-80*Math.pow(10,-4)*u1(k); Java Expression: 13*Math.pow(10,-4)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-80*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:11:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.922645609890382; Expression=20*Math.pow(10,-4)+u7(k)-u3(k)-u5(k)+u8(k)-80*Math.pow(10,-4)*u1(k); Java Expression: 20*Math.pow(10,-4)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-80*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:11:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.921928759064037; Expression=20*Math.pow(10,-3)+u7(k)-u3(k)-u5(k)+u8(k)-80*Math.pow(10,-4)*u1(k); Java Expression: 20*Math.pow(10,-3)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-80*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:11:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9204064856931575; Expression=64*Math.pow(10,-3)+u7(k)-u3(k)-u5(k)+u8(k)-80*Math.pow(10,-4)*u1(k); Java Expression: 64*Math.pow(10,-3)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-80*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:11:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.919933917228273; Expression=80*Math.pow(10,-3)+u7(k)-u3(k)-u5(k)+u8(k)-80*Math.pow(10,-4)*u1(k); Java Expression: 80*Math.pow(10,-3)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-80*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:11:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9198501207543766; Expression=83*Math.pow(10,-3)+u7(k)-u3(k)-u5(k)+u8(k)-80*Math.pow(10,-4)*u1(k); Java Expression: 83*Math.pow(10,-3)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-80*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:11:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.917767509643261; Expression=20*Math.pow(10,-2)+u7(k)-u3(k)-u5(k)+u8(k)-80*Math.pow(10,-4)*u1(k); Java Expression: 20*Math.pow(10,-2)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-80*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:11:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.912853775776689; Expression=64*Math.pow(10,-3)+u7(k)-u3(k)-u5(k)+u8(k)-99*Math.pow(10,-4)*u1(k); Java Expression: 64*Math.pow(10,-3)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-99*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:11:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.910928315874111; Expression=10*Math.pow(10,-2)+u7(k)-u3(k)-u5(k)+u8(k)-99*Math.pow(10,-4)*u1(k); Java Expression: 10*Math.pow(10,-2)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-99*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:11:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.907810585037416; Expression=17*Math.pow(10,-2)+u7(k)-u3(k)-u5(k)+u8(k)-99*Math.pow(10,-4)*u1(k); Java Expression: 17*Math.pow(10,-2)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-99*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:11:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9067278640618746; Expression=20*Math.pow(10,-2)+u7(k)-u3(k)-u5(k)+u8(k)-99*Math.pow(10,-4)*u1(k); Java Expression: 20*Math.pow(10,-2)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-99*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:11:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.903549717866642; Expression=44*Math.pow(10,-2)+u7(k)-u3(k)-u5(k)+u8(k)-99*Math.pow(10,-4)*u1(k); Java Expression: 44*Math.pow(10,-2)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-99*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:11:42 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.903549717866642 -->> Avg.: 2316410.356157859 -->> Std. Dev.: 9885306.272466065
Aug 30, 2024 11:11:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.881406854038093; Expression=44*Math.pow(10,-2)+u7(k)-u3(k)-u5(k)+u8(k)-20*Math.pow(10,-3)*u1(k); Java Expression: 44*Math.pow(10,-2)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-20*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:11:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.843641017313607; Expression=83*Math.pow(10,-2)+u7(k)-u3(k)-u5(k)+u8(k)-20*Math.pow(10,-3)*u1(k); Java Expression: 83*Math.pow(10,-2)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-20*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:11:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.836791777857469; Expression=96*Math.pow(10,-2)+u7(k)-u3(k)-u5(k)+u8(k)-20*Math.pow(10,-3)*u1(k); Java Expression: 96*Math.pow(10,-2)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-20*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:11:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.835621324189401; Expression=99*Math.pow(10,-2)+u7(k)-u3(k)-u5(k)+u8(k)-20*Math.pow(10,-3)*u1(k); Java Expression: 99*Math.pow(10,-2)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-20*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:12:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.829212186851601; Expression=99*Math.pow(10,-2)+u7(k)-u3(k)-u5(k)+u8(k)-23*Math.pow(10,-3)*u1(k); Java Expression: 99*Math.pow(10,-2)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-23*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:12:56 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.829212186851601 -->> Avg.: 4681.741829578774 -->> Std. Dev.: 15416.829258383486
Aug 30, 2024 11:13:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.822724706490999; Expression=18*Math.pow(10,-1)+u7(k)-u3(k)-u5(k)+u8(k)-23*Math.pow(10,-3)*u1(k); Java Expression: 18*Math.pow(10,-1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-23*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:13:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.795331244537044; Expression=23*Math.pow(10,-3)+u7(k)-u4(k)-u5(k)+u8(k)-23*Math.pow(10,-3)*u1(k); Java Expression: 23*Math.pow(10,-3)+getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)-23*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:13:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5169458067404396; Expression=78*Math.pow(10,-1)+u7(k)-u3(k)-u5(k)+u8(k)-99*Math.pow(10,-3)*u1(k); Java Expression: 78*Math.pow(10,-1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-99*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:14:13 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.5169458067404396 -->> Avg.: 159.99107842503417 -->> Std. Dev.: 486.385873504839
Aug 30, 2024 11:14:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.511990320058005; Expression=73*Math.pow(10,-1)+u7(k)-u3(k)-u5(k)+u8(k)-99*Math.pow(10,-3)*u1(k); Java Expression: 73*Math.pow(10,-1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-99*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:14:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.511284549307826; Expression=73*Math.pow(10,-1)+u7(k)-u3(k)-u5(k)+u8(k)-97*Math.pow(10,-3)*u1(k); Java Expression: 73*Math.pow(10,-1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-97*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:14:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.469845723954725; Expression=97*Math.pow(10,-1)+u7(k)-u3(k)-u5(k)+u8(k)-99*Math.pow(10,-3)*u7(k); Java Expression: 97*Math.pow(10,-1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-99*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 11:14:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.464027283839081; Expression=99*Math.pow(10,-1)+u7(k)-u3(k)-u5(k)+u8(k)-99*Math.pow(10,-3)*u7(k); Java Expression: 99*Math.pow(10,-1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-99*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 11:15:32 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.464027283839081 -->> Avg.: 15.127359621570458 -->> Std. Dev.: 21.17683063511144
Aug 30, 2024 11:16:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.464027283839079; Expression=99*Math.pow(10,-1)+u7(k)-u3(k)-u5(k)+u8(k)-u2(k)+u2(k)-99*Math.pow(10,-3)*u7(k); Java Expression: 99*Math.pow(10,-1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-getVariable(2,k)+getVariable(2,k)-99*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 11:16:52 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.464027283839079 -->> Avg.: 5.9827825092823925 -->> Std. Dev.: 1.2274464178040745
Aug 30, 2024 11:17:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.464026954805989; Expression=99*Math.pow(10,-1)+u7(k)-u3(k)-u5(k)+u8(k)-86*Math.pow(10,-9)*u1(k)-99*Math.pow(10,-3)*u7(k); Java Expression: 99*Math.pow(10,-1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-86*Math.pow(10,-9)*getVariable(1,k)-99*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 11:17:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.464026905069211; Expression=99*Math.pow(10,-1)+u7(k)-u3(k)-u5(k)+u8(k)-99*Math.pow(10,-9)*u1(k)-99*Math.pow(10,-3)*u7(k); Java Expression: 99*Math.pow(10,-1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-99*Math.pow(10,-9)*getVariable(1,k)-99*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 11:17:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.463654556616318; Expression=99*Math.pow(10,-1)+u7(k)-u3(k)-u5(k)+u8(k)-99*Math.pow(10,-6)*u1(k)-99*Math.pow(10,-3)*u7(k); Java Expression: 99*Math.pow(10,-1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-99*Math.pow(10,-6)*getVariable(1,k)-99*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 11:17:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.462312087515329; Expression=99*Math.pow(10,-1)+u7(k)-u3(k)-u5(k)+u8(k)-57*Math.pow(10,-4)*u1(k)-99*Math.pow(10,-3)*u7(k); Java Expression: 99*Math.pow(10,-1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-57*Math.pow(10,-4)*getVariable(1,k)-99*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 11:17:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.462047027773005; Expression=99*Math.pow(10,-1)+u7(k)-u3(k)-u5(k)+u8(k)-57*Math.pow(10,-5)*u1(k)-99*Math.pow(10,-3)*u7(k); Java Expression: 99*Math.pow(10,-1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-57*Math.pow(10,-5)*getVariable(1,k)-99*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 11:17:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4608447389087305; Expression=99*Math.pow(10,-1)+u7(k)-u3(k)-u5(k)+u8(k)-99*Math.pow(10,-5)*u1(k)-99*Math.pow(10,-3)*u7(k); Java Expression: 99*Math.pow(10,-1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-99*Math.pow(10,-5)*getVariable(1,k)-99*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 11:17:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.454207893920522; Expression=99*Math.pow(10,-1)+u7(k)-u3(k)-u5(k)+u8(k)-57*Math.pow(10,-4)*u1(k)-97*Math.pow(10,-3)*u7(k); Java Expression: 99*Math.pow(10,-1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-57*Math.pow(10,-4)*getVariable(1,k)-97*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 11:18:13 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.454207893920522 -->> Avg.: 5.606515008902574 -->> Std. Dev.: 0.1771908373424755
Aug 30, 2024 11:19:34 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.454207893920522 -->> Avg.: 5.52883391598154 -->> Std. Dev.: 0.1337711400888348
Aug 30, 2024 11:19:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.454204646081928; Expression=99*Math.pow(10,-1)+u7(k)-u3(k)-u5(k)+u8(k)-56*Math.pow(10,-4)*u1(k)-97*Math.pow(10,-3)*u7(k); Java Expression: 99*Math.pow(10,-1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-56*Math.pow(10,-4)*getVariable(1,k)-97*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 11:20:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.418049237031345; Expression=99*Math.pow(10,-1)+u7(k)-u3(k)-u5(k)+u8(k)-56*Math.pow(10,-3)*u1(k)-57*Math.pow(10,-3)*u7(k); Java Expression: 99*Math.pow(10,-1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-56*Math.pow(10,-3)*getVariable(1,k)-57*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 11:20:56 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.418049237031345 -->> Avg.: 5.462740904332113 -->> Std. Dev.: 0.02264054865002019
Aug 30, 2024 11:21:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.416591098374283; Expression=1*Math.pow(10,+1)+u7(k)-u3(k)-u5(k)+u8(k)-56*Math.pow(10,-3)*u1(k)-57*Math.pow(10,-3)*u7(k); Java Expression: 1*Math.pow(10,+1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-56*Math.pow(10,-3)*getVariable(1,k)-57*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 11:21:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.415451391942429; Expression=1*Math.pow(10,+1)+u7(k)-u3(k)-u5(k)+u8(k)-57*Math.pow(10,-3)*u1(k)-57*Math.pow(10,-3)*u7(k); Java Expression: 1*Math.pow(10,+1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-57*Math.pow(10,-3)*getVariable(1,k)-57*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 11:22:19 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 5.415451391942429 -->> Avg.: 5.447309468421841 -->> Std. Dev.: 0.019320757463436665
Aug 30, 2024 11:23:42 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 5.415451391942429 -->> Avg.: 5.437821989535776 -->> Std. Dev.: 0.020663367232462322

Execution time: 781.85 seconds.



@@;1*Math.pow(10,+1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-57*Math.pow(10,-3)*getVariable(1,k)-57*Math.pow(10,-3)*getVariable(7,k)



Run #4
========
Aug 30, 2024 11:23:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.900003625995554E9; Expression=79*Math.pow(10,+8)+u9(k)+u9(k)+u7(k)*u5(k)+u1(k); Java Expression: 79*Math.pow(10,+8)+getVariable(9,k)+getVariable(9,k)+getVariable(7,k)*getVariable(5,k)+getVariable(1,k)
Aug 30, 2024 11:23:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=9171.908274375312; Expression=60*Math.pow(10,-8)*u8(k)-u7(k)*u1(k); Java Expression: 60*Math.pow(10,-8)*getVariable(8,k)-getVariable(7,k)*getVariable(1,k)
Aug 30, 2024 11:23:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=1858.3637801506056; Expression=u9(k)*u9(k); Java Expression: getVariable(9,k)*getVariable(9,k)
Aug 30, 2024 11:23:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=253.97380049357207; Expression=71*Math.pow(10,-1)*u9(k); Java Expression: 71*Math.pow(10,-1)*getVariable(9,k)
Aug 30, 2024 11:23:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=44.91581557841163; Expression=u4(k)+u3(k); Java Expression: getVariable(4,k)+getVariable(3,k)
Aug 30, 2024 11:23:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=31.328305430135035; Expression=u4(k)-u4(k)*u8(k)+u5(k); Java Expression: getVariable(4,k)-getVariable(4,k)*getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 11:23:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.39803196108352; Expression=62*Math.pow(10,-5)*11*Math.pow(10,-4)+u4(k); Java Expression: 62*Math.pow(10,-5)*11*Math.pow(10,-4)+getVariable(4,k)
Aug 30, 2024 11:23:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 11:23:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.109192757834533; Expression=36*Math.pow(10,-4)*u4(k)+u7(k)-u5(k)+u9(k)-u9(k)-u4(k); Java Expression: 36*Math.pow(10,-4)*getVariable(4,k)+getVariable(7,k)-getVariable(5,k)+getVariable(9,k)-getVariable(9,k)-getVariable(4,k)
Aug 30, 2024 11:23:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837858; Expression=u7(k)-u5(k)+u9(k)-u9(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(9,k)-getVariable(9,k)-getVariable(4,k)
Aug 30, 2024 11:24:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.045836244896483; Expression=64*Math.pow(10,-2)+u7(k)-u5(k)-u3(k); Java Expression: 64*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:24:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.042698865023899; Expression=68*Math.pow(10,-2)+u7(k)-u5(k)-u3(k); Java Expression: 68*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:24:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.029068753233574; Expression=93*Math.pow(10,-2)+u7(k)-u5(k)-u3(k); Java Expression: 93*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:24:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.027336106531899; Expression=99*Math.pow(10,-2)+u7(k)-u5(k)-u3(k); Java Expression: 99*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:24:44 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 6.027336106531899 -->> Avg.: 2055805.1743504908 -->> Std. Dev.: 9017507.838603359
Aug 30, 2024 11:24:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.027210480349788; Expression=36*Math.pow(10,-4)*u4(k)+99*Math.pow(10,-2)+u7(k)-u5(k)-u3(k); Java Expression: 36*Math.pow(10,-4)*getVariable(4,k)+99*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:24:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.024700166679321; Expression=36*Math.pow(10,-4)*u3(k)+99*Math.pow(10,-2)+u7(k)-u5(k)-u3(k); Java Expression: 36*Math.pow(10,-4)*getVariable(3,k)+99*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:24:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.023225957775772; Expression=99*Math.pow(10,-4)*u3(k)+77*Math.pow(10,-2)+u7(k)-u5(k)-u3(k); Java Expression: 99*Math.pow(10,-4)*getVariable(3,k)+77*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:25:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.023211939961896; Expression=99*Math.pow(10,-4)*u3(k)+72*Math.pow(10,-2)+u7(k)-u5(k)-u3(k); Java Expression: 99*Math.pow(10,-4)*getVariable(3,k)+72*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:25:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.023189949310828; Expression=99*Math.pow(10,-4)*u3(k)+76*Math.pow(10,-2)+u7(k)-u5(k)-u3(k); Java Expression: 99*Math.pow(10,-4)*getVariable(3,k)+76*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:25:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.023167739619186; Expression=99*Math.pow(10,-4)*u3(k)+74*Math.pow(10,-2)+u7(k)-u5(k)-u3(k); Java Expression: 99*Math.pow(10,-4)*getVariable(3,k)+74*Math.pow(10,-2)+getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:25:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.721857687721986; Expression=74*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: 74*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:25:52 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.721857687721986 -->> Avg.: 2584.5608313635453 -->> Std. Dev.: 7378.770362810905
Aug 30, 2024 11:26:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.626795626081499; Expression=72*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: 72*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:27:12 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.626795626081499 -->> Avg.: 154.704425418779 -->> Std. Dev.: 442.3466461407426
Aug 30, 2024 11:27:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.620736948008663; Expression=71*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: 71*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:27:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.619699522204323; Expression=36*Math.pow(10,-4)*u3(k)+71*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: 36*Math.pow(10,-4)*getVariable(3,k)+71*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:27:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.611678936916388; Expression=36*Math.pow(10,-4)*u7(k)+71*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: 36*Math.pow(10,-4)*getVariable(7,k)+71*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:27:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.513406253971489; Expression=74*Math.pow(10,-2)*u8(k)+71*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: 74*Math.pow(10,-2)*getVariable(8,k)+71*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:28:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.512974729995521; Expression=72*Math.pow(10,-2)*u8(k)+71*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: 72*Math.pow(10,-2)*getVariable(8,k)+71*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:28:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.512828975037448; Expression=71*Math.pow(10,-2)*u8(k)+71*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: 71*Math.pow(10,-2)*getVariable(8,k)+71*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:28:22 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.512828975037448 -->> Avg.: 16.77051228517159 -->> Std. Dev.: 25.316978389930995
Aug 30, 2024 11:28:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.512828975037447; Expression=71*Math.pow(10,-2)*u8(k)+71*Math.pow(10,-2)*u3(k)+u6(k)-u6(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: 71*Math.pow(10,-2)*getVariable(8,k)+71*Math.pow(10,-2)*getVariable(3,k)+getVariable(6,k)-getVariable(6,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:28:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.512800383060828; Expression=66*Math.pow(10,-2)*u8(k)+71*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: 66*Math.pow(10,-2)*getVariable(8,k)+71*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:28:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5126774976909685; Expression=69*Math.pow(10,-2)*u8(k)+71*Math.pow(10,-2)*u3(k)+u6(k)-u6(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: 69*Math.pow(10,-2)*getVariable(8,k)+71*Math.pow(10,-2)*getVariable(3,k)+getVariable(6,k)-getVariable(6,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:28:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4329352427317765; Expression=71*Math.pow(10,-2)*u8(k)+69*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: 71*Math.pow(10,-2)*getVariable(8,k)+69*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:29:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.426981963202771; Expression=74*Math.pow(10,-2)*u8(k)+69*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: 74*Math.pow(10,-2)*getVariable(8,k)+69*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:29:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4269819632027705; Expression=74*Math.pow(10,-2)*u8(k)+69*Math.pow(10,-2)*u3(k)+u6(k)-u6(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: 74*Math.pow(10,-2)*getVariable(8,k)+69*Math.pow(10,-2)*getVariable(3,k)+getVariable(6,k)-getVariable(6,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:29:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.393839153587756; Expression=99*Math.pow(10,-2)*u8(k)+69*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: 99*Math.pow(10,-2)*getVariable(8,k)+69*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:29:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.393129542021396; Expression=10*Math.pow(10,-1)*u8(k)+69*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: 10*Math.pow(10,-1)*getVariable(8,k)+69*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:29:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.39287884051301; Expression=u7(k)*u8(k)*34*Math.pow(10,-6)+u8(k)+69*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(7,k)*getVariable(8,k)*34*Math.pow(10,-6)+getVariable(8,k)+69*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:29:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.392627274011013; Expression=u7(k)*u8(k)*69*Math.pow(10,-6)+u8(k)+69*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(7,k)*getVariable(8,k)*69*Math.pow(10,-6)+getVariable(8,k)+69*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:29:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3926130982360725; Expression=u7(k)*u8(k)*71*Math.pow(10,-6)+u8(k)+69*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(7,k)*getVariable(8,k)*71*Math.pow(10,-6)+getVariable(8,k)+69*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:29:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3924854058591345; Expression=u6(k)*u8(k)*71*Math.pow(10,-6)+u8(k)+69*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*71*Math.pow(10,-6)+getVariable(8,k)+69*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:29:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.392458678891623; Expression=u6(k)*u8(k)*74*Math.pow(10,-6)+u8(k)+69*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*74*Math.pow(10,-6)+getVariable(8,k)+69*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:29:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3924169016500425; Expression=u7(k)*u8(k)*99*Math.pow(10,-6)+u8(k)+69*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(7,k)*getVariable(8,k)*99*Math.pow(10,-6)+getVariable(8,k)+69*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:29:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.391614414803739; Expression=u7(k)*u8(k)*69*Math.pow(10,-6)+u8(k)+66*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(7,k)*getVariable(8,k)*69*Math.pow(10,-6)+getVariable(8,k)+66*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:29:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.38860692621861; Expression=u6(k)*u8(k)*36*Math.pow(10,-4)+u8(k)+69*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*36*Math.pow(10,-4)+getVariable(8,k)+69*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:29:39 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.38860692621861 -->> Avg.: 5.9691106718196965 -->> Std. Dev.: 1.2818365841082653
Aug 30, 2024 11:29:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.388606926218609; Expression=u6(k)*u8(k)*36*Math.pow(10,-4)+u8(k)+69*Math.pow(10,-2)*u3(k)+u6(k)-u6(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*36*Math.pow(10,-4)+getVariable(8,k)+69*Math.pow(10,-2)*getVariable(3,k)+getVariable(6,k)-getVariable(6,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:29:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.362224161896578; Expression=u6(k)*u8(k)*36*Math.pow(10,-4)*u8(k)+69*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*36*Math.pow(10,-4)*getVariable(8,k)+69*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:29:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.221778255366436; Expression=u6(k)*u8(k)*69*Math.pow(10,-4)*u8(k)+69*Math.pow(10,-2)*u3(k)+u6(k)-u6(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*69*Math.pow(10,-4)*getVariable(8,k)+69*Math.pow(10,-2)*getVariable(3,k)+getVariable(6,k)-getVariable(6,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:29:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2186120527540885; Expression=u6(k)*u8(k)*71*Math.pow(10,-4)*u8(k)+69*Math.pow(10,-2)*u3(k)+u6(k)-u6(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*71*Math.pow(10,-4)*getVariable(8,k)+69*Math.pow(10,-2)*getVariable(3,k)+getVariable(6,k)-getVariable(6,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:29:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.215031024915296; Expression=u6(k)*u8(k)*74*Math.pow(10,-4)*u8(k)+69*Math.pow(10,-2)*u3(k)+u6(k)-u6(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*74*Math.pow(10,-4)*getVariable(8,k)+69*Math.pow(10,-2)*getVariable(3,k)+getVariable(6,k)-getVariable(6,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:30:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.158105856289664; Expression=u6(k)*u8(k)*74*Math.pow(10,-4)*u8(k)+66*Math.pow(10,-2)*u3(k)+u6(k)-u6(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*74*Math.pow(10,-4)*getVariable(8,k)+66*Math.pow(10,-2)*getVariable(3,k)+getVariable(6,k)-getVariable(6,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:30:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.158105856289662; Expression=u6(k)*u8(k)*74*Math.pow(10,-4)*u8(k)+66*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*74*Math.pow(10,-4)*getVariable(8,k)+66*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:30:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.147540692271482; Expression=u7(k)*u8(k)*74*Math.pow(10,-4)*u8(k)+66*Math.pow(10,-2)*u3(k)+u6(k)-u6(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(7,k)*getVariable(8,k)*74*Math.pow(10,-4)*getVariable(8,k)+66*Math.pow(10,-2)*getVariable(3,k)+getVariable(6,k)-getVariable(6,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:30:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.04588022564033; Expression=u6(k)*u8(k)*99*Math.pow(10,-4)*u8(k)+66*Math.pow(10,-2)*u3(k)+u6(k)-u6(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*99*Math.pow(10,-4)*getVariable(8,k)+66*Math.pow(10,-2)*getVariable(3,k)+getVariable(6,k)-getVariable(6,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:30:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.045388078923782; Expression=u6(k)*u8(k)*99*Math.pow(10,-4)*u8(k)+66*Math.pow(10,-2)*u3(k)+74*Math.pow(10,-4)*u8(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*99*Math.pow(10,-4)*getVariable(8,k)+66*Math.pow(10,-2)*getVariable(3,k)+74*Math.pow(10,-4)*getVariable(8,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:30:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.045228114269036; Expression=u6(k)*u8(k)*99*Math.pow(10,-4)*u8(k)+66*Math.pow(10,-2)*u3(k)+99*Math.pow(10,-4)*u8(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*99*Math.pow(10,-4)*getVariable(8,k)+66*Math.pow(10,-2)*getVariable(3,k)+99*Math.pow(10,-4)*getVariable(8,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:30:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.041607020316458; Expression=u6(k)*u8(k)*99*Math.pow(10,-4)*u8(k)+66*Math.pow(10,-2)*u3(k)+99*Math.pow(10,-3)*u8(k)+74*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*99*Math.pow(10,-4)*getVariable(8,k)+66*Math.pow(10,-2)*getVariable(3,k)+99*Math.pow(10,-3)*getVariable(8,k)+74*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:30:58 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.041607020316458 -->> Avg.: 5.5670117086733715 -->> Std. Dev.: 0.3001803387646601
Aug 30, 2024 11:31:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.960580522179151; Expression=u6(k)*u8(k)*99*Math.pow(10,-4)*u8(k)+66*Math.pow(10,-2)*u3(k)+99*Math.pow(10,-2)*u8(k)+72*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*99*Math.pow(10,-4)*getVariable(8,k)+66*Math.pow(10,-2)*getVariable(3,k)+99*Math.pow(10,-2)*getVariable(8,k)+72*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:31:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9585877198767045; Expression=u6(k)*u8(k)*99*Math.pow(10,-4)*u8(k)+66*Math.pow(10,-2)*u3(k)+10*Math.pow(10,-1)*u8(k)+72*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*99*Math.pow(10,-4)*getVariable(8,k)+66*Math.pow(10,-2)*getVariable(3,k)+10*Math.pow(10,-1)*getVariable(8,k)+72*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:32:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.958579498540502; Expression=u6(k)*u8(k)*99*Math.pow(10,-4)*u8(k)+66*Math.pow(10,-2)*u3(k)+99*Math.pow(10,-6)+u8(k)+72*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*99*Math.pow(10,-4)*getVariable(8,k)+66*Math.pow(10,-2)*getVariable(3,k)+99*Math.pow(10,-6)+getVariable(8,k)+72*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:32:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9577753044101405; Expression=u6(k)*u8(k)*99*Math.pow(10,-4)*u8(k)+66*Math.pow(10,-2)*u3(k)+99*Math.pow(10,-4)+u8(k)+72*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*99*Math.pow(10,-4)*getVariable(8,k)+66*Math.pow(10,-2)*getVariable(3,k)+99*Math.pow(10,-4)+getVariable(8,k)+72*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:32:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.951348403089993; Expression=u6(k)*u8(k)*99*Math.pow(10,-4)*u8(k)+66*Math.pow(10,-2)*u3(k)+99*Math.pow(10,-3)+u8(k)+72*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*99*Math.pow(10,-4)*getVariable(8,k)+66*Math.pow(10,-2)*getVariable(3,k)+99*Math.pow(10,-3)+getVariable(8,k)+72*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:32:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9492795417066064; Expression=u6(k)*u8(k)*99*Math.pow(10,-4)*u8(k)+66*Math.pow(10,-2)*u3(k)+69*Math.pow(10,-2)+u8(k)+72*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*99*Math.pow(10,-4)*getVariable(8,k)+66*Math.pow(10,-2)*getVariable(3,k)+69*Math.pow(10,-2)+getVariable(8,k)+72*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:32:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.947684077375003; Expression=u6(k)*u8(k)*99*Math.pow(10,-4)*u8(k)+66*Math.pow(10,-2)*u3(k)+66*Math.pow(10,-2)+u8(k)+72*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*99*Math.pow(10,-4)*getVariable(8,k)+66*Math.pow(10,-2)*getVariable(3,k)+66*Math.pow(10,-2)+getVariable(8,k)+72*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:32:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.941727957410897; Expression=u6(k)*u8(k)*99*Math.pow(10,-4)*u8(k)+66*Math.pow(10,-2)*u3(k)+36*Math.pow(10,-2)+u8(k)+72*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*99*Math.pow(10,-4)*getVariable(8,k)+66*Math.pow(10,-2)*getVariable(3,k)+36*Math.pow(10,-2)+getVariable(8,k)+72*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:32:21 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.941727957410897 -->> Avg.: 5.363933302934791 -->> Std. Dev.: 0.2729835661553093
Aug 30, 2024 11:32:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.941480520502433; Expression=u6(k)*u8(k)*99*Math.pow(10,-4)*u8(k)+66*Math.pow(10,-2)*u3(k)+11*Math.pow(10,-1)*u8(k)+72*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*99*Math.pow(10,-4)*getVariable(8,k)+66*Math.pow(10,-2)*getVariable(3,k)+11*Math.pow(10,-1)*getVariable(8,k)+72*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:32:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.924982455412191; Expression=u6(k)*u8(k)*99*Math.pow(10,-4)*u8(k)+66*Math.pow(10,-2)*u3(k)+15*Math.pow(10,-1)*u8(k)+72*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*99*Math.pow(10,-4)*getVariable(8,k)+66*Math.pow(10,-2)*getVariable(3,k)+15*Math.pow(10,-1)*getVariable(8,k)+72*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:32:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.908664683402026; Expression=u6(k)*u8(k)*99*Math.pow(10,-4)*u8(k)+65*Math.pow(10,-2)*u3(k)+15*Math.pow(10,-1)*u8(k)+72*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*99*Math.pow(10,-4)*getVariable(8,k)+65*Math.pow(10,-2)*getVariable(3,k)+15*Math.pow(10,-1)*getVariable(8,k)+72*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:33:52 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.908664683402026 -->> Avg.: 5.21862698873437 -->> Std. Dev.: 0.27270376016489567
Aug 30, 2024 11:34:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9086646834020256; Expression=u6(k)*u8(k)*99*Math.pow(10,-4)*u8(k)+65*Math.pow(10,-2)*u3(k)+15*Math.pow(10,-1)*u8(k)+72*Math.pow(10,-2)*u7(k)-u3(k)-u5(k); Java Expression: getVariable(6,k)*getVariable(8,k)*99*Math.pow(10,-4)*getVariable(8,k)+65*Math.pow(10,-2)*getVariable(3,k)+15*Math.pow(10,-1)*getVariable(8,k)+72*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 30, 2024 11:34:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9065023511288555; Expression=u6(k)*u8(k)*99*Math.pow(10,-4)*u8(k)+65*Math.pow(10,-2)*u3(k)+u8(k)*u8(k)+72*Math.pow(10,-2)*u7(k)-u3(k)-u5(k); Java Expression: getVariable(6,k)*getVariable(8,k)*99*Math.pow(10,-4)*getVariable(8,k)+65*Math.pow(10,-2)*getVariable(3,k)+getVariable(8,k)*getVariable(8,k)+72*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 30, 2024 11:35:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.896619958175996; Expression=u6(k)*u8(k)*90*Math.pow(10,-4)*u8(k)+65*Math.pow(10,-2)*u3(k)+u8(k)*u8(k)+72*Math.pow(10,-2)*u7(k)-u3(k)-u5(k); Java Expression: getVariable(6,k)*getVariable(8,k)*90*Math.pow(10,-4)*getVariable(8,k)+65*Math.pow(10,-2)*getVariable(3,k)+getVariable(8,k)*getVariable(8,k)+72*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 30, 2024 11:35:26 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.896619958175996 -->> Avg.: 5.084222150195817 -->> Std. Dev.: 0.21761100259788196
Aug 30, 2024 11:35:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.896549558603201; Expression=u6(k)*u8(k)*86*Math.pow(10,-4)*u8(k)+65*Math.pow(10,-2)*u3(k)+u8(k)*u8(k)+72*Math.pow(10,-2)*u7(k)-u3(k)-u5(k); Java Expression: getVariable(6,k)*getVariable(8,k)*86*Math.pow(10,-4)*getVariable(8,k)+65*Math.pow(10,-2)*getVariable(3,k)+getVariable(8,k)*getVariable(8,k)+72*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 30, 2024 11:36:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.8965495586032; Expression=u6(k)*u8(k)*86*Math.pow(10,-4)*u8(k)+65*Math.pow(10,-2)*u3(k)+u8(k)*u8(k)+72*Math.pow(10,-2)*u7(k)-u5(k)-u3(k); Java Expression: getVariable(6,k)*getVariable(8,k)*86*Math.pow(10,-4)*getVariable(8,k)+65*Math.pow(10,-2)*getVariable(3,k)+getVariable(8,k)*getVariable(8,k)+72*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 30, 2024 11:36:51 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.8965495586032 -->> Avg.: 4.972481643298437 -->> Std. Dev.: 0.11060365568061724

Execution time: 788.891 seconds.



@@;getVariable(6,k)*getVariable(8,k)*86*Math.pow(10,-4)*getVariable(8,k)+65*Math.pow(10,-2)*getVariable(3,k)+getVariable(8,k)*getVariable(8,k)+72*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k)



Run #5
========
Aug 30, 2024 11:36:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=66.45296887526666; Expression=79*Math.pow(10,+2)*54*Math.pow(10,-5)-u4(k); Java Expression: 79*Math.pow(10,+2)*54*Math.pow(10,-5)-getVariable(4,k)
Aug 30, 2024 11:36:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=19.603447649030564; Expression=u1(k)-u4(k)+32*Math.pow(10,-6)*37*Math.pow(10,+2)*u8(k)-u8(k); Java Expression: getVariable(1,k)-getVariable(4,k)+32*Math.pow(10,-6)*37*Math.pow(10,+2)*getVariable(8,k)-getVariable(8,k)
Aug 30, 2024 11:36:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=12.8690551574372; Expression=u3(k)+u8(k); Java Expression: getVariable(3,k)+getVariable(8,k)
Aug 30, 2024 11:36:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 11:36:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.989530557625402; Expression=65*Math.pow(10,-3)-55*Math.pow(10,-2)-u5(k)+u7(k)-u4(k); Java Expression: 65*Math.pow(10,-3)-55*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 11:36:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9845220149263705; Expression=29*Math.pow(10,-3)-55*Math.pow(10,-2)-u5(k)+u7(k)-u4(k); Java Expression: 29*Math.pow(10,-3)-55*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 11:36:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.982631618895565; Expression=15*Math.pow(10,-3)-55*Math.pow(10,-2)-u5(k)+u7(k)-u4(k); Java Expression: 15*Math.pow(10,-3)-55*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 11:36:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.980652544181087; Expression=81*Math.pow(10,-6)-55*Math.pow(10,-2)-u5(k)+u7(k)-u4(k); Java Expression: 81*Math.pow(10,-6)-55*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 11:37:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.98064347594875; Expression=12*Math.pow(10,-6)-55*Math.pow(10,-2)-u5(k)+u7(k)-u4(k); Java Expression: 12*Math.pow(10,-6)-55*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 11:37:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.980641919971281; Expression=16*Math.pow(10,-8)-55*Math.pow(10,-2)-u5(k)+u7(k)-u4(k); Java Expression: 16*Math.pow(10,-8)-55*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 11:37:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.980641901967296; Expression=23*Math.pow(10,-9)-55*Math.pow(10,-2)-u5(k)+u7(k)-u4(k); Java Expression: 23*Math.pow(10,-9)-55*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 11:37:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.94068663413583; Expression=81*Math.pow(10,-6)-96*Math.pow(10,-2)-u5(k)+u7(k)-u4(k); Java Expression: 81*Math.pow(10,-6)-96*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 11:37:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9406856213905055; Expression=65*Math.pow(10,-6)-96*Math.pow(10,-2)-u5(k)+u7(k)-u4(k); Java Expression: 65*Math.pow(10,-6)-96*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 11:37:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.938863165371674; Expression=81*Math.pow(10,-6)-99*Math.pow(10,-2)-u5(k)+u7(k)-u4(k); Java Expression: 81*Math.pow(10,-6)-99*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 11:37:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.938858449880423; Expression=60*Math.pow(10,-9)-99*Math.pow(10,-2)-u5(k)+u7(k)-u4(k); Java Expression: 60*Math.pow(10,-9)-99*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 11:37:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9388584481328515; Expression=3*Math.pow(10,-8)-99*Math.pow(10,-2)-u5(k)+u7(k)-u4(k); Java Expression: 3*Math.pow(10,-8)-99*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 11:37:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.938858447317319; Expression=16*Math.pow(10,-9)-99*Math.pow(10,-2)-u5(k)+u7(k)-u4(k); Java Expression: 16*Math.pow(10,-9)-99*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 11:37:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928773707462415; Expression=65*Math.pow(10,-3)-14*Math.pow(10,-1)-u5(k)+u7(k)-u4(k); Java Expression: 65*Math.pow(10,-3)-14*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 11:37:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928773631201596; Expression=64*Math.pow(10,-3)-14*Math.pow(10,-1)-u5(k)+u7(k)-u4(k); Java Expression: 64*Math.pow(10,-3)-14*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 11:37:39 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.928773631201596 -->> Avg.: 3191240.0085482756 -->> Std. Dev.: 1.2638865825255934E7
Aug 30, 2024 11:38:29 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.928773631201596 -->> Avg.: 6257.530644728325 -->> Std. Dev.: 20804.537595351176
Aug 30, 2024 11:39:21 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.928773631201596 -->> Avg.: 229.8059521207455 -->> Std. Dev.: 662.182207829428
Aug 30, 2024 11:40:13 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.928773631201596 -->> Avg.: 17.063180284971462 -->> Std. Dev.: 25.39792222811578
Aug 30, 2024 11:41:06 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.928773631201596 -->> Avg.: 6.138159295160872 -->> Std. Dev.: 1.2465960734648156
Aug 30, 2024 11:41:58 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.928773631201596 -->> Avg.: 5.928773631201596 -->> Std. Dev.: 0.0
Aug 30, 2024 11:41:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9287736312015955; Expression=64*Math.pow(10,-3)-14*Math.pow(10,-1)+u7(k)-u5(k)-u4(k); Java Expression: 64*Math.pow(10,-3)-14*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)
Aug 30, 2024 11:42:50 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.9287736312015955 -->> Avg.: 5.928773631201596 -->> Std. Dev.: 3.495872828833309E-16
Aug 30, 2024 11:43:56 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.9287736312015955 -->> Avg.: 5.928773631201596 -->> Std. Dev.: 4.3275275010254854E-16
Aug 30, 2024 11:45:22 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 5.9287736312015955 -->> Avg.: 5.9287736312015955 -->> Std. Dev.: 4.3828583613431264E-16
Aug 30, 2024 11:46:58 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 5.9287736312015955 -->> Avg.: 5.9287736312015955 -->> Std. Dev.: 3.6968887278041545E-16

Execution time: 607.156 seconds.



@@;64*Math.pow(10,-3)-14*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k)



Run #6
========
Aug 30, 2024 11:47:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=2.0404474642362887E8; Expression=55*Math.pow(10,+5)*u4(k)-15*Math.pow(10,+1)+72*Math.pow(10,-3)-u7(k); Java Expression: 55*Math.pow(10,+5)*getVariable(4,k)-15*Math.pow(10,+1)+72*Math.pow(10,-3)-getVariable(7,k)
Aug 30, 2024 11:47:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=38.93958497086627; Expression=57*Math.pow(10,-4)+u7(k)-u5(k); Java Expression: 57*Math.pow(10,-4)+getVariable(7,k)-getVariable(5,k)
Aug 30, 2024 11:47:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.731668056345766; Expression=u4(k)+u8(k); Java Expression: getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 11:47:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330471369773397; Expression=36*Math.pow(10,-8)+u5(k); Java Expression: 36*Math.pow(10,-8)+getVariable(5,k)
Aug 30, 2024 11:47:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.049838760801896; Expression=16*Math.pow(10,-4)*u4(k)+u8(k)+u5(k); Java Expression: 16*Math.pow(10,-4)*getVariable(4,k)+getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 11:47:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 11:47:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077482448225881; Expression=25*Math.pow(10,-5)-u4(k)+u1(k)-u1(k)-u5(k)+u7(k); Java Expression: 25*Math.pow(10,-5)-getVariable(4,k)+getVariable(1,k)-getVariable(1,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 11:47:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077442875759989; Expression=7*Math.pow(10,-5)-u4(k)+u1(k)-u1(k)-u5(k)+u7(k); Java Expression: 7*Math.pow(10,-5)-getVariable(4,k)+getVariable(1,k)-getVariable(1,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 11:47:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427549388014; Expression=28*Math.pow(10,-8)-u4(k)+u1(k)-u1(k)-u5(k)+u7(k); Java Expression: 28*Math.pow(10,-8)-getVariable(4,k)+getVariable(1,k)-getVariable(1,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 11:47:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427542793354; Expression=25*Math.pow(10,-8)-u4(k)+u1(k)-u1(k)-u5(k)+u7(k); Java Expression: 25*Math.pow(10,-8)-getVariable(4,k)+getVariable(1,k)-getVariable(1,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 11:47:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427503225398; Expression=7*Math.pow(10,-8)-u4(k)+u1(k)-u1(k)-u5(k)+u7(k); Java Expression: 7*Math.pow(10,-8)-getVariable(4,k)+getVariable(1,k)-getVariable(1,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 11:47:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.07742749333341; Expression=25*Math.pow(10,-9)-u4(k)+u1(k)-u1(k)-u5(k)+u7(k); Java Expression: 25*Math.pow(10,-9)-getVariable(4,k)+getVariable(1,k)-getVariable(1,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 11:47:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427490036076; Expression=1*Math.pow(10,-8)-u4(k)+u1(k)-u1(k)-u5(k)+u7(k); Java Expression: 1*Math.pow(10,-8)-getVariable(4,k)+getVariable(1,k)-getVariable(1,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 11:47:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427489376608; Expression=7*Math.pow(10,-9)-u4(k)+u1(k)-u1(k)-u5(k)+u7(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)+getVariable(1,k)-getVariable(1,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 11:47:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0774274880576815; Expression=1*Math.pow(10,-9)-u4(k)+u1(k)-u1(k)-u5(k)+u7(k); Java Expression: 1*Math.pow(10,-9)-getVariable(4,k)+getVariable(1,k)-getVariable(1,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 11:47:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427488057681; Expression=1*Math.pow(10,-9)-u4(k)+u2(k)-u2(k)-u5(k)+u7(k); Java Expression: 1*Math.pow(10,-9)-getVariable(4,k)+getVariable(2,k)-getVariable(2,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 11:47:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.07742748805768; Expression=1*Math.pow(10,-9)-u4(k)+u7(k)-u5(k); Java Expression: 1*Math.pow(10,-9)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 30, 2024 11:47:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388946502078; Expression=u8(k)-u3(k)+u7(k)-u5(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)
Aug 30, 2024 11:48:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388874636838; Expression=u8(k)-u3(k)+u7(k)-u5(k)-97*Math.pow(10,-8)*u8(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-97*Math.pow(10,-8)*getVariable(8,k)
Aug 30, 2024 11:48:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9923202298998275; Expression=u8(k)-u3(k)+u7(k)-u5(k)-93*Math.pow(10,-5)*u8(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-93*Math.pow(10,-5)*getVariable(8,k)
Aug 30, 2024 11:48:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.987286246045996; Expression=u8(k)-u3(k)+u7(k)-u5(k)-95*Math.pow(10,-3)*u8(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-95*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 11:48:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.981923425180441; Expression=u8(k)-u3(k)+u7(k)-u5(k)-56*Math.pow(10,-2)-u1(k)-u6(k)*5*Math.pow(10,-5)+u1(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-56*Math.pow(10,-2)-getVariable(1,k)-getVariable(6,k)*5*Math.pow(10,-5)+getVariable(1,k)
Aug 30, 2024 11:48:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.980957838146237; Expression=u8(k)-u3(k)+u7(k)-u5(k)-93*Math.pow(10,-5)*u7(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-93*Math.pow(10,-5)*getVariable(7,k)
Aug 30, 2024 11:48:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.980117577891596; Expression=u8(k)-u3(k)+u7(k)-u5(k)-56*Math.pow(10,-2)-u1(k)-u6(k)*90*Math.pow(10,-5)+u1(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-56*Math.pow(10,-2)-getVariable(1,k)-getVariable(6,k)*90*Math.pow(10,-5)+getVariable(1,k)
Aug 30, 2024 11:48:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.980074785873837; Expression=u8(k)-u3(k)+u7(k)-u5(k)-56*Math.pow(10,-2)-u1(k)-u6(k)*93*Math.pow(10,-5)+u1(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-56*Math.pow(10,-2)-getVariable(1,k)-getVariable(6,k)*93*Math.pow(10,-5)+getVariable(1,k)
Aug 30, 2024 11:48:24 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.980074785873837 -->> Avg.: 2282382.257149579 -->> Std. Dev.: 1.0671655189283272E7
Aug 30, 2024 11:48:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.950930247506583; Expression=u8(k)-u3(k)+u7(k)-u5(k)-47*Math.pow(10,-4)*u7(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-47*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:48:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.950073193788433; Expression=u8(k)-u3(k)+u7(k)-u5(k)-49*Math.pow(10,-4)*u7(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-49*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:48:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.947660040677526; Expression=u8(k)-u3(k)+u7(k)-u5(k)-56*Math.pow(10,-4)*u7(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-56*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:48:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.94632238593759; Expression=u8(k)-u3(k)+u7(k)-u5(k)-80*Math.pow(10,-4)*u7(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-80*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:48:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.942749411678481; Expression=u8(k)-u3(k)+u7(k)-u5(k)-47*Math.pow(10,-4)*u1(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-47*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:48:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.936066400647603; Expression=u8(k)-u3(k)+u7(k)-u5(k)-56*Math.pow(10,-4)*u1(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-56*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:48:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.922314888583487; Expression=u8(k)-u3(k)+u7(k)-u5(k)-81*Math.pow(10,-4)*u1(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-81*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:48:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.916096151774359; Expression=u8(k)-u3(k)+u7(k)-u5(k)-56*Math.pow(10,-4)*u1(k)-47*Math.pow(10,-4)*u1(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-56*Math.pow(10,-4)*getVariable(1,k)-47*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:48:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.915018331038967; Expression=u8(k)-u3(k)+u7(k)-u5(k)-56*Math.pow(10,-4)*u1(k)-60*Math.pow(10,-4)*u1(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-56*Math.pow(10,-4)*getVariable(1,k)-60*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:48:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.862046649315006; Expression=1*Math.pow(10,-9)-u4(k)+u7(k)-u5(k)-56*Math.pow(10,-4)*u1(k)-60*Math.pow(10,-4)*u1(k); Java Expression: 1*Math.pow(10,-9)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-56*Math.pow(10,-4)*getVariable(1,k)-60*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:48:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.838877872356345; Expression=1*Math.pow(10,-9)-u4(k)+u7(k)-u5(k)-56*Math.pow(10,-4)*u1(k)-81*Math.pow(10,-4)*u1(k); Java Expression: 1*Math.pow(10,-9)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-56*Math.pow(10,-4)*getVariable(1,k)-81*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:48:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.833179874077223; Expression=1*Math.pow(10,-9)-u4(k)+u7(k)-u5(k)-56*Math.pow(10,-4)*u1(k)-87*Math.pow(10,-4)*u1(k); Java Expression: 1*Math.pow(10,-9)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-56*Math.pow(10,-4)*getVariable(1,k)-87*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:48:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.829609984768092; Expression=1*Math.pow(10,-9)-u4(k)+u7(k)-u5(k)-60*Math.pow(10,-4)*u1(k)-87*Math.pow(10,-4)*u1(k); Java Expression: 1*Math.pow(10,-9)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-60*Math.pow(10,-4)*getVariable(1,k)-87*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:48:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.823020774097694; Expression=1*Math.pow(10,-9)-u4(k)+u7(k)-u5(k)-95*Math.pow(10,-4)*u1(k)-60*Math.pow(10,-4)*u1(k); Java Expression: 1*Math.pow(10,-9)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-95*Math.pow(10,-4)*getVariable(1,k)-60*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:48:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.822248834424924; Expression=1*Math.pow(10,-9)-u4(k)+u7(k)-u5(k)-96*Math.pow(10,-4)*u1(k)-60*Math.pow(10,-4)*u1(k); Java Expression: 1*Math.pow(10,-9)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-96*Math.pow(10,-4)*getVariable(1,k)-60*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:48:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8062294241642975; Expression=1*Math.pow(10,-9)-u4(k)+u7(k)-u5(k)-95*Math.pow(10,-4)*u1(k)-87*Math.pow(10,-4)*u1(k); Java Expression: 1*Math.pow(10,-9)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-95*Math.pow(10,-4)*getVariable(1,k)-87*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:48:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.806229422361983; Expression=93*Math.pow(10,-9)-u4(k)+u7(k)-u5(k)-95*Math.pow(10,-4)*u1(k)-87*Math.pow(10,-4)*u1(k); Java Expression: 93*Math.pow(10,-9)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-95*Math.pow(10,-4)*getVariable(1,k)-87*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:48:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.806114981096159; Expression=60*Math.pow(10,-4)-u4(k)+u7(k)-u5(k)-95*Math.pow(10,-4)*u1(k)-87*Math.pow(10,-4)*u1(k); Java Expression: 60*Math.pow(10,-4)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-95*Math.pow(10,-4)*getVariable(1,k)-87*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:49:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.806054679367657; Expression=93*Math.pow(10,-4)-u4(k)+u7(k)-u5(k)-95*Math.pow(10,-4)*u1(k)-87*Math.pow(10,-4)*u1(k); Java Expression: 93*Math.pow(10,-4)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-95*Math.pow(10,-4)*getVariable(1,k)-87*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:49:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.806051084979251; Expression=95*Math.pow(10,-4)-u4(k)+u7(k)-u5(k)-95*Math.pow(10,-4)*u1(k)-87*Math.pow(10,-4)*u1(k); Java Expression: 95*Math.pow(10,-4)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-95*Math.pow(10,-4)*getVariable(1,k)-87*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:49:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.805321310194863; Expression=1*Math.pow(10,-9)-u4(k)+u7(k)-u5(k)-97*Math.pow(10,-4)*u1(k)-87*Math.pow(10,-4)*u1(k); Java Expression: 1*Math.pow(10,-9)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-97*Math.pow(10,-4)*getVariable(1,k)-87*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:49:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.805145422602218; Expression=95*Math.pow(10,-3)-u4(k)+u7(k)-u5(k)-95*Math.pow(10,-4)*u1(k)-87*Math.pow(10,-4)*u1(k); Java Expression: 95*Math.pow(10,-3)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-95*Math.pow(10,-4)*getVariable(1,k)-87*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:49:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8025986674801855; Expression=93*Math.pow(10,-4)-u4(k)+u7(k)-u5(k)-95*Math.pow(10,-4)*u1(k)-95*Math.pow(10,-4)*u1(k); Java Expression: 93*Math.pow(10,-4)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-95*Math.pow(10,-4)*getVariable(1,k)-95*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:49:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.801809684485381; Expression=1*Math.pow(10,-9)-u4(k)+u7(k)-u5(k)-97*Math.pow(10,-4)*u1(k)-96*Math.pow(10,-4)*u1(k); Java Expression: 1*Math.pow(10,-9)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-97*Math.pow(10,-4)*getVariable(1,k)-96*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:49:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.801778517669513; Expression=90*Math.pow(10,-5)-u4(k)+u7(k)-u5(k)-97*Math.pow(10,-4)*u1(k)-96*Math.pow(10,-4)*u1(k); Java Expression: 90*Math.pow(10,-5)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-97*Math.pow(10,-4)*getVariable(1,k)-96*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:49:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.801514246426884; Expression=87*Math.pow(10,-4)-u4(k)+u7(k)-u5(k)-97*Math.pow(10,-4)*u1(k)-96*Math.pow(10,-4)*u1(k); Java Expression: 87*Math.pow(10,-4)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-97*Math.pow(10,-4)*getVariable(1,k)-96*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:49:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.799441962501329; Expression=87*Math.pow(10,-3)-u4(k)+u7(k)-u5(k)-97*Math.pow(10,-4)*u1(k)-96*Math.pow(10,-4)*u1(k); Java Expression: 87*Math.pow(10,-3)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-97*Math.pow(10,-4)*getVariable(1,k)-96*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:49:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.798592957493551; Expression=93*Math.pow(10,-9)-u4(k)+u7(k)-u5(k)-95*Math.pow(10,-4)*u1(k)-11*Math.pow(10,-3)*u1(k); Java Expression: 93*Math.pow(10,-9)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-95*Math.pow(10,-4)*getVariable(1,k)-11*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:49:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.798354172099641; Expression=47*Math.pow(10,-4)-u4(k)+u7(k)-u5(k)-95*Math.pow(10,-4)*u1(k)-11*Math.pow(10,-3)*u1(k); Java Expression: 47*Math.pow(10,-4)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-95*Math.pow(10,-4)*getVariable(1,k)-11*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:49:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.79811422346542; Expression=95*Math.pow(10,-4)-u4(k)+u7(k)-u5(k)-95*Math.pow(10,-4)*u1(k)-11*Math.pow(10,-3)*u1(k); Java Expression: 95*Math.pow(10,-4)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-95*Math.pow(10,-4)*getVariable(1,k)-11*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:49:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.798109266685092; Expression=96*Math.pow(10,-4)-u4(k)+u7(k)-u5(k)-95*Math.pow(10,-4)*u1(k)-11*Math.pow(10,-3)*u1(k); Java Expression: 96*Math.pow(10,-4)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-95*Math.pow(10,-4)*getVariable(1,k)-11*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:49:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.797756899237802; Expression=87*Math.pow(10,-4)-u4(k)+u7(k)-u5(k)-97*Math.pow(10,-4)*u1(k)-11*Math.pow(10,-3)*u1(k); Java Expression: 87*Math.pow(10,-4)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-97*Math.pow(10,-4)*getVariable(1,k)-11*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:49:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.796930898255699; Expression=93*Math.pow(10,-9)-u4(k)+u7(k)-u5(k)-11*Math.pow(10,-3)*u1(k)-11*Math.pow(10,-3)*u1(k); Java Expression: 93*Math.pow(10,-9)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-11*Math.pow(10,-3)*getVariable(1,k)-11*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:49:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.79627024933982; Expression=93*Math.pow(10,-4)-u4(k)+u7(k)-u5(k)-11*Math.pow(10,-3)*u1(k)-11*Math.pow(10,-3)*u1(k); Java Expression: 93*Math.pow(10,-4)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-11*Math.pow(10,-3)*getVariable(1,k)-11*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:49:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.267938621937781; Expression=u8(k)-u3(k)+u7(k)-u5(k)*93*Math.pow(10,-4)*u7(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*93*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:49:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.267117555102278; Expression=u8(k)-u3(k)+u7(k)-u5(k)*95*Math.pow(10,-4)*u7(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*95*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:49:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.263747486881934; Expression=11*Math.pow(10,-1)*u8(k)-u3(k)+u7(k)-u5(k)*95*Math.pow(10,-4)*u7(k); Java Expression: 11*Math.pow(10,-1)*getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*95*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:49:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.248072365664212; Expression=u8(k)-u3(k)+u7(k)-u5(k)*93*Math.pow(10,-4)*u7(k)-87*Math.pow(10,-4)*u1(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*93*Math.pow(10,-4)*getVariable(7,k)-87*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:49:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.24381656781579; Expression=u8(k)-u3(k)+u7(k)-u5(k)*93*Math.pow(10,-4)*u7(k)-60*Math.pow(10,-4)*u1(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*93*Math.pow(10,-4)*getVariable(7,k)-60*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 11:49:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.231252824807867; Expression=u8(k)-u3(k)+u7(k)-u5(k)*93*Math.pow(10,-4)*u7(k)-87*Math.pow(10,-4)*u7(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*93*Math.pow(10,-4)*getVariable(7,k)-87*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:49:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.227590299705677; Expression=u8(k)-u3(k)+u7(k)-u5(k)*93*Math.pow(10,-4)*u7(k)-49*Math.pow(10,-4)*u7(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*93*Math.pow(10,-4)*getVariable(7,k)-49*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:49:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.225499427811148; Expression=u8(k)-u3(k)+u7(k)-u5(k)*93*Math.pow(10,-4)*u7(k)-60*Math.pow(10,-4)*u7(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*93*Math.pow(10,-4)*getVariable(7,k)-60*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:50:01 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.225499427811148 -->> Avg.: 4949.884482933368 -->> Std. Dev.: 17689.15747189188
Aug 30, 2024 11:50:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.206557009836418; Expression=u8(k)-u3(k)+u7(k)-u5(k)*92*Math.pow(10,-4)*u7(k)-87*Math.pow(10,-4)*u7(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*92*Math.pow(10,-4)*getVariable(7,k)-87*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:50:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.205449862838177; Expression=u8(k)-u3(k)+u7(k)-u5(k)*92*Math.pow(10,-4)*u7(k)-95*Math.pow(10,-4)*u7(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*92*Math.pow(10,-4)*getVariable(7,k)-95*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:50:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.205386139335669; Expression=u8(k)-u3(k)+u7(k)-u5(k)*92*Math.pow(10,-4)*u7(k)-97*Math.pow(10,-4)*u7(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*92*Math.pow(10,-4)*getVariable(7,k)-97*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 11:50:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.185570578320249; Expression=u8(k)-u3(k)+u7(k)-u5(k)*92*Math.pow(10,-4)*u7(k)-95*Math.pow(10,-4)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*92*Math.pow(10,-4)*getVariable(7,k)-95*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 11:50:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1739754988212034; Expression=u8(k)-u3(k)+u7(k)-u5(k)*92*Math.pow(10,-4)*u7(k)-60*Math.pow(10,-4)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*92*Math.pow(10,-4)*getVariable(7,k)-60*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 11:50:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.173033471459329; Expression=u8(k)-u3(k)+u7(k)-u5(k)*92*Math.pow(10,-4)*u7(k)-81*Math.pow(10,-4)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*92*Math.pow(10,-4)*getVariable(7,k)-81*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 11:50:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.123105909537607; Expression=u8(k)-u3(k)+u7(k)-u5(k)*90*Math.pow(10,-4)*u7(k)-96*Math.pow(10,-4)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*90*Math.pow(10,-4)*getVariable(7,k)-96*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 11:50:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.122189956217919; Expression=u8(k)-u3(k)+u7(k)-u5(k)*90*Math.pow(10,-4)*u7(k)-97*Math.pow(10,-4)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*90*Math.pow(10,-4)*getVariable(7,k)-97*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 11:50:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.115220919210118; Expression=u8(k)-u3(k)+u7(k)-u5(k)*90*Math.pow(10,-4)*u7(k)-11*Math.pow(10,-3)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*90*Math.pow(10,-4)*getVariable(7,k)-11*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 11:51:34 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.115220919210118 -->> Avg.: 142.27049845507904 -->> Std. Dev.: 415.54806830283724
Aug 30, 2024 11:51:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.100605776093107; Expression=u8(k)-u3(k)+u7(k)-u5(k)*90*Math.pow(10,-4)*u7(k)-u8(k)+u8(k)*90*Math.pow(10,-4)*u7(k)-96*Math.pow(10,-4)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*90*Math.pow(10,-4)*getVariable(7,k)-getVariable(8,k)+getVariable(8,k)*90*Math.pow(10,-4)*getVariable(7,k)-96*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 11:51:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.096397368846887; Expression=u8(k)-u3(k)+u7(k)-u5(k)*90*Math.pow(10,-4)*u7(k)-u8(k)+u8(k)*90*Math.pow(10,-4)*u7(k)-11*Math.pow(10,-3)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*90*Math.pow(10,-4)*getVariable(7,k)-getVariable(8,k)+getVariable(8,k)*90*Math.pow(10,-4)*getVariable(7,k)-11*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 11:51:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.089430400454602; Expression=u8(k)-u3(k)+u7(k)-u5(k)*90*Math.pow(10,-4)*u7(k)-u8(k)+u8(k)*96*Math.pow(10,-4)*u7(k)-11*Math.pow(10,-3)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*90*Math.pow(10,-4)*getVariable(7,k)-getVariable(8,k)+getVariable(8,k)*96*Math.pow(10,-4)*getVariable(7,k)-11*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 11:51:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.08116699172228; Expression=u8(k)-u3(k)+u7(k)-u5(k)*90*Math.pow(10,-4)*u7(k)-u8(k)+u8(k)*11*Math.pow(10,-3)*u7(k)-11*Math.pow(10,-3)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*90*Math.pow(10,-4)*getVariable(7,k)-getVariable(8,k)+getVariable(8,k)*11*Math.pow(10,-3)*getVariable(7,k)-11*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 11:52:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.068285342345072; Expression=u8(k)-u3(k)+u7(k)-u5(k)*90*Math.pow(10,-4)*u7(k)-u8(k)+u8(k)*u8(k)-u8(k)-11*Math.pow(10,-3)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*90*Math.pow(10,-4)*getVariable(7,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)-11*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 11:52:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.050413094621956; Expression=u8(k)-u3(k)+u7(k)-u5(k)*90*Math.pow(10,-4)*u7(k)-u8(k)+u8(k)*u8(k)-u8(k)-90*Math.pow(10,-4)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*90*Math.pow(10,-4)*getVariable(7,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)-90*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 11:52:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.016862241771326; Expression=u8(k)-u3(k)+u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)-u8(k)+u8(k)*u8(k)-u8(k)-11*Math.pow(10,-3)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)-11*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 11:53:04 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.016862241771326 -->> Avg.: 15.319967998704877 -->> Std. Dev.: 22.334377721021653
Aug 30, 2024 11:53:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.979459577854245; Expression=u8(k)-u3(k)+u7(k)-u5(k)*87*Math.pow(10,-4)*u7(k)-u8(k)+u8(k)*u8(k)-u8(k)-15*Math.pow(10,-3)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*87*Math.pow(10,-4)*getVariable(7,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)-15*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 11:54:38 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.979459577854245 -->> Avg.: 5.598250940637122 -->> Std. Dev.: 1.360656443992957
Aug 30, 2024 11:54:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9679810499455686; Expression=u8(k)-u3(k)+u7(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-u8(k)+u8(k)*u8(k)-u8(k)-15*Math.pow(10,-3)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)-15*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 11:55:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.963261900529435; Expression=u8(k)-u3(k)+u7(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-u8(k)+u8(k)*u8(k)-u8(k)-18*Math.pow(10,-3)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)-18*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 11:55:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.959226939207031; Expression=u8(k)-u3(k)+u7(k)-u5(k)*86*Math.pow(10,-4)*u7(k)-u8(k)+u8(k)*u8(k)-u8(k)-17*Math.pow(10,-3)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*86*Math.pow(10,-4)*getVariable(7,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)-17*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 11:56:15 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.959226939207031 -->> Avg.: 5.180084311565362 -->> Std. Dev.: 0.3059584740878331
Aug 30, 2024 11:57:51 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.959226939207031 -->> Avg.: 5.02892044722191 -->> Std. Dev.: 0.08075437251538516
Aug 30, 2024 11:59:27 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.959226939207031 -->> Avg.: 4.989339126174969 -->> Std. Dev.: 0.045320410950774506
Aug 31, 2024 12:01:04 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.959226939207031 -->> Avg.: 4.967654731055265 -->> Std. Dev.: 0.0160439171578639
Aug 31, 2024 12:01:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.950665995467416; Expression=u8(k)-u3(k)+u7(k)-u5(k)*85*Math.pow(10,-4)*u7(k)-u8(k)+u8(k)*u8(k)-u8(k)-17*Math.pow(10,-3)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*85*Math.pow(10,-4)*getVariable(7,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)-17*Math.pow(10,-3)*getVariable(2,k)
Aug 31, 2024 12:02:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9428911973915906; Expression=u8(k)-u3(k)+u7(k)-u5(k)*85*Math.pow(10,-4)*u7(k)-u8(k)+u8(k)*u8(k)-u8(k)-18*Math.pow(10,-3)*u2(k); Java Expression: getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*85*Math.pow(10,-4)*getVariable(7,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)-18*Math.pow(10,-3)*getVariable(2,k)
Aug 31, 2024 12:02:39 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.9428911973915906 -->> Avg.: 4.959141913352931 -->> Std. Dev.: 0.00633174085767176

Execution time: 941.137 seconds.



@@;getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*85*Math.pow(10,-4)*getVariable(7,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)-18*Math.pow(10,-3)*getVariable(2,k)



Run #7
========
Aug 31, 2024 12:02:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=1.5821985813667818E15; Expression=u5(k)*u5(k)*16*Math.pow(10,+5)+u1(k)*u5(k)-u2(k)+90*Math.pow(10,+9)*u7(k)*u2(k)+u3(k)*u1(k)-u8(k); Java Expression: getVariable(5,k)*getVariable(5,k)*16*Math.pow(10,+5)+getVariable(1,k)*getVariable(5,k)-getVariable(2,k)+90*Math.pow(10,+9)*getVariable(7,k)*getVariable(2,k)+getVariable(3,k)*getVariable(1,k)-getVariable(8,k)
Aug 31, 2024 12:02:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=166.27786369226516; Expression=u8(k)+u3(k)-u6(k)-u3(k)-u4(k)-67*Math.pow(10,-6)*u6(k); Java Expression: getVariable(8,k)+getVariable(3,k)-getVariable(6,k)-getVariable(3,k)-getVariable(4,k)-67*Math.pow(10,-6)*getVariable(6,k)
Aug 31, 2024 12:02:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=33.77141179688744; Expression=35*Math.pow(10,+4)*3*Math.pow(10,-9)-u8(k)-u4(k)+u3(k); Java Expression: 35*Math.pow(10,+4)*3*Math.pow(10,-9)-getVariable(8,k)-getVariable(4,k)+getVariable(3,k)
Aug 31, 2024 12:02:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=32.738918406637005; Expression=41*Math.pow(10,-6)+u8(k); Java Expression: 41*Math.pow(10,-6)+getVariable(8,k)
Aug 31, 2024 12:02:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=25.438537873807295; Expression=53*Math.pow(10,-2)*2*Math.pow(10,+1)+u9(k)-u4(k); Java Expression: 53*Math.pow(10,-2)*2*Math.pow(10,+1)+getVariable(9,k)-getVariable(4,k)
Aug 31, 2024 12:02:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=10.293318403027172; Expression=u5(k)+u5(k)-u4(k); Java Expression: getVariable(5,k)+getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 12:02:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.337525735877389; Expression=15*Math.pow(10,-4)*u2(k)+u5(k); Java Expression: 15*Math.pow(10,-4)*getVariable(2,k)+getVariable(5,k)
Aug 31, 2024 12:02:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 31, 2024 12:02:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.545490207838515; Expression=u5(k)+u8(k)*u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 12:02:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.361059904227895; Expression=u5(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 12:02:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.33413302729019; Expression=56*Math.pow(10,-2)*52*Math.pow(10,-2)*u7(k); Java Expression: 56*Math.pow(10,-2)*52*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 12:02:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131407434512216; Expression=u7(k)-u3(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 31, 2024 12:02:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.1314068796260965; Expression=u7(k)-u5(k)+3*Math.pow(10,-6)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+3*Math.pow(10,-6)-getVariable(3,k)
Aug 31, 2024 12:02:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.083067456260814; Expression=u7(k)-u5(k)+3*Math.pow(10,-1)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+3*Math.pow(10,-1)-getVariable(3,k)
Aug 31, 2024 12:02:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.034867901879223; Expression=u7(k)-u5(k)+8*Math.pow(10,-1)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+8*Math.pow(10,-1)-getVariable(3,k)
Aug 31, 2024 12:02:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.032306580795064; Expression=u7(k)-u5(k)+85*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+85*Math.pow(10,-2)-getVariable(3,k)
Aug 31, 2024 12:02:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.031397808247439; Expression=u7(k)-u5(k)+87*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-2)-getVariable(3,k)
Aug 31, 2024 12:02:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388946502078; Expression=u7(k)-u5(k)+u8(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(3,k)
Aug 31, 2024 12:03:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992177694435049; Expression=u7(k)-u5(k)+u8(k)-u3(k)*99*Math.pow(10,-6)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(3,k)*99*Math.pow(10,-6)-getVariable(3,k)
Aug 31, 2024 12:03:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.990391749355058; Expression=u7(k)-u5(k)+u8(k)-u3(k)*99*Math.pow(10,-5)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(3,k)*99*Math.pow(10,-5)-getVariable(3,k)
Aug 31, 2024 12:03:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.983976308891506; Expression=u7(k)-u5(k)+u8(k)-u3(k)*99*Math.pow(10,-4)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(3,k)*99*Math.pow(10,-4)-getVariable(3,k)
Aug 31, 2024 12:03:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.983626392222537; Expression=u7(k)-u5(k)+u8(k)-u3(k)*87*Math.pow(10,-4)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(3,k)*87*Math.pow(10,-4)-getVariable(3,k)
Aug 31, 2024 12:03:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.970582929923046; Expression=u7(k)-u5(k)+u8(k)-u5(k)*87*Math.pow(10,-4)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(5,k)*87*Math.pow(10,-4)-getVariable(3,k)
Aug 31, 2024 12:03:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.947955960803209; Expression=u7(k)-u5(k)+u8(k)-u7(k)*87*Math.pow(10,-4)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(7,k)*87*Math.pow(10,-4)-getVariable(3,k)
Aug 31, 2024 12:03:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.946695902452364; Expression=u7(k)-u5(k)+u8(k)-u7(k)*82*Math.pow(10,-4)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(7,k)*82*Math.pow(10,-4)-getVariable(3,k)
Aug 31, 2024 12:03:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.946020372676141; Expression=u7(k)-u5(k)+u8(k)-u7(k)*64*Math.pow(10,-4)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(7,k)*64*Math.pow(10,-4)-getVariable(3,k)
Aug 31, 2024 12:03:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.945899333334923; Expression=u7(k)-u5(k)+u8(k)-u7(k)*65*Math.pow(10,-4)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(7,k)*65*Math.pow(10,-4)-getVariable(3,k)
Aug 31, 2024 12:03:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.945573956097477; Expression=u7(k)-u5(k)+u8(k)-u7(k)*70*Math.pow(10,-4)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(7,k)*70*Math.pow(10,-4)-getVariable(3,k)
Aug 31, 2024 12:03:42 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.945573956097477 -->> Avg.: 2930898.365562435 -->> Std. Dev.: 1.265462090987523E7
Aug 31, 2024 12:03:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.927491606413721; Expression=u7(k)-u5(k)+u8(k)-u1(k)*70*Math.pow(10,-4)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*70*Math.pow(10,-4)-getVariable(3,k)
Aug 31, 2024 12:03:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9200715679135465; Expression=u7(k)-u5(k)+u8(k)-u1(k)*87*Math.pow(10,-4)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*87*Math.pow(10,-4)-getVariable(3,k)
Aug 31, 2024 12:03:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.916816124464214; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-4)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-4)-getVariable(3,k)
Aug 31, 2024 12:04:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.916812427283538; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-4)-u3(k)+30*Math.pow(10,-6)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-4)-getVariable(3,k)+30*Math.pow(10,-6)*getVariable(8,k)
Aug 31, 2024 12:04:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.916448332663936; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-4)-u3(k)+30*Math.pow(10,-4)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-4)-getVariable(3,k)+30*Math.pow(10,-4)*getVariable(8,k)
Aug 31, 2024 12:04:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.91561718257785; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-4)-u3(k)+99*Math.pow(10,-4)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-4)-getVariable(3,k)+99*Math.pow(10,-4)*getVariable(8,k)
Aug 31, 2024 12:04:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.914056741025164; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-4)-u3(k)+30*Math.pow(10,-4)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-4)-getVariable(3,k)+30*Math.pow(10,-4)*getVariable(5,k)
Aug 31, 2024 12:04:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.912982145544914; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-4)-u3(k)+65*Math.pow(10,-4)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-4)-getVariable(3,k)+65*Math.pow(10,-4)*getVariable(5,k)
Aug 31, 2024 12:04:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8988659915407435; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-4)-u3(k)+99*Math.pow(10,-4)*u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-4)-getVariable(3,k)+99*Math.pow(10,-4)*getVariable(3,k)
Aug 31, 2024 12:05:02 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.8988659915407435 -->> Avg.: 5324.692306101482 -->> Std. Dev.: 18218.688060829107
Aug 31, 2024 12:05:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.697814989085197; Expression=u7(k)-u5(k)+u8(k)-u7(k)*30*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(7,k)*30*Math.pow(10,-3)-getVariable(4,k)
Aug 31, 2024 12:05:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.682058089244825; Expression=u7(k)-u5(k)+u8(k)-u1(k)*30*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*30*Math.pow(10,-3)-getVariable(4,k)
Aug 31, 2024 12:05:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.631818324119172; Expression=u7(k)-u5(k)+u8(k)-u1(k)*43*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*43*Math.pow(10,-3)-getVariable(4,k)
Aug 31, 2024 12:05:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.625741572388262; Expression=u7(k)-u5(k)+u8(k)-u1(k)*39*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*39*Math.pow(10,-3)-getVariable(4,k)
Aug 31, 2024 12:05:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.611403311288445; Expression=u7(k)-u5(k)+u8(k)-u1(k)*43*Math.pow(10,-3)-u4(k)+99*Math.pow(10,-4)*u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*43*Math.pow(10,-3)-getVariable(4,k)+99*Math.pow(10,-4)*getVariable(3,k)
Aug 31, 2024 12:05:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6099137667859225; Expression=u7(k)-u5(k)+u8(k)-u1(k)*43*Math.pow(10,-3)-u4(k)+99*Math.pow(10,-4)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*43*Math.pow(10,-3)-getVariable(4,k)+99*Math.pow(10,-4)*getVariable(5,k)
Aug 31, 2024 12:05:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.606672661404601; Expression=u7(k)-u5(k)+u8(k)-u1(k)*43*Math.pow(10,-3)-u4(k)+99*Math.pow(10,-4)*u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*43*Math.pow(10,-3)-getVariable(4,k)+99*Math.pow(10,-4)*getVariable(4,k)
Aug 31, 2024 12:06:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.590995936596495; Expression=u7(k)-u5(k)+u8(k)-u1(k)*43*Math.pow(10,-3)-u4(k)+99*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*43*Math.pow(10,-3)-getVariable(4,k)+99*Math.pow(10,-4)*getVariable(9,k)
Aug 31, 2024 12:06:53 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.590995936596495 -->> Avg.: 153.16768448759208 -->> Std. Dev.: 445.7142618293356
Aug 31, 2024 12:07:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.590995886231052; Expression=u7(k)-u5(k)+u8(k)-u1(k)*34*Math.pow(10,-9)-u1(k)*43*Math.pow(10,-3)-u4(k)+99*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*34*Math.pow(10,-9)-getVariable(1,k)*43*Math.pow(10,-3)-getVariable(4,k)+99*Math.pow(10,-4)*getVariable(9,k)
Aug 31, 2024 12:07:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.590995872899252; Expression=u7(k)-u5(k)+u8(k)-u1(k)*43*Math.pow(10,-9)-u1(k)*43*Math.pow(10,-3)-u4(k)+99*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*43*Math.pow(10,-9)-getVariable(1,k)*43*Math.pow(10,-3)-getVariable(4,k)+99*Math.pow(10,-4)*getVariable(9,k)
Aug 31, 2024 12:07:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.590995789948067; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-9)-u1(k)*43*Math.pow(10,-3)-u4(k)+99*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-9)-getVariable(1,k)*43*Math.pow(10,-3)-getVariable(4,k)+99*Math.pow(10,-4)*getVariable(9,k)
Aug 31, 2024 12:07:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.59094626892512; Expression=u7(k)-u5(k)+u8(k)-u1(k)*34*Math.pow(10,-6)-u1(k)*43*Math.pow(10,-3)-u4(k)+99*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*34*Math.pow(10,-6)-getVariable(1,k)*43*Math.pow(10,-3)-getVariable(4,k)+99*Math.pow(10,-4)*getVariable(9,k)
Aug 31, 2024 12:07:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.590118914315349; Expression=u7(k)-u5(k)+u8(k)-u1(k)*87*Math.pow(10,-3)+u1(k)*43*Math.pow(10,-3)-u4(k)+99*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*87*Math.pow(10,-3)+getVariable(1,k)*43*Math.pow(10,-3)-getVariable(4,k)+99*Math.pow(10,-4)*getVariable(9,k)
Aug 31, 2024 12:07:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5832233579693025; Expression=u7(k)-u5(k)+u8(k)-u1(k)*87*Math.pow(10,-3)+u1(k)*43*Math.pow(10,-3)-u4(k)+30*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*87*Math.pow(10,-3)+getVariable(1,k)*43*Math.pow(10,-3)-getVariable(4,k)+30*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:07:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.534450136148206; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u1(k)*43*Math.pow(10,-3)-u4(k)+30*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(1,k)*43*Math.pow(10,-3)-getVariable(4,k)+30*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:07:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.506409263829821; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u1(k)*43*Math.pow(10,-3)-u4(k)+43*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(1,k)*43*Math.pow(10,-3)-getVariable(4,k)+43*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:07:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.50304531213151; Expression=u7(k)-u5(k)+u8(k)-u1(k)*87*Math.pow(10,-3)+u1(k)*30*Math.pow(10,-3)-u4(k)+43*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*87*Math.pow(10,-3)+getVariable(1,k)*30*Math.pow(10,-3)-getVariable(4,k)+43*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:07:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.500318456346676; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u1(k)*39*Math.pow(10,-3)-u4(k)+43*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(1,k)*39*Math.pow(10,-3)-getVariable(4,k)+43*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:07:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.495943710121884; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u1(k)*39*Math.pow(10,-3)-u4(k)+45*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(1,k)*39*Math.pow(10,-3)-getVariable(4,k)+45*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:08:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.437423547182696; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u6(k)*43*Math.pow(10,-3)-u4(k)+30*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(6,k)*43*Math.pow(10,-3)-getVariable(4,k)+30*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:08:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.430454712855703; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u6(k)*39*Math.pow(10,-3)-u4(k)+30*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(6,k)*39*Math.pow(10,-3)-getVariable(4,k)+30*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:08:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.427436536782467; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u6(k)*39*Math.pow(10,-3)-u4(k)+39*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(6,k)*39*Math.pow(10,-3)-getVariable(4,k)+39*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:09:05 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.427436536782467 -->> Avg.: 16.07374531408222 -->> Std. Dev.: 23.77036361808712
Aug 31, 2024 12:09:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.422096275702459; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u6(k)*37*Math.pow(10,-3)-u4(k)+39*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(6,k)*37*Math.pow(10,-3)-getVariable(4,k)+39*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:10:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.421963948821542; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u6(k)*37*Math.pow(10,-3)-u4(k)+41*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(6,k)*37*Math.pow(10,-3)-getVariable(4,k)+41*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:10:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.410562135839533; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u5(k)*39*Math.pow(10,-3)-u4(k)+99*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(5,k)*39*Math.pow(10,-3)-getVariable(4,k)+99*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:10:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.41039916953735; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u5(k)*41*Math.pow(10,-3)-u4(k)+99*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(5,k)*41*Math.pow(10,-3)-getVariable(4,k)+99*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:11:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.40557210175756; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u5(k)*41*Math.pow(10,-3)-u4(k)+92*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(5,k)*41*Math.pow(10,-3)-getVariable(4,k)+92*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:11:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.40115968184208; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u5(k)*45*Math.pow(10,-3)-u4(k)+92*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(5,k)*45*Math.pow(10,-3)-getVariable(4,k)+92*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:11:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.373640679939624; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u5(k)*99*Math.pow(10,-3)-u4(k)+45*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(5,k)*99*Math.pow(10,-3)-getVariable(4,k)+45*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:11:31 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.373640679939624 -->> Avg.: 5.938690411663059 -->> Std. Dev.: 1.213652778187816
Aug 31, 2024 12:12:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.372644201382236; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u5(k)*99*Math.pow(10,-3)-u4(k)+49*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(5,k)*99*Math.pow(10,-3)-getVariable(4,k)+49*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:14:02 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.372644201382236 -->> Avg.: 5.580990086709358 -->> Std. Dev.: 0.20740186596547605
Aug 31, 2024 12:14:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3725397386009215; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u5(k)*99*Math.pow(10,-3)-u4(k)+47*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(5,k)*99*Math.pow(10,-3)-getVariable(4,k)+47*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:14:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.372441279854908; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u5(k)*99*Math.pow(10,-3)-u4(k)+48*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(5,k)*99*Math.pow(10,-3)-getVariable(4,k)+48*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:15:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.372437053591439; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u5(k)*96*Math.pow(10,-3)-u4(k)+49*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(5,k)*96*Math.pow(10,-3)-getVariable(4,k)+49*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:16:34 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.372437053591439 -->> Avg.: 5.473823661344008 -->> Std. Dev.: 0.13177213953269545
Aug 31, 2024 12:16:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.37233251920276; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u5(k)*96*Math.pow(10,-3)-u4(k)+51*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(5,k)*96*Math.pow(10,-3)-getVariable(4,k)+51*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:19:08 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.37233251920276 -->> Avg.: 5.412747835333591 -->> Std. Dev.: 0.06502532959532162
Aug 31, 2024 12:20:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.372207218989392; Expression=u7(k)-u5(k)+u8(k)-u1(k)*99*Math.pow(10,-3)+u5(k)*95*Math.pow(10,-3)-u4(k)+51*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(5,k)*95*Math.pow(10,-3)-getVariable(4,k)+51*Math.pow(10,-3)*getVariable(9,k)
Aug 31, 2024 12:22:11 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 5.372207218989392 -->> Avg.: 5.381756321932216 -->> Std. Dev.: 0.018578079848072346
Aug 31, 2024 12:25:03 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 5.372207218989392 -->> Avg.: 5.3726781851178895 -->> Std. Dev.: 0.0022332916137246983

Execution time: 1348.171 seconds.



@@;getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(5,k)*95*Math.pow(10,-3)-getVariable(4,k)+51*Math.pow(10,-3)*getVariable(9,k)



Run #8
========
Aug 31, 2024 12:25:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3794.691128823256; Expression=16*Math.pow(10,-8)-u7(k)*u1(k)+u1(k)*48*Math.pow(10,-6)+u2(k)+u2(k)*u5(k); Java Expression: 16*Math.pow(10,-8)-getVariable(7,k)*getVariable(1,k)+getVariable(1,k)*48*Math.pow(10,-6)+getVariable(2,k)+getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 12:25:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=173.63364788675014; Expression=51*Math.pow(10,-1)*u9(k); Java Expression: 51*Math.pow(10,-1)*getVariable(9,k)
Aug 31, 2024 12:25:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=48.43008905361349; Expression=88*Math.pow(10,-8)-u3(k)+u3(k)*46*Math.pow(10,-8)-u1(k)+u7(k)+u8(k); Java Expression: 88*Math.pow(10,-8)-getVariable(3,k)+getVariable(3,k)*46*Math.pow(10,-8)-getVariable(1,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=9.11556845999672; Expression=39*Math.pow(10,-1)-58*Math.pow(10,-5)+u5(k); Java Expression: 39*Math.pow(10,-1)-58*Math.pow(10,-5)+getVariable(5,k)
Aug 31, 2024 12:25:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.573375152057617; Expression=37*Math.pow(10,-2)*u7(k); Java Expression: 37*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 12:25:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.33045269568633; Expression=62*Math.pow(10,-9)-7*Math.pow(10,-6)*u1(k)+u5(k); Java Expression: 62*Math.pow(10,-9)-7*Math.pow(10,-6)*getVariable(1,k)+getVariable(5,k)
Aug 31, 2024 12:25:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.329342694859426; Expression=57*Math.pow(10,-3)+u5(k); Java Expression: 57*Math.pow(10,-3)+getVariable(5,k)
Aug 31, 2024 12:25:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 12:25:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.780883602472543; Expression=31*Math.pow(10,-2)*u7(k); Java Expression: 31*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 12:25:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.780406342677221; Expression=36*Math.pow(10,-6)*u2(k)+31*Math.pow(10,-2)*u7(k); Java Expression: 36*Math.pow(10,-6)*getVariable(2,k)+31*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 12:25:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992389991387186; Expression=88*Math.pow(10,-8)-u3(k)+u3(k)*46*Math.pow(10,-8)-u5(k)+u7(k)+u8(k); Java Expression: 88*Math.pow(10,-8)-getVariable(3,k)+getVariable(3,k)*46*Math.pow(10,-8)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992389958161606; Expression=37*Math.pow(10,-8)-u3(k)+u3(k)*46*Math.pow(10,-8)-u5(k)+u7(k)+u8(k); Java Expression: 37*Math.pow(10,-8)-getVariable(3,k)+getVariable(3,k)*46*Math.pow(10,-8)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992389583476344; Expression=88*Math.pow(10,-8)-u3(k)+u3(k)*27*Math.pow(10,-8)-u5(k)+u7(k)+u8(k); Java Expression: 88*Math.pow(10,-8)-getVariable(3,k)+getVariable(3,k)*27*Math.pow(10,-8)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992389023833661; Expression=88*Math.pow(10,-8)-u3(k)+u8(k)*27*Math.pow(10,-8)-u5(k)+u7(k)+u8(k); Java Expression: 88*Math.pow(10,-8)-getVariable(3,k)+getVariable(8,k)*27*Math.pow(10,-8)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992387983105229; Expression=37*Math.pow(10,-8)-u3(k)-u3(k)*46*Math.pow(10,-8)-u5(k)+u7(k)+u8(k); Java Expression: 37*Math.pow(10,-8)-getVariable(3,k)-getVariable(3,k)*46*Math.pow(10,-8)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992383520632988; Expression=37*Math.pow(10,-8)-u3(k)-u6(k)*46*Math.pow(10,-8)-u5(k)+u7(k)+u8(k); Java Expression: 37*Math.pow(10,-8)-getVariable(3,k)-getVariable(6,k)*46*Math.pow(10,-8)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9919752422035115; Expression=37*Math.pow(10,-8)-u3(k)-u6(k)*35*Math.pow(10,-6)-u5(k)+u7(k)+u8(k); Java Expression: 37*Math.pow(10,-8)-getVariable(3,k)-getVariable(6,k)*35*Math.pow(10,-6)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.981187022341122; Expression=1*Math.pow(10,-8)-u3(k)-u7(k)*91*Math.pow(10,-5)-u5(k)+u7(k)+u8(k); Java Expression: 1*Math.pow(10,-8)-getVariable(3,k)-getVariable(7,k)*91*Math.pow(10,-5)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.947948889108875; Expression=1*Math.pow(10,-8)-u3(k)-u7(k)*55*Math.pow(10,-4)-u5(k)+u7(k)+u8(k); Java Expression: 1*Math.pow(10,-8)-getVariable(3,k)-getVariable(7,k)*55*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.947646940427783; Expression=1*Math.pow(10,-2)-u3(k)-u7(k)*55*Math.pow(10,-4)-u5(k)+u7(k)+u8(k); Java Expression: 1*Math.pow(10,-2)-getVariable(3,k)-getVariable(7,k)*55*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.947617669425605; Expression=11*Math.pow(10,-3)-u3(k)-u7(k)*55*Math.pow(10,-4)-u5(k)+u7(k)+u8(k); Java Expression: 11*Math.pow(10,-3)-getVariable(3,k)-getVariable(7,k)*55*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.946495399147059; Expression=1*Math.pow(10,-8)-u3(k)-u7(k)*61*Math.pow(10,-4)-u5(k)+u7(k)+u8(k); Java Expression: 1*Math.pow(10,-8)-getVariable(3,k)-getVariable(7,k)*61*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.943176268132132; Expression=1*Math.pow(10,-1)-u3(k)-u7(k)*61*Math.pow(10,-4)-u5(k)+u7(k)+u8(k); Java Expression: 1*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*61*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.936763792865856; Expression=1*Math.pow(10,-8)-u3(k)-u1(k)*55*Math.pow(10,-4)-u5(k)+u7(k)+u8(k); Java Expression: 1*Math.pow(10,-8)-getVariable(3,k)-getVariable(1,k)*55*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.936685562784583; Expression=11*Math.pow(10,-3)-u3(k)-u1(k)*55*Math.pow(10,-4)-u5(k)+u7(k)+u8(k); Java Expression: 11*Math.pow(10,-3)-getVariable(3,k)-getVariable(1,k)*55*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.936578399694931; Expression=39*Math.pow(10,-3)-u3(k)-u1(k)*55*Math.pow(10,-4)-u5(k)+u7(k)+u8(k); Java Expression: 39*Math.pow(10,-3)-getVariable(3,k)-getVariable(1,k)*55*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.919170636516691; Expression=11*Math.pow(10,-3)-u3(k)-u1(k)*88*Math.pow(10,-4)-u5(k)+u7(k)+u8(k); Java Expression: 11*Math.pow(10,-3)-getVariable(3,k)-getVariable(1,k)*88*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.915773403148225; Expression=88*Math.pow(10,-3)-u3(k)-u1(k)*88*Math.pow(10,-4)-u5(k)+u7(k)+u8(k); Java Expression: 88*Math.pow(10,-3)-getVariable(3,k)-getVariable(1,k)*88*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.911584742468438; Expression=31*Math.pow(10,-2)-u3(k)-u1(k)*88*Math.pow(10,-4)-u5(k)+u7(k)+u8(k); Java Expression: 31*Math.pow(10,-2)-getVariable(3,k)-getVariable(1,k)*88*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.909396392135996; Expression=31*Math.pow(10,-2)-u3(k)-u1(k)*91*Math.pow(10,-4)-u5(k)+u7(k)+u8(k); Java Expression: 31*Math.pow(10,-2)-getVariable(3,k)-getVariable(1,k)*91*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:25:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.903444713594974; Expression=31*Math.pow(10,-2)-u3(k)-u1(k)*1*Math.pow(10,-2)-u5(k)+u7(k)+u8(k); Java Expression: 31*Math.pow(10,-2)-getVariable(3,k)-getVariable(1,k)*1*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.902841959713374; Expression=36*Math.pow(10,-2)-u3(k)-u1(k)*1*Math.pow(10,-2)-u5(k)+u7(k)+u8(k); Java Expression: 36*Math.pow(10,-2)-getVariable(3,k)-getVariable(1,k)*1*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.902683578702228; Expression=39*Math.pow(10,-2)-u3(k)-u1(k)*1*Math.pow(10,-2)-u5(k)+u7(k)+u8(k); Java Expression: 39*Math.pow(10,-2)-getVariable(3,k)-getVariable(1,k)*1*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.897913400401161; Expression=31*Math.pow(10,-2)-u3(k)-u1(k)*11*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 31*Math.pow(10,-2)-getVariable(3,k)-getVariable(1,k)*11*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.896070880091634; Expression=39*Math.pow(10,-2)-u3(k)-u1(k)*11*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 39*Math.pow(10,-2)-getVariable(3,k)-getVariable(1,k)*11*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.895541268100511; Expression=54*Math.pow(10,-2)-u3(k)-u1(k)*11*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 54*Math.pow(10,-2)-getVariable(3,k)-getVariable(1,k)*11*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.895457842765231; Expression=53*Math.pow(10,-2)-u3(k)-u1(k)*11*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 53*Math.pow(10,-2)-getVariable(3,k)-getVariable(1,k)*11*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.869276490359897; Expression=54*Math.pow(10,-2)-u3(k)-u1(k)*20*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 54*Math.pow(10,-2)-getVariable(3,k)-getVariable(1,k)*20*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.86489475568977; Expression=58*Math.pow(10,-2)-u3(k)-u1(k)*20*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 58*Math.pow(10,-2)-getVariable(3,k)-getVariable(1,k)*20*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.860782752358553; Expression=62*Math.pow(10,-2)-u3(k)-u1(k)*20*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 62*Math.pow(10,-2)-getVariable(3,k)-getVariable(1,k)*20*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.848522752194303; Expression=76*Math.pow(10,-2)-u3(k)-u1(k)*20*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 76*Math.pow(10,-2)-getVariable(3,k)-getVariable(1,k)*20*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.846328451618497; Expression=79*Math.pow(10,-2)-u3(k)-u1(k)*20*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 79*Math.pow(10,-2)-getVariable(3,k)-getVariable(1,k)*20*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.840665228209238; Expression=88*Math.pow(10,-2)-u3(k)-u1(k)*20*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 88*Math.pow(10,-2)-getVariable(3,k)-getVariable(1,k)*20*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.836884058266103; Expression=91*Math.pow(10,-2)-u3(k)-u1(k)*21*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 91*Math.pow(10,-2)-getVariable(3,k)-getVariable(1,k)*21*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.836384518845639; Expression=97*Math.pow(10,-2)-u3(k)-u1(k)*20*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 97*Math.pow(10,-2)-getVariable(3,k)-getVariable(1,k)*20*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8324496535021755; Expression=96*Math.pow(10,-8)-u4(k)-u1(k)*21*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 96*Math.pow(10,-8)-getVariable(4,k)-getVariable(1,k)*21*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.832449620920928; Expression=80*Math.pow(10,-8)-u4(k)-u1(k)*21*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 80*Math.pow(10,-8)-getVariable(4,k)-getVariable(1,k)*21*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.832449559831096; Expression=50*Math.pow(10,-8)-u4(k)-u1(k)*21*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 50*Math.pow(10,-8)-getVariable(4,k)-getVariable(1,k)*21*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.625741530394483; Expression=96*Math.pow(10,-8)-u4(k)-u1(k)*39*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 96*Math.pow(10,-8)-getVariable(4,k)-getVariable(1,k)*39*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.624862082570063; Expression=21*Math.pow(10,-3)-u4(k)-u1(k)*39*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 21*Math.pow(10,-3)-getVariable(4,k)-getVariable(1,k)*39*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:26:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.620719906876307; Expression=31*Math.pow(10,-2)-u4(k)-u1(k)*39*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 31*Math.pow(10,-2)-getVariable(4,k)-getVariable(1,k)*39*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:27:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.613237801591094; Expression=31*Math.pow(10,-2)-u4(k)-u1(k)*46*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 31*Math.pow(10,-2)-getVariable(4,k)-getVariable(1,k)*46*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:27:04 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.613237801591094 -->> Avg.: 2857297.3330810587 -->> Std. Dev.: 1.1958011249844186E7
Aug 31, 2024 12:27:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.592008477722648; Expression=88*Math.pow(10,-2)-u4(k)-u1(k)*46*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 88*Math.pow(10,-2)-getVariable(4,k)-getVariable(1,k)*46*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:27:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.591657962831653; Expression=76*Math.pow(10,-2)-u4(k)-u1(k)*46*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 76*Math.pow(10,-2)-getVariable(4,k)-getVariable(1,k)*46*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:27:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.591504161109463; Expression=79*Math.pow(10,-2)-u4(k)-u1(k)*46*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 79*Math.pow(10,-2)-getVariable(4,k)-getVariable(1,k)*46*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:27:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.591488661692853; Expression=80*Math.pow(10,-2)-u4(k)-u1(k)*46*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 80*Math.pow(10,-2)-getVariable(4,k)-getVariable(1,k)*46*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:27:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.590980922196219; Expression=88*Math.pow(10,-2)-u4(k)-u1(k)*54*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 88*Math.pow(10,-2)-getVariable(4,k)-getVariable(1,k)*54*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:27:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.581816753067795; Expression=88*Math.pow(10,-2)-u4(k)-u1(k)*50*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 88*Math.pow(10,-2)-getVariable(4,k)-getVariable(1,k)*50*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:27:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.57863492252857; Expression=97*Math.pow(10,-2)-u4(k)-u1(k)*50*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 97*Math.pow(10,-2)-getVariable(4,k)-getVariable(1,k)*50*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:28:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.577826814083924; Expression=97*Math.pow(10,-2)-u4(k)-u1(k)*51*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 97*Math.pow(10,-2)-getVariable(4,k)-getVariable(1,k)*51*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:28:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.570869342995989; Expression=u8(k)-u4(k)-u1(k)*50*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(1,k)*50*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:29:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.541866036040604; Expression=u8(k)-u4(k)-u1(k)*55*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(1,k)*55*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:29:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.539052083565723; Expression=u8(k)-u4(k)-u1(k)*58*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(1,k)*58*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:29:15 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.539052083565723 -->> Avg.: 4558.315201093275 -->> Std. Dev.: 15898.105795264959
Aug 31, 2024 12:29:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.538770155707631; Expression=u8(k)-u4(k)-u1(k)*57*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(1,k)*57*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:30:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.53874804658306; Expression=79*Math.pow(10,-5)+u8(k)-u4(k)-u1(k)*57*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 79*Math.pow(10,-5)+getVariable(8,k)-getVariable(4,k)-getVariable(1,k)*57*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:30:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.537116759178101; Expression=79*Math.pow(10,-3)+u8(k)-u4(k)-u1(k)*57*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 79*Math.pow(10,-3)+getVariable(8,k)-getVariable(4,k)-getVariable(1,k)*57*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:30:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.536897638619147; Expression=97*Math.pow(10,-3)+u8(k)-u4(k)-u1(k)*57*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 97*Math.pow(10,-3)+getVariable(8,k)-getVariable(4,k)-getVariable(1,k)*57*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:31:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.536262264342594; Expression=79*Math.pow(10,-3)+u8(k)-u4(k)-u1(k)*58*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 79*Math.pow(10,-3)+getVariable(8,k)-getVariable(4,k)-getVariable(1,k)*58*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:31:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.535784116139237; Expression=97*Math.pow(10,-3)+u8(k)-u4(k)-u1(k)*58*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 97*Math.pow(10,-3)+getVariable(8,k)-getVariable(4,k)-getVariable(1,k)*58*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:31:23 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.535784116139237 -->> Avg.: 163.68156611245317 -->> Std. Dev.: 463.9180142253996
Aug 31, 2024 12:31:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.53456973738719; Expression=31*Math.pow(10,-2)+u8(k)-u4(k)-u1(k)*58*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 31*Math.pow(10,-2)+getVariable(8,k)-getVariable(4,k)-getVariable(1,k)*58*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:31:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.534119056224777; Expression=21*Math.pow(10,-2)+u8(k)-u4(k)-u1(k)*58*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 21*Math.pow(10,-2)+getVariable(8,k)-getVariable(4,k)-getVariable(1,k)*58*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:32:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.534082812302641; Expression=22*Math.pow(10,-2)+u8(k)-u4(k)-u1(k)*58*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 22*Math.pow(10,-2)+getVariable(8,k)-getVariable(4,k)-getVariable(1,k)*58*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:32:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.534064638073599; Expression=23*Math.pow(10,-2)+u8(k)-u4(k)-u1(k)*58*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 23*Math.pow(10,-2)+getVariable(8,k)-getVariable(4,k)-getVariable(1,k)*58*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:32:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5316712558153895; Expression=23*Math.pow(10,-2)+u8(k)-u4(k)-u1(k)*60*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 23*Math.pow(10,-2)+getVariable(8,k)-getVariable(4,k)-getVariable(1,k)*60*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:32:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.529872371338078; Expression=31*Math.pow(10,-2)+u8(k)-u4(k)-u1(k)*60*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 31*Math.pow(10,-2)+getVariable(8,k)-getVariable(4,k)-getVariable(1,k)*60*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:33:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.529618329498624; Expression=46*Math.pow(10,-2)+u8(k)-u4(k)-u1(k)*60*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 46*Math.pow(10,-2)+getVariable(8,k)-getVariable(4,k)-getVariable(1,k)*60*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:33:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.529230507418032; Expression=39*Math.pow(10,-2)+u8(k)-u4(k)-u1(k)*60*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 39*Math.pow(10,-2)+getVariable(8,k)-getVariable(4,k)-getVariable(1,k)*60*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:33:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.510727356899557; Expression=21*Math.pow(10,-1)+u8(k)-u4(k)-u7(k)*60*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 21*Math.pow(10,-1)+getVariable(8,k)-getVariable(4,k)-getVariable(7,k)*60*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:33:22 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.510727356899557 -->> Avg.: 16.419657421266507 -->> Std. Dev.: 24.942392016528647
Aug 31, 2024 12:33:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.501417457872621; Expression=21*Math.pow(10,-1)*u8(k)-u4(k)-u7(k)*60*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 21*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)-getVariable(7,k)*60*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:33:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.499572557224321; Expression=22*Math.pow(10,-1)*u8(k)-u4(k)-u7(k)*60*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 22*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)-getVariable(7,k)*60*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:35:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.497266558728141; Expression=22*Math.pow(10,-1)*u8(k)-u4(k)-u7(k)*62*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 22*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)-getVariable(7,k)*62*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:35:24 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.497266558728141 -->> Avg.: 5.847803804059792 -->> Std. Dev.: 1.3784547583202105
Aug 31, 2024 12:35:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.494273021802446; Expression=23*Math.pow(10,-1)*u8(k)-u4(k)-u7(k)*62*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 23*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)-getVariable(7,k)*62*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:37:27 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.494273021802446 -->> Avg.: 5.531188473929206 -->> Std. Dev.: 0.034070429914874335
Aug 31, 2024 12:38:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4932318826100754; Expression=23*Math.pow(10,-1)*u8(k)-u4(k)-u7(k)*63*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 23*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)-getVariable(7,k)*63*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:38:58 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.4932318826100754 -->> Avg.: 5.512714424669943 -->> Std. Dev.: 0.02016302621805737
Aug 31, 2024 12:39:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.492005337246534; Expression=24*Math.pow(10,-1)*u8(k)-u4(k)-u7(k)*63*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 24*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)-getVariable(7,k)*63*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:40:18 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.492005337246534 -->> Avg.: 5.50353398747666 -->> Std. Dev.: 0.01578029333979998
Aug 31, 2024 12:41:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.491290374320886; Expression=24*Math.pow(10,-1)+u8(k)-u4(k)-u7(k)*64*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 24*Math.pow(10,-1)+getVariable(8,k)-getVariable(4,k)-getVariable(7,k)*64*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:41:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4900665273372615; Expression=24*Math.pow(10,-1)*u8(k)-u4(k)-u7(k)*64*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 24*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)-getVariable(7,k)*64*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 12:41:35 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 5.4900665273372615 -->> Avg.: 5.49519636950856 -->> Std. Dev.: 0.0053586742305986685
Aug 31, 2024 12:42:54 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 5.4900665273372615 -->> Avg.: 5.492632141684787 -->> Std. Dev.: 0.0019642814700733514

Execution time: 1065.9 seconds.



@@;24*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)-getVariable(7,k)*64*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)



Run #9
========
Aug 31, 2024 12:42:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=49.455173945389994; Expression=u9(k)+u4(k)-u1(k)-u3(k)+u5(k); Java Expression: getVariable(9,k)+getVariable(4,k)-getVariable(1,k)-getVariable(3,k)+getVariable(5,k)
Aug 31, 2024 12:42:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=15.540213351475103; Expression=51*Math.pow(10,-1)+u3(k); Java Expression: 51*Math.pow(10,-1)+getVariable(3,k)
Aug 31, 2024 12:42:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=14.777326457649782; Expression=24*Math.pow(10,-6)+u9(k); Java Expression: 24*Math.pow(10,-6)+getVariable(9,k)
Aug 31, 2024 12:42:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=14.777299497969437; Expression=89*Math.pow(10,-9)-55*Math.pow(10,-6)*u8(k)+u9(k); Java Expression: 89*Math.pow(10,-9)-55*Math.pow(10,-6)*getVariable(8,k)+getVariable(9,k)
Aug 31, 2024 12:42:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=12.308402162251646; Expression=u2(k)+u3(k)-u4(k)+u4(k)-u2(k); Java Expression: getVariable(2,k)+getVariable(3,k)-getVariable(4,k)+getVariable(4,k)-getVariable(2,k)
Aug 31, 2024 12:42:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=11.618645096737916; Expression=55*Math.pow(10,-9)+83*Math.pow(10,-1)+u5(k)-14*Math.pow(10,-5)*u9(k); Java Expression: 55*Math.pow(10,-9)+83*Math.pow(10,-1)+getVariable(5,k)-14*Math.pow(10,-5)*getVariable(9,k)
Aug 31, 2024 12:42:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=10.400850871585236; Expression=77*Math.pow(10,-4)+u4(k); Java Expression: 77*Math.pow(10,-4)+getVariable(4,k)
Aug 31, 2024 12:42:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.997997233515921; Expression=36*Math.pow(10,-1)+u5(k); Java Expression: 36*Math.pow(10,-1)+getVariable(5,k)
Aug 31, 2024 12:42:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330469892215914; Expression=64*Math.pow(10,-6)+u5(k); Java Expression: 64*Math.pow(10,-6)+getVariable(5,k)
Aug 31, 2024 12:42:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.33045723546507; Expression=61*Math.pow(10,-5)+u5(k); Java Expression: 61*Math.pow(10,-5)+getVariable(5,k)
Aug 31, 2024 12:42:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330253982369353; Expression=96*Math.pow(10,-4)+u5(k); Java Expression: 96*Math.pow(10,-4)+getVariable(5,k)
Aug 31, 2024 12:42:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.329583793300538; Expression=43*Math.pow(10,-3)+u5(k); Java Expression: 43*Math.pow(10,-3)+getVariable(5,k)
Aug 31, 2024 12:42:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 12:43:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.035594979490186; Expression=u8(k)+u5(k)-6*Math.pow(10,-6)*u5(k)*u3(k); Java Expression: getVariable(8,k)+getVariable(5,k)-6*Math.pow(10,-6)*getVariable(5,k)*getVariable(3,k)
Aug 31, 2024 12:43:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.018186611097198; Expression=u8(k)+u5(k)-6*Math.pow(10,-5)*u5(k)*u3(k); Java Expression: getVariable(8,k)+getVariable(5,k)-6*Math.pow(10,-5)*getVariable(5,k)*getVariable(3,k)
Aug 31, 2024 12:43:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.015344191610994; Expression=u8(k)+u5(k)-69*Math.pow(10,-6)*u5(k)*u3(k); Java Expression: getVariable(8,k)+getVariable(5,k)-69*Math.pow(10,-6)*getVariable(5,k)*getVariable(3,k)
Aug 31, 2024 12:43:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.011580588214551; Expression=u8(k)+u5(k)-81*Math.pow(10,-6)*u5(k)*u3(k); Java Expression: getVariable(8,k)+getVariable(5,k)-81*Math.pow(10,-6)*getVariable(5,k)*getVariable(3,k)
Aug 31, 2024 12:43:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.820123649628796; Expression=u8(k)+u5(k)-96*Math.pow(10,-5)*u5(k)*u3(k); Java Expression: getVariable(8,k)+getVariable(5,k)-96*Math.pow(10,-5)*getVariable(5,k)*getVariable(3,k)
Aug 31, 2024 12:43:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.785856879279834; Expression=u8(k)+u5(k)-96*Math.pow(10,-5)*u3(k)*u3(k); Java Expression: getVariable(8,k)+getVariable(5,k)-96*Math.pow(10,-5)*getVariable(3,k)*getVariable(3,k)
Aug 31, 2024 12:43:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.782723267596503; Expression=u8(k)+u5(k)-99*Math.pow(10,-5)*u3(k)*u3(k); Java Expression: getVariable(8,k)+getVariable(5,k)-99*Math.pow(10,-5)*getVariable(3,k)*getVariable(3,k)
Aug 31, 2024 12:43:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.77117476201081; Expression=u8(k)+u5(k)-60*Math.pow(10,-5)*u1(k)*u3(k); Java Expression: getVariable(8,k)+getVariable(5,k)-60*Math.pow(10,-5)*getVariable(1,k)*getVariable(3,k)
Aug 31, 2024 12:43:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.428589100674966; Expression=u8(k)+u5(k)-60*Math.pow(10,-5)*u1(k)*u3(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(5,k)-60*Math.pow(10,-5)*getVariable(1,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:43:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.283203681036021; Expression=u8(k)+u5(k)-99*Math.pow(10,-5)*u1(k)*u3(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(5,k)-99*Math.pow(10,-5)*getVariable(1,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:43:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.053960890414428; Expression=34*Math.pow(10,-2)*u7(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 12:43:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.033341515974674; Expression=34*Math.pow(10,-2)*u6(k)+u8(k); Java Expression: 34*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)
Aug 31, 2024 12:43:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.851889863509831; Expression=34*Math.pow(10,-2)*u6(k)+u8(k)-96*Math.pow(10,-5)*u3(k)*u3(k); Java Expression: 34*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)-96*Math.pow(10,-5)*getVariable(3,k)*getVariable(3,k)
Aug 31, 2024 12:43:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.851666980579618; Expression=34*Math.pow(10,-2)*u6(k)+u8(k)-99*Math.pow(10,-5)*u3(k)*u3(k); Java Expression: 34*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)-99*Math.pow(10,-5)*getVariable(3,k)*getVariable(3,k)
Aug 31, 2024 12:43:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.668537020181837; Expression=34*Math.pow(10,-2)*u7(k)-96*Math.pow(10,-5)*u5(k)*u3(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)-96*Math.pow(10,-5)*getVariable(5,k)*getVariable(3,k)
Aug 31, 2024 12:43:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.557267731161156; Expression=34*Math.pow(10,-2)*u7(k)-96*Math.pow(10,-5)*u3(k)*u3(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)-96*Math.pow(10,-5)*getVariable(3,k)*getVariable(3,k)
Aug 31, 2024 12:43:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.546920745492816; Expression=34*Math.pow(10,-2)*u7(k)-99*Math.pow(10,-5)*u3(k)*u3(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)-99*Math.pow(10,-5)*getVariable(3,k)*getVariable(3,k)
Aug 31, 2024 12:43:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.459197164814114; Expression=34*Math.pow(10,-2)*u7(k)-60*Math.pow(10,-5)*u1(k)*u3(k)+u8(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)-60*Math.pow(10,-5)*getVariable(1,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:43:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.438475416505179; Expression=34*Math.pow(10,-2)*u7(k)-60*Math.pow(10,-5)*u6(k)*u3(k)+u8(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)-60*Math.pow(10,-5)*getVariable(6,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:43:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.2631735975809; Expression=34*Math.pow(10,-2)*u7(k)-80*Math.pow(10,-5)*u1(k)*u3(k)+u8(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)-80*Math.pow(10,-5)*getVariable(1,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:43:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.153099904907039; Expression=34*Math.pow(10,-2)*u7(k)-96*Math.pow(10,-5)*u1(k)*u3(k)+u8(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)-96*Math.pow(10,-5)*getVariable(1,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:43:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.13730941905026; Expression=34*Math.pow(10,-2)*u7(k)-99*Math.pow(10,-5)*u1(k)*u3(k)+u8(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)-99*Math.pow(10,-5)*getVariable(1,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:43:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.955668321511763; Expression=34*Math.pow(10,-2)*u7(k)-60*Math.pow(10,-5)*u2(k)*u3(k)+u8(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)-60*Math.pow(10,-5)*getVariable(2,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:43:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.944098518829308; Expression=34*Math.pow(10,-2)*u7(k)-65*Math.pow(10,-5)*u2(k)*u3(k)+u8(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)-65*Math.pow(10,-5)*getVariable(2,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:43:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.93749878335996; Expression=35*Math.pow(10,-2)*u7(k)-65*Math.pow(10,-5)*u2(k)*u3(k)+u8(k); Java Expression: 35*Math.pow(10,-2)*getVariable(7,k)-65*Math.pow(10,-5)*getVariable(2,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:43:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.839607271173316; Expression=35*Math.pow(10,-2)*u7(k)-80*Math.pow(10,-5)*u2(k)*u3(k)+u8(k); Java Expression: 35*Math.pow(10,-2)*getVariable(7,k)-80*Math.pow(10,-5)*getVariable(2,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:43:46 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.839607271173316 -->> Avg.: 2495347.7388783633 -->> Std. Dev.: 1.1030049295536248E7
Aug 31, 2024 12:44:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.839109559106584; Expression=35*Math.pow(10,-2)*u7(k)-81*Math.pow(10,-5)*u2(k)*u3(k)+u8(k); Java Expression: 35*Math.pow(10,-2)*getVariable(7,k)-81*Math.pow(10,-5)*getVariable(2,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:44:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.83311142857858; Expression=36*Math.pow(10,-2)*u7(k)-81*Math.pow(10,-5)*u2(k)*u3(k)+u8(k); Java Expression: 36*Math.pow(10,-2)*getVariable(7,k)-81*Math.pow(10,-5)*getVariable(2,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:44:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.740454767131523; Expression=36*Math.pow(10,-2)*u7(k)-99*Math.pow(10,-5)*u2(k)*u3(k)+u8(k); Java Expression: 36*Math.pow(10,-2)*getVariable(7,k)-99*Math.pow(10,-5)*getVariable(2,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:44:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.739552607449738; Expression=36*Math.pow(10,-2)*u7(k)-95*Math.pow(10,-5)*u2(k)*u3(k)+u8(k); Java Expression: 36*Math.pow(10,-2)*getVariable(7,k)-95*Math.pow(10,-5)*getVariable(2,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:44:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.738617622677238; Expression=36*Math.pow(10,-2)*u7(k)-96*Math.pow(10,-5)*u2(k)*u3(k)+u8(k); Java Expression: 36*Math.pow(10,-2)*getVariable(7,k)-96*Math.pow(10,-5)*getVariable(2,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:44:48 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.738617622677238 -->> Avg.: 5665.524742376961 -->> Std. Dev.: 19579.388884564414
Aug 31, 2024 12:45:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7384563296942455; Expression=36*Math.pow(10,-2)*u7(k)-97*Math.pow(10,-5)*u2(k)*u3(k)+u8(k); Java Expression: 36*Math.pow(10,-2)*getVariable(7,k)-97*Math.pow(10,-5)*getVariable(2,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:46:15 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.7384563296942455 -->> Avg.: 201.5135388534165 -->> Std. Dev.: 596.1726830641121
Aug 31, 2024 12:47:51 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.7384563296942455 -->> Avg.: 16.244642976289107 -->> Std. Dev.: 23.799406467858592
Aug 31, 2024 12:48:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.733085856402651; Expression=37*Math.pow(10,-2)*u7(k)-97*Math.pow(10,-5)*u2(k)*u3(k)+u8(k); Java Expression: 37*Math.pow(10,-2)*getVariable(7,k)-97*Math.pow(10,-5)*getVariable(2,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:48:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.710950225991373; Expression=37*Math.pow(10,-2)*u7(k)-99*Math.pow(10,-5)*u2(k)*u3(k)+u8(k); Java Expression: 37*Math.pow(10,-2)*getVariable(7,k)-99*Math.pow(10,-5)*getVariable(2,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:49:37 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.710950225991373 -->> Avg.: 6.193239766958784 -->> Std. Dev.: 1.4294418548966743
Aug 31, 2024 12:51:32 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.710950225991373 -->> Avg.: 5.750608003956177 -->> Std. Dev.: 0.0510111086369269
Aug 31, 2024 12:52:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.644170475630358; Expression=37*Math.pow(10,-2)*u7(k)-11*Math.pow(10,-4)*u2(k)*u3(k)+u8(k); Java Expression: 37*Math.pow(10,-2)*getVariable(7,k)-11*Math.pow(10,-4)*getVariable(2,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:53:20 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.644170475630358 -->> Avg.: 5.721473305807956 -->> Std. Dev.: 0.021241291496084252
Aug 31, 2024 12:55:03 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.644170475630358 -->> Avg.: 5.703042068160229 -->> Std. Dev.: 0.03496403409966332
Aug 31, 2024 12:55:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.618040989737432; Expression=37*Math.pow(10,-2)*u7(k)-5*Math.pow(10,-3)*u3(k)*u3(k)+u8(k); Java Expression: 37*Math.pow(10,-2)*getVariable(7,k)-5*Math.pow(10,-3)*getVariable(3,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:56:52 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 5.618040989737432 -->> Avg.: 5.679804134911655 -->> Std. Dev.: 0.04253098923018347
Aug 31, 2024 12:57:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5385335938425335; Expression=38*Math.pow(10,-2)*u7(k)-5*Math.pow(10,-3)*u3(k)*u3(k)+u8(k); Java Expression: 38*Math.pow(10,-2)*getVariable(7,k)-5*Math.pow(10,-3)*getVariable(3,k)*getVariable(3,k)+getVariable(8,k)
Aug 31, 2024 12:58:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.492049842372192; Expression=38*Math.pow(10,-2)*u7(k)-29*Math.pow(10,-3)*u3(k)*u3(k)+u3(k); Java Expression: 38*Math.pow(10,-2)*getVariable(7,k)-29*Math.pow(10,-3)*getVariable(3,k)*getVariable(3,k)+getVariable(3,k)
Aug 31, 2024 12:58:28 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 5.492049842372192 -->> Avg.: 5.644048134201781 -->> Std. Dev.: 0.06444728300241712

Execution time: 1022.335 seconds.



@@;38*Math.pow(10,-2)*getVariable(7,k)-29*Math.pow(10,-3)*getVariable(3,k)*getVariable(3,k)+getVariable(3,k)




 Execution report
==================

#Run;Obj.;Model;Time
0;4.935190841831352;getVariable(7,k)-getVariable(3,k)-getVariable(5,k)*83*Math.pow(10,-4)*getVariable(7,k)-99*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k)-99*Math.pow(10,-6)*getVariable(2,k)*getVariable(2,k)+getVariable(8,k);800.946
1;4.749950484434393;30*Math.pow(10,-2)*getVariable(6,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k);617.886
2;4.912927230822389;getVariable(7,k)-getVariable(5,k)-getVariable(4,k)+99*Math.pow(10,-1)*getVariable(5,k)*4*Math.pow(10,-1)*getVariable(5,k)*13*Math.pow(10,-4)+getVariable(8,k)-97*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-4)*getVariable(7,k)*97*Math.pow(10,-3)*getVariable(1,k);1161.422
3;5.415451391942429;1*Math.pow(10,+1)+getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-57*Math.pow(10,-3)*getVariable(1,k)-57*Math.pow(10,-3)*getVariable(7,k);781.85
4;4.8965495586032;getVariable(6,k)*getVariable(8,k)*86*Math.pow(10,-4)*getVariable(8,k)+65*Math.pow(10,-2)*getVariable(3,k)+getVariable(8,k)*getVariable(8,k)+72*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-getVariable(3,k);788.891
5;5.9287736312015955;64*Math.pow(10,-3)-14*Math.pow(10,-1)+getVariable(7,k)-getVariable(5,k)-getVariable(4,k);607.156
6;4.9428911973915906;getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)*85*Math.pow(10,-4)*getVariable(7,k)-getVariable(8,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)-18*Math.pow(10,-3)*getVariable(2,k);941.137
7;5.372207218989392;getVariable(7,k)-getVariable(5,k)+getVariable(8,k)-getVariable(1,k)*99*Math.pow(10,-3)+getVariable(5,k)*95*Math.pow(10,-3)-getVariable(4,k)+51*Math.pow(10,-3)*getVariable(9,k);1348.171
8;5.4900665273372615;24*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)-getVariable(7,k)*64*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k);1065.9
9;5.492049842372192;38*Math.pow(10,-2)*getVariable(7,k)-29*Math.pow(10,-3)*getVariable(3,k)*getVariable(3,k)+getVariable(3,k);1022.335
