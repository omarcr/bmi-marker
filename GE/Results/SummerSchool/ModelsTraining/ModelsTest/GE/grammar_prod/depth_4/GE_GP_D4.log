{MutationProb=0.05, Executions=10, ChangeProbabilityDynamic=0.25, TrainingPath=/home/turing/Downloads/PMT-20240830T203755Z-001/PMT_2/Data/train_bmi_marker.csv, MutationTypeDynamic=All genes, GrammaticalEvolutionType=0, Objectives=0, ClassPathSeparator=:, TestPath=/Users/hidalgo/GitHub/bmi-marker/linear-exp/test_bmi_marker.csv, NumGenerations=1000, NumIndividuals=1024, RealDataCopied=0, ErrorThreshold=0.0, TypeOfDepthForDynamicSGE=0, ChromosomeLength=100, TournamentSize=5, ModelWidth=0, BnfPathFile=/home/turing/Downloads/PMT-20240830T203755Z-001/PMT_2/exp2_ladya/gr_BMI_SR.bnf, LoggerLevel=INFO, LoggerBasePath=/home/turing/Downloads/PMT-20240830T203755Z-001/PMT_2/work, ViewResults=false, CrossoverTypeDynamic=Uniform, AlgorithmType=1, LogPopulation=0, CrossoverProb=0.9, MaxTreeDepth=14, WorkDir=/home/turing/Downloads/PMT-20240830T203755Z-001/PMT_2/work, NormalizeData=false, MaxWraps=4}
Aug 31, 2024 2:49:24 AM data.NormalizedDataTable <init>
INFO: Reading data file ...

Detecting file format ...

Aug 31, 2024 2:49:25 AM data.NormalizedDataTable <init>
INFO: ... done.
jeco.core.algorithm.ga.StaticSimpleGeneticAlgorithm@77501b1
algorithm.GramEvalTemporalModel@9b2ef2f

Run #0
========
Aug 31, 2024 2:49:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=166.80925709843595; Expression=90*Math.pow(10,-2)/92*Math.pow(10,+2)+89*Math.pow(10,-4)-u4(k)-u6(k); Java Expression: 90*Math.pow(10,-2)/92*Math.pow(10,+2)+89*Math.pow(10,-4)-getVariable(4,k)-getVariable(6,k)
Aug 31, 2024 2:49:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=85.6117284220116; Expression=12*Math.pow(10,+3)/u7(k); Java Expression: 12*Math.pow(10,+3)/getVariable(7,k)
Aug 31, 2024 2:49:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=50.34998850563035; Expression=u5(k)/u5(k)/u3(k)+u1(k); Java Expression: getVariable(5,k)/getVariable(5,k)/getVariable(3,k)+getVariable(1,k)
Aug 31, 2024 2:49:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=28.39809885767863; Expression=u1(k)-u5(k)*u8(k); Java Expression: getVariable(1,k)-getVariable(5,k)*getVariable(8,k)
Aug 31, 2024 2:49:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=21.10644653880053; Expression=91*Math.pow(10,-1)/u7(k)*u2(k); Java Expression: 91*Math.pow(10,-1)/getVariable(7,k)*getVariable(2,k)
Aug 31, 2024 2:49:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=14.519624668712725; Expression=u9(k)-u8(k); Java Expression: getVariable(9,k)-getVariable(8,k)
Aug 31, 2024 2:49:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=13.13999270925004; Expression=60*Math.pow(10,-5)+u8(k)/u7(k)*u3(k)*u1(k)-43*Math.pow(10,-6)/u8(k); Java Expression: 60*Math.pow(10,-5)+getVariable(8,k)/getVariable(7,k)*getVariable(3,k)*getVariable(1,k)-43*Math.pow(10,-6)/getVariable(8,k)
Aug 31, 2024 2:49:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=10.398031711759318; Expression=2*Math.pow(10,-4)*u1(k)*29*Math.pow(10,-9)+u4(k); Java Expression: 2*Math.pow(10,-4)*getVariable(1,k)*29*Math.pow(10,-9)+getVariable(4,k)
Aug 31, 2024 2:49:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.53354343937111; Expression=3*Math.pow(10,-1)*u6(k); Java Expression: 3*Math.pow(10,-1)*getVariable(6,k)
Aug 31, 2024 2:49:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330471375996698; Expression=92*Math.pow(10,-9)+u5(k); Java Expression: 92*Math.pow(10,-9)+getVariable(5,k)
Aug 31, 2024 2:49:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 31, 2024 2:49:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.826617352510731; Expression=37*Math.pow(10,-2)*u6(k); Java Expression: 37*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 2:49:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.514879905512585; Expression=33*Math.pow(10,-2)*u6(k); Java Expression: 33*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 2:49:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.420752558560338; Expression=35*Math.pow(10,-2)*u6(k); Java Expression: 35*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 2:49:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.404135094767029; Expression=34*Math.pow(10,-2)*u6(k); Java Expression: 34*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 2:49:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.053960890414428; Expression=34*Math.pow(10,-2)*u7(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 2:49:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.011279224818129; Expression=30*Math.pow(10,-2)*u7(k); Java Expression: 30*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 2:49:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.802980697300695; Expression=33*Math.pow(10,-2)*u7(k); Java Expression: 33*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 2:49:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709785324194373; Expression=32*Math.pow(10,-2)*u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 2:49:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.394620406593207; Expression=92*Math.pow(10,-6)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u3(k)-u9(k)*15*Math.pow(10,-8)/u9(k); Java Expression: 92*Math.pow(10,-6)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(3,k)-getVariable(9,k)*15*Math.pow(10,-8)/getVariable(9,k)
Aug 31, 2024 2:49:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.394618102332518; Expression=99*Math.pow(10,-6)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u3(k)-u9(k)*15*Math.pow(10,-8)/u9(k); Java Expression: 99*Math.pow(10,-6)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(3,k)-getVariable(9,k)*15*Math.pow(10,-8)/getVariable(9,k)
Aug 31, 2024 2:49:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.394618076432142; Expression=99*Math.pow(10,-6)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u3(k)-u9(k)*15*Math.pow(10,-8)/u6(k); Java Expression: 99*Math.pow(10,-6)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(3,k)-getVariable(9,k)*15*Math.pow(10,-8)/getVariable(6,k)
Aug 31, 2024 2:49:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.364957827496426; Expression=92*Math.pow(10,-3)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u3(k)-u6(k)*15*Math.pow(10,-8)/u9(k); Java Expression: 92*Math.pow(10,-3)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(3,k)-getVariable(6,k)*15*Math.pow(10,-8)/getVariable(9,k)
Aug 31, 2024 2:49:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.153423111328097; Expression=92*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u3(k)-u9(k)*15*Math.pow(10,-8)/u9(k); Java Expression: 92*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(3,k)-getVariable(9,k)*15*Math.pow(10,-8)/getVariable(9,k)
Aug 31, 2024 2:49:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0537339163779365; Expression=92*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u4(k)-u9(k)*15*Math.pow(10,-8)/u9(k); Java Expression: 92*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(4,k)-getVariable(9,k)*15*Math.pow(10,-8)/getVariable(9,k)
Aug 31, 2024 2:49:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.927043574436893; Expression=92*Math.pow(10,-6)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u4(k)-u9(k)*15*Math.pow(10,-8)/u9(k); Java Expression: 92*Math.pow(10,-6)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(4,k)-getVariable(9,k)*15*Math.pow(10,-8)/getVariable(9,k)
Aug 31, 2024 2:49:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.927043521622941; Expression=92*Math.pow(10,-6)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u4(k)-u6(k)*15*Math.pow(10,-8)/u9(k); Java Expression: 92*Math.pow(10,-6)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(4,k)-getVariable(6,k)*15*Math.pow(10,-8)/getVariable(9,k)
Aug 31, 2024 2:49:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.927041542060024; Expression=59*Math.pow(10,-6)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u4(k)-u9(k)*15*Math.pow(10,-8)/u9(k); Java Expression: 59*Math.pow(10,-6)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(4,k)-getVariable(9,k)*15*Math.pow(10,-8)/getVariable(9,k)
Aug 31, 2024 2:49:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7068056114596475; Expression=92*Math.pow(10,-6)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u4(k)-u9(k)*15*Math.pow(10,-8)/83*Math.pow(10,+9)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 92*Math.pow(10,-6)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(4,k)-getVariable(9,k)*15*Math.pow(10,-8)/83*Math.pow(10,+9)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:49:42 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.7068056114596475 -->> Avg.: 7.081068604999446E9 -->> Std. Dev.: 4.0668145428417336E10
Aug 31, 2024 2:49:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.706804784994341; Expression=99*Math.pow(10,-6)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u4(k)-u9(k)*15*Math.pow(10,-8)/83*Math.pow(10,+9)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 99*Math.pow(10,-6)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(4,k)-getVariable(9,k)*15*Math.pow(10,-8)/83*Math.pow(10,+9)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:49:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.69292947684358; Expression=13*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u4(k)-u9(k)*15*Math.pow(10,-8)/83*Math.pow(10,+9)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 13*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(4,k)-getVariable(9,k)*15*Math.pow(10,-8)/83*Math.pow(10,+9)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:49:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.612244646194642; Expression=99*Math.pow(10,-6)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u4(k)-u6(k)*67*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/54*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 99*Math.pow(10,-6)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(4,k)-getVariable(6,k)*67*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/54*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:49:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.598162091413043; Expression=99*Math.pow(10,-6)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u4(k)-u6(k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/56*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 99*Math.pow(10,-6)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(4,k)-getVariable(6,k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/56*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:49:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5009070073388715; Expression=99*Math.pow(10,-6)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u4(k)-u4(k)*15*Math.pow(10,-8)/83*Math.pow(10,+9)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 99*Math.pow(10,-6)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(4,k)-getVariable(4,k)*15*Math.pow(10,-8)/83*Math.pow(10,+9)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:49:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.478466608006076; Expression=92*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u4(k)-u4(k)*15*Math.pow(10,-8)/83*Math.pow(10,+9)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 92*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(4,k)-getVariable(4,k)*15*Math.pow(10,-8)/83*Math.pow(10,+9)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:49:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.474259303104828; Expression=99*Math.pow(10,-6)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u4(k)-u6(k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 99*Math.pow(10,-6)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(4,k)-getVariable(6,k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:49:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.424794299484145; Expression=99*Math.pow(10,-6)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u4(k)-u6(k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/70*Math.pow(10,+1)/19*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 99*Math.pow(10,-6)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(4,k)-getVariable(6,k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/70*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:49:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.245702754577552; Expression=79*Math.pow(10,-6)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u4(k)-u1(k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 79*Math.pow(10,-6)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:49:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.227652117280992; Expression=13*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u4(k)-u1(k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 13*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:49:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2107645035728964; Expression=28*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u4(k)-u1(k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 28*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:49:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.187878462885582; Expression=95*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u4(k)-u1(k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 95*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:49:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1854908051019635; Expression=79*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*75*Math.pow(10,+6)-u4(k)-u1(k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 79*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*75*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:49:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.8534456228417255; Expression=28*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/7*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 28*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/7*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:49:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.842085855803697; Expression=92*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/7*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 92*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/7*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:49:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.839927689821535; Expression=87*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/7*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 87*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/7*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:49:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.8371592136455; Expression=77*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/7*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 77*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/7*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:50:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.836489924255831; Expression=71*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/7*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 71*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*73*Math.pow(10,-8)/83*Math.pow(10,+8)/47*Math.pow(10,+1)/7*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:50:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.825182875192354; Expression=92*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*73*Math.pow(10,-8)/80*Math.pow(10,+8)/47*Math.pow(10,+1)/7*Math.pow(10,-1)*u5(k)+u8(k); Java Expression: 92*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*73*Math.pow(10,-8)/80*Math.pow(10,+8)/47*Math.pow(10,+1)/7*Math.pow(10,-1)*getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:50:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.82357010335296; Expression=71*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*73*Math.pow(10,-8)/80*Math.pow(10,+8)/47*Math.pow(10,+1)/7*Math.pow(10,-1)*u5(k)/u8(k); Java Expression: 71*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*73*Math.pow(10,-8)/80*Math.pow(10,+8)/47*Math.pow(10,+1)/7*Math.pow(10,-1)*getVariable(5,k)/getVariable(8,k)
Aug 31, 2024 2:50:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.823544712995552; Expression=69*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*73*Math.pow(10,-8)/80*Math.pow(10,+8)/47*Math.pow(10,+1)/7*Math.pow(10,-1)*u5(k)/u8(k); Java Expression: 69*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*73*Math.pow(10,-8)/80*Math.pow(10,+8)/47*Math.pow(10,+1)/7*Math.pow(10,-1)*getVariable(5,k)/getVariable(8,k)
Aug 31, 2024 2:50:14 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 4.823544712995552 -->> Avg.: 215082.35739431935 -->> Std. Dev.: 1055815.8065797503
Aug 31, 2024 2:50:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.813631446536983; Expression=94*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*81*Math.pow(10,-8)/80*Math.pow(10,+8)/47*Math.pow(10,+1)/7*Math.pow(10,-1)*u5(k)/u8(k); Java Expression: 94*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*81*Math.pow(10,-8)/80*Math.pow(10,+8)/47*Math.pow(10,+1)/7*Math.pow(10,-1)*getVariable(5,k)/getVariable(8,k)
Aug 31, 2024 2:50:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.80668580793765; Expression=94*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/45*Math.pow(10,+1)/7*Math.pow(10,-1)*u5(k)/u8(k); Java Expression: 94*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/45*Math.pow(10,+1)/7*Math.pow(10,-1)*getVariable(5,k)/getVariable(8,k)
Aug 31, 2024 2:50:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.805396382995778; Expression=98*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/45*Math.pow(10,+1)/7*Math.pow(10,-1)*u5(k)/u8(k); Java Expression: 98*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/45*Math.pow(10,+1)/7*Math.pow(10,-1)*getVariable(5,k)/getVariable(8,k)
Aug 31, 2024 2:50:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.7873564397642445; Expression=94*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/45*Math.pow(10,+1)/19*Math.pow(10,-1)*u1(k)+u8(k); Java Expression: 94*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/45*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:50:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.786067731654629; Expression=87*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/45*Math.pow(10,+1)/19*Math.pow(10,-1)*u1(k)+u8(k); Java Expression: 87*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/45*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:50:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.780140021230088; Expression=71*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*73*Math.pow(10,-8)/80*Math.pow(10,+8)/45*Math.pow(10,+1)/19*Math.pow(10,-1)*u1(k)+u8(k); Java Expression: 71*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*73*Math.pow(10,-8)/80*Math.pow(10,+8)/45*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:50:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.779802199033893; Expression=69*Math.pow(10,-2)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*73*Math.pow(10,-8)/80*Math.pow(10,+8)/45*Math.pow(10,+1)/19*Math.pow(10,-1)*u1(k)+u8(k); Java Expression: 69*Math.pow(10,-2)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*73*Math.pow(10,-8)/80*Math.pow(10,+8)/45*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:50:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.773692337447246; Expression=79*Math.pow(10,-6)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,+1)/19*Math.pow(10,-1)*u1(k)+u8(k); Java Expression: 79*Math.pow(10,-6)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:50:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.773574653034247; Expression=79*Math.pow(10,-4)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,+1)/19*Math.pow(10,-1)*u1(k)+u8(k); Java Expression: 79*Math.pow(10,-4)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:50:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.773549381536889; Expression=97*Math.pow(10,-4)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,+1)/19*Math.pow(10,-1)*u1(k)+u8(k); Java Expression: 97*Math.pow(10,-4)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:50:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.773197501863866; Expression=44*Math.pow(10,-3)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,+1)/19*Math.pow(10,-1)*u1(k)+u8(k); Java Expression: 44*Math.pow(10,-3)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:50:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.773092501550614; Expression=79*Math.pow(10,-3)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,+1)/19*Math.pow(10,-1)*u1(k)+u8(k); Java Expression: 79*Math.pow(10,-3)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:50:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.773091788677021; Expression=74*Math.pow(10,-3)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,+1)/19*Math.pow(10,-1)*u1(k)+u8(k); Java Expression: 74*Math.pow(10,-3)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:50:59 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 4.773091788677021 -->> Avg.: 115.12599348643629 -->> Std. Dev.: 404.19225016852477
Aug 31, 2024 2:51:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.773091512236129; Expression=75*Math.pow(10,-3)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,+1)/19*Math.pow(10,-1)*u1(k)+u8(k); Java Expression: 75*Math.pow(10,-3)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:51:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.773091512236128; Expression=75*Math.pow(10,-3)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,-1)/19*Math.pow(10,+1)*u1(k)+u8(k); Java Expression: 75*Math.pow(10,-3)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,-1)/19*Math.pow(10,+1)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:51:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.773091445303045; Expression=76*Math.pow(10,-3)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,+1)/19*Math.pow(10,-1)*u1(k)+u8(k); Java Expression: 76*Math.pow(10,-3)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,+1)/19*Math.pow(10,-1)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:51:58 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 4.773091445303045 -->> Avg.: 12.061390739316344 -->> Std. Dev.: 13.940812109259054
Aug 31, 2024 2:52:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.773091445303044; Expression=76*Math.pow(10,-3)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,+6)/19*Math.pow(10,-6)*u1(k)+u8(k); Java Expression: 76*Math.pow(10,-3)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/80*Math.pow(10,+8)/50*Math.pow(10,+6)/19*Math.pow(10,-6)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:53:26 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.773091445303044 -->> Avg.: 5.539817630832524 -->> Std. Dev.: 1.820676489015119
Aug 31, 2024 2:54:39 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.773091445303044 -->> Avg.: 4.865118810762813 -->> Std. Dev.: 0.24025467984292237
Aug 31, 2024 2:55:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.773054660441311; Expression=76*Math.pow(10,-3)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*75*Math.pow(10,-8)/42*Math.pow(10,+8)/95*Math.pow(10,+6)/19*Math.pow(10,-6)*u1(k)+u8(k); Java Expression: 76*Math.pow(10,-3)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/42*Math.pow(10,+8)/95*Math.pow(10,+6)/19*Math.pow(10,-6)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:55:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.773048150961829; Expression=78*Math.pow(10,-3)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*75*Math.pow(10,-8)/42*Math.pow(10,+8)/95*Math.pow(10,+6)/19*Math.pow(10,-6)*u1(k)+u8(k); Java Expression: 78*Math.pow(10,-3)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/42*Math.pow(10,+8)/95*Math.pow(10,+6)/19*Math.pow(10,-6)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:55:32 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.773048150961829 -->> Avg.: 4.777621123972095 -->> Std. Dev.: 0.012451603824703623
Aug 31, 2024 2:55:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.773026049612306; Expression=92*Math.pow(10,-3)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*75*Math.pow(10,-8)/42*Math.pow(10,+8)/95*Math.pow(10,+6)/19*Math.pow(10,-6)*u1(k)+u8(k); Java Expression: 92*Math.pow(10,-3)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/42*Math.pow(10,+8)/95*Math.pow(10,+6)/19*Math.pow(10,-6)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:55:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.773026042271032; Expression=93*Math.pow(10,-3)+9*Math.pow(10,-9)*u7(k)*80*Math.pow(10,+6)-u4(k)-u1(k)*75*Math.pow(10,-8)/42*Math.pow(10,+8)/95*Math.pow(10,+6)/19*Math.pow(10,-6)*u1(k)+u8(k); Java Expression: 93*Math.pow(10,-3)+9*Math.pow(10,-9)*getVariable(7,k)*80*Math.pow(10,+6)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/42*Math.pow(10,+8)/95*Math.pow(10,+6)/19*Math.pow(10,-6)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:56:23 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.773026042271032 -->> Avg.: 4.773078299794256 -->> Std. Dev.: 2.5614828327792786E-5
Aug 31, 2024 2:56:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.773026042271028; Expression=93*Math.pow(10,-3)+9*Math.pow(10,-8)*u7(k)*80*Math.pow(10,+5)-u4(k)-u1(k)*75*Math.pow(10,-8)/42*Math.pow(10,+8)/95*Math.pow(10,+6)/19*Math.pow(10,-6)*u1(k)+u8(k); Java Expression: 93*Math.pow(10,-3)+9*Math.pow(10,-8)*getVariable(7,k)*80*Math.pow(10,+5)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-8)/42*Math.pow(10,+8)/95*Math.pow(10,+6)/19*Math.pow(10,-6)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:57:14 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.773026042271028 -->> Avg.: 4.773065487294408 -->> Std. Dev.: 3.147794305799176E-5
Aug 31, 2024 2:57:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.773026042271027; Expression=93*Math.pow(10,-3)+9*Math.pow(10,-8)*u7(k)*80*Math.pow(10,+5)-u4(k)-u1(k)*75*Math.pow(10,-6)/42*Math.pow(10,+8)/95*Math.pow(10,+4)/19*Math.pow(10,-6)*u1(k)+u8(k); Java Expression: 93*Math.pow(10,-3)+9*Math.pow(10,-8)*getVariable(7,k)*80*Math.pow(10,+5)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-6)/42*Math.pow(10,+8)/95*Math.pow(10,+4)/19*Math.pow(10,-6)*getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:58:05 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.773026042271027 -->> Avg.: 4.773052713264718 -->> Std. Dev.: 3.162242075384756E-5

Execution time: 522.797 seconds.



@@;93*Math.pow(10,-3)+9*Math.pow(10,-8)*getVariable(7,k)*80*Math.pow(10,+5)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-6)/42*Math.pow(10,+8)/95*Math.pow(10,+4)/19*Math.pow(10,-6)*getVariable(1,k)+getVariable(8,k)



Run #1
========
Aug 31, 2024 2:58:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3998.465600566549; Expression=19*Math.pow(10,-1)-u8(k)/u9(k)+u9(k)-u9(k)*u6(k); Java Expression: 19*Math.pow(10,-1)-getVariable(8,k)/getVariable(9,k)+getVariable(9,k)-getVariable(9,k)*getVariable(6,k)
Aug 31, 2024 2:58:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=32.73895723047263; Expression=87*Math.pow(10,-8)+u8(k); Java Expression: 87*Math.pow(10,-8)+getVariable(8,k)
Aug 31, 2024 2:58:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=31.484451216425676; Expression=u7(k)/u4(k); Java Expression: getVariable(7,k)/getVariable(4,k)
Aug 31, 2024 2:58:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=28.748353886730094; Expression=u6(k)-u4(k); Java Expression: getVariable(6,k)-getVariable(4,k)
Aug 31, 2024 2:58:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=25.770273330195916; Expression=u4(k)*u8(k); Java Expression: getVariable(4,k)*getVariable(8,k)
Aug 31, 2024 2:58:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=10.39803174050367; Expression=79*Math.pow(10,-9)+u4(k); Java Expression: 79*Math.pow(10,-9)+getVariable(4,k)
Aug 31, 2024 2:58:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.38212219182288; Expression=u5(k)+u4(k)/u5(k); Java Expression: getVariable(5,k)+getVariable(4,k)/getVariable(5,k)
Aug 31, 2024 2:58:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.33047105304667; Expression=14*Math.pow(10,-6)+u5(k); Java Expression: 14*Math.pow(10,-6)+getVariable(5,k)
Aug 31, 2024 2:58:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330381727515784; Expression=39*Math.pow(10,-4)+u5(k); Java Expression: 39*Math.pow(10,-4)+getVariable(5,k)
Aug 31, 2024 2:58:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:58:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.267862067704076; Expression=83*Math.pow(10,-3)*u5(k)-u4(k)+u7(k)-u5(k); Java Expression: 83*Math.pow(10,-3)*getVariable(5,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.576239154728736; Expression=43*Math.pow(10,-3)*u5(k)-u4(k)+u7(k)-u5(k); Java Expression: 43*Math.pow(10,-3)*getVariable(5,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.138527568773394; Expression=7*Math.pow(10,-3)*u5(k)-u4(k)+u7(k)-u5(k); Java Expression: 7*Math.pow(10,-3)*getVariable(5,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077430983771817; Expression=43*Math.pow(10,-8)*u5(k)-u4(k)+u7(k)-u5(k); Java Expression: 43*Math.pow(10,-8)*getVariable(5,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427490478961; Expression=43*Math.pow(10,-8)/u5(k)-u4(k)+u7(k)-u5(k); Java Expression: 43*Math.pow(10,-8)/getVariable(5,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427488101968; Expression=43*Math.pow(10,-9)/u5(k)-u4(k)+u7(k)-u5(k); Java Expression: 43*Math.pow(10,-9)/getVariable(5,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0774274879631855; Expression=72*Math.pow(10,-9)/u7(k)-u4(k)+u7(k)-u5(k); Java Expression: 72*Math.pow(10,-9)/getVariable(7,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487921423; Expression=43*Math.pow(10,-9)/u1(k)-u4(k)+u7(k)-u5(k); Java Expression: 43*Math.pow(10,-9)/getVariable(1,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0774274878767205; Expression=20*Math.pow(10,-9)/u1(k)-u4(k)+u7(k)-u5(k); Java Expression: 20*Math.pow(10,-9)/getVariable(1,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487843687; Expression=3*Math.pow(10,-9)/u1(k)-u4(k)+u7(k)-u5(k); Java Expression: 3*Math.pow(10,-9)/getVariable(1,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487843078; Expression=3*Math.pow(10,-9)/u7(k)-u4(k)+u7(k)-u5(k); Java Expression: 3*Math.pow(10,-9)/getVariable(7,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487841572; Expression=3*Math.pow(10,-9)/u2(k)-u4(k)+u7(k)-u5(k); Java Expression: 3*Math.pow(10,-9)/getVariable(2,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0774274878398; Expression=1*Math.pow(10,-9)/u1(k)-u4(k)+u7(k)-u5(k); Java Expression: 1*Math.pow(10,-9)/getVariable(1,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487839597; Expression=1*Math.pow(10,-9)/u7(k)-u4(k)+u7(k)-u5(k); Java Expression: 1*Math.pow(10,-9)/getVariable(7,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487839097; Expression=1*Math.pow(10,-9)/u2(k)-u4(k)+u7(k)-u5(k); Java Expression: 1*Math.pow(10,-9)/getVariable(2,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.058143099531343; Expression=1*Math.pow(10,-9)-u8(k)-u4(k)+u7(k)-u5(k); Java Expression: 1*Math.pow(10,-9)-getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.058143098224499; Expression=43*Math.pow(10,-9)-u8(k)-u4(k)+u7(k)-u5(k); Java Expression: 43*Math.pow(10,-9)-getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.058143096482036; Expression=99*Math.pow(10,-9)-u8(k)-u4(k)+u7(k)-u5(k); Java Expression: 99*Math.pow(10,-9)-getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.058112066614036; Expression=1*Math.pow(10,-3)-u8(k)-u4(k)+u7(k)-u5(k); Java Expression: 1*Math.pow(10,-3)-getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.055856463176898; Expression=1*Math.pow(10,-1)-u8(k)-u4(k)+u7(k)-u5(k); Java Expression: 1*Math.pow(10,-1)-getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0552206557999755; Expression=2*Math.pow(10,-1)-u8(k)-u4(k)+u7(k)-u5(k); Java Expression: 2*Math.pow(10,-1)-getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:28 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 6.0552206557999755 -->> Avg.: 2.070919801660479E14 -->> Std. Dev.: 6.065407150458001E15
Aug 31, 2024 2:58:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.055220655799975; Expression=2*Math.pow(10,-1)-u8(k)-u5(k)+u7(k)-u4(k); Java Expression: 2*Math.pow(10,-1)-getVariable(8,k)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 31, 2024 2:58:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.999733344750961; Expression=1*Math.pow(10,-1)+u8(k)-u3(k)+u7(k)-u5(k); Java Expression: 1*Math.pow(10,-1)+getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992395461840138; Expression=1*Math.pow(10,-4)+u8(k)-u3(k)+u7(k)-u5(k); Java Expression: 1*Math.pow(10,-4)+getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388946567222; Expression=1*Math.pow(10,-9)+u8(k)-u3(k)+u7(k)-u5(k); Java Expression: 1*Math.pow(10,-9)+getVariable(8,k)-getVariable(3,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:58:54 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.992388946567222 -->> Avg.: 385965.0914813971 -->> Std. Dev.: 1799400.749536151
Aug 31, 2024 2:59:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388946567219; Expression=1*Math.pow(10,-9)+u7(k)-u3(k)+u8(k)-u5(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(3,k)+getVariable(8,k)-getVariable(5,k)
Aug 31, 2024 2:59:22 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.992388946567219 -->> Avg.: 159.30281086035947 -->> Std. Dev.: 558.2511497891168
Aug 31, 2024 2:59:50 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.992388946567219 -->> Avg.: 12.904171984222748 -->> Std. Dev.: 14.858188934549855
Aug 31, 2024 3:00:18 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.992388946567219 -->> Avg.: 6.2499298347038685 -->> Std. Dev.: 1.2115235111417406
Aug 31, 2024 3:00:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.983820605712792; Expression=1*Math.pow(10,-9)+u7(k)-u3(k)+68*Math.pow(10,-2)/78*Math.pow(10,-5)-u5(k)-20*Math.pow(10,-3)*u4(k)+u8(k)+u7(k)-u7(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(3,k)+68*Math.pow(10,-2)/78*Math.pow(10,-5)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.98376973222568; Expression=1*Math.pow(10,-9)+u7(k)-u3(k)+68*Math.pow(10,+2)/78*Math.pow(10,-5)-u5(k)-20*Math.pow(10,-3)*u4(k)+u8(k)+u7(k)-u7(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(3,k)+68*Math.pow(10,+2)/78*Math.pow(10,-5)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9837471601543; Expression=1*Math.pow(10,-9)+u7(k)-u3(k)+68*Math.pow(10,+2)/54*Math.pow(10,-5)-u5(k)-20*Math.pow(10,-3)*u4(k)+u8(k)+u7(k)-u7(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(3,k)+68*Math.pow(10,+2)/54*Math.pow(10,-5)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.983747158116474; Expression=36*Math.pow(10,-9)+u7(k)-u3(k)+68*Math.pow(10,+2)/54*Math.pow(10,-5)-u5(k)-20*Math.pow(10,-3)*u4(k)+u8(k)+u7(k)-u7(k); Java Expression: 36*Math.pow(10,-9)+getVariable(7,k)-getVariable(3,k)+68*Math.pow(10,+2)/54*Math.pow(10,-5)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.981759073893531; Expression=36*Math.pow(10,-3)+u7(k)-u3(k)+68*Math.pow(10,+2)/54*Math.pow(10,-5)-u5(k)-20*Math.pow(10,-3)*u4(k)+u8(k)+u7(k)-u7(k); Java Expression: 36*Math.pow(10,-3)+getVariable(7,k)-getVariable(3,k)+68*Math.pow(10,+2)/54*Math.pow(10,-5)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.979359828681571; Expression=1*Math.pow(10,-9)+u7(k)-u3(k)+68*Math.pow(10,+2)/78*Math.pow(10,-3)-u5(k)-20*Math.pow(10,-3)*u4(k)+u8(k)+u7(k)-u7(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(3,k)+68*Math.pow(10,+2)/78*Math.pow(10,-3)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(4,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.963316113943805; Expression=1*Math.pow(10,-9)+u7(k)-u3(k)+43*Math.pow(10,-2)/78*Math.pow(10,-5)-u5(k)-20*Math.pow(10,-3)*u5(k)+u8(k)+u7(k)-u7(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(3,k)+43*Math.pow(10,-2)/78*Math.pow(10,-5)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(5,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.826809640005748; Expression=1*Math.pow(10,-9)+u7(k)-u4(k)+68*Math.pow(10,-2)/78*Math.pow(10,-5)-u5(k)-20*Math.pow(10,-3)*u2(k)+u8(k)+u7(k)-u7(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)+68*Math.pow(10,-2)/78*Math.pow(10,-5)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(2,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.826809637312518; Expression=1*Math.pow(10,-9)+u7(k)-u4(k)+94*Math.pow(10,-2)/78*Math.pow(10,-5)-u5(k)-20*Math.pow(10,-3)*u2(k)+u8(k)+u7(k)-u7(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,-2)/78*Math.pow(10,-5)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(2,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.826809619578621; Expression=1*Math.pow(10,-9)+u7(k)-u4(k)+68*Math.pow(10,-2)/20*Math.pow(10,-5)-u5(k)-20*Math.pow(10,-3)*u2(k)+u8(k)+u7(k)-u7(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)+68*Math.pow(10,-2)/20*Math.pow(10,-5)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(2,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.826728925661223; Expression=1*Math.pow(10,-3)+u7(k)-u4(k)+94*Math.pow(10,-2)/78*Math.pow(10,-5)-u5(k)-20*Math.pow(10,-3)*u2(k)+u8(k)+u7(k)-u7(k); Java Expression: 1*Math.pow(10,-3)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,-2)/78*Math.pow(10,-5)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(2,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.826010193742863; Expression=1*Math.pow(10,-2)+u7(k)-u4(k)+94*Math.pow(10,-2)/78*Math.pow(10,-5)-u5(k)-20*Math.pow(10,-3)*u2(k)+u8(k)+u7(k)-u7(k); Java Expression: 1*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,-2)/78*Math.pow(10,-5)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(2,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.81057253104436; Expression=29*Math.pow(10,-2)+u7(k)-u4(k)+94*Math.pow(10,-2)/78*Math.pow(10,-5)-u5(k)-20*Math.pow(10,-3)*u2(k)+u8(k)+u7(k)-u7(k); Java Expression: 29*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,-2)/78*Math.pow(10,-5)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(2,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.810572159845751; Expression=29*Math.pow(10,-2)+u7(k)-u4(k)+94*Math.pow(10,-2)/78*Math.pow(10,-3)-u5(k)-20*Math.pow(10,-3)*u2(k)+u8(k)+u7(k)-u7(k); Java Expression: 29*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,-2)/78*Math.pow(10,-3)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(2,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.810535163576941; Expression=29*Math.pow(10,-2)+u7(k)-u4(k)+94*Math.pow(10,+2)/78*Math.pow(10,-5)-u5(k)-20*Math.pow(10,-3)*u2(k)+u8(k)+u7(k)-u7(k); Java Expression: 29*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,+2)/78*Math.pow(10,-5)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(2,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.80875357890876; Expression=29*Math.pow(10,-2)+u7(k)-u4(k)+94*Math.pow(10,-2)*78*Math.pow(10,-3)-u5(k)-20*Math.pow(10,-3)*u2(k)+u8(k)+u7(k)-u7(k); Java Expression: 29*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,-2)*78*Math.pow(10,-3)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(2,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.807796555361034; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)-94*Math.pow(10,-3)/78*Math.pow(10,-3)-u5(k)-20*Math.pow(10,-3)*u2(k)+u8(k)+u7(k)-u7(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)-94*Math.pow(10,-3)/78*Math.pow(10,-3)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(2,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8077965467336226; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)+94*Math.pow(10,-3)/78*Math.pow(10,-3)-u5(k)-20*Math.pow(10,-3)*u2(k)+u8(k)+u7(k)-u7(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,-3)/78*Math.pow(10,-3)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(2,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.807796483783836; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)+94*Math.pow(10,-3)/5*Math.pow(10,-3)-u5(k)-20*Math.pow(10,-3)*u2(k)+u8(k)+u7(k)-u7(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,-3)/5*Math.pow(10,-3)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(2,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.791864149413719; Expression=1*Math.pow(10,-2)+u7(k)-u4(k)+94*Math.pow(10,-2)/78*Math.pow(10,-5)-u5(k)-20*Math.pow(10,-3)*u7(k)+u8(k)+u7(k)-u7(k); Java Expression: 1*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,-2)/78*Math.pow(10,-5)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.790526697223409; Expression=1*Math.pow(10,-6)+u7(k)-u4(k)+17*Math.pow(10,-2)/78*Math.pow(10,-5)-u5(k)-20*Math.pow(10,-3)*u7(k)+u8(k)+u7(k)-u7(k); Java Expression: 1*Math.pow(10,-6)+getVariable(7,k)-getVariable(4,k)+17*Math.pow(10,-2)/78*Math.pow(10,-5)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.774833388789708; Expression=1*Math.pow(10,-1)+u7(k)-u4(k)+94*Math.pow(10,-2)/78*Math.pow(10,-5)-u5(k)-20*Math.pow(10,-3)*u7(k)/u8(k)+u7(k)-u7(k); Java Expression: 1*Math.pow(10,-1)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,-2)/78*Math.pow(10,-5)-getVariable(5,k)-20*Math.pow(10,-3)*getVariable(7,k)/getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.711822647081153; Expression=1*Math.pow(10,-6)+u7(k)-u4(k)+17*Math.pow(10,-2)/78*Math.pow(10,-5)-u5(k)-26*Math.pow(10,-3)*u7(k)+u8(k)+u7(k)-u7(k); Java Expression: 1*Math.pow(10,-6)+getVariable(7,k)-getVariable(4,k)+17*Math.pow(10,-2)/78*Math.pow(10,-5)-getVariable(5,k)-26*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.661241211157405; Expression=1*Math.pow(10,-6)+u7(k)-u4(k)+59*Math.pow(10,-2)/78*Math.pow(10,-5)-u5(k)-32*Math.pow(10,-3)*u1(k)+u8(k)+u7(k)-u7(k); Java Expression: 1*Math.pow(10,-6)+getVariable(7,k)-getVariable(4,k)+59*Math.pow(10,-2)/78*Math.pow(10,-5)-getVariable(5,k)-32*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.636334871147537; Expression=1*Math.pow(10,-6)+u7(k)-u4(k)+59*Math.pow(10,-2)/78*Math.pow(10,-5)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u7(k)-u7(k); Java Expression: 1*Math.pow(10,-6)+getVariable(7,k)-getVariable(4,k)+59*Math.pow(10,-2)/78*Math.pow(10,-5)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.636334871035227; Expression=1*Math.pow(10,-6)+u7(k)-u4(k)+59*Math.pow(10,-2)/77*Math.pow(10,-5)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u7(k)-u7(k); Java Expression: 1*Math.pow(10,-6)+getVariable(7,k)-getVariable(4,k)+59*Math.pow(10,-2)/77*Math.pow(10,-5)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.602753745563908; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)-94*Math.pow(10,-3)/78*Math.pow(10,-3)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u7(k)-u7(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)-94*Math.pow(10,-3)/78*Math.pow(10,-3)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.602753703758044; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)-94*Math.pow(10,-3)/80*Math.pow(10,-9)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u7(k)-u7(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)-94*Math.pow(10,-3)/80*Math.pow(10,-9)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6027537037580375; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)-84*Math.pow(10,-9)/78*Math.pow(10,-3)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u7(k)-u7(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)-84*Math.pow(10,-9)/78*Math.pow(10,-3)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.602753703758036; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)-94*Math.pow(10,-3)/85*Math.pow(10,-9)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u7(k)-u7(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)-94*Math.pow(10,-3)/85*Math.pow(10,-9)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.600829756280274; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)-11*Math.pow(10,-3)+78*Math.pow(10,-3)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u7(k)-u7(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)-11*Math.pow(10,-3)+78*Math.pow(10,-3)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.600590440263193; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)-94*Math.pow(10,-8)+78*Math.pow(10,-3)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u7(k)-u7(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)-94*Math.pow(10,-8)+78*Math.pow(10,-3)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.599640466895512; Expression=1*Math.pow(10,-9)+u7(k)-u4(k)+59*Math.pow(10,-2)+51*Math.pow(10,-5)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u7(k)-u7(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)+59*Math.pow(10,-2)+51*Math.pow(10,-5)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 3:00:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5990980582205045; Expression=35*Math.pow(10,-6)+u7(k)-u4(k)+59*Math.pow(10,-2)/78*Math.pow(10,-5)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u5(k)/u7(k); Java Expression: 35*Math.pow(10,-6)+getVariable(7,k)-getVariable(4,k)+59*Math.pow(10,-2)/78*Math.pow(10,-5)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(5,k)/getVariable(7,k)
Aug 31, 2024 3:00:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.592600964644327; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)-11*Math.pow(10,-3)+78*Math.pow(10,-3)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u5(k)/u7(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)-11*Math.pow(10,-3)+78*Math.pow(10,-3)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(5,k)/getVariable(7,k)
Aug 31, 2024 3:00:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.589435081184334; Expression=33*Math.pow(10,-2)+u7(k)-u4(k)+94*Math.pow(10,-5)/78*Math.pow(10,-3)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u5(k)/u7(k); Java Expression: 33*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,-5)/78*Math.pow(10,-3)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(5,k)/getVariable(7,k)
Aug 31, 2024 3:00:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.560710633814644; Expression=1*Math.pow(10,-6)+u7(k)-u4(k)+13*Math.pow(10,-2)/78*Math.pow(10,-3)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u1(k); Java Expression: 1*Math.pow(10,-6)+getVariable(7,k)-getVariable(4,k)+13*Math.pow(10,-2)/78*Math.pow(10,-3)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:00:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.560710394665749; Expression=29*Math.pow(10,-8)+u7(k)-u4(k)+94*Math.pow(10,-2)/78*Math.pow(10,-3)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u1(k); Java Expression: 29*Math.pow(10,-8)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,-2)/78*Math.pow(10,-3)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:00:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.560709834625877; Expression=35*Math.pow(10,-6)+u7(k)-u4(k)+59*Math.pow(10,-9)/78*Math.pow(10,-5)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u1(k); Java Expression: 35*Math.pow(10,-6)+getVariable(7,k)-getVariable(4,k)+59*Math.pow(10,-9)/78*Math.pow(10,-5)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:00:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5603236319765115; Expression=1*Math.pow(10,-6)+u7(k)-u4(k)+13*Math.pow(10,+2)/78*Math.pow(10,-3)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u1(k); Java Expression: 1*Math.pow(10,-6)+getVariable(7,k)-getVariable(4,k)+13*Math.pow(10,+2)/78*Math.pow(10,-3)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:00:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.559037191048756; Expression=29*Math.pow(10,-8)+u7(k)-u4(k)+94*Math.pow(10,+2)/78*Math.pow(10,-3)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u1(k); Java Expression: 29*Math.pow(10,-8)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,+2)/78*Math.pow(10,-3)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:00:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.559037190012021; Expression=63*Math.pow(10,-8)+u7(k)-u4(k)+94*Math.pow(10,+2)/78*Math.pow(10,-3)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u1(k); Java Expression: 63*Math.pow(10,-8)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,+2)/78*Math.pow(10,-3)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:00:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.559016223912568; Expression=1*Math.pow(10,-4)+u7(k)-u4(k)+13*Math.pow(10,-2)+78*Math.pow(10,-8)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u1(k); Java Expression: 1*Math.pow(10,-4)+getVariable(7,k)-getVariable(4,k)+13*Math.pow(10,-2)+78*Math.pow(10,-8)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:00:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.559011347915775; Expression=36*Math.pow(10,-9)+u7(k)-u4(k)+13*Math.pow(10,-2)+74*Math.pow(10,-4)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u1(k); Java Expression: 36*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)+13*Math.pow(10,-2)+74*Math.pow(10,-4)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:00:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.559011347624052; Expression=35*Math.pow(10,-6)+u7(k)-u4(k)+13*Math.pow(10,-2)+74*Math.pow(10,-4)-u5(k)-44*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u1(k); Java Expression: 35*Math.pow(10,-6)+getVariable(7,k)-getVariable(4,k)+13*Math.pow(10,-2)+74*Math.pow(10,-4)-getVariable(5,k)-44*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:00:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.554338948142034; Expression=1*Math.pow(10,-4)+u7(k)-u4(k)+13*Math.pow(10,-2)+78*Math.pow(10,-8)-u5(k)-46*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u1(k); Java Expression: 1*Math.pow(10,-4)+getVariable(7,k)-getVariable(4,k)+13*Math.pow(10,-2)+78*Math.pow(10,-8)-getVariable(5,k)-46*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:00:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.540501480400641; Expression=45*Math.pow(10,-5)+u7(k)-u4(k)-11*Math.pow(10,-3)+78*Math.pow(10,-2)-u5(k)-50*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u1(k); Java Expression: 45*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)-11*Math.pow(10,-3)+78*Math.pow(10,-2)-getVariable(5,k)-50*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:00:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5404890133263; Expression=1*Math.pow(10,-6)+u7(k)-u4(k)-11*Math.pow(10,-3)+78*Math.pow(10,-2)-u5(k)-50*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u1(k); Java Expression: 1*Math.pow(10,-6)+getVariable(7,k)-getVariable(4,k)-11*Math.pow(10,-3)+78*Math.pow(10,-2)-getVariable(5,k)-50*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:00:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.538376913856725; Expression=45*Math.pow(10,-5)+u7(k)-u4(k)-11*Math.pow(10,-3)+64*Math.pow(10,-2)-u5(k)-50*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u1(k); Java Expression: 45*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)-11*Math.pow(10,-3)+64*Math.pow(10,-2)-getVariable(5,k)-50*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:00:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.53837583864851; Expression=2*Math.pow(10,-5)+u7(k)-u4(k)-11*Math.pow(10,-3)+64*Math.pow(10,-2)-u5(k)-50*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u1(k); Java Expression: 2*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)-11*Math.pow(10,-3)+64*Math.pow(10,-2)-getVariable(5,k)-50*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:00:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.538375791909474; Expression=1*Math.pow(10,-6)+u7(k)-u4(k)-11*Math.pow(10,-3)+64*Math.pow(10,-2)-u5(k)-50*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u1(k); Java Expression: 1*Math.pow(10,-6)+getVariable(7,k)-getVariable(4,k)-11*Math.pow(10,-3)+64*Math.pow(10,-2)-getVariable(5,k)-50*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:00:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.538375789453787; Expression=1*Math.pow(10,-9)+u7(k)-u4(k)-11*Math.pow(10,-3)+64*Math.pow(10,-2)-u5(k)-50*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u1(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)-11*Math.pow(10,-3)+64*Math.pow(10,-2)-getVariable(5,k)-50*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:00:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.53836398343489; Expression=1*Math.pow(10,-9)+u7(k)-u4(k)-32*Math.pow(10,-3)+64*Math.pow(10,-2)-u5(k)-50*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u1(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)-32*Math.pow(10,-3)+64*Math.pow(10,-2)-getVariable(5,k)-50*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:00:55 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.53836398343489 -->> Avg.: 5.939759200957497 -->> Std. Dev.: 0.13950805818139855
Aug 31, 2024 3:00:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.527824141835931; Expression=1*Math.pow(10,-9)+u7(k)-u4(k)-32*Math.pow(10,-3)+64*Math.pow(10,-2)-u5(k)-55*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u4(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)-32*Math.pow(10,-3)+64*Math.pow(10,-2)-getVariable(5,k)-55*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(4,k)
Aug 31, 2024 3:00:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.526460980840053; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)+94*Math.pow(10,-3)/64*Math.pow(10,-2)-u5(k)-55*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u4(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,-3)/64*Math.pow(10,-2)-getVariable(5,k)-55*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(4,k)
Aug 31, 2024 3:01:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.526452936216264; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)+94*Math.pow(10,-1)/64*Math.pow(10,-2)-u5(k)-55*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u4(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,-1)/64*Math.pow(10,-2)-getVariable(5,k)-55*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(4,k)
Aug 31, 2024 3:01:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.516642715840193; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)+94*Math.pow(10,-3)/64*Math.pow(10,-2)-u5(k)-55*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,-3)/64*Math.pow(10,-2)-getVariable(5,k)-55*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.516309489012113; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)+94*Math.pow(10,-3)/64*Math.pow(10,+2)-u5(k)-55*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,-3)/64*Math.pow(10,+2)-getVariable(5,k)-55*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.516080123507299; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)+77*Math.pow(10,-3)/64*Math.pow(10,+2)-u5(k)-55*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+77*Math.pow(10,-3)/64*Math.pow(10,+2)-getVariable(5,k)-55*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5160748198177485; Expression=45*Math.pow(10,-5)+u7(k)-u4(k)-11*Math.pow(10,-3)+58*Math.pow(10,-2)-u5(k)-55*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 45*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)-11*Math.pow(10,-3)+58*Math.pow(10,-2)-getVariable(5,k)-55*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.515080610544657; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)+94*Math.pow(10,-3)/64*Math.pow(10,-2)-u5(k)-57*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,-3)/64*Math.pow(10,-2)-getVariable(5,k)-57*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.511041510447307; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)+77*Math.pow(10,-3)/64*Math.pow(10,+2)-u5(k)-57*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+77*Math.pow(10,-3)/64*Math.pow(10,+2)-getVariable(5,k)-57*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.510503222843017; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)+94*Math.pow(10,-3)/64*Math.pow(10,+2)-u5(k)-57*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+94*Math.pow(10,-3)/64*Math.pow(10,+2)-getVariable(5,k)-57*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.507785713780232; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)+u5(k)/u2(k)/60*Math.pow(10,+2)-u5(k)-57*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(5,k)/getVariable(2,k)/60*Math.pow(10,+2)-getVariable(5,k)-57*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.507646852523806; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)+u5(k)/u2(k)/64*Math.pow(10,+2)-u5(k)-57*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(5,k)/getVariable(2,k)/64*Math.pow(10,+2)-getVariable(5,k)-57*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.507126193233727; Expression=36*Math.pow(10,-2)+u7(k)-u4(k)+u5(k)/u2(k)/60*Math.pow(10,+2)-u5(k)-57*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 36*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(5,k)/getVariable(2,k)/60*Math.pow(10,+2)-getVariable(5,k)-57*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.486787788682365; Expression=45*Math.pow(10,-3)+u7(k)-u4(k)+u5(k)/u1(k)/64*Math.pow(10,+2)-u5(k)-57*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 45*Math.pow(10,-3)+getVariable(7,k)-getVariable(4,k)+getVariable(5,k)/getVariable(1,k)/64*Math.pow(10,+2)-getVariable(5,k)-57*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.485302918182339; Expression=36*Math.pow(10,-8)+u7(k)-u4(k)+u5(k)/u1(k)/60*Math.pow(10,+2)-u5(k)-57*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 36*Math.pow(10,-8)+getVariable(7,k)-getVariable(4,k)+getVariable(5,k)/getVariable(1,k)/60*Math.pow(10,+2)-getVariable(5,k)-57*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.47505517845864; Expression=26*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u1(k)/64*Math.pow(10,+2)-u5(k)-57*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 26*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/64*Math.pow(10,+2)-getVariable(5,k)-57*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.47505093107646; Expression=2*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u1(k)/64*Math.pow(10,+2)-u5(k)-57*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 2*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/64*Math.pow(10,+2)-getVariable(5,k)-57*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.475050595274631; Expression=1*Math.pow(10,-6)+u7(k)-u4(k)+u9(k)/u1(k)/64*Math.pow(10,+2)-u5(k)-57*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 1*Math.pow(10,-6)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/64*Math.pow(10,+2)-getVariable(5,k)-57*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.47505058219737; Expression=26*Math.pow(10,-8)+u7(k)-u4(k)+u9(k)/u1(k)/64*Math.pow(10,+2)-u5(k)-57*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 26*Math.pow(10,-8)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/64*Math.pow(10,+2)-getVariable(5,k)-57*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.466350650196613; Expression=26*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u1(k)/42*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 26*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/42*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.46632766611879; Expression=50*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u1(k)/42*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 50*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/42*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.466289382523928; Expression=90*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u1(k)/42*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 90*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/42*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.462246611194029; Expression=45*Math.pow(10,-3)+u7(k)-u4(k)+u9(k)/u1(k)/42*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 45*Math.pow(10,-3)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/42*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.458369906966089; Expression=26*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u1(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 26*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.441716127376755; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u1(k)/42*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/42*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.441267033118246; Expression=50*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u1(k)/42*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u9(k)/u3(k); Java Expression: 50*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/42*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 3:01:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.438061797581346; Expression=26*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u1(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u5(k)/u7(k); Java Expression: 26*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(5,k)/getVariable(7,k)
Aug 31, 2024 3:01:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.437555526631486; Expression=1*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u1(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u5(k)/u7(k); Java Expression: 1*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(5,k)/getVariable(7,k)
Aug 31, 2024 3:01:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.434600845832096; Expression=50*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u1(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u5(k)/u7(k); Java Expression: 50*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(5,k)/getVariable(7,k)
Aug 31, 2024 3:01:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4323176877739705; Expression=43*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u1(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u5(k)/u7(k); Java Expression: 43*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(5,k)/getVariable(7,k)
Aug 31, 2024 3:01:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.430935883278783; Expression=36*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u1(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u5(k)/u7(k); Java Expression: 36*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(5,k)/getVariable(7,k)
Aug 31, 2024 3:01:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.430456120407213; Expression=29*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u1(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u5(k)/u7(k); Java Expression: 29*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(5,k)/getVariable(7,k)
Aug 31, 2024 3:01:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.424494888711531; Expression=26*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u1(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k); Java Expression: 26*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 3:01:50 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.424494888711531 -->> Avg.: 5.833946291159416 -->> Std. Dev.: 0.21894438084821274
Aug 31, 2024 3:01:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.418606036628139; Expression=26*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u1(k)/26*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k); Java Expression: 26*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/26*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 3:01:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4185993862655595; Expression=2*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u1(k)/26*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k); Java Expression: 2*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/26*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 3:02:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.418598832603502; Expression=2*Math.pow(10,-9)+u7(k)-u4(k)+u9(k)/u1(k)/26*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k); Java Expression: 2*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/26*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 3:02:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.418598832575822; Expression=1*Math.pow(10,-9)+u7(k)-u4(k)+u9(k)/u1(k)/26*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/26*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 3:02:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.411128344074531; Expression=26*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k); Java Expression: 26*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 3:02:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.411123530158882; Expression=36*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k); Java Expression: 36*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 3:02:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.408163104813883; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 3:02:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.406686065758797; Expression=12*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k); Java Expression: 12*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 3:02:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.406644788787099; Expression=40*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k); Java Expression: 40*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 3:02:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.40579230553594; Expression=16*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k); Java Expression: 16*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 3:02:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.404931379822076; Expression=29*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k); Java Expression: 29*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 3:02:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.404816298866411; Expression=50*Math.pow(10,-8)+u7(k)-u4(k)+u9(k)/u7(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u1(k); Java Expression: 50*Math.pow(10,-8)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 3:02:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.404816293367495; Expression=1*Math.pow(10,-9)+u7(k)-u4(k)+u9(k)/u7(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u1(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 3:02:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.392773778657691; Expression=36*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/18*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k); Java Expression: 36*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/18*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 3:02:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3927700335966495; Expression=28*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/18*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k); Java Expression: 28*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/18*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 3:02:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.39275787032647; Expression=2*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/18*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k); Java Expression: 2*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/18*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 3:02:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3927569819625285; Expression=1*Math.pow(10,-6)+u7(k)-u4(k)+u9(k)/u7(k)/18*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k); Java Expression: 1*Math.pow(10,-6)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/18*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 3:02:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.392756935255138; Expression=1*Math.pow(10,-9)+u7(k)-u4(k)+u9(k)/u7(k)/18*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/18*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 3:02:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.384093859597964; Expression=26*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k)*u8(k); Java Expression: 26*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:02:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.384084058959028; Expression=26*Math.pow(10,-8)+u7(k)-u4(k)+u9(k)/u7(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k)*u8(k); Java Expression: 26*Math.pow(10,-8)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:02:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.374396094660686; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/18*Math.pow(10,+2)-u5(k)-81*Math.pow(10,-3)*u1(k)+u8(k)+u6(k)/u7(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/18*Math.pow(10,+2)-getVariable(5,k)-81*Math.pow(10,-3)*getVariable(1,k)+getVariable(8,k)+getVariable(6,k)/getVariable(7,k)
Aug 31, 2024 3:02:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.328002640283188; Expression=50*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 50*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:02:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.327742097959751; Expression=33*Math.pow(10,-4)+u7(k)-u4(k)+u9(k)/u7(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 33*Math.pow(10,-4)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:02:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.307455639033785; Expression=26*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u1(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 26*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(1,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:02:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.307405392853876; Expression=33*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/24*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 33*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/24*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:02:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.303712588928879; Expression=50*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/14*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 50*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/14*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:02:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.284951008150181; Expression=36*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/18*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 36*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/18*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:02:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.284950772199559; Expression=28*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/18*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 28*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/18*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:02:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.284950391362568; Expression=15*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/18*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 15*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/18*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:02:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.284949984806602; Expression=1*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/18*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 1*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/18*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:02:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.284949955911682; Expression=1*Math.pow(10,-9)+u7(k)-u4(k)+u9(k)/u7(k)/18*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/18*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:03:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.28286156331427; Expression=2*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/17*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 2*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/17*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:03:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.282861048593107; Expression=1*Math.pow(10,-9)+u7(k)-u4(k)+u9(k)/u7(k)/17*Math.pow(10,+2)-u5(k)-70*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/17*Math.pow(10,+2)-getVariable(5,k)-70*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:03:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.275479499753489; Expression=1*Math.pow(10,-9)+u7(k)-u4(k)+u9(k)/u7(k)/17*Math.pow(10,+2)-u5(k)-73*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/17*Math.pow(10,+2)-getVariable(5,k)-73*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:03:15 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.275479499753489 -->> Avg.: 5.7117475435848855 -->> Std. Dev.: 0.2671393932517697
Aug 31, 2024 3:03:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.27547916302732; Expression=1*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/17*Math.pow(10,+2)-u5(k)-73*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 1*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/17*Math.pow(10,+2)-getVariable(5,k)-73*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:03:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.275470750184831; Expression=26*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/17*Math.pow(10,+2)-u5(k)-73*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 26*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/17*Math.pow(10,+2)-getVariable(5,k)-73*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:03:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.275467388361313; Expression=36*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/17*Math.pow(10,+2)-u5(k)-73*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 36*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/17*Math.pow(10,+2)-getVariable(5,k)-73*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:03:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.275462684989355; Expression=50*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/17*Math.pow(10,+2)-u5(k)-73*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 50*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/17*Math.pow(10,+2)-getVariable(5,k)-73*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:03:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2726570806846835; Expression=22*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/17*Math.pow(10,+2)-u5(k)-73*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 22*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/17*Math.pow(10,+2)-getVariable(5,k)-73*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:03:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.268819803401199; Expression=50*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/16*Math.pow(10,+2)-u5(k)-73*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 50*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/16*Math.pow(10,+2)-getVariable(5,k)-73*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:03:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.268786377720998; Expression=50*Math.pow(10,-4)+u7(k)-u4(k)+u9(k)/u7(k)/16*Math.pow(10,+2)-u5(k)-73*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 50*Math.pow(10,-4)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/16*Math.pow(10,+2)-getVariable(5,k)-73*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:03:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.268765586836246; Expression=81*Math.pow(10,-4)+u7(k)-u4(k)+u9(k)/u7(k)/16*Math.pow(10,+2)-u5(k)-73*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 81*Math.pow(10,-4)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/16*Math.pow(10,+2)-getVariable(5,k)-73*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:03:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2687592691676475; Expression=91*Math.pow(10,-4)+u7(k)-u4(k)+u9(k)/u7(k)/16*Math.pow(10,+2)-u5(k)-73*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 91*Math.pow(10,-4)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/16*Math.pow(10,+2)-getVariable(5,k)-73*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:03:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.26866350486682; Expression=50*Math.pow(10,-3)+u7(k)-u4(k)+u9(k)/u7(k)/16*Math.pow(10,+2)-u5(k)-73*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 50*Math.pow(10,-3)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/16*Math.pow(10,+2)-getVariable(5,k)-73*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:03:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.268660545506157; Expression=36*Math.pow(10,-3)+u7(k)-u4(k)+u9(k)/u7(k)/16*Math.pow(10,+2)-u5(k)-73*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 36*Math.pow(10,-3)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/16*Math.pow(10,+2)-getVariable(5,k)-73*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:03:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.267307642595918; Expression=50*Math.pow(10,-3)+u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,+2)-u5(k)-73*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 50*Math.pow(10,-3)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)-73*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:04:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.266017733105404; Expression=50*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,+2)-u5(k)-73*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 50*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)-73*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:04:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.266007076883614; Expression=50*Math.pow(10,-9)+u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,+2)-u5(k)-73*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 50*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)-73*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:04:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.266007075841521; Expression=1*Math.pow(10,-9)+u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,+2)-u5(k)-73*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)-73*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:04:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.26021869941047; Expression=1*Math.pow(10,-9)+u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,+2)-u5(k)-75*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 1*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)-75*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:04:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2602186987644854; Expression=36*Math.pow(10,-9)+u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,+2)-u5(k)-75*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 36*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)-75*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:04:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2602186984507275; Expression=53*Math.pow(10,-9)+u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,+2)-u5(k)-75*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 53*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)-75*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:04:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.260218698192326; Expression=67*Math.pow(10,-9)+u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,+2)-u5(k)-75*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 67*Math.pow(10,-9)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)-75*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:04:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.260092446810045; Expression=71*Math.pow(10,-4)+u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,+2)-u5(k)-75*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 71*Math.pow(10,-4)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)-75*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:04:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.259533451376426; Expression=50*Math.pow(10,-3)+u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,+2)-u5(k)-75*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 50*Math.pow(10,-3)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)-75*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:04:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.259372589064566; Expression=12*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,+2)-u5(k)-75*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 12*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)-75*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:04:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.256248453962705; Expression=50*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/14*Math.pow(10,+2)-u5(k)-75*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 50*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/14*Math.pow(10,+2)-getVariable(5,k)-75*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:04:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.25624800158443; Expression=47*Math.pow(10,-5)+u7(k)-u4(k)+u9(k)/u7(k)/14*Math.pow(10,+2)-u5(k)-75*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 47*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/14*Math.pow(10,+2)-getVariable(5,k)-75*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:04:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.247478238363577; Expression=50*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,+2)-u5(k)-80*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 50*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)-80*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:04:46 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 5.247478238363577 -->> Avg.: 5.569864354958553 -->> Std. Dev.: 0.2732686170535837
Aug 31, 2024 3:04:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.246347114958605; Expression=57*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,+2)-u5(k)-80*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 57*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)-80*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:04:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.24612084558884; Expression=63*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,+2)-u5(k)-80*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 63*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)-80*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:05:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.246110903695608; Expression=62*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,+2)-u5(k)-80*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 62*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)-80*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:05:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.242906842856536; Expression=50*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/14*Math.pow(10,+2)-u5(k)-80*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 50*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/14*Math.pow(10,+2)-getVariable(5,k)-80*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:05:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.242790924093664; Expression=40*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/14*Math.pow(10,+2)-u5(k)-80*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 40*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/14*Math.pow(10,+2)-getVariable(5,k)-80*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:05:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.242610458380006; Expression=45*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/14*Math.pow(10,+2)-u5(k)-80*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 45*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/14*Math.pow(10,+2)-getVariable(5,k)-80*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:05:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.242608403209614; Expression=44*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/14*Math.pow(10,+2)-u5(k)-80*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 44*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/14*Math.pow(10,+2)-getVariable(5,k)-80*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:05:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.240722499311143; Expression=63*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/14*Math.pow(10,+2)-u5(k)-81*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 63*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/14*Math.pow(10,+2)-getVariable(5,k)-81*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:05:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.240576452811112; Expression=62*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/14*Math.pow(10,+2)-u5(k)-81*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 62*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/14*Math.pow(10,+2)-getVariable(5,k)-81*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:06:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.240312249611097; Expression=50*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/14*Math.pow(10,+2)-u5(k)-81*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 50*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/14*Math.pow(10,+2)-getVariable(5,k)-81*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:06:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.240229310865319; Expression=51*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/14*Math.pow(10,+2)-u5(k)-81*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 51*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/14*Math.pow(10,+2)-getVariable(5,k)-81*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:06:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.239833746410491; Expression=50*Math.pow(10,-2)+u7(k)-u4(k)+u9(k)/u7(k)/14*Math.pow(10,+2)-u5(k)-82*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 50*Math.pow(10,-2)+getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/14*Math.pow(10,+2)-getVariable(5,k)-82*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:06:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.163529452601204; Expression=63*Math.pow(10,-2)*u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,+2)-u5(k)-80*Math.pow(10,-5)*u7(k)+u5(k)+u2(k)/u7(k)*u8(k); Java Expression: 63*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)-80*Math.pow(10,-5)*getVariable(7,k)+getVariable(5,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:06:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.15676888901273; Expression=63*Math.pow(10,-2)*u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,+2)-u5(k)-80*Math.pow(10,-5)*u7(k)+u5(k)+u2(k)/u6(k)*u8(k); Java Expression: 63*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)-80*Math.pow(10,-5)*getVariable(7,k)+getVariable(5,k)+getVariable(2,k)/getVariable(6,k)*getVariable(8,k)
Aug 31, 2024 3:06:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.089232268322376; Expression=63*Math.pow(10,-2)*u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,-2)-u5(k)/80*Math.pow(10,-3)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 63*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,-2)-getVariable(5,k)/80*Math.pow(10,-3)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)
Aug 31, 2024 3:06:19 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 5.089232268322376 -->> Avg.: 5.422157151089968 -->> Std. Dev.: 0.19958984494644336
Aug 31, 2024 3:06:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.782004174644906; Expression=63*Math.pow(10,-2)*u7(k)-u4(k)+u9(k)/u7(k)/15*Math.pow(10,+2)-u5(k)*80*Math.pow(10,-5)*u7(k)+u8(k)+u2(k)/u7(k)*u8(k); Java Expression: 63*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)*80*Math.pow(10,-5)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)

Execution time: 495.848 seconds.



@@;63*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)*80*Math.pow(10,-5)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)



Run #2
========
Aug 31, 2024 3:06:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=46.763304516721455; Expression=u9(k)+u3(k); Java Expression: getVariable(9,k)+getVariable(3,k)
Aug 31, 2024 3:06:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=34.29410715617462; Expression=17*Math.pow(10,-9)/u9(k)/u8(k)/u9(k); Java Expression: 17*Math.pow(10,-9)/getVariable(9,k)/getVariable(8,k)/getVariable(9,k)
Aug 31, 2024 3:06:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=27.57874290661008; Expression=81*Math.pow(10,-1)*u5(k)/u3(k); Java Expression: 81*Math.pow(10,-1)*getVariable(5,k)/getVariable(3,k)
Aug 31, 2024 3:06:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=11.246893674698304; Expression=u4(k)+u5(k)-29*Math.pow(10,-4)*u2(k)*u1(k); Java Expression: getVariable(4,k)+getVariable(5,k)-29*Math.pow(10,-4)*getVariable(2,k)*getVariable(1,k)
Aug 31, 2024 3:06:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.32881673572716; Expression=u5(k)+u5(k)/u2(k); Java Expression: getVariable(5,k)+getVariable(5,k)/getVariable(2,k)
Aug 31, 2024 3:06:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.328618663297881; Expression=u5(k)-u3(k)/u5(k)+18*Math.pow(10,-1)-u5(k)*53*Math.pow(10,-2)*u1(k)/56*Math.pow(10,+1)*u6(k)/16*Math.pow(10,-9)/u7(k)/98*Math.pow(10,-9)/u5(k); Java Expression: getVariable(5,k)-getVariable(3,k)/getVariable(5,k)+18*Math.pow(10,-1)-getVariable(5,k)*53*Math.pow(10,-2)*getVariable(1,k)/56*Math.pow(10,+1)*getVariable(6,k)/16*Math.pow(10,-9)/getVariable(7,k)/98*Math.pow(10,-9)/getVariable(5,k)
Aug 31, 2024 3:06:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.323209189272353; Expression=u5(k)+u5(k)/u1(k); Java Expression: getVariable(5,k)+getVariable(5,k)/getVariable(1,k)
Aug 31, 2024 3:06:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 3:06:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.5506377757381085; Expression=34*Math.pow(10,-2)*u7(k)+u3(k)/u8(k)/u4(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)+getVariable(3,k)/getVariable(8,k)/getVariable(4,k)
Aug 31, 2024 3:06:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.054030565768751; Expression=34*Math.pow(10,-2)*u7(k)+6*Math.pow(10,-3)/u9(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)+6*Math.pow(10,-3)/getVariable(9,k)
Aug 31, 2024 3:06:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.053992376931104; Expression=34*Math.pow(10,-2)*u7(k)+39*Math.pow(10,-4)/u4(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)+39*Math.pow(10,-4)/getVariable(4,k)
Aug 31, 2024 3:06:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.053961298178118; Expression=34*Math.pow(10,-2)*u7(k)+39*Math.pow(10,-4)/u5(k)/u7(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)+39*Math.pow(10,-4)/getVariable(5,k)/getVariable(7,k)
Aug 31, 2024 3:06:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.053961205272378; Expression=34*Math.pow(10,-2)*u7(k)+39*Math.pow(10,-6)/u4(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)+39*Math.pow(10,-6)/getVariable(4,k)
Aug 31, 2024 3:06:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.62645219763175; Expression=34*Math.pow(10,-2)*u7(k)-u3(k)/u8(k)/u4(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(8,k)/getVariable(4,k)
Aug 31, 2024 3:06:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.5497675197104686; Expression=34*Math.pow(10,-2)*u7(k)-u3(k)/u8(k)/u5(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(8,k)/getVariable(5,k)
Aug 31, 2024 3:06:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.207574096149235; Expression=34*Math.pow(10,-2)*u7(k)-u6(k)/u8(k)/u5(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)-getVariable(6,k)/getVariable(8,k)/getVariable(5,k)
Aug 31, 2024 3:06:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.1325623000506715; Expression=34*Math.pow(10,-2)*u7(k)-u6(k)/u8(k)/u9(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)-getVariable(6,k)/getVariable(8,k)/getVariable(9,k)
Aug 31, 2024 3:06:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9270404286439025; Expression=34*Math.pow(10,-2)*u7(k)-u2(k)/u8(k)/u4(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(4,k)
Aug 31, 2024 3:06:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.837517451272359; Expression=34*Math.pow(10,-2)*u7(k)-u2(k)/u8(k)/u5(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(5,k)
Aug 31, 2024 3:06:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.741565280268575; Expression=34*Math.pow(10,-2)*u7(k)-u2(k)/u8(k)/u9(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(9,k)
Aug 31, 2024 3:06:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.654166830853697; Expression=35*Math.pow(10,-2)*u7(k)-u2(k)/u8(k)/u5(k); Java Expression: 35*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(5,k)
Aug 31, 2024 3:06:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.564163287500269; Expression=35*Math.pow(10,-2)*u7(k)-u2(k)/u8(k)/u9(k); Java Expression: 35*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(9,k)
Aug 31, 2024 3:06:44 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.564163287500269 -->> Avg.: 1.1034650164618857E18 -->> Std. Dev.: 3.326479471199192E19 -->> Infinity or NaN elems.: 0 % 
Aug 31, 2024 3:06:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.434778539668053; Expression=35*Math.pow(10,-2)*u7(k)-u2(k)/u8(k)/u5(k)+u8(k); Java Expression: 35*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 3:06:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.25538364856553; Expression=35*Math.pow(10,-2)*u7(k)-u2(k)/u8(k)/u5(k)/u8(k); Java Expression: 35*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(5,k)/getVariable(8,k)
Aug 31, 2024 3:06:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.208308438864402; Expression=35*Math.pow(10,-2)*u7(k)-u2(k)/u8(k)/u9(k)/u8(k); Java Expression: 35*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(9,k)/getVariable(8,k)
Aug 31, 2024 3:07:09 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.208308438864402 -->> Avg.: 513073.48313123174 -->> Std. Dev.: 2651082.805646257
Aug 31, 2024 3:07:40 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.208308438864402 -->> Avg.: 191.67449571149655 -->> Std. Dev.: 680.9695687315821
Aug 31, 2024 3:08:12 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.208308438864402 -->> Avg.: 11.77365263800679 -->> Std. Dev.: 13.20662568387362
Aug 31, 2024 3:08:45 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.208308438864402 -->> Avg.: 5.666026545790028 -->> Std. Dev.: 1.4667831977399814
Aug 31, 2024 3:09:18 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.208308438864402 -->> Avg.: 5.253703901564871 -->> Std. Dev.: 0.117628981729763
Aug 31, 2024 3:09:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.949223303706294; Expression=35*Math.pow(10,-2)*u7(k)-17*Math.pow(10,-2)/u8(k)*u3(k)+u7(k)*10*Math.pow(10,-3)*u8(k)-u3(k)/u1(k); Java Expression: 35*Math.pow(10,-2)*getVariable(7,k)-17*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(7,k)*10*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(1,k)
Aug 31, 2024 3:09:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.922428973037223; Expression=35*Math.pow(10,-2)*u7(k)-17*Math.pow(10,-2)/u8(k)*u3(k)+u7(k)*10*Math.pow(10,-3)*u8(k)-u3(k)/u7(k); Java Expression: 35*Math.pow(10,-2)*getVariable(7,k)-17*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(7,k)*10*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(7,k)
Aug 31, 2024 3:09:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.917240137152287; Expression=35*Math.pow(10,-2)*u7(k)-17*Math.pow(10,-2)/u8(k)*u3(k)+u7(k)*10*Math.pow(10,-3)*u8(k)-u3(k)/u6(k); Java Expression: 35*Math.pow(10,-2)*getVariable(7,k)-17*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(7,k)*10*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(6,k)
Aug 31, 2024 3:09:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.85557431242627; Expression=35*Math.pow(10,-2)*u7(k)-17*Math.pow(10,-2)/u8(k)*u3(k)+u2(k)*10*Math.pow(10,-3)*u8(k)-u3(k)/u6(k); Java Expression: 35*Math.pow(10,-2)*getVariable(7,k)-17*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(2,k)*10*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(6,k)
Aug 31, 2024 3:09:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.2406151158529575; Expression=29*Math.pow(10,-2)*u7(k)-17*Math.pow(10,-2)/u8(k)*u3(k)+u7(k)*54*Math.pow(10,-3)*u8(k)-u3(k)/u1(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-17*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(7,k)*54*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(1,k)
Aug 31, 2024 3:09:51 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.2406151158529575 -->> Avg.: 5.1975995021278445 -->> Std. Dev.: 0.06575041628082053
Aug 31, 2024 3:09:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.234962929762317; Expression=29*Math.pow(10,-2)*u7(k)-17*Math.pow(10,-2)/u8(k)*u3(k)+u7(k)*54*Math.pow(10,-3)*u8(k)-u3(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-17*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(7,k)*54*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(6,k)
Aug 31, 2024 3:09:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.230427349992897; Expression=29*Math.pow(10,-2)*u7(k)-17*Math.pow(10,-2)/u8(k)*u3(k)+u7(k)*54*Math.pow(10,-3)*u8(k)-u7(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-17*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(7,k)*54*Math.pow(10,-3)*getVariable(8,k)-getVariable(7,k)/getVariable(6,k)
Aug 31, 2024 3:09:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.200821407617807; Expression=29*Math.pow(10,-2)*u7(k)-17*Math.pow(10,-2)/u8(k)*u3(k)+u7(k)*54*Math.pow(10,-3)*u8(k)-u3(k)/u9(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-17*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(7,k)*54*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(9,k)
Aug 31, 2024 3:09:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.139366774896746; Expression=29*Math.pow(10,-2)*u7(k)-17*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*54*Math.pow(10,-3)*u8(k)-u3(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-17*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*54*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(6,k)
Aug 31, 2024 3:10:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.137177113654589; Expression=29*Math.pow(10,-2)*u7(k)-17*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*54*Math.pow(10,-3)*u8(k)-u8(k)/u3(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-17*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*54*Math.pow(10,-3)*getVariable(8,k)-getVariable(8,k)/getVariable(3,k)
Aug 31, 2024 3:10:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.129612167209312; Expression=29*Math.pow(10,-2)*u7(k)-17*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*54*Math.pow(10,-3)*u8(k)+u8(k)/u3(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-17*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*54*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)/getVariable(3,k)
Aug 31, 2024 3:10:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.125791749162541; Expression=29*Math.pow(10,-2)*u7(k)-17*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*54*Math.pow(10,-3)*u8(k)+u9(k)/u1(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-17*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*54*Math.pow(10,-3)*getVariable(8,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 3:10:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.084770572048841; Expression=29*Math.pow(10,-2)*u7(k)-17*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-17*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(6,k)
Aug 31, 2024 3:10:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.075669390540413; Expression=29*Math.pow(10,-2)*u7(k)-17*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u7(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-17*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(7,k)/getVariable(6,k)
Aug 31, 2024 3:10:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.051996788887945; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(6,k)
Aug 31, 2024 3:10:30 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.051996788887945 -->> Avg.: 4.984313760846684 -->> Std. Dev.: 0.43395007111814926
Aug 31, 2024 3:10:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.044047942750436; Expression=29*Math.pow(10,-2)*u7(k)-19*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-19*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(6,k)
Aug 31, 2024 3:10:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.036702452296093; Expression=29*Math.pow(10,-2)*u7(k)-19*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*61*Math.pow(10,-3)*u8(k)-u3(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-19*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*61*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(6,k)
Aug 31, 2024 3:10:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.0354516523344826; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/u9(k)+u2(k)/u2(k)-u8(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(9,k)+getVariable(2,k)/getVariable(2,k)-getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 3:10:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.020446858102954; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/u9(k)+u7(k)/u2(k)-u8(k)/u9(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(9,k)+getVariable(7,k)/getVariable(2,k)-getVariable(8,k)/getVariable(9,k)
Aug 31, 2024 3:10:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.018940610650562; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/u9(k)+u7(k)/u2(k)-u8(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(9,k)+getVariable(7,k)/getVariable(2,k)-getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 3:10:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.018468170430701; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/u9(k)+u7(k)/u2(k)-u8(k)/1*Math.pow(10,-9)/u5(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(9,k)+getVariable(7,k)/getVariable(2,k)-getVariable(8,k)/1*Math.pow(10,-9)/getVariable(5,k)
Aug 31, 2024 3:10:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.0179117649822755; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/u9(k)+u7(k)/u2(k)+u8(k)/u7(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(9,k)+getVariable(7,k)/getVariable(2,k)+getVariable(8,k)/getVariable(7,k)
Aug 31, 2024 3:10:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.016744518113402; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/u9(k)+u7(k)/u2(k)+u8(k)/u4(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(9,k)+getVariable(7,k)/getVariable(2,k)+getVariable(8,k)/getVariable(4,k)
Aug 31, 2024 3:10:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.009804241535911; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/u9(k)+u2(k)/u2(k)-u3(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(9,k)+getVariable(2,k)/getVariable(2,k)-getVariable(3,k)/getVariable(6,k)
Aug 31, 2024 3:10:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.000679795405044; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/u9(k)+u2(k)/42*Math.pow(10,-2)*u7(k)/58*Math.pow(10,-4)/u7(k)/u8(k)+u5(k)*u8(k)/u1(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(9,k)+getVariable(2,k)/42*Math.pow(10,-2)*getVariable(7,k)/58*Math.pow(10,-4)/getVariable(7,k)/getVariable(8,k)+getVariable(5,k)*getVariable(8,k)/getVariable(1,k)
Aug 31, 2024 3:10:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.000679794786244; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/u9(k)+u2(k)/42*Math.pow(10,-2)*u7(k)/58*Math.pow(10,-4)/u7(k)/u9(k)+u5(k)*u8(k)/u1(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(9,k)+getVariable(2,k)/42*Math.pow(10,-2)*getVariable(7,k)/58*Math.pow(10,-4)/getVariable(7,k)/getVariable(9,k)+getVariable(5,k)*getVariable(8,k)/getVariable(1,k)
Aug 31, 2024 3:10:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.000679794687897; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/u9(k)-u2(k)/42*Math.pow(10,-2)*u7(k)/58*Math.pow(10,-4)/u6(k)/u9(k)+u5(k)*u8(k)/u1(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(9,k)-getVariable(2,k)/42*Math.pow(10,-2)*getVariable(7,k)/58*Math.pow(10,-4)/getVariable(6,k)/getVariable(9,k)+getVariable(5,k)*getVariable(8,k)/getVariable(1,k)
Aug 31, 2024 3:10:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.000574858799748; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/u9(k)-u2(k)/42*Math.pow(10,-2)+u7(k)/58*Math.pow(10,-4)/u6(k)/u9(k)+u5(k)*u8(k)/u1(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(9,k)-getVariable(2,k)/42*Math.pow(10,-2)+getVariable(7,k)/58*Math.pow(10,-4)/getVariable(6,k)/getVariable(9,k)+getVariable(5,k)*getVariable(8,k)/getVariable(1,k)
Aug 31, 2024 3:10:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9994481997574645; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/u9(k)+u6(k)/u7(k)-u3(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(9,k)+getVariable(6,k)/getVariable(7,k)-getVariable(3,k)/getVariable(6,k)
Aug 31, 2024 3:11:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9735204142211; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/u9(k)+u6(k)/u1(k)-u3(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(9,k)+getVariable(6,k)/getVariable(1,k)-getVariable(3,k)/getVariable(6,k)
Aug 31, 2024 3:11:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9670879334990574; Expression=29*Math.pow(10,-2)*u7(k)-19*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/u9(k)+u6(k)/u1(k)-u3(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-19*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(9,k)+getVariable(6,k)/getVariable(1,k)-getVariable(3,k)/getVariable(6,k)
Aug 31, 2024 3:11:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.966769818506946; Expression=29*Math.pow(10,-2)*u7(k)-19*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/u9(k)+u6(k)/u1(k)-u4(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-19*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/getVariable(9,k)+getVariable(6,k)/getVariable(1,k)-getVariable(4,k)/getVariable(6,k)
Aug 31, 2024 3:11:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9623855175097393; Expression=29*Math.pow(10,-2)*u7(k)-19*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u4(k)/u9(k)+u6(k)/u1(k)-u3(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-19*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(4,k)/getVariable(9,k)+getVariable(6,k)/getVariable(1,k)-getVariable(3,k)/getVariable(6,k)
Aug 31, 2024 3:11:17 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 3.9623855175097393 -->> Avg.: 4.7492311516986465 -->> Std. Dev.: 0.557638664987317
Aug 31, 2024 3:11:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.961433185689261; Expression=29*Math.pow(10,-2)*u7(k)-19*Math.pow(10,-2)/u8(k)*u3(k)+u6(k)*61*Math.pow(10,-3)*u8(k)-u4(k)/u9(k)+u6(k)/u1(k)-u3(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-19*Math.pow(10,-2)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*61*Math.pow(10,-3)*getVariable(8,k)-getVariable(4,k)/getVariable(9,k)+getVariable(6,k)/getVariable(1,k)-getVariable(3,k)/getVariable(6,k)
Aug 31, 2024 3:11:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.939618073859409; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-3)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/51*Math.pow(10,-4)/u6(k)*82*Math.pow(10,+5)/u8(k)-u4(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-3)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/51*Math.pow(10,-4)/getVariable(6,k)*82*Math.pow(10,+5)/getVariable(8,k)-getVariable(4,k)/getVariable(6,k)
Aug 31, 2024 3:12:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.939382076027543; Expression=29*Math.pow(10,-2)*u7(k)-19*Math.pow(10,-3)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/51*Math.pow(10,-4)/u6(k)*82*Math.pow(10,+5)/u8(k)-u4(k)/u6(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-19*Math.pow(10,-3)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/51*Math.pow(10,-4)/getVariable(6,k)*82*Math.pow(10,+5)/getVariable(8,k)-getVariable(4,k)/getVariable(6,k)
Aug 31, 2024 3:12:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.924576528612123; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-3)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/51*Math.pow(10,-4)/u6(k)*82*Math.pow(10,+5)/u8(k)-u1(k)/u2(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-3)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/51*Math.pow(10,-4)/getVariable(6,k)*82*Math.pow(10,+5)/getVariable(8,k)-getVariable(1,k)/getVariable(2,k)
Aug 31, 2024 3:12:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9232315051837556; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-3)/u8(k)*u5(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/51*Math.pow(10,-4)/u6(k)*82*Math.pow(10,+5)/u8(k)-u1(k)/u2(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-3)/getVariable(8,k)*getVariable(5,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/51*Math.pow(10,-4)/getVariable(6,k)*82*Math.pow(10,+5)/getVariable(8,k)-getVariable(1,k)/getVariable(2,k)
Aug 31, 2024 3:12:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.922819669587337; Expression=29*Math.pow(10,-2)*u7(k)-19*Math.pow(10,-3)/u8(k)*u5(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/51*Math.pow(10,-4)/u6(k)*82*Math.pow(10,+5)/u8(k)-u1(k)/u2(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-19*Math.pow(10,-3)/getVariable(8,k)*getVariable(5,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/51*Math.pow(10,-4)/getVariable(6,k)*82*Math.pow(10,+5)/getVariable(8,k)-getVariable(1,k)/getVariable(2,k)
Aug 31, 2024 3:12:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.919825957155553; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-3)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/46*Math.pow(10,-4)/u6(k)*82*Math.pow(10,+5)/u8(k)+u4(k)/u2(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-3)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/46*Math.pow(10,-4)/getVariable(6,k)*82*Math.pow(10,+5)/getVariable(8,k)+getVariable(4,k)/getVariable(2,k)
Aug 31, 2024 3:12:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9196557975770476; Expression=29*Math.pow(10,-2)*u7(k)-19*Math.pow(10,-3)/u8(k)*u3(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/46*Math.pow(10,-4)/u6(k)*82*Math.pow(10,+5)/u8(k)+u4(k)/u2(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-19*Math.pow(10,-3)/getVariable(8,k)*getVariable(3,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/46*Math.pow(10,-4)/getVariable(6,k)*82*Math.pow(10,+5)/getVariable(8,k)+getVariable(4,k)/getVariable(2,k)
Aug 31, 2024 3:12:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9145107382392164; Expression=29*Math.pow(10,-2)*u7(k)-18*Math.pow(10,-3)/u8(k)*u1(k)+u6(k)*60*Math.pow(10,-3)*u8(k)-u3(k)/51*Math.pow(10,-4)/u6(k)*82*Math.pow(10,+5)/u8(k)+u1(k)/u2(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-3)/getVariable(8,k)*getVariable(1,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/51*Math.pow(10,-4)/getVariable(6,k)*82*Math.pow(10,+5)/getVariable(8,k)+getVariable(1,k)/getVariable(2,k)
Aug 31, 2024 3:12:45 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 3.9145107382392164 -->> Avg.: 4.502771829420028 -->> Std. Dev.: 0.5788096533491748

Execution time: 387.76 seconds.



@@;29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-3)/getVariable(8,k)*getVariable(1,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/51*Math.pow(10,-4)/getVariable(6,k)*82*Math.pow(10,+5)/getVariable(8,k)+getVariable(1,k)/getVariable(2,k)



Run #3
========
Aug 31, 2024 3:12:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.187528892717945E20; Expression=99*Math.pow(10,-9)/54*Math.pow(10,+2)/27*Math.pow(10,-5)/73*Math.pow(10,-4)/52*Math.pow(10,+5)-u1(k)*44*Math.pow(10,+3)/u7(k)-21*Math.pow(10,-2)*15*Math.pow(10,+3)*60*Math.pow(10,+6)/55*Math.pow(10,+6)/u1(k)*17*Math.pow(10,-3)/u3(k)*39*Math.pow(10,+9)+u1(k)+u9(k); Java Expression: 99*Math.pow(10,-9)/54*Math.pow(10,+2)/27*Math.pow(10,-5)/73*Math.pow(10,-4)/52*Math.pow(10,+5)-getVariable(1,k)*44*Math.pow(10,+3)/getVariable(7,k)-21*Math.pow(10,-2)*15*Math.pow(10,+3)*60*Math.pow(10,+6)/55*Math.pow(10,+6)/getVariable(1,k)*17*Math.pow(10,-3)/getVariable(3,k)*39*Math.pow(10,+9)+getVariable(1,k)+getVariable(9,k)
Aug 31, 2024 3:12:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=115.48232604784127; Expression=37*Math.pow(10,-5)-u1(k); Java Expression: 37*Math.pow(10,-5)-getVariable(1,k)
Aug 31, 2024 3:12:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=34.25332844598362; Expression=u8(k)/u3(k); Java Expression: getVariable(8,k)/getVariable(3,k)
Aug 31, 2024 3:12:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=30.055139645735036; Expression=17*Math.pow(10,-5)-u1(k)+u2(k)-u4(k); Java Expression: 17*Math.pow(10,-5)-getVariable(1,k)+getVariable(2,k)-getVariable(4,k)
Aug 31, 2024 3:12:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=18.145103978404123; Expression=u4(k)/u8(k); Java Expression: getVariable(4,k)/getVariable(8,k)
Aug 31, 2024 3:12:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=10.398043417377183; Expression=32*Math.pow(10,-6)+u4(k); Java Expression: 32*Math.pow(10,-6)+getVariable(4,k)
Aug 31, 2024 3:12:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.329123626830148; Expression=u3(k)/u1(k)/12*Math.pow(10,-2)*u9(k)+u5(k); Java Expression: getVariable(3,k)/getVariable(1,k)/12*Math.pow(10,-2)*getVariable(9,k)+getVariable(5,k)
Aug 31, 2024 3:12:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.308718137376443; Expression=52*Math.pow(10,-2)/26*Math.pow(10,+3)*u8(k); Java Expression: 52*Math.pow(10,-2)/26*Math.pow(10,+3)*getVariable(8,k)
Aug 31, 2024 3:12:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 31, 2024 3:13:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.945854161955616; Expression=u5(k)+u8(k)-u1(k)/u4(k); Java Expression: getVariable(5,k)+getVariable(8,k)-getVariable(1,k)/getVariable(4,k)
Aug 31, 2024 3:13:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.933502244053349; Expression=u5(k)+u8(k)-u1(k)/u1(k); Java Expression: getVariable(5,k)+getVariable(8,k)-getVariable(1,k)/getVariable(1,k)
Aug 31, 2024 3:13:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.890096954890917; Expression=u5(k)+u8(k)-u1(k)/u7(k); Java Expression: getVariable(5,k)+getVariable(8,k)-getVariable(1,k)/getVariable(7,k)
Aug 31, 2024 3:13:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.836563632148916; Expression=u5(k)+u8(k)-u1(k)/u9(k); Java Expression: getVariable(5,k)+getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 3:13:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.832365053800489; Expression=u5(k)+u8(k)-u3(k)/u9(k); Java Expression: getVariable(5,k)+getVariable(8,k)-getVariable(3,k)/getVariable(9,k)
Aug 31, 2024 3:14:05 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 7.832365053800489 -->> Avg.: 3.8205438692185104E10 -->> Std. Dev.: 3.3709917697398846E11
Aug 31, 2024 3:14:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.386080212875442; Expression=29*Math.pow(10,-2)*u7(k); Java Expression: 29*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 3:14:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.802980697300695; Expression=33*Math.pow(10,-2)*u7(k); Java Expression: 33*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 3:14:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.780883602472543; Expression=31*Math.pow(10,-2)*u7(k); Java Expression: 31*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 3:14:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709785324194373; Expression=32*Math.pow(10,-2)*u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 3:14:30 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 6.709785324194373 -->> Avg.: 178108.59722651218 -->> Std. Dev.: 916686.8802362594
Aug 31, 2024 3:14:45 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 6.709785324194373 -->> Avg.: 134.59293879454464 -->> Std. Dev.: 503.25686808013546
Aug 31, 2024 3:15:00 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 6.709785324194373 -->> Avg.: 14.147237416579813 -->> Std. Dev.: 15.26005852085118
Aug 31, 2024 3:15:15 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 6.709785324194373 -->> Avg.: 7.213388091182474 -->> Std. Dev.: 1.5836587451321134
Aug 31, 2024 3:15:29 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 6.709785324194373 -->> Avg.: 6.75904142769714 -->> Std. Dev.: 0.20690746417647649
Aug 31, 2024 3:15:43 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 6.709785324194373 -->> Avg.: 6.709785324194373 -->> Std. Dev.: 0.0
Aug 31, 2024 3:15:59 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 6.709785324194373 -->> Avg.: 6.709785324194373 -->> Std. Dev.: 0.0
Aug 31, 2024 3:16:15 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 6.709785324194373 -->> Avg.: 6.709785324194373 -->> Std. Dev.: 0.0
Aug 31, 2024 3:16:30 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 6.709785324194373 -->> Avg.: 6.709785324194373 -->> Std. Dev.: 0.0

Execution time: 219.852 seconds.



@@;32*Math.pow(10,-2)*getVariable(7,k)



Run #4
========
Aug 31, 2024 3:16:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.165359706522163E9; Expression=u2(k)+u2(k)/4*Math.pow(10,+8)-52*Math.pow(10,+5)-u1(k); Java Expression: getVariable(2,k)+getVariable(2,k)/4*Math.pow(10,+8)-52*Math.pow(10,+5)-getVariable(1,k)
Aug 31, 2024 3:16:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=67.17938260656274; Expression=36*Math.pow(10,-2)/u7(k)*u8(k)-u5(k)-76*Math.pow(10,-8)/u2(k); Java Expression: 36*Math.pow(10,-2)/getVariable(7,k)*getVariable(8,k)-getVariable(5,k)-76*Math.pow(10,-8)/getVariable(2,k)
Aug 31, 2024 3:16:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=34.180600879742904; Expression=3*Math.pow(10,-3)*u3(k); Java Expression: 3*Math.pow(10,-3)*getVariable(3,k)
Aug 31, 2024 3:16:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=22.05441509919104; Expression=u9(k)/u7(k)*u4(k); Java Expression: getVariable(9,k)/getVariable(7,k)*getVariable(4,k)
Aug 31, 2024 3:16:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.907174206296354; Expression=u5(k)-u8(k); Java Expression: getVariable(5,k)-getVariable(8,k)
Aug 31, 2024 3:16:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330340965805044; Expression=57*Math.pow(10,-4)-38*Math.pow(10,-2)/92*Math.pow(10,-6)/u2(k)+u5(k); Java Expression: 57*Math.pow(10,-4)-38*Math.pow(10,-2)/92*Math.pow(10,-6)/getVariable(2,k)+getVariable(5,k)
Aug 31, 2024 3:16:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330289447110026; Expression=80*Math.pow(10,-4)+u5(k); Java Expression: 80*Math.pow(10,-4)+getVariable(5,k)
Aug 31, 2024 3:16:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.328867474195128; Expression=90*Math.pow(10,-3)+u5(k); Java Expression: 90*Math.pow(10,-3)+getVariable(5,k)
Aug 31, 2024 3:16:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 31, 2024 3:16:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.545563761888495; Expression=62*Math.pow(10,-5)/u7(k)*u9(k)+26*Math.pow(10,-6)+u5(k)+u8(k)*u8(k); Java Expression: 62*Math.pow(10,-5)/getVariable(7,k)*getVariable(9,k)+26*Math.pow(10,-6)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.545561653602725; Expression=60*Math.pow(10,-5)/u7(k)*u9(k)+26*Math.pow(10,-6)+u5(k)+u8(k)*u8(k); Java Expression: 60*Math.pow(10,-5)/getVariable(7,k)*getVariable(9,k)+26*Math.pow(10,-6)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.545547359176102; Expression=62*Math.pow(10,-5)/u7(k)*u9(k)-26*Math.pow(10,-6)+u5(k)+u8(k)*u8(k); Java Expression: 62*Math.pow(10,-5)/getVariable(7,k)*getVariable(9,k)-26*Math.pow(10,-6)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.545498477256366; Expression=62*Math.pow(10,-5)/u7(k)/u9(k)+26*Math.pow(10,-6)+u5(k)+u8(k)*u8(k); Java Expression: 62*Math.pow(10,-5)/getVariable(7,k)/getVariable(9,k)+26*Math.pow(10,-6)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.545490207838518; Expression=62*Math.pow(10,-5)/u7(k)/u9(k)/26*Math.pow(10,-6)+u5(k)+u8(k)*u8(k); Java Expression: 62*Math.pow(10,-5)/getVariable(7,k)/getVariable(9,k)/26*Math.pow(10,-6)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.545489385324006; Expression=7*Math.pow(10,-5)/u7(k)*u9(k)-26*Math.pow(10,-6)+u5(k)+u8(k)*u8(k); Java Expression: 7*Math.pow(10,-5)/getVariable(7,k)*getVariable(9,k)-26*Math.pow(10,-6)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.545370426311852; Expression=62*Math.pow(10,-8)/u7(k)*u9(k)-38*Math.pow(10,-5)+u5(k)+u8(k)*u8(k); Java Expression: 62*Math.pow(10,-8)/getVariable(7,k)*getVariable(9,k)-38*Math.pow(10,-5)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.533591030574325; Expression=62*Math.pow(10,-8)/u6(k)*u9(k)-38*Math.pow(10,-3)+u5(k)+u8(k)*u8(k); Java Expression: 62*Math.pow(10,-8)/getVariable(6,k)*getVariable(9,k)-38*Math.pow(10,-3)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.519418359363428; Expression=62*Math.pow(10,-8)/u6(k)/u9(k)-84*Math.pow(10,-3)+u5(k)+u8(k)*u8(k); Java Expression: 62*Math.pow(10,-8)/getVariable(6,k)/getVariable(9,k)-84*Math.pow(10,-3)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.43438542084199; Expression=62*Math.pow(10,-8)/u6(k)*u9(k)-38*Math.pow(10,-2)+u5(k)+u8(k)*u8(k); Java Expression: 62*Math.pow(10,-8)/getVariable(6,k)*getVariable(9,k)-38*Math.pow(10,-2)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.299798253962495; Expression=43*Math.pow(10,-8)/u6(k)*u9(k)-38*Math.pow(10,-1)+u5(k)+u8(k)*u8(k); Java Expression: 43*Math.pow(10,-8)/getVariable(6,k)*getVariable(9,k)-38*Math.pow(10,-1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.196453171253393; Expression=43*Math.pow(10,-8)/u6(k)*u9(k)-31*Math.pow(10,-1)+u5(k)+u8(k)*u8(k); Java Expression: 43*Math.pow(10,-8)/getVariable(6,k)*getVariable(9,k)-31*Math.pow(10,-1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.167487125197804; Expression=62*Math.pow(10,-8)/u6(k)*u9(k)-27*Math.pow(10,-1)+u5(k)+u8(k)*u8(k); Java Expression: 62*Math.pow(10,-8)/getVariable(6,k)*getVariable(9,k)-27*Math.pow(10,-1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.9720177702843005; Expression=u7(k)/u1(k)/u3(k)*u9(k)-31*Math.pow(10,-1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)/getVariable(1,k)/getVariable(3,k)*getVariable(9,k)-31*Math.pow(10,-1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.944244223162613; Expression=u7(k)/u1(k)/u3(k)*u9(k)-38*Math.pow(10,-1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)/getVariable(1,k)/getVariable(3,k)*getVariable(9,k)-38*Math.pow(10,-1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.943899673965891; Expression=u7(k)/u1(k)/u3(k)*u9(k)-37*Math.pow(10,-1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)/getVariable(1,k)/getVariable(3,k)*getVariable(9,k)-37*Math.pow(10,-1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.927224938794273; Expression=u7(k)/u3(k)/u3(k)*u9(k)-38*Math.pow(10,-1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)/getVariable(3,k)/getVariable(3,k)*getVariable(9,k)-38*Math.pow(10,-1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.9061162651433365; Expression=u7(k)/u1(k)/u3(k)*u7(k)-78*Math.pow(10,-1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)/getVariable(1,k)/getVariable(3,k)*getVariable(7,k)-78*Math.pow(10,-1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.857576546666827; Expression=u7(k)/u1(k)/u4(k)*u7(k)-78*Math.pow(10,-1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)/getVariable(1,k)/getVariable(4,k)*getVariable(7,k)-78*Math.pow(10,-1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.75711799500994; Expression=u7(k)/u5(k)/u5(k)*u9(k)-56*Math.pow(10,-1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)/getVariable(5,k)/getVariable(5,k)*getVariable(9,k)-56*Math.pow(10,-1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.752813686968969; Expression=u7(k)/u5(k)/u3(k)*u9(k)-56*Math.pow(10,-1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)/getVariable(5,k)/getVariable(3,k)*getVariable(9,k)-56*Math.pow(10,-1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.752554104738142; Expression=u7(k)/u5(k)/u3(k)*u9(k)-55*Math.pow(10,-1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)/getVariable(5,k)/getVariable(3,k)*getVariable(9,k)-55*Math.pow(10,-1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.731676661105973; Expression=u7(k)/u5(k)/u5(k)*u9(k)-62*Math.pow(10,-1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)/getVariable(5,k)/getVariable(5,k)*getVariable(9,k)-62*Math.pow(10,-1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.6503987286446025; Expression=u7(k)/u5(k)/u3(k)*u7(k)-85*Math.pow(10,-1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)/getVariable(5,k)/getVariable(3,k)*getVariable(7,k)-85*Math.pow(10,-1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.622389978182289; Expression=u6(k)/u5(k)/u3(k)*u7(k)-85*Math.pow(10,-1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(6,k)/getVariable(5,k)/getVariable(3,k)*getVariable(7,k)-85*Math.pow(10,-1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.515020170575676; Expression=u7(k)/u5(k)/u3(k)*u7(k)-89*Math.pow(10,-1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)/getVariable(5,k)/getVariable(3,k)*getVariable(7,k)-89*Math.pow(10,-1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.5118859681929395; Expression=u6(k)/u5(k)/u3(k)*u7(k)-90*Math.pow(10,-1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(6,k)/getVariable(5,k)/getVariable(3,k)*getVariable(7,k)-90*Math.pow(10,-1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:16:53 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 6.5118859681929395 -->> Avg.: 1.7254866039750485E11 -->> Std. Dev.: 1.893003189580641E12
Aug 31, 2024 3:16:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.276121354438084; Expression=u7(k)/u5(k)/u3(k)*u7(k)-99*Math.pow(10,-1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)/getVariable(5,k)/getVariable(3,k)*getVariable(7,k)-99*Math.pow(10,-1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:17:29 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 6.276121354438084 -->> Avg.: 147808.08117271727 -->> Std. Dev.: 700920.5285913753
Aug 31, 2024 3:17:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.26052077697186; Expression=u7(k)/u5(k)/u3(k)*u7(k)-1*Math.pow(10,+1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)/getVariable(5,k)/getVariable(3,k)*getVariable(7,k)-1*Math.pow(10,+1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:18:19 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 6.26052077697186 -->> Avg.: 61.196728106046045 -->> Std. Dev.: 173.05811716737676
Aug 31, 2024 3:19:35 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 6.26052077697186 -->> Avg.: 12.284433039796712 -->> Std. Dev.: 11.831748925956934
Aug 31, 2024 3:19:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.662630879180533; Expression=u7(k)/u5(k)*u8(k)+u8(k)-1*Math.pow(10,+1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)/getVariable(5,k)*getVariable(8,k)+getVariable(8,k)-1*Math.pow(10,+1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:20:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.739079517990073; Expression=u7(k)/u5(k)*u8(k)*u8(k)-1*Math.pow(10,+1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)/getVariable(5,k)*getVariable(8,k)*getVariable(8,k)-1*Math.pow(10,+1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:20:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.619256004396067; Expression=u6(k)/u5(k)*u8(k)*u8(k)-1*Math.pow(10,+1)+u5(k)+u8(k)*u8(k); Java Expression: getVariable(6,k)/getVariable(5,k)*getVariable(8,k)*getVariable(8,k)-1*Math.pow(10,+1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:20:54 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.619256004396067 -->> Avg.: 6.451045253077708 -->> Std. Dev.: 1.4863071259664422
Aug 31, 2024 3:22:10 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.619256004396067 -->> Avg.: 5.748552649047955 -->> Std. Dev.: 0.7701588497149942
Aug 31, 2024 3:22:58 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.619256004396067 -->> Avg.: 5.417240888493144 -->> Std. Dev.: 0.8171716593603263
Aug 31, 2024 3:23:52 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.619256004396067 -->> Avg.: 5.094959814500138 -->> Std. Dev.: 0.7391452810405705
Aug 31, 2024 3:25:15 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.619256004396067 -->> Avg.: 4.774400288606426 -->> Std. Dev.: 0.4712965506285938
Aug 31, 2024 3:26:06 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.619256004396067 -->> Avg.: 4.619256004396067 -->> Std. Dev.: 0.0

Execution time: 577.865 seconds.



@@;getVariable(6,k)/getVariable(5,k)*getVariable(8,k)*getVariable(8,k)-1*Math.pow(10,+1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k)



Run #5
========
Aug 31, 2024 3:26:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=9.299825233461787E7; Expression=51*Math.pow(10,-2)*u7(k)/62*Math.pow(10,-3)+13*Math.pow(10,+5)+u9(k)-u8(k)+u3(k)*24*Math.pow(10,+5)+u8(k)/u3(k)-35*Math.pow(10,+5)-u9(k)/32*Math.pow(10,-5)*98*Math.pow(10,-5)+u6(k)-u2(k)/u8(k)+u1(k)/u9(k)*u3(k)+u1(k)+53*Math.pow(10,-4)/u9(k)+5*Math.pow(10,+6)/u1(k); Java Expression: 51*Math.pow(10,-2)*getVariable(7,k)/62*Math.pow(10,-3)+13*Math.pow(10,+5)+getVariable(9,k)-getVariable(8,k)+getVariable(3,k)*24*Math.pow(10,+5)+getVariable(8,k)/getVariable(3,k)-35*Math.pow(10,+5)-getVariable(9,k)/32*Math.pow(10,-5)*98*Math.pow(10,-5)+getVariable(6,k)-getVariable(2,k)/getVariable(8,k)+getVariable(1,k)/getVariable(9,k)*getVariable(3,k)+getVariable(1,k)+53*Math.pow(10,-4)/getVariable(9,k)+5*Math.pow(10,+6)/getVariable(1,k)
Aug 31, 2024 3:26:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=20678.516195592012; Expression=8*Math.pow(10,+5)/u3(k)+u7(k)-u1(k)/69*Math.pow(10,-3)+u1(k); Java Expression: 8*Math.pow(10,+5)/getVariable(3,k)+getVariable(7,k)-getVariable(1,k)/69*Math.pow(10,-3)+getVariable(1,k)
Aug 31, 2024 3:26:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=165.0191179957956; Expression=u2(k)+u3(k)/u8(k); Java Expression: getVariable(2,k)+getVariable(3,k)/getVariable(8,k)
Aug 31, 2024 3:26:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=34.29409982292189; Expression=71*Math.pow(10,-9)*u7(k); Java Expression: 71*Math.pow(10,-9)*getVariable(7,k)
Aug 31, 2024 3:26:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=34.16128749677578; Expression=41*Math.pow(10,-4)*u5(k); Java Expression: 41*Math.pow(10,-4)*getVariable(5,k)
Aug 31, 2024 3:26:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=10.306121959491481; Expression=u4(k)-u8(k); Java Expression: getVariable(4,k)-getVariable(8,k)
Aug 31, 2024 3:26:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.043505361826162; Expression=21*Math.pow(10,-4)/40*Math.pow(10,+8)/u2(k); Java Expression: 21*Math.pow(10,-4)/40*Math.pow(10,+8)/getVariable(2,k)
Aug 31, 2024 3:26:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.505065264045398; Expression=u8(k)+u9(k)+u7(k)-u9(k)-u5(k)-u4(k); Java Expression: getVariable(8,k)+getVariable(9,k)+getVariable(7,k)-getVariable(9,k)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:26:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388946502078; Expression=u8(k)+u9(k)+u7(k)-u9(k)-u5(k)-u3(k); Java Expression: getVariable(8,k)+getVariable(9,k)+getVariable(7,k)-getVariable(9,k)-getVariable(5,k)-getVariable(3,k)
Aug 31, 2024 3:26:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388946502076; Expression=u8(k)+u4(k)+u7(k)-u4(k)-u5(k)-u3(k); Java Expression: getVariable(8,k)+getVariable(4,k)+getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)
Aug 31, 2024 3:26:36 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.992388946502076 -->> Avg.: 5.2646418591263456E16 -->> Std. Dev.: 1.18005857711192371E18
Aug 31, 2024 3:27:11 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.992388946502076 -->> Avg.: 241440.7050932214 -->> Std. Dev.: 1134953.0624571382
Aug 31, 2024 3:27:47 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.992388946502076 -->> Avg.: 148.8585405470949 -->> Std. Dev.: 515.9555741897951
Aug 31, 2024 3:28:23 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.992388946502076 -->> Avg.: 12.924464375933999 -->> Std. Dev.: 14.664047746800923
Aug 31, 2024 3:28:58 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.992388946502076 -->> Avg.: 6.2484869862605805 -->> Std. Dev.: 1.5202140711724108
Aug 31, 2024 3:29:35 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.992388946502076 -->> Avg.: 5.992388946502076 -->> Std. Dev.: 0.0
Aug 31, 2024 3:30:10 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.992388946502076 -->> Avg.: 5.992388946502076 -->> Std. Dev.: 0.0
Aug 31, 2024 3:30:46 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.992388946502076 -->> Avg.: 5.992388946502076 -->> Std. Dev.: 0.0
Aug 31, 2024 3:31:22 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 5.992388946502076 -->> Avg.: 5.992388946502076 -->> Std. Dev.: 0.0
Aug 31, 2024 3:31:57 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 5.992388946502076 -->> Avg.: 5.992388946502076 -->> Std. Dev.: 0.0

Execution time: 350.367 seconds.



@@;getVariable(8,k)+getVariable(4,k)+getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k)



Run #6
========
Aug 31, 2024 3:31:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=132.37416664742642; Expression=u1(k)+u1(k)+u4(k)/u1(k); Java Expression: getVariable(1,k)+getVariable(1,k)+getVariable(4,k)/getVariable(1,k)
Aug 31, 2024 3:31:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=49.042617379773866; Expression=u1(k)-u8(k); Java Expression: getVariable(1,k)-getVariable(8,k)
Aug 31, 2024 3:31:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=47.630814447283505; Expression=u3(k)+u3(k); Java Expression: getVariable(3,k)+getVariable(3,k)
Aug 31, 2024 3:31:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=25.604001870246638; Expression=15*Math.pow(10,-2)*u1(k)-u8(k)*u8(k); Java Expression: 15*Math.pow(10,-2)*getVariable(1,k)-getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:31:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=19.115505879688893; Expression=u1(k)-u3(k); Java Expression: getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 3:31:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=14.777319334858099; Expression=u9(k)+u4(k)*2*Math.pow(10,-9)*u3(k); Java Expression: getVariable(9,k)+getVariable(4,k)*2*Math.pow(10,-9)*getVariable(3,k)
Aug 31, 2024 3:31:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.672120114779494; Expression=u5(k)+u7(k)/u5(k)-u8(k)/u6(k); Java Expression: getVariable(5,k)+getVariable(7,k)/getVariable(5,k)-getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 3:31:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330470124358067; Expression=54*Math.pow(10,-6)+u5(k); Java Expression: 54*Math.pow(10,-6)+getVariable(5,k)
Aug 31, 2024 3:31:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 3:32:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.939456259143495; Expression=u8(k)-u5(k)/u4(k)+u5(k); Java Expression: getVariable(8,k)-getVariable(5,k)/getVariable(4,k)+getVariable(5,k)
Aug 31, 2024 3:32:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.933502244053349; Expression=u8(k)-u4(k)/u4(k)+u5(k); Java Expression: getVariable(8,k)-getVariable(4,k)/getVariable(4,k)+getVariable(5,k)
Aug 31, 2024 3:32:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.579887333973399; Expression=32*Math.pow(10,-2)*u7(k)+u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 3:32:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.4070529324640715; Expression=31*Math.pow(10,-2)*u7(k)+u8(k); Java Expression: 31*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 3:32:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.405015834140299; Expression=30*Math.pow(10,-2)*u7(k)+u8(k); Java Expression: 30*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 3:32:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.1314074345122505; Expression=u7(k)-u4(k)/u3(k)/u7(k)/50*Math.pow(10,-9)-u5(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)/getVariable(3,k)/getVariable(7,k)/50*Math.pow(10,-9)-getVariable(5,k)-getVariable(3,k)
Aug 31, 2024 3:32:18 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 6.1314074345122505 -->> Avg.: 8.940949293556036E10 -->> Std. Dev.: 8.091901052558408E11
Aug 31, 2024 3:32:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131407434512234; Expression=u7(k)-u4(k)/u3(k)/u2(k)/50*Math.pow(10,-9)-u5(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)/getVariable(3,k)/getVariable(2,k)/50*Math.pow(10,-9)-getVariable(5,k)-getVariable(3,k)
Aug 31, 2024 3:32:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131407434512109; Expression=u7(k)+u4(k)/u3(k)/u7(k)/18*Math.pow(10,-9)-u5(k)-u3(k); Java Expression: getVariable(7,k)+getVariable(4,k)/getVariable(3,k)/getVariable(7,k)/18*Math.pow(10,-9)-getVariable(5,k)-getVariable(3,k)
Aug 31, 2024 3:32:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131407433409978; Expression=u7(k)+u4(k)/u3(k)/u7(k)/18*Math.pow(10,-5)-u5(k)-u3(k); Java Expression: getVariable(7,k)+getVariable(4,k)/getVariable(3,k)/getVariable(7,k)/18*Math.pow(10,-5)-getVariable(5,k)-getVariable(3,k)
Aug 31, 2024 3:32:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837828; Expression=u7(k)-u4(k)/u3(k)/u7(k)/50*Math.pow(10,-9)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)/getVariable(3,k)/getVariable(7,k)/50*Math.pow(10,-9)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837823; Expression=u7(k)-u4(k)/u5(k)/u7(k)/50*Math.pow(10,-9)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)/getVariable(5,k)/getVariable(7,k)/50*Math.pow(10,-9)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837698; Expression=u7(k)-u3(k)/u5(k)/u7(k)/15*Math.pow(10,-9)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(3,k)/getVariable(5,k)/getVariable(7,k)/15*Math.pow(10,-9)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487778139; Expression=u7(k)-u4(k)*u3(k)/u7(k)/50*Math.pow(10,-9)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)*getVariable(3,k)/getVariable(7,k)/50*Math.pow(10,-9)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.013401682145237; Expression=u7(k)-u4(k)/u8(k)/u7(k)+50*Math.pow(10,-9)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)/getVariable(8,k)/getVariable(7,k)+50*Math.pow(10,-9)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.910805556630017; Expression=u7(k)-u7(k)/u8(k)/u7(k)+50*Math.pow(10,-9)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(7,k)+50*Math.pow(10,-9)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.91080555298678; Expression=u7(k)-u7(k)/u8(k)/u7(k)+14*Math.pow(10,-9)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(7,k)+14*Math.pow(10,-9)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.906843698643021; Expression=u7(k)-u7(k)/u8(k)/u1(k)+50*Math.pow(10,-9)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(1,k)+50*Math.pow(10,-9)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.888197535443197; Expression=u7(k)-u2(k)/u8(k)/u7(k)+50*Math.pow(10,-9)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(7,k)+50*Math.pow(10,-9)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.78010449620601; Expression=u7(k)-u7(k)/u8(k)/u4(k)+98*Math.pow(10,-9)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(4,k)+98*Math.pow(10,-9)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.779983347348717; Expression=u7(k)-u7(k)/u8(k)/u4(k)+98*Math.pow(10,-5)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(4,k)+98*Math.pow(10,-5)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.740012435612414; Expression=u7(k)-u1(k)/u8(k)/u4(k)+50*Math.pow(10,-9)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)/getVariable(8,k)/getVariable(4,k)+50*Math.pow(10,-9)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.739730844933194; Expression=u7(k)-u7(k)/u8(k)/u4(k)+50*Math.pow(10,-2)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(4,k)+50*Math.pow(10,-2)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7389277296537164; Expression=u7(k)-u1(k)/u8(k)/u4(k)+50*Math.pow(10,-2)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)/getVariable(8,k)/getVariable(4,k)+50*Math.pow(10,-2)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.737943678455386; Expression=u7(k)-u1(k)/u8(k)/u4(k)+50*Math.pow(10,-3)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)/getVariable(8,k)/getVariable(4,k)+50*Math.pow(10,-3)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.735701096823536; Expression=u7(k)-u7(k)/u8(k)/u4(k)+72*Math.pow(10,-2)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(4,k)+72*Math.pow(10,-2)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.73402277085724; Expression=u7(k)-u1(k)/u8(k)/u4(k)+25*Math.pow(10,-2)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)/getVariable(8,k)/getVariable(4,k)+25*Math.pow(10,-2)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7340097759498505; Expression=u7(k)-u1(k)/u8(k)/u4(k)+26*Math.pow(10,-2)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)/getVariable(8,k)/getVariable(4,k)+26*Math.pow(10,-2)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.70346333589879; Expression=u7(k)-u7(k)/u8(k)/u9(k)+50*Math.pow(10,-2)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(9,k)+50*Math.pow(10,-2)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.684654396315954; Expression=u7(k)-u1(k)/u8(k)/u9(k)+50*Math.pow(10,-2)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)/getVariable(8,k)/getVariable(9,k)+50*Math.pow(10,-2)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.684561312036675; Expression=u7(k)-u1(k)/u8(k)/u9(k)+39*Math.pow(10,-2)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)/getVariable(8,k)/getVariable(9,k)+39*Math.pow(10,-2)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.684348209096508; Expression=u7(k)-u1(k)/u8(k)/u9(k)+45*Math.pow(10,-2)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)/getVariable(8,k)/getVariable(9,k)+45*Math.pow(10,-2)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.684339746496477; Expression=u7(k)-u1(k)/u8(k)/u9(k)+44*Math.pow(10,-2)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)/getVariable(8,k)/getVariable(9,k)+44*Math.pow(10,-2)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:32:46 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.684339746496477 -->> Avg.: 38078.82467094834 -->> Std. Dev.: 193523.48789655537
Aug 31, 2024 3:33:23 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.684339746496477 -->> Avg.: 49.49549180813162 -->> Std. Dev.: 125.64031594774453
Aug 31, 2024 3:34:03 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.684339746496477 -->> Avg.: 11.915205765238994 -->> Std. Dev.: 12.309020284033947
Aug 31, 2024 3:34:43 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.684339746496477 -->> Avg.: 6.090159215828495 -->> Std. Dev.: 1.2437735503515033
Aug 31, 2024 3:34:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.679699437471211; Expression=u7(k)-u1(k)*u7(k)/u8(k)/44*Math.pow(10,-2)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*getVariable(7,k)/getVariable(8,k)/44*Math.pow(10,-2)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:34:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.656491497691045; Expression=u7(k)-u1(k)*u7(k)/u8(k)/29*Math.pow(10,-2)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*getVariable(7,k)/getVariable(8,k)/29*Math.pow(10,-2)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:35:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.653837411061214; Expression=u7(k)-u1(k)*u7(k)/u8(k)/36*Math.pow(10,-2)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*getVariable(7,k)/getVariable(8,k)/36*Math.pow(10,-2)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:35:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.651945010112035; Expression=u7(k)-u1(k)*u7(k)/u8(k)/35*Math.pow(10,-2)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*getVariable(7,k)/getVariable(8,k)/35*Math.pow(10,-2)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:35:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.641439516626948; Expression=u7(k)-u1(k)*u1(k)/u8(k)/29*Math.pow(10,-2)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*getVariable(1,k)/getVariable(8,k)/29*Math.pow(10,-2)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:35:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.641044751535721; Expression=u7(k)-u1(k)*u1(k)/u8(k)/28*Math.pow(10,-2)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*getVariable(1,k)/getVariable(8,k)/28*Math.pow(10,-2)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:35:24 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.641044751535721 -->> Avg.: 5.712241613171413 -->> Std. Dev.: 0.13010403750018934
Aug 31, 2024 3:36:06 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.641044751535721 -->> Avg.: 5.6702882512127895 -->> Std. Dev.: 0.019962509093729704
Aug 31, 2024 3:36:47 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.641044751535721 -->> Avg.: 5.661832197509517 -->> Std. Dev.: 0.021342844445865896
Aug 31, 2024 3:36:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6003396546322595; Expression=u7(k)-u1(k)*u1(k)*u7(k)/28*Math.pow(10,-4)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*getVariable(1,k)*getVariable(7,k)/28*Math.pow(10,-4)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:36:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.560828884700989; Expression=u7(k)-u1(k)*u1(k)*u7(k)/41*Math.pow(10,-4)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*getVariable(1,k)*getVariable(7,k)/41*Math.pow(10,-4)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:36:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5530604352241895; Expression=u7(k)-u1(k)*u1(k)*u1(k)/28*Math.pow(10,-4)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*getVariable(1,k)*getVariable(1,k)/28*Math.pow(10,-4)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:36:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.551043601704822; Expression=u7(k)-u1(k)*u1(k)*u1(k)/36*Math.pow(10,-4)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*getVariable(1,k)*getVariable(1,k)/36*Math.pow(10,-4)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:36:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.54500700526421; Expression=u7(k)-u1(k)*u1(k)*u1(k)/30*Math.pow(10,-4)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*getVariable(1,k)*getVariable(1,k)/30*Math.pow(10,-4)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:37:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.543989474464353; Expression=u7(k)-u1(k)*u1(k)*u1(k)/33*Math.pow(10,-4)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*getVariable(1,k)*getVariable(1,k)/33*Math.pow(10,-4)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:37:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.543461219871468; Expression=u7(k)-u1(k)*u1(k)*u1(k)/31*Math.pow(10,-4)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*getVariable(1,k)*getVariable(1,k)/31*Math.pow(10,-4)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:37:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.543195554599306; Expression=u7(k)-u1(k)*u1(k)*u1(k)/32*Math.pow(10,-4)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*getVariable(1,k)*getVariable(1,k)/32*Math.pow(10,-4)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:37:27 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 5.543195554599306 -->> Avg.: 5.636263001855091 -->> Std. Dev.: 0.0459494520677041
Aug 31, 2024 3:37:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.543195554599305; Expression=u7(k)-u1(k)*u1(k)*u1(k)/32*Math.pow(10,-4)-u4(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(1,k)*getVariable(1,k)*getVariable(1,k)/32*Math.pow(10,-4)-getVariable(4,k)-getVariable(5,k)
Aug 31, 2024 3:38:06 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 5.543195554599305 -->> Avg.: 5.608695776875175 -->> Std. Dev.: 0.050913049321545084

Execution time: 368.573 seconds.



@@;getVariable(7,k)-getVariable(1,k)*getVariable(1,k)*getVariable(1,k)/32*Math.pow(10,-4)-getVariable(4,k)-getVariable(5,k)



Run #7
========
Aug 31, 2024 3:38:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0955887286760114E7; Expression=52*Math.pow(10,-8)+38*Math.pow(10,+6)*u8(k)-27*Math.pow(10,+2)-22*Math.pow(10,-1)/u8(k)+57*Math.pow(10,-8)*u3(k)/44*Math.pow(10,-8)+u5(k)/u1(k)+u5(k); Java Expression: 52*Math.pow(10,-8)+38*Math.pow(10,+6)*getVariable(8,k)-27*Math.pow(10,+2)-22*Math.pow(10,-1)/getVariable(8,k)+57*Math.pow(10,-8)*getVariable(3,k)/44*Math.pow(10,-8)+getVariable(5,k)/getVariable(1,k)+getVariable(5,k)
Aug 31, 2024 3:38:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=24.443414341753133; Expression=u1(k)-u9(k); Java Expression: getVariable(1,k)-getVariable(9,k)
Aug 31, 2024 3:38:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.328931074633385; Expression=85*Math.pow(10,-3)+u5(k); Java Expression: 85*Math.pow(10,-3)+getVariable(5,k)
Aug 31, 2024 3:38:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 31, 2024 3:38:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.900730204286273; Expression=u3(k)/u2(k)*54*Math.pow(10,+2)/u3(k); Java Expression: getVariable(3,k)/getVariable(2,k)*54*Math.pow(10,+2)/getVariable(3,k)
Aug 31, 2024 3:38:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.781664373060372; Expression=u5(k)/u8(k)+u3(k)/u1(k)-u8(k)-u5(k)+u5(k)*u8(k)-u8(k); Java Expression: getVariable(5,k)/getVariable(8,k)+getVariable(3,k)/getVariable(1,k)-getVariable(8,k)-getVariable(5,k)+getVariable(5,k)*getVariable(8,k)-getVariable(8,k)
Aug 31, 2024 3:38:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131407434512216; Expression=u7(k)-u3(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 31, 2024 3:38:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837859; Expression=u7(k)-u4(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)
Aug 31, 2024 3:38:29 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 6.077427487837859 -->> Avg.: 6.215601847666437E10 -->> Std. Dev.: 4.315183698868998E11
Aug 31, 2024 3:38:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.041966915165479; Expression=u7(k)-u4(k)-25*Math.pow(10,-1)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-25*Math.pow(10,-1)-getVariable(5,k)
Aug 31, 2024 3:38:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.99140513434628; Expression=u7(k)-u4(k)-22*Math.pow(10,-1)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-22*Math.pow(10,-1)-getVariable(5,k)
Aug 31, 2024 3:38:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.963858727880689; Expression=u7(k)-u4(k)-69*Math.pow(10,-2)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-69*Math.pow(10,-2)-getVariable(5,k)
Aug 31, 2024 3:38:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.934650625243617; Expression=u7(k)-u4(k)-16*Math.pow(10,-1)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-16*Math.pow(10,-1)-getVariable(5,k)
Aug 31, 2024 3:38:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928882637025394; Expression=u7(k)-u4(k)-13*Math.pow(10,-1)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-13*Math.pow(10,-1)-getVariable(5,k)
Aug 31, 2024 3:38:49 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.928882637025394 -->> Avg.: 152156.48077996122 -->> Std. Dev.: 729390.7570001311
Aug 31, 2024 3:39:10 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.928882637025394 -->> Avg.: 74.1777281434273 -->> Std. Dev.: 230.2396688909393
Aug 31, 2024 3:39:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928882637025391; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-getVariable(4,k)
Aug 31, 2024 3:39:34 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.928882637025391 -->> Avg.: 12.540297593459004 -->> Std. Dev.: 13.7244687090866
Aug 31, 2024 3:39:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928840944971452; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-77*Math.pow(10,-4)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-77*Math.pow(10,-4)-getVariable(4,k)
Aug 31, 2024 3:39:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928832640840065; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-95*Math.pow(10,-4)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-95*Math.pow(10,-4)-getVariable(4,k)
Aug 31, 2024 3:39:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928832195522477; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-96*Math.pow(10,-4)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-96*Math.pow(10,-4)-getVariable(4,k)
Aug 31, 2024 3:39:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9288313099472285; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-98*Math.pow(10,-4)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-98*Math.pow(10,-4)-getVariable(4,k)
Aug 31, 2024 3:39:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928830869689578; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-99*Math.pow(10,-4)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-99*Math.pow(10,-4)-getVariable(4,k)
Aug 31, 2024 3:39:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9287950916095475; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-20*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-20*Math.pow(10,-3)-getVariable(4,k)
Aug 31, 2024 3:39:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928783746854117; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-25*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-25*Math.pow(10,-3)-getVariable(4,k)
Aug 31, 2024 3:39:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928554188677795; Expression=u7(k)-u5(k)-u1(k)/u7(k)-77*Math.pow(10,-4)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(7,k)-77*Math.pow(10,-4)-getVariable(4,k)
Aug 31, 2024 3:39:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9283411831367365; Expression=u7(k)-u5(k)-u1(k)/u7(k)-99*Math.pow(10,-4)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(7,k)-99*Math.pow(10,-4)-getVariable(4,k)
Aug 31, 2024 3:39:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.907420437710525; Expression=u7(k)-u5(k)-u1(k)/u6(k)-25*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(6,k)-25*Math.pow(10,-3)-getVariable(4,k)
Aug 31, 2024 3:39:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.882908625376423; Expression=u7(k)-u5(k)-u1(k)/u5(k)-99*Math.pow(10,-4)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)-99*Math.pow(10,-4)-getVariable(4,k)
Aug 31, 2024 3:39:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.834457885020014; Expression=u7(k)-u5(k)-u1(k)/u3(k)-77*Math.pow(10,-4)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(3,k)-77*Math.pow(10,-4)-getVariable(4,k)
Aug 31, 2024 3:39:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.832650607403735; Expression=u7(k)-u5(k)-u1(k)/u3(k)+77*Math.pow(10,-4)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(3,k)+77*Math.pow(10,-4)-getVariable(4,k)
Aug 31, 2024 3:39:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.810401684237196; Expression=u7(k)-u5(k)-u1(k)/u9(k)-77*Math.pow(10,-4)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-77*Math.pow(10,-4)-getVariable(4,k)
Aug 31, 2024 3:39:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.80773598083898; Expression=u7(k)-u5(k)-u1(k)/u9(k)+77*Math.pow(10,-4)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+77*Math.pow(10,-4)-getVariable(4,k)
Aug 31, 2024 3:39:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.726220196161149; Expression=u7(k)-u5(k)-u1(k)/u9(k)+77*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+77*Math.pow(10,-2)-getVariable(4,k)
Aug 31, 2024 3:39:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.722013363532359; Expression=u7(k)-u5(k)-u1(k)/u9(k)+92*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+92*Math.pow(10,-2)-getVariable(4,k)
Aug 31, 2024 3:39:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.721376684952653; Expression=u7(k)-u5(k)-u1(k)/u9(k)+u5(k)/u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+getVariable(5,k)/getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:39:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.717889544283134; Expression=u7(k)-u5(k)-u1(k)/u9(k)+u4(k)/u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+getVariable(4,k)/getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:39:59 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.717889544283134 -->> Avg.: 6.219183653319877 -->> Std. Dev.: 1.1145402028651459
Aug 31, 2024 3:40:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.712652464439622; Expression=u7(k)-u5(k)-u1(k)/u9(k)+u4(k)/u3(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+getVariable(4,k)/getVariable(3,k)-getVariable(4,k)
Aug 31, 2024 3:40:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.695297451825394; Expression=u7(k)-u5(k)-u1(k)/u9(k)/u8(k)/u8(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)/getVariable(8,k)/getVariable(8,k)-getVariable(4,k)
Aug 31, 2024 3:40:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.676557590668006; Expression=u7(k)-u5(k)-u1(k)/u9(k)+u6(k)/u1(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)+getVariable(6,k)/getVariable(1,k)-getVariable(4,k)
Aug 31, 2024 3:40:32 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.676557590668006 -->> Avg.: 5.899325094371706 -->> Std. Dev.: 0.12336426672334401
Aug 31, 2024 3:40:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.676557590668005; Expression=u7(k)-u4(k)-u1(k)/u9(k)+u6(k)/u1(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(1,k)/getVariable(9,k)+getVariable(6,k)/getVariable(1,k)-getVariable(5,k)
Aug 31, 2024 3:40:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672883735069108; Expression=u7(k)-u5(k)-u1(k)/u9(k)-47*Math.pow(10,-8)-u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-47*Math.pow(10,-8)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 3:40:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672879479007164; Expression=u7(k)-u5(k)-u1(k)/u9(k)-47*Math.pow(10,-6)-u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-47*Math.pow(10,-6)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 3:40:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672840804893902; Expression=u7(k)-u5(k)-u1(k)/u9(k)-47*Math.pow(10,-5)-u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-47*Math.pow(10,-5)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 3:40:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672799696556557; Expression=u7(k)-u5(k)-u1(k)/u9(k)-92*Math.pow(10,-5)-u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-92*Math.pow(10,-5)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 3:40:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672455784150948; Expression=u7(k)-u5(k)-u1(k)/u9(k)-47*Math.pow(10,-4)-u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-47*Math.pow(10,-4)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 3:40:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.649312147044358; Expression=u7(k)-u5(k)-u1(k)/u9(k)-47*Math.pow(10,-2)-u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-47*Math.pow(10,-2)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 3:40:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.649111223232113; Expression=u7(k)-u5(k)-u1(k)/u9(k)-53*Math.pow(10,-2)-u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-53*Math.pow(10,-2)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 3:40:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.64910045637029; Expression=u7(k)-u5(k)-u1(k)/u9(k)-52*Math.pow(10,-2)-u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-52*Math.pow(10,-2)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 3:40:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.627734890322219; Expression=u7(k)-u5(k)-u1(k)/u9(k)-u7(k)/u2(k)-u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(7,k)/getVariable(2,k)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 3:40:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.621082282108203; Expression=u7(k)-u5(k)-u1(k)/u9(k)-u1(k)/u2(k)-u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(1,k)/getVariable(2,k)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 3:41:10 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.621082282108203 -->> Avg.: 5.818772317161742 -->> Std. Dev.: 0.1269044104682493
Aug 31, 2024 3:41:53 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.621082282108203 -->> Avg.: 5.7586550603419795 -->> Std. Dev.: 0.13325656046951445
Aug 31, 2024 3:42:39 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 5.621082282108203 -->> Avg.: 5.698537803522216 -->> Std. Dev.: 0.11033883099793694
Aug 31, 2024 3:43:24 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 5.621082282108203 -->> Avg.: 5.642317603671875 -->> Std. Dev.: 0.032182232701165145

Execution time: 319.074 seconds.



@@;getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(1,k)/getVariable(2,k)-getVariable(4,k)+getVariable(8,k)



Run #8
========
Aug 31, 2024 3:43:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=10.731668056345766; Expression=u8(k)+u4(k); Java Expression: getVariable(8,k)+getVariable(4,k)
Aug 31, 2024 3:43:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=10.702796140016309; Expression=u5(k)/u4(k)+u4(k); Java Expression: getVariable(5,k)/getVariable(4,k)+getVariable(4,k)
Aug 31, 2024 3:43:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=10.39803170525083; Expression=u2(k)-u2(k)+u8(k)*u8(k)*74*Math.pow(10,-9)+u4(k); Java Expression: getVariable(2,k)-getVariable(2,k)+getVariable(8,k)*getVariable(8,k)*74*Math.pow(10,-9)+getVariable(4,k)
Aug 31, 2024 3:43:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=10.306121959491481; Expression=u4(k)-u8(k); Java Expression: getVariable(4,k)-getVariable(8,k)
Aug 31, 2024 3:43:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.345491277439008; Expression=73*Math.pow(10,-2)+u5(k); Java Expression: 73*Math.pow(10,-2)+getVariable(5,k)
Aug 31, 2024 3:43:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330471356072872; Expression=95*Math.pow(10,-8)+u5(k); Java Expression: 95*Math.pow(10,-8)+getVariable(5,k)
Aug 31, 2024 3:43:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.33040199120937; Expression=37*Math.pow(10,-3)/u3(k)+u5(k); Java Expression: 37*Math.pow(10,-3)/getVariable(3,k)+getVariable(5,k)
Aug 31, 2024 3:43:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 3:43:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.603015166455903; Expression=69*Math.pow(10,-2)*u4(k)*82*Math.pow(10,-2)*u8(k); Java Expression: 69*Math.pow(10,-2)*getVariable(4,k)*82*Math.pow(10,-2)*getVariable(8,k)
Aug 31, 2024 3:43:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131407434512215; Expression=u7(k)-u5(k)-u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(3,k)
Aug 31, 2024 3:43:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837859; Expression=u7(k)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)
Aug 31, 2024 3:43:47 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 6.077427487837859 -->> Avg.: 3.915854779896189E10 -->> Std. Dev.: 2.3096494766850284E11
Aug 31, 2024 3:44:08 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 6.077427487837859 -->> Avg.: 420792.3378460866 -->> Std. Dev.: 2336948.602931651
Aug 31, 2024 3:44:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.061214421267911; Expression=u7(k)-u5(k)-14*Math.pow(10,-8)/u5(k)/u1(k)*u3(k)*u6(k)/50*Math.pow(10,-2)/u6(k)*u8(k)-u3(k)+u5(k)/u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)-14*Math.pow(10,-8)/getVariable(5,k)/getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-2)/getVariable(6,k)*getVariable(8,k)-getVariable(3,k)+getVariable(5,k)/getVariable(9,k)
Aug 31, 2024 3:44:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.027105354929426; Expression=u7(k)-u5(k)-14*Math.pow(10,-8)/u5(k)/u1(k)*u3(k)*u6(k)/50*Math.pow(10,-2)/u6(k)*u8(k)-u3(k)+u5(k)/u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)-14*Math.pow(10,-8)/getVariable(5,k)/getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-2)/getVariable(6,k)*getVariable(8,k)-getVariable(3,k)+getVariable(5,k)/getVariable(5,k)
Aug 31, 2024 3:44:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.010692511541343; Expression=u7(k)-u5(k)-14*Math.pow(10,-8)/u5(k)/u1(k)*u3(k)*u6(k)/50*Math.pow(10,-2)/u6(k)*u8(k)-u3(k)+u3(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-14*Math.pow(10,-8)/getVariable(5,k)/getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-2)/getVariable(6,k)*getVariable(8,k)-getVariable(3,k)+getVariable(3,k)/getVariable(1,k)
Aug 31, 2024 3:44:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.010692511541144; Expression=u7(k)-u5(k)-14*Math.pow(10,-8)/u5(k)/u1(k)*u3(k)*u6(k)/50*Math.pow(10,-4)/u6(k)*u8(k)-u3(k)+u3(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-14*Math.pow(10,-8)/getVariable(5,k)/getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)*getVariable(8,k)-getVariable(3,k)+getVariable(3,k)/getVariable(1,k)
Aug 31, 2024 3:44:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0106925115411425; Expression=u7(k)-u5(k)-4*Math.pow(10,-8)/u5(k)/u1(k)*u3(k)*u6(k)/50*Math.pow(10,-4)/u6(k)*u8(k)-u3(k)+u3(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-4*Math.pow(10,-8)/getVariable(5,k)/getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)*getVariable(8,k)-getVariable(3,k)+getVariable(3,k)/getVariable(1,k)
Aug 31, 2024 3:44:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.004694817812627; Expression=u7(k)-u5(k)-14*Math.pow(10,-8)/u5(k)/u1(k)*u3(k)*u6(k)/50*Math.pow(10,-4)/u6(k)+u8(k)-u3(k)+u3(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-14*Math.pow(10,-8)/getVariable(5,k)/getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)+getVariable(8,k)-getVariable(3,k)+getVariable(3,k)/getVariable(1,k)
Aug 31, 2024 3:44:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.004694817812618; Expression=u7(k)-u5(k)-14*Math.pow(10,-8)/u8(k)/u1(k)*u3(k)*u6(k)/50*Math.pow(10,-4)/u6(k)+u8(k)-u3(k)+u3(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-14*Math.pow(10,-8)/getVariable(8,k)/getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)+getVariable(8,k)-getVariable(3,k)+getVariable(3,k)/getVariable(1,k)
Aug 31, 2024 3:44:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.004694817812593; Expression=u7(k)-u5(k)-14*Math.pow(10,-8)/u5(k)/u1(k)*u3(k)*u6(k)/50*Math.pow(10,-2)/u6(k)+u8(k)-u3(k)+u3(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-14*Math.pow(10,-8)/getVariable(5,k)/getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-2)/getVariable(6,k)+getVariable(8,k)-getVariable(3,k)+getVariable(3,k)/getVariable(1,k)
Aug 31, 2024 3:44:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.004694817812591; Expression=u7(k)-u5(k)-14*Math.pow(10,-8)/u8(k)/u5(k)*u3(k)*u6(k)/50*Math.pow(10,-4)/u6(k)+u8(k)-u3(k)+u3(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-14*Math.pow(10,-8)/getVariable(8,k)/getVariable(5,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)+getVariable(8,k)-getVariable(3,k)+getVariable(3,k)/getVariable(1,k)
Aug 31, 2024 3:44:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.003652958955302; Expression=u7(k)-u5(k)-14*Math.pow(10,-5)/u8(k)/u1(k)*u3(k)*u6(k)/50*Math.pow(10,+4)/u6(k)+u8(k)-u3(k)+u3(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-14*Math.pow(10,-5)/getVariable(8,k)/getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,+4)/getVariable(6,k)+getVariable(8,k)-getVariable(3,k)+getVariable(3,k)/getVariable(1,k)
Aug 31, 2024 3:44:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.971626426077102; Expression=u7(k)-u5(k)-14*Math.pow(10,-8)/u8(k)/u1(k)*u3(k)*u6(k)/50*Math.pow(10,-4)/u6(k)*u8(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-14*Math.pow(10,-8)/getVariable(8,k)/getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)*getVariable(8,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.971626426077044; Expression=u7(k)-u5(k)-64*Math.pow(10,-8)/u8(k)/u1(k)*u3(k)*u6(k)/50*Math.pow(10,-4)/u6(k)*u8(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-64*Math.pow(10,-8)/getVariable(8,k)/getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)*getVariable(8,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.971626426061045; Expression=u7(k)-u5(k)-14*Math.pow(10,-5)/u8(k)/u1(k)*u3(k)*u6(k)/50*Math.pow(10,-4)/u6(k)*u8(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-14*Math.pow(10,-5)/getVariable(8,k)/getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)*getVariable(8,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.969546929982799; Expression=u7(k)-u5(k)-14*Math.pow(10,-8)/u8(k)-u1(k)*u3(k)*u6(k)/50*Math.pow(10,-4)/u6(k)*u8(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-14*Math.pow(10,-8)/getVariable(8,k)-getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)*getVariable(8,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.969546900851586; Expression=u7(k)-u5(k)-32*Math.pow(10,-8)/u8(k)-u1(k)*u3(k)*u6(k)/50*Math.pow(10,-4)/u6(k)*u8(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-32*Math.pow(10,-8)/getVariable(8,k)-getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)*getVariable(8,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.969546887904376; Expression=u7(k)-u5(k)-40*Math.pow(10,-8)/u8(k)-u1(k)*u3(k)*u6(k)/50*Math.pow(10,-4)/u6(k)*u8(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-40*Math.pow(10,-8)/getVariable(8,k)-getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)*getVariable(8,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.968145899443322; Expression=u7(k)-u5(k)-14*Math.pow(10,+5)/u3(k)/u1(k)*u3(k)*u6(k)/50*Math.pow(10,-4)/u6(k)*u8(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-14*Math.pow(10,+5)/getVariable(3,k)/getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)*getVariable(8,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.965057188208795; Expression=u7(k)-u5(k)-14*Math.pow(10,+5)/u3(k)/u1(k)*u3(k)*u6(k)/90*Math.pow(10,-4)/u5(k)*u8(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-14*Math.pow(10,+5)/getVariable(3,k)/getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/90*Math.pow(10,-4)/getVariable(5,k)*getVariable(8,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.940630011105168; Expression=u7(k)-u5(k)-40*Math.pow(10,-8)/u8(k)*u1(k)*u3(k)*u6(k)-50*Math.pow(10,-4)/u6(k)*u8(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-40*Math.pow(10,-8)/getVariable(8,k)*getVariable(1,k)*getVariable(3,k)*getVariable(6,k)-50*Math.pow(10,-4)/getVariable(6,k)*getVariable(8,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.893687745211917; Expression=u7(k)-u5(k)-14*Math.pow(10,-8)/u5(k)-u1(k)*u3(k)*u6(k)/50*Math.pow(10,-2)/u6(k)+u8(k)-u3(k)+u3(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-14*Math.pow(10,-8)/getVariable(5,k)-getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-2)/getVariable(6,k)+getVariable(8,k)-getVariable(3,k)+getVariable(3,k)/getVariable(1,k)
Aug 31, 2024 3:44:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.799806438349995; Expression=u7(k)-u5(k)-40*Math.pow(10,-8)/u8(k)-u1(k)*u3(k)*u6(k)/50*Math.pow(10,-4)/u6(k)*u2(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-40*Math.pow(10,-8)/getVariable(8,k)-getVariable(1,k)*getVariable(3,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)*getVariable(2,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.563116800958269; Expression=u7(k)-u5(k)-40*Math.pow(10,-8)+u8(k)-u1(k)*u6(k)*u6(k)/50*Math.pow(10,-4)/u6(k)*u2(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-40*Math.pow(10,-8)+getVariable(8,k)-getVariable(1,k)*getVariable(6,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)*getVariable(2,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.563116791723776; Expression=u7(k)-u5(k)+40*Math.pow(10,-8)+u8(k)-u1(k)*u6(k)*u6(k)/50*Math.pow(10,-4)/u6(k)*u2(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+40*Math.pow(10,-8)+getVariable(8,k)-getVariable(1,k)*getVariable(6,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)*getVariable(2,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5627988666128925; Expression=u7(k)-u5(k)+40*Math.pow(10,-3)+u8(k)-u1(k)*u6(k)*u6(k)/50*Math.pow(10,-4)/u6(k)*u2(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+40*Math.pow(10,-3)+getVariable(8,k)-getVariable(1,k)*getVariable(6,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)*getVariable(2,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.562746445041112; Expression=u7(k)-u5(k)+66*Math.pow(10,-3)+u8(k)-u1(k)*u6(k)*u6(k)/50*Math.pow(10,-4)/u6(k)*u2(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+66*Math.pow(10,-3)+getVariable(8,k)-getVariable(1,k)*getVariable(6,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)*getVariable(2,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5603585491129; Expression=u7(k)-u5(k)+40*Math.pow(10,-3)+u8(k)-u1(k)*u6(k)*u1(k)/50*Math.pow(10,-4)/u6(k)*u2(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+40*Math.pow(10,-3)+getVariable(8,k)-getVariable(1,k)*getVariable(6,k)*getVariable(1,k)/50*Math.pow(10,-4)/getVariable(6,k)*getVariable(2,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.557862161438229; Expression=u7(k)-u5(k)+40*Math.pow(10,-8)+u8(k)-u1(k)*u1(k)*u6(k)/50*Math.pow(10,-4)/u6(k)*u2(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+40*Math.pow(10,-8)+getVariable(8,k)-getVariable(1,k)*getVariable(1,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)*getVariable(2,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.511691174127195; Expression=u7(k)-u5(k)+40*Math.pow(10,-4)+u8(k)-u1(k)*u7(k)*u6(k)/50*Math.pow(10,-4)/u6(k)*u2(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+40*Math.pow(10,-4)+getVariable(8,k)-getVariable(1,k)*getVariable(7,k)*getVariable(6,k)/50*Math.pow(10,-4)/getVariable(6,k)*getVariable(2,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.510124541459424; Expression=u7(k)-u5(k)+40*Math.pow(10,-3)+u8(k)-u1(k)*u6(k)*u7(k)/50*Math.pow(10,-4)/u6(k)*u2(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+40*Math.pow(10,-3)+getVariable(8,k)-getVariable(1,k)*getVariable(6,k)*getVariable(7,k)/50*Math.pow(10,-4)/getVariable(6,k)*getVariable(2,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.499210792184534; Expression=u7(k)-u5(k)+40*Math.pow(10,-4)+u8(k)-u1(k)*u7(k)*u6(k)/29*Math.pow(10,-4)/u6(k)*u2(k)-u3(k)+u2(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+40*Math.pow(10,-4)+getVariable(8,k)-getVariable(1,k)*getVariable(7,k)*getVariable(6,k)/29*Math.pow(10,-4)/getVariable(6,k)*getVariable(2,k)-getVariable(3,k)+getVariable(2,k)/getVariable(3,k)
Aug 31, 2024 3:44:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.498894216972114; Expression=u7(k)-u5(k)+97*Math.pow(10,-4)+u8(k)-u1(k)*u7(k)*u6(k)/29*Math.pow(10,-4)/u6(k)*u2(k)-u3(k)+u2(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+97*Math.pow(10,-4)+getVariable(8,k)-getVariable(1,k)*getVariable(7,k)*getVariable(6,k)/29*Math.pow(10,-4)/getVariable(6,k)*getVariable(2,k)-getVariable(3,k)+getVariable(2,k)/getVariable(3,k)
Aug 31, 2024 3:44:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.449747256140632; Expression=u7(k)-u5(k)+40*Math.pow(10,-4)+u8(k)-u1(k)*u7(k)*u7(k)/29*Math.pow(10,-4)/u6(k)*u2(k)-u3(k)+u2(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+40*Math.pow(10,-4)+getVariable(8,k)-getVariable(1,k)*getVariable(7,k)*getVariable(7,k)/29*Math.pow(10,-4)/getVariable(6,k)*getVariable(2,k)-getVariable(3,k)+getVariable(2,k)/getVariable(3,k)
Aug 31, 2024 3:44:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.349396714010656; Expression=u7(k)-u5(k)-40*Math.pow(10,-3)+u8(k)-u1(k)*u6(k)*u6(k)/95*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-40*Math.pow(10,-3)+getVariable(8,k)-getVariable(1,k)*getVariable(6,k)*getVariable(6,k)/95*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:36 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.349396714010656 -->> Avg.: 143.2902167074169 -->> Std. Dev.: 499.55548700279485
Aug 31, 2024 3:44:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.283840724268187; Expression=u7(k)-u5(k)-40*Math.pow(10,-3)+u8(k)-u1(k)*u6(k)*u7(k)/95*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-40*Math.pow(10,-3)+getVariable(8,k)-getVariable(1,k)*getVariable(6,k)*getVariable(7,k)/95*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.25038488264263; Expression=u7(k)-u5(k)-40*Math.pow(10,-3)+u8(k)-u7(k)*u6(k)*u6(k)/95*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-40*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(6,k)*getVariable(6,k)/95*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.239038262578006; Expression=u7(k)-u5(k)-40*Math.pow(10,-3)+u8(k)-u7(k)*u6(k)*u6(k)/70*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-40*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(6,k)*getVariable(6,k)/70*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.186378445979281; Expression=u7(k)-u5(k)-40*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)*u6(k)/95*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-40*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(6,k)/95*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.173422853313374; Expression=u7(k)-u5(k)+40*Math.pow(10,-4)+u8(k)-u1(k)*u7(k)*u7(k)/85*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+40*Math.pow(10,-4)+getVariable(8,k)-getVariable(1,k)*getVariable(7,k)*getVariable(7,k)/85*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1567464472436555; Expression=u7(k)-u5(k)+40*Math.pow(10,-4)+u8(k)-u1(k)*u7(k)*u7(k)/85*Math.pow(10,-4)/u3(k)*u6(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+40*Math.pow(10,-4)+getVariable(8,k)-getVariable(1,k)*getVariable(7,k)*getVariable(7,k)/85*Math.pow(10,-4)/getVariable(3,k)*getVariable(6,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.156687396855613; Expression=u7(k)-u5(k)+51*Math.pow(10,-4)+u8(k)-u1(k)*u7(k)*u7(k)/85*Math.pow(10,-4)/u3(k)*u6(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+51*Math.pow(10,-4)+getVariable(8,k)-getVariable(1,k)*getVariable(7,k)*getVariable(7,k)/85*Math.pow(10,-4)/getVariable(3,k)*getVariable(6,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.156612580208385; Expression=u7(k)-u5(k)+65*Math.pow(10,-4)+u8(k)-u1(k)*u7(k)*u7(k)/85*Math.pow(10,-4)/u3(k)*u6(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+65*Math.pow(10,-4)+getVariable(8,k)-getVariable(1,k)*getVariable(7,k)*getVariable(7,k)/85*Math.pow(10,-4)/getVariable(3,k)*getVariable(6,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.109115261540764; Expression=u7(k)-u5(k)-40*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)*u7(k)/85*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-40*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/85*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.101537503198735; Expression=u7(k)-u5(k)+40*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)*u7(k)/85*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+40*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/85*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1011912533823836; Expression=u7(k)-u5(k)+44*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)*u7(k)/85*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+44*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/85*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.098935528727205; Expression=u7(k)-u5(k)+71*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)*u7(k)/85*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+71*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/85*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:44:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.082402542175856; Expression=u7(k)-u5(k)+44*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)*u7(k)/85*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+44*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/85*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:45:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.071888002617394; Expression=u7(k)-u5(k)+44*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)*u7(k)/82*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+44*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/82*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:45:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0709744852705345; Expression=u7(k)-u5(k)+72*Math.pow(10,-2)+u8(k)-u1(k)*u7(k)*u7(k)/82*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+72*Math.pow(10,-2)+getVariable(8,k)-getVariable(1,k)*getVariable(7,k)*getVariable(7,k)/82*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:45:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.069786853445562; Expression=u7(k)-u5(k)+54*Math.pow(10,-2)+u8(k)-u1(k)*u7(k)*u7(k)/82*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+54*Math.pow(10,-2)+getVariable(8,k)-getVariable(1,k)*getVariable(7,k)*getVariable(7,k)/82*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:45:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.05705729693899; Expression=u7(k)-u5(k)+72*Math.pow(10,-2)+u8(k)-u1(k)*u7(k)*u7(k)/79*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+72*Math.pow(10,-2)+getVariable(8,k)-getVariable(1,k)*getVariable(7,k)*getVariable(7,k)/79*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:45:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.992425757938701; Expression=u7(k)-u5(k)+44*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)*u7(k)/54*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+44*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/54*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(3,k)
Aug 31, 2024 3:45:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.992168056915246; Expression=u7(k)-u5(k)+51*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)*u7(k)/54*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+51*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/54*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(3,k)
Aug 31, 2024 3:45:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.992096228458183; Expression=u7(k)-u5(k)+53*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)*u7(k)/54*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+53*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/54*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(3,k)
Aug 31, 2024 3:45:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.989515506639292; Expression=u7(k)-u5(k)+44*Math.pow(10,-2)+u8(k)-u1(k)*u7(k)*u7(k)/53*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+44*Math.pow(10,-2)+getVariable(8,k)-getVariable(1,k)*getVariable(7,k)*getVariable(7,k)/53*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(3,k)
Aug 31, 2024 3:45:26 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 4.989515506639292 -->> Avg.: 12.33374157803427 -->> Std. Dev.: 13.630584172053085
Aug 31, 2024 3:45:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.945923812970289; Expression=u7(k)-u5(k)+53*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)*u7(k)/54*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+53*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/54*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:45:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.945498860557196; Expression=u7(k)-u5(k)+27*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)*u7(k)/54*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+27*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/54*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:45:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.945033688733753; Expression=u7(k)-u5(k)-40*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)*u7(k)/54*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-40*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/54*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:45:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9450336211292765; Expression=u7(k)-u5(k)-41*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)*u7(k)/54*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-41*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/54*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:45:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.943864723889419; Expression=u7(k)-u5(k)-u4(k)/u6(k)+u8(k)-u7(k)*u7(k)*u7(k)/54*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)/getVariable(6,k)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/54*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:46:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.936976071160623; Expression=u7(k)-u5(k)-u4(k)/u6(k)+u8(k)-u7(k)*u7(k)*u7(k)/56*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)/getVariable(6,k)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/56*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:46:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.936848374144618; Expression=u7(k)-u5(k)-u4(k)/u6(k)+u8(k)-u7(k)*u7(k)*u7(k)/57*Math.pow(10,-4)/u3(k)*u1(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)/getVariable(6,k)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/57*Math.pow(10,-4)/getVariable(3,k)*getVariable(1,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:46:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.931267519623361; Expression=u7(k)-u5(k)+40*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)*u7(k)/70*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+40*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/70*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:46:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.931045212404139; Expression=u7(k)-u5(k)+33*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)*u7(k)/70*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+33*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/70*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:46:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.929302528492883; Expression=u7(k)-u5(k)-41*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)*u7(k)/70*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-41*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/70*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:46:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.927594369802042; Expression=u7(k)-u5(k)-u4(k)/u6(k)+u8(k)-u7(k)*u7(k)*u7(k)/70*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)/getVariable(6,k)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/70*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:46:24 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.927594369802042 -->> Avg.: 5.8622024138943924 -->> Std. Dev.: 1.513297801946516
Aug 31, 2024 3:46:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9108035829527985; Expression=u7(k)-u5(k)+2*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)*u7(k)/65*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+2*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/65*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:46:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.908018444345384; Expression=u7(k)-u5(k)+66*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)*u7(k)/65*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+66*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/65*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:46:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.907221036478937; Expression=u7(k)-u5(k)+89*Math.pow(10,-3)+u8(k)-u7(k)*u7(k)*u7(k)/65*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+89*Math.pow(10,-3)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/65*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:46:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.907021605852596; Expression=u7(k)-u5(k)+40*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)*u7(k)/65*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+40*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/65*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:46:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.896932344121532; Expression=u7(k)-u5(k)+40*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)*u7(k)/63*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+40*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/63*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:47:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.896927885334422; Expression=u7(k)-u5(k)+42*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)*u7(k)/63*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+42*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/63*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:47:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.896057171206459; Expression=u7(k)-u5(k)+40*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)*u7(k)/60*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+40*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/60*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:47:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.888346154223853; Expression=u7(k)-u5(k)+71*Math.pow(10,-2)+u8(k)-u7(k)*u7(k)*u7(k)/60*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+71*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/60*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:47:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.884839557424043; Expression=u7(k)-u5(k)+u4(k)/u4(k)+u8(k)-u7(k)*u7(k)*u7(k)/56*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(4,k)/getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/56*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:47:42 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.884839557424043 -->> Avg.: 5.394737725261009 -->> Std. Dev.: 0.5064674526327739
Aug 31, 2024 3:47:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.877333236422137; Expression=u7(k)-u5(k)+u9(k)/u4(k)+u8(k)-u7(k)*u7(k)*u7(k)/56*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(9,k)/getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/56*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:47:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.853248492279397; Expression=u7(k)-u5(k)+u5(k)/u4(k)+u8(k)-u7(k)*u7(k)*u7(k)/56*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u2(k)/u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/56*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:47:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.813767936335216; Expression=u7(k)-u5(k)+u2(k)/u4(k)+u8(k)-u7(k)*u7(k)*u7(k)/56*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u8(k)/u4(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(2,k)/getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/56*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(8,k)/getVariable(4,k)*getVariable(3,k)
Aug 31, 2024 3:48:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.793983382720993; Expression=u7(k)-u5(k)+u2(k)/u4(k)+u8(k)-u7(k)*u7(k)*u7(k)/54*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u8(k)/u4(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(2,k)/getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/54*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(8,k)/getVariable(4,k)*getVariable(3,k)
Aug 31, 2024 3:48:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.776376957400212; Expression=u7(k)-u5(k)+u2(k)/u4(k)+u8(k)-u7(k)*u7(k)*u7(k)/56*Math.pow(10,-4)/u5(k)*u7(k)-u3(k)+u8(k)/u4(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(2,k)/getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/56*Math.pow(10,-4)/getVariable(5,k)*getVariable(7,k)-getVariable(3,k)+getVariable(8,k)/getVariable(4,k)*getVariable(3,k)
Aug 31, 2024 3:48:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.761862944798534; Expression=u7(k)-u5(k)+u2(k)/u4(k)+u8(k)-u7(k)*u7(k)*u7(k)/56*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u8(k)/u4(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(2,k)/getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/56*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(8,k)/getVariable(4,k)*getVariable(5,k)
Aug 31, 2024 3:48:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.750984782747523; Expression=u7(k)-u5(k)+u2(k)/u4(k)+u8(k)-u7(k)*u7(k)*u7(k)/52*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u8(k)/u4(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(2,k)/getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/52*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(8,k)/getVariable(4,k)*getVariable(5,k)
Aug 31, 2024 3:49:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.749217491719366; Expression=u7(k)-u5(k)+u2(k)/u4(k)+u8(k)-u7(k)*u7(k)*u7(k)/54*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u8(k)/u4(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(2,k)/getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/54*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(8,k)/getVariable(4,k)*getVariable(5,k)
Aug 31, 2024 3:49:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.748088396857107; Expression=u7(k)-u5(k)+u2(k)/u4(k)+u8(k)-u7(k)*u7(k)*u7(k)/53*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u8(k)/u4(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(2,k)/getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*getVariable(7,k)*getVariable(7,k)/53*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(8,k)/getVariable(4,k)*getVariable(5,k)
Aug 31, 2024 3:49:14 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.748088396857107 -->> Avg.: 5.142947409662543 -->> Std. Dev.: 0.41743429007498256
Aug 31, 2024 3:49:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.738104568686191; Expression=u7(k)-u5(k)+56*Math.pow(10,-9)+u8(k)-u7(k)*u2(k)*u7(k)/53*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u3(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+56*Math.pow(10,-9)+getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/53*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(3,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:49:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.722102031447504; Expression=u7(k)-u5(k)+u8(k)/u4(k)+u8(k)-u7(k)*u2(k)*u7(k)/53*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u3(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)/getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/53*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(3,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:49:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.685965588177225; Expression=u7(k)-u5(k)+u8(k)/u4(k)+u8(k)-u7(k)*u1(k)*u2(k)/53*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u3(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(8,k)/getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*getVariable(1,k)*getVariable(2,k)/53*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(3,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:49:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.609742808557768; Expression=u7(k)-u5(k)+56*Math.pow(10,-2)+u8(k)-u7(k)*u2(k)*u7(k)/53*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u3(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+56*Math.pow(10,-2)+getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/53*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(3,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:49:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.547702856847995; Expression=u7(k)-u5(k)+u5(k)/u4(k)+u8(k)-u7(k)*u2(k)*u7(k)/53*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u3(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(5,k)/getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/53*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(3,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:49:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.527009870904474; Expression=u7(k)-u5(k)+u9(k)/u4(k)+u8(k)-u7(k)*u2(k)*u7(k)/53*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u3(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(9,k)/getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/53*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(3,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:50:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.525949543862483; Expression=u7(k)-u5(k)+u9(k)/u4(k)+u8(k)-u7(k)*u2(k)*u7(k)/54*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u3(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(9,k)/getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/54*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(3,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:50:20 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.525949543862483 -->> Avg.: 4.898783342401919 -->> Std. Dev.: 0.18871223068146392
Aug 31, 2024 3:50:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.525949543862482; Expression=u7(k)-u3(k)+u9(k)/u4(k)+u8(k)-u7(k)*u2(k)*u7(k)/54*Math.pow(10,-4)/u3(k)*u7(k)-u5(k)+u3(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(3,k)+getVariable(9,k)/getVariable(4,k)+getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/54*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(5,k)+getVariable(3,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:50:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.500585891873897; Expression=u7(k)-u5(k)+u2(k)/u7(k)*u8(k)-u7(k)*u2(k)*u7(k)/54*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u3(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/54*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(3,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:51:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.497805224677216; Expression=u7(k)-u5(k)+u2(k)/u7(k)*u8(k)-u7(k)*u2(k)*u7(k)/55*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u3(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/55*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(3,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:51:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.439035759366334; Expression=u7(k)-u5(k)+u2(k)/u7(k)*u8(k)-u7(k)*u2(k)*u7(k)/23*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u6(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/23*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(6,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:51:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.402589518642814; Expression=u7(k)-u5(k)+u2(k)/u7(k)+u8(k)-u7(k)*u2(k)*u7(k)/23*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u6(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(2,k)/getVariable(7,k)+getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/23*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(6,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:51:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.162330400210207; Expression=u7(k)-u5(k)+u2(k)/u7(k)*u8(k)-u7(k)*u2(k)*u6(k)/23*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u6(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(6,k)/23*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(6,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:51:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.162099344129887; Expression=u7(k)-u5(k)+u2(k)/u1(k)*u8(k)-u7(k)*u2(k)*u7(k)/23*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u6(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+getVariable(2,k)/getVariable(1,k)*getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/23*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(6,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:51:25 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.162099344129887 -->> Avg.: 4.7653583189754 -->> Std. Dev.: 0.17581407233910473
Aug 31, 2024 3:51:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.162099344129886; Expression=u7(k)-u3(k)+u2(k)/u1(k)*u8(k)-u7(k)*u2(k)*u7(k)/23*Math.pow(10,-4)/u3(k)*u7(k)-u5(k)+u6(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(3,k)+getVariable(2,k)/getVariable(1,k)*getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/23*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(5,k)+getVariable(6,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:51:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.0394732085458855; Expression=u7(k)-u5(k)+24*Math.pow(10,-1)*u8(k)-u7(k)*u2(k)*u7(k)/23*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u6(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+24*Math.pow(10,-1)*getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/23*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(6,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:52:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.02270646818736; Expression=u7(k)-u5(k)+29*Math.pow(10,-1)*u8(k)-u7(k)*u2(k)*u7(k)/23*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u6(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+29*Math.pow(10,-1)*getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/23*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(6,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:52:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.013261539020465; Expression=u7(k)-u5(k)+28*Math.pow(10,-1)*u8(k)-u7(k)*u2(k)*u7(k)/23*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u6(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+28*Math.pow(10,-1)*getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/23*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(6,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:52:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.005538537676115; Expression=u7(k)-u5(k)+29*Math.pow(10,-1)*u8(k)-u7(k)*u2(k)*u7(k)/22*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u6(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+29*Math.pow(10,-1)*getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/22*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(6,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:52:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.000753547854112; Expression=u7(k)-u5(k)+37*Math.pow(10,-1)*u8(k)-u7(k)*u2(k)*u7(k)/22*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u6(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+37*Math.pow(10,-1)*getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/22*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(6,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:52:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.951385350808611; Expression=u7(k)-u5(k)+33*Math.pow(10,-1)*u8(k)-u7(k)*u2(k)*u7(k)/22*Math.pow(10,-4)/u3(k)*u7(k)-u3(k)+u6(k)/u2(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+33*Math.pow(10,-1)*getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/22*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(6,k)/getVariable(2,k)*getVariable(5,k)
Aug 31, 2024 3:52:36 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 3.951385350808611 -->> Avg.: 4.597565457257659 -->> Std. Dev.: 0.2925261636701953

Execution time: 551.84 seconds.



@@;getVariable(7,k)-getVariable(5,k)+33*Math.pow(10,-1)*getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/22*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(6,k)/getVariable(2,k)*getVariable(5,k)



Run #9
========
Aug 31, 2024 3:52:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=33.98573739719906; Expression=66*Math.pow(10,-3)*u2(k)/u9(k); Java Expression: 66*Math.pow(10,-3)*getVariable(2,k)/getVariable(9,k)
Aug 31, 2024 3:52:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=12.308403883415924; Expression=57*Math.pow(10,-5)/u2(k)/u8(k)+u3(k); Java Expression: 57*Math.pow(10,-5)/getVariable(2,k)/getVariable(8,k)+getVariable(3,k)
Aug 31, 2024 3:52:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=11.576940700103401; Expression=u3(k)-u8(k)-49*Math.pow(10,-5)-u6(k)/u6(k); Java Expression: getVariable(3,k)-getVariable(8,k)-49*Math.pow(10,-5)-getVariable(6,k)/getVariable(6,k)
Aug 31, 2024 3:52:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.907174206296354; Expression=u5(k)-u8(k); Java Expression: getVariable(5,k)-getVariable(8,k)
Aug 31, 2024 3:52:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330453070749176; Expression=79*Math.pow(10,-5)+u5(k); Java Expression: 79*Math.pow(10,-5)+getVariable(5,k)
Aug 31, 2024 3:52:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.292979371488904; Expression=u9(k)/u5(k)+u5(k); Java Expression: getVariable(9,k)/getVariable(5,k)+getVariable(5,k)
Aug 31, 2024 3:52:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 3:52:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566545426955; Expression=u5(k)+u8(k)-u1(k)/20*Math.pow(10,-9)*u4(k); Java Expression: getVariable(5,k)+getVariable(8,k)-getVariable(1,k)/20*Math.pow(10,-9)*getVariable(4,k)
Aug 31, 2024 3:52:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.000745799151085; Expression=u5(k)+u8(k)-u1(k)/20*Math.pow(10,-3)*u4(k); Java Expression: getVariable(5,k)+getVariable(8,k)-getVariable(1,k)/20*Math.pow(10,-3)*getVariable(4,k)
Aug 31, 2024 3:52:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.802124503696442; Expression=u5(k)+u8(k)-u1(k)/20*Math.pow(10,-2)*u4(k); Java Expression: getVariable(5,k)+getVariable(8,k)-getVariable(1,k)/20*Math.pow(10,-2)*getVariable(4,k)
Aug 31, 2024 3:52:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.545490207838515; Expression=u8(k)*u8(k)+u5(k); Java Expression: getVariable(8,k)*getVariable(8,k)+getVariable(5,k)
Aug 31, 2024 3:52:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.011279224818125; Expression=3*Math.pow(10,-1)*u7(k); Java Expression: 3*Math.pow(10,-1)*getVariable(7,k)
Aug 31, 2024 3:52:57 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 7.011279224818125 -->> Avg.: 1.368693874384337E12 -->> Std. Dev.: 1.8365872402067324E13
Aug 31, 2024 3:53:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.780883602472543; Expression=31*Math.pow(10,-2)*u7(k); Java Expression: 31*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 3:53:15 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 6.780883602472543 -->> Avg.: 183207.04499240674 -->> Std. Dev.: 842211.5610861501
Aug 31, 2024 3:53:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709785324194373; Expression=32*Math.pow(10,-2)*u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 3:53:30 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 6.709785324194373 -->> Avg.: 74.55800148634393 -->> Std. Dev.: 228.63217185238997
Aug 31, 2024 3:53:44 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 6.709785324194373 -->> Avg.: 12.668991738830242 -->> Std. Dev.: 11.872268160696548
Aug 31, 2024 3:53:59 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 6.709785324194373 -->> Avg.: 7.102526832745771 -->> Std. Dev.: 1.0685174450372479
Aug 31, 2024 3:54:14 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 6.709785324194373 -->> Avg.: 6.778997193121101 -->> Std. Dev.: 0.15925173665639925
Aug 31, 2024 3:54:29 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 6.709785324194373 -->> Avg.: 6.711937713478185 -->> Std. Dev.: 0.012187840440443902
Aug 31, 2024 3:54:44 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 6.709785324194373 -->> Avg.: 6.709785324194373 -->> Std. Dev.: 0.0
Aug 31, 2024 3:54:58 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 6.709785324194373 -->> Avg.: 6.709785324194373 -->> Std. Dev.: 0.0
Aug 31, 2024 3:55:13 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 6.709785324194373 -->> Avg.: 6.709785324194373 -->> Std. Dev.: 0.0

Execution time: 159.645 seconds.



@@;32*Math.pow(10,-2)*getVariable(7,k)




 Execution report
==================

#Run;Obj.;Model;Time
0;4.773026042271027;93*Math.pow(10,-3)+9*Math.pow(10,-8)*getVariable(7,k)*80*Math.pow(10,+5)-getVariable(4,k)-getVariable(1,k)*75*Math.pow(10,-6)/42*Math.pow(10,+8)/95*Math.pow(10,+4)/19*Math.pow(10,-6)*getVariable(1,k)+getVariable(8,k);522.797
1;4.782004174644906;63*Math.pow(10,-2)*getVariable(7,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)/15*Math.pow(10,+2)-getVariable(5,k)*80*Math.pow(10,-5)*getVariable(7,k)+getVariable(8,k)+getVariable(2,k)/getVariable(7,k)*getVariable(8,k);495.848
2;3.9145107382392164;29*Math.pow(10,-2)*getVariable(7,k)-18*Math.pow(10,-3)/getVariable(8,k)*getVariable(1,k)+getVariable(6,k)*60*Math.pow(10,-3)*getVariable(8,k)-getVariable(3,k)/51*Math.pow(10,-4)/getVariable(6,k)*82*Math.pow(10,+5)/getVariable(8,k)+getVariable(1,k)/getVariable(2,k);387.76
3;6.709785324194373;32*Math.pow(10,-2)*getVariable(7,k);219.852
4;4.619256004396067;getVariable(6,k)/getVariable(5,k)*getVariable(8,k)*getVariable(8,k)-1*Math.pow(10,+1)+getVariable(5,k)+getVariable(8,k)*getVariable(8,k);577.865
5;5.992388946502076;getVariable(8,k)+getVariable(4,k)+getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(3,k);350.367
6;5.543195554599305;getVariable(7,k)-getVariable(1,k)*getVariable(1,k)*getVariable(1,k)/32*Math.pow(10,-4)-getVariable(4,k)-getVariable(5,k);368.573
7;5.621082282108203;getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(1,k)/getVariable(2,k)-getVariable(4,k)+getVariable(8,k);319.074
8;3.951385350808611;getVariable(7,k)-getVariable(5,k)+33*Math.pow(10,-1)*getVariable(8,k)-getVariable(7,k)*getVariable(2,k)*getVariable(7,k)/22*Math.pow(10,-4)/getVariable(3,k)*getVariable(7,k)-getVariable(3,k)+getVariable(6,k)/getVariable(2,k)*getVariable(5,k);551.84
9;6.709785324194373;32*Math.pow(10,-2)*getVariable(7,k);159.645
