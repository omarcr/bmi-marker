{MutationProb=0.05, Executions=10, ChangeProbabilityDynamic=0.25, TrainingPath=/home/jmmc/Projects/PMT_3/Data/train_bmi_marker.csv, MutationTypeDynamic=All genes, GrammaticalEvolutionType=2, Objectives=0, ClassPathSeparator=:, TestPath=/Users/hidalgo/GitHub/bmi-marker/linear-exp/test_bmi_marker.csv, NumGenerations=1000, NumIndividuals=1024, RealDataCopied=0, ErrorThreshold=0.0, TypeOfDepthForDynamicSGE=0, TournamentSize=5, ModelWidth=0, BnfPathFile=/home/jmmc/Projects/PMT_3/exp_3_sg/gr_BMI_SR.bnf, LoggerLevel=INFO, LoggerBasePath=/home/jmmc/Projects/PMT_3/work, ViewResults=false, CrossoverTypeDynamic=Uniform, AlgorithmType=1, LogPopulation=0, CrossoverProb=0.9, MaxTreeDepth=17, WorkDir=/home/jmmc/Projects/PMT_3/work, NormalizeData=false}
Tree: true
Depth: 17
Aug 30, 2024 4:37:54 PM data.NormalizedDataTable <init>
INFO: Reading data file ...

Detecting file format ...

Aug 30, 2024 4:37:54 PM data.NormalizedDataTable <init>
INFO: ... done.
Uniform: 0.25
jeco.core.algorithm.ga.StaticSimpleGeneticAlgorithm@63d1ad59
algorithm.DynamicSGE@6d164f53

Run #0
========
Aug 30, 2024 4:37:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.013810393284668E11; Expression=71*Math.pow(10,-3)*76*Math.pow(10,+1)+u5(k)+u2(k)-21*Math.pow(10,+9)*u5(k)-27*Math.pow(10,-2)*u4(k)-u6(k)-u5(k)-u3(k)-u9(k); Java Expression: 71*Math.pow(10,-3)*76*Math.pow(10,+1)+getVariable(5,k)+getVariable(2,k)-21*Math.pow(10,+9)*getVariable(5,k)-27*Math.pow(10,-2)*getVariable(4,k)-getVariable(6,k)-getVariable(5,k)-getVariable(3,k)-getVariable(9,k)
Aug 30, 2024 4:37:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4017428.9864393403; Expression=12*Math.pow(10,+8)*70*Math.pow(10,-8)+u3(k)+89*Math.pow(10,+9)*u5(k)*u8(k)*65*Math.pow(10,-8)-u7(k)+u4(k)*u2(k)*u2(k); Java Expression: 12*Math.pow(10,+8)*70*Math.pow(10,-8)+getVariable(3,k)+89*Math.pow(10,+9)*getVariable(5,k)*getVariable(8,k)*65*Math.pow(10,-8)-getVariable(7,k)+getVariable(4,k)*getVariable(2,k)*getVariable(2,k)
Aug 30, 2024 4:37:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=1298.2231270702034; Expression=u3(k)*u5(k); Java Expression: getVariable(3,k)*getVariable(5,k)
Aug 30, 2024 4:37:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=61.14416266347411; Expression=u7(k)-u8(k)*19*Math.pow(10,-2)*u3(k); Java Expression: getVariable(7,k)-getVariable(8,k)*19*Math.pow(10,-2)*getVariable(3,k)
Aug 30, 2024 4:37:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=40.55682515431026; Expression=u9(k)+u5(k); Java Expression: getVariable(9,k)+getVariable(5,k)
Aug 30, 2024 4:37:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=27.540783305077447; Expression=u7(k)-u6(k); Java Expression: getVariable(7,k)-getVariable(6,k)
Aug 30, 2024 4:37:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.306121959491481; Expression=u4(k)-u8(k); Java Expression: getVariable(4,k)-getVariable(8,k)
Aug 30, 2024 4:37:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.328643084533779; Expression=11*Math.pow(10,-2)+u5(k); Java Expression: 11*Math.pow(10,-2)+getVariable(5,k)
Aug 30, 2024 4:37:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.328355185993109; Expression=24*Math.pow(10,-2)+u5(k); Java Expression: 24*Math.pow(10,-2)+getVariable(5,k)
Aug 30, 2024 4:37:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 4:37:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.053960890414428; Expression=34*Math.pow(10,-2)*u7(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 4:38:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709785324194373; Expression=32*Math.pow(10,-2)*u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 4:38:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.599427494325666; Expression=62*Math.pow(10,-2)*u5(k)*u8(k); Java Expression: 62*Math.pow(10,-2)*getVariable(5,k)*getVariable(8,k)
Aug 30, 2024 4:38:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.533409201916547; Expression=63*Math.pow(10,-2)*u5(k)*u8(k); Java Expression: 63*Math.pow(10,-2)*getVariable(5,k)*getVariable(8,k)
Aug 30, 2024 4:38:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.509285558716226; Expression=64*Math.pow(10,-2)*u5(k)*u8(k); Java Expression: 64*Math.pow(10,-2)*getVariable(5,k)*getVariable(8,k)
Aug 30, 2024 4:38:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.277278104700006; Expression=64*Math.pow(10,-2)*u7(k)-u5(k); Java Expression: 64*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)
Aug 30, 2024 4:38:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131407434512216; Expression=u7(k)-u3(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 30, 2024 4:38:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837859; Expression=u7(k)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)
Aug 30, 2024 4:39:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388946502078; Expression=u7(k)-u3(k)-u5(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 4:39:15 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.992388946502078 -->> Avg.: 9.909488623217371E9 -->> Std. Dev.: 4.337040257803658E10
Aug 30, 2024 4:39:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.99238873786895; Expression=u7(k)-u3(k)-u5(k)+u8(k)-63*Math.pow(10,-9)*u5(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-63*Math.pow(10,-9)*getVariable(5,k)
Aug 30, 2024 4:39:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992386860203725; Expression=u7(k)-u3(k)-u5(k)+u8(k)-63*Math.pow(10,-8)*u5(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-63*Math.pow(10,-8)*getVariable(5,k)
Aug 30, 2024 4:39:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992386827088468; Expression=u7(k)-u3(k)-u5(k)+u8(k)-64*Math.pow(10,-8)*u5(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-64*Math.pow(10,-8)*getVariable(5,k)
Aug 30, 2024 4:39:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992386562167075; Expression=u7(k)-u3(k)-u5(k)+u8(k)-72*Math.pow(10,-8)*u5(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-72*Math.pow(10,-8)*getVariable(5,k)
Aug 30, 2024 4:39:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.991633863567589; Expression=u7(k)-u3(k)-u5(k)+u8(k)-64*Math.pow(10,-6)*u6(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-64*Math.pow(10,-6)*getVariable(6,k)
Aug 30, 2024 4:39:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9706553394164334; Expression=u7(k)-u4(k)-u5(k)+u8(k)-63*Math.pow(10,-2)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)-63*Math.pow(10,-2)-getVariable(8,k)
Aug 30, 2024 4:39:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.969481228669546; Expression=u7(k)-u4(k)-u5(k)+u8(k)-64*Math.pow(10,-2)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)-64*Math.pow(10,-2)-getVariable(8,k)
Aug 30, 2024 4:39:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.952056990163307; Expression=u7(k)-u4(k)-u5(k)+u8(k)-81*Math.pow(10,-2)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)-81*Math.pow(10,-2)-getVariable(8,k)
Aug 30, 2024 4:39:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.948845947344496; Expression=u7(k)-u3(k)-u5(k)+u8(k)-64*Math.pow(10,-4)*u6(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-64*Math.pow(10,-4)*getVariable(6,k)
Aug 30, 2024 4:39:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9479788043322595; Expression=u7(k)-u3(k)-u5(k)+u8(k)-72*Math.pow(10,-4)*u6(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(6,k)
Aug 30, 2024 4:39:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.926448087501815; Expression=u7(k)-u3(k)-u5(k)+u8(k)-72*Math.pow(10,-4)*u1(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-72*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 4:40:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.922314888583487; Expression=u7(k)-u3(k)-u5(k)+u8(k)-81*Math.pow(10,-4)*u1(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-81*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 4:40:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.920416975106523; Expression=u7(k)-u3(k)-u5(k)+u8(k)-86*Math.pow(10,-4)*u1(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-86*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 4:40:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.918803924511205; Expression=u7(k)-u3(k)-u5(k)+u8(k)-91*Math.pow(10,-4)*u1(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-91*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 4:40:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.917024659062072; Expression=u7(k)-u3(k)-u5(k)+u8(k)-98*Math.pow(10,-4)*u1(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-98*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 4:40:47 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.917024659062072 -->> Avg.: 2236034.410524948 -->> Std. Dev.: 1.1570196550432835E7
Aug 30, 2024 4:40:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.916619005328494; Expression=u7(k)-u3(k)-u5(k)+u8(k)-1*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)-1*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 4:41:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.278295869319859; Expression=u7(k)-u3(k)-u8(k)+u8(k)-40*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)-40*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 4:42:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.25720649876487; Expression=u7(k)-u3(k)-u8(k)-u8(k)-36*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(8,k)-getVariable(8,k)-36*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 4:42:35 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.25720649876487 -->> Avg.: 657.0670758555243 -->> Std. Dev.: 2077.8968342758903
Aug 30, 2024 4:43:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.257205990176471; Expression=u7(k)-u3(k)-u8(k)-u8(k)-36*Math.pow(10,-2)*u1(k)+u8(k)*69*Math.pow(10,-9)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(8,k)-getVariable(8,k)-36*Math.pow(10,-2)*getVariable(1,k)+getVariable(8,k)*69*Math.pow(10,-9)*getVariable(2,k)
Aug 30, 2024 4:43:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.257205828030882; Expression=u7(k)-u3(k)-u8(k)-u8(k)-36*Math.pow(10,-2)*u1(k)+u8(k)*91*Math.pow(10,-9)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(8,k)-getVariable(8,k)-36*Math.pow(10,-2)*getVariable(1,k)+getVariable(8,k)*91*Math.pow(10,-9)*getVariable(2,k)
Aug 30, 2024 4:43:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.25521838986339; Expression=u7(k)-u3(k)-u8(k)-u8(k)-36*Math.pow(10,-2)*u1(k)+u8(k)*69*Math.pow(10,-5)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(8,k)-getVariable(8,k)-36*Math.pow(10,-2)*getVariable(1,k)+getVariable(8,k)*69*Math.pow(10,-5)*getVariable(2,k)
Aug 30, 2024 4:43:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.254856514380354; Expression=u7(k)-u3(k)-u8(k)-u8(k)-36*Math.pow(10,-2)*u1(k)+u3(k)*91*Math.pow(10,-5)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(8,k)-getVariable(8,k)-36*Math.pow(10,-2)*getVariable(1,k)+getVariable(3,k)*91*Math.pow(10,-5)*getVariable(8,k)
Aug 30, 2024 4:43:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.251701057566866; Expression=u7(k)-u3(k)-u8(k)-u8(k)-36*Math.pow(10,-2)*u1(k)+u3(k)*5*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(8,k)-getVariable(8,k)-36*Math.pow(10,-2)*getVariable(1,k)+getVariable(3,k)*5*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 4:44:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.216582224013726; Expression=u7(k)-u3(k)-u8(k)-u1(k)+62*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(8,k)-getVariable(1,k)+62*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 4:44:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.216474052820851; Expression=u7(k)-u3(k)-u8(k)-u1(k)+62*Math.pow(10,-2)*u1(k)+u8(k)*61*Math.pow(10,-6)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(8,k)-getVariable(1,k)+62*Math.pow(10,-2)*getVariable(1,k)+getVariable(8,k)*61*Math.pow(10,-6)*getVariable(3,k)
Aug 30, 2024 4:44:31 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.216474052820851 -->> Avg.: 16.954701228950505 -->> Std. Dev.: 25.793887739284205
Aug 30, 2024 4:44:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1772211941703175; Expression=u7(k)-u3(k)-u8(k)-u8(k)-40*Math.pow(10,-2)*u1(k)+u3(k)*53*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(8,k)-getVariable(8,k)-40*Math.pow(10,-2)*getVariable(1,k)+getVariable(3,k)*53*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 4:46:44 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.1772211941703175 -->> Avg.: 5.925748911823921 -->> Std. Dev.: 1.5756956428886997
Aug 30, 2024 4:47:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.048003661226538; Expression=u7(k)-u3(k)-u8(k)-u8(k)-40*Math.pow(10,-2)*u7(k)+u8(k)*53*Math.pow(10,-3)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(8,k)-getVariable(8,k)-40*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*53*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 4:47:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.03477743794665; Expression=u7(k)-u3(k)-u8(k)-u8(k)-40*Math.pow(10,-2)*u7(k)+u8(k)*52*Math.pow(10,-3)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(8,k)-getVariable(8,k)-40*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*52*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 4:48:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0341342474090345; Expression=u7(k)-u3(k)-u8(k)+u8(k)-40*Math.pow(10,-2)*u7(k)+u8(k)*38*Math.pow(10,-3)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)-40*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*38*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 4:49:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.020038703669241; Expression=u7(k)-u3(k)-u8(k)+u8(k)-43*Math.pow(10,-2)*u7(k)+u8(k)*53*Math.pow(10,-3)*u2(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(8,k)+getVariable(8,k)-43*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*53*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 4:49:15 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.020038703669241 -->> Avg.: 5.428590629503538 -->> Std. Dev.: 0.3671706537469109
Aug 30, 2024 4:49:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.00096653547998; Expression=u7(k)-u4(k)-u8(k)-u8(k)-40*Math.pow(10,-2)*u7(k)+u8(k)*38*Math.pow(10,-3)*u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(8,k)-getVariable(8,k)-40*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*38*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 4:49:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.841948985784188; Expression=u7(k)-u4(k)-u8(k)-u8(k)-40*Math.pow(10,-2)*u7(k)+u8(k)*44*Math.pow(10,-3)*u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(8,k)-getVariable(8,k)-40*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*44*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 4:49:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.640204861487957; Expression=u7(k)-u4(k)-u8(k)-u8(k)-43*Math.pow(10,-2)*u7(k)+u8(k)*53*Math.pow(10,-3)*u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(8,k)-getVariable(8,k)-43*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*53*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 4:50:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.626559800619643; Expression=u7(k)-u4(k)-u8(k)-u8(k)-43*Math.pow(10,-2)*u7(k)+u8(k)*55*Math.pow(10,-3)*u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(8,k)-getVariable(8,k)-43*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*55*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 4:51:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.595397049853957; Expression=u7(k)-u4(k)-u8(k)+u8(k)-43*Math.pow(10,-2)*u7(k)+u8(k)*42*Math.pow(10,-3)*u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(8,k)+getVariable(8,k)-43*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*42*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 4:51:52 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.595397049853957 -->> Avg.: 5.188807886216189 -->> Std. Dev.: 0.3499205686389871
Aug 30, 2024 4:53:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.571593834975663; Expression=u7(k)-u4(k)+u8(k)+u8(k)-43*Math.pow(10,-2)*u7(k)+u8(k)*30*Math.pow(10,-3)*u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)-43*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*30*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 4:54:46 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.571593834975663 -->> Avg.: 4.969633180545566 -->> Std. Dev.: 0.27077029516403117
Aug 30, 2024 4:57:53 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.571593834975663 -->> Avg.: 4.836055122307364 -->> Std. Dev.: 0.2654219498736558
Aug 30, 2024 4:58:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.571593770030676; Expression=u7(k)-u4(k)+u8(k)+u8(k)-43*Math.pow(10,-2)*u7(k)+u8(k)*30*Math.pow(10,-3)*u2(k)-20*Math.pow(10,-9)*u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)-43*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*30*Math.pow(10,-3)*getVariable(2,k)-20*Math.pow(10,-9)*getVariable(7,k)
Aug 30, 2024 4:59:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.571593515978624; Expression=u7(k)-u4(k)+u8(k)+u8(k)-43*Math.pow(10,-2)*u7(k)+u8(k)*30*Math.pow(10,-3)*u2(k)-69*Math.pow(10,-9)*u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)-43*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*30*Math.pow(10,-3)*getVariable(2,k)-69*Math.pow(10,-9)*getVariable(1,k)
Aug 30, 2024 4:59:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.569772096673202; Expression=u7(k)-u4(k)+u8(k)+u8(k)-43*Math.pow(10,-2)*u7(k)+u8(k)*30*Math.pow(10,-3)*u2(k)-80*Math.pow(10,-5)*u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)-43*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*30*Math.pow(10,-3)*getVariable(2,k)-80*Math.pow(10,-5)*getVariable(7,k)
Aug 30, 2024 4:59:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.5687548703100225; Expression=u7(k)-u4(k)+u8(k)+u8(k)-43*Math.pow(10,-2)*u7(k)+u8(k)*30*Math.pow(10,-3)*u2(k)-69*Math.pow(10,-5)*u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)-43*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*30*Math.pow(10,-3)*getVariable(2,k)-69*Math.pow(10,-5)*getVariable(1,k)
Aug 30, 2024 4:59:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.568367212693857; Expression=u7(k)-u4(k)+u8(k)+u8(k)-43*Math.pow(10,-2)*u7(k)+u8(k)*30*Math.pow(10,-3)*u2(k)-80*Math.pow(10,-5)*u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)-43*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*30*Math.pow(10,-3)*getVariable(2,k)-80*Math.pow(10,-5)*getVariable(1,k)
Aug 30, 2024 4:59:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.565452272380466; Expression=u7(k)-u4(k)+u8(k)+u8(k)-43*Math.pow(10,-2)*u7(k)+u8(k)*30*Math.pow(10,-3)*u2(k)+36*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)-43*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*30*Math.pow(10,-3)*getVariable(2,k)+36*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 4:59:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.564564959213952; Expression=u7(k)-u4(k)+u8(k)+u8(k)-43*Math.pow(10,-2)*u7(k)+u8(k)*30*Math.pow(10,-3)*u2(k)-26*Math.pow(10,-4)*u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)-43*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*30*Math.pow(10,-3)*getVariable(2,k)-26*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 4:59:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.564182669969412; Expression=u7(k)-u4(k)+u8(k)+u8(k)-43*Math.pow(10,-2)*u7(k)+u8(k)*30*Math.pow(10,-3)*u2(k)+80*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)-43*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*30*Math.pow(10,-3)*getVariable(2,k)+80*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 5:00:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.563859088866933; Expression=u7(k)-u4(k)+u8(k)+u8(k)-43*Math.pow(10,-2)*u7(k)+u8(k)*30*Math.pow(10,-3)*u2(k)+63*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)-43*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*30*Math.pow(10,-3)*getVariable(2,k)+63*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 5:00:27 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.563859088866933 -->> Avg.: 4.7161551719082775 -->> Std. Dev.: 0.21533579463637081
Aug 30, 2024 5:00:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.563856220079663; Expression=u7(k)-u4(k)+u8(k)+u8(k)-43*Math.pow(10,-2)*u7(k)+u8(k)*30*Math.pow(10,-3)*u2(k)+69*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)-43*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*30*Math.pow(10,-3)*getVariable(2,k)+69*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 5:00:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.554994625042096; Expression=u7(k)-u4(k)+u8(k)+u8(k)-43*Math.pow(10,-2)*u7(k)+u8(k)*29*Math.pow(10,-3)*u2(k)+76*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)-43*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*29*Math.pow(10,-3)*getVariable(2,k)+76*Math.pow(10,-4)*getVariable(9,k)

Execution time: 1360.236 seconds.



@@;getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)-43*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*29*Math.pow(10,-3)*getVariable(2,k)+76*Math.pow(10,-4)*getVariable(9,k)



Run #1
========
Aug 30, 2024 5:00:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3594.890604171937; Expression=u7(k)*u5(k); Java Expression: getVariable(7,k)*getVariable(5,k)
Aug 30, 2024 5:00:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=121.00418728403803; Expression=u8(k)*u6(k); Java Expression: getVariable(8,k)*getVariable(6,k)
Aug 30, 2024 5:00:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=38.15276838830951; Expression=u5(k)+u4(k); Java Expression: getVariable(5,k)+getVariable(4,k)
Aug 30, 2024 5:00:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330443598963058; Expression=12*Math.pow(10,-4)+u5(k); Java Expression: 12*Math.pow(10,-4)+getVariable(5,k)
Aug 30, 2024 5:00:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 5:00:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566575195951; Expression=u8(k)+u5(k)+83*Math.pow(10,-6)*u8(k)*22*Math.pow(10,-6)*u1(k); Java Expression: getVariable(8,k)+getVariable(5,k)+83*Math.pow(10,-6)*getVariable(8,k)*22*Math.pow(10,-6)*getVariable(1,k)
Aug 30, 2024 5:00:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566569034825; Expression=u8(k)+u5(k)+83*Math.pow(10,-6)*u8(k)*38*Math.pow(10,-6)*u1(k); Java Expression: getVariable(8,k)+getVariable(5,k)+83*Math.pow(10,-6)*getVariable(8,k)*38*Math.pow(10,-6)*getVariable(1,k)
Aug 30, 2024 5:00:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566568858532; Expression=u8(k)+u5(k)+84*Math.pow(10,-6)*u8(k)*38*Math.pow(10,-6)*u1(k); Java Expression: getVariable(8,k)+getVariable(5,k)+84*Math.pow(10,-6)*getVariable(8,k)*38*Math.pow(10,-6)*getVariable(1,k)
Aug 30, 2024 5:00:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.884720417254668; Expression=28*Math.pow(10,-2)*u7(k); Java Expression: 28*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 5:00:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.011279224818129; Expression=30*Math.pow(10,-2)*u7(k); Java Expression: 30*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 5:00:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.852695315752096; Expression=20*Math.pow(10,-2)*u6(k)*u8(k); Java Expression: 20*Math.pow(10,-2)*getVariable(6,k)*getVariable(8,k)
Aug 30, 2024 5:00:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.567225180856256; Expression=20*Math.pow(10,-1)+88*Math.pow(10,-2)*u7(k)-u5(k)-75*Math.pow(10,-2)*u4(k); Java Expression: 20*Math.pow(10,-1)+88*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-75*Math.pow(10,-2)*getVariable(4,k)
Aug 30, 2024 5:01:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.567225180856255; Expression=20*Math.pow(10,-1)+u7(k)*88*Math.pow(10,-2)-u5(k)-75*Math.pow(10,-2)*u4(k); Java Expression: 20*Math.pow(10,-1)+getVariable(7,k)*88*Math.pow(10,-2)-getVariable(5,k)-75*Math.pow(10,-2)*getVariable(4,k)
Aug 30, 2024 5:01:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4922883658595785; Expression=75*Math.pow(10,-1)+81*Math.pow(10,-2)*u7(k)-u5(k)-70*Math.pow(10,-2)*u4(k); Java Expression: 75*Math.pow(10,-1)+81*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(4,k)
Aug 30, 2024 5:02:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.491853806933739; Expression=74*Math.pow(10,-1)+81*Math.pow(10,-2)*u7(k)-u5(k)-70*Math.pow(10,-2)*u4(k); Java Expression: 74*Math.pow(10,-1)+81*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(4,k)
Aug 30, 2024 5:02:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4918536887682095; Expression=74*Math.pow(10,-1)+u7(k)*81*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u4(k)+17*Math.pow(10,-8)*u5(k); Java Expression: 74*Math.pow(10,-1)+getVariable(7,k)*81*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(4,k)+17*Math.pow(10,-8)*getVariable(5,k)
Aug 30, 2024 5:02:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.480761023273714; Expression=74*Math.pow(10,-1)+u7(k)*81*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u4(k)+17*Math.pow(10,-8)*10*Math.pow(10,+2)*u5(k)*u9(k); Java Expression: 74*Math.pow(10,-1)+getVariable(7,k)*81*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(4,k)+17*Math.pow(10,-8)*10*Math.pow(10,+2)*getVariable(5,k)*getVariable(9,k)
Aug 30, 2024 5:02:21 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.480761023273714 -->> Avg.: 1.3935809268843668E10 -->> Std. Dev.: 5.812034903902772E10
Aug 30, 2024 5:02:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4787589320095735; Expression=74*Math.pow(10,-1)+u7(k)*81*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u4(k)+30*Math.pow(10,-8)*10*Math.pow(10,+2)*u5(k)*u9(k); Java Expression: 74*Math.pow(10,-1)+getVariable(7,k)*81*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(4,k)+30*Math.pow(10,-8)*10*Math.pow(10,+2)*getVariable(5,k)*getVariable(9,k)
Aug 30, 2024 5:02:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.427472378859641; Expression=74*Math.pow(10,-1)+u7(k)*81*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u4(k)+63*Math.pow(10,-5)*u5(k)*u9(k)*u8(k); Java Expression: 74*Math.pow(10,-1)+getVariable(7,k)*81*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(4,k)+63*Math.pow(10,-5)*getVariable(5,k)*getVariable(9,k)*getVariable(8,k)
Aug 30, 2024 5:03:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.376244422498611; Expression=74*Math.pow(10,-1)+u7(k)*81*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u4(k)+63*Math.pow(10,-4)*u8(k)*u9(k)*u8(k); Java Expression: 74*Math.pow(10,-1)+getVariable(7,k)*81*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(4,k)+63*Math.pow(10,-4)*getVariable(8,k)*getVariable(9,k)*getVariable(8,k)
Aug 30, 2024 5:03:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.299347143885256; Expression=92*Math.pow(10,-1)+81*Math.pow(10,-2)*u7(k)-u5(k)-70*Math.pow(10,-2)*u3(k); Java Expression: 92*Math.pow(10,-1)+81*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)
Aug 30, 2024 5:03:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.172550851367892; Expression=74*Math.pow(10,-1)+u7(k)*81*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+78*Math.pow(10,-5)*u5(k)*u9(k)*u8(k); Java Expression: 74*Math.pow(10,-1)+getVariable(7,k)*81*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+78*Math.pow(10,-5)*getVariable(5,k)*getVariable(9,k)*getVariable(8,k)
Aug 30, 2024 5:03:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.16483076407544; Expression=74*Math.pow(10,-1)+u7(k)*81*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+u8(k); Java Expression: 74*Math.pow(10,-1)+getVariable(7,k)*81*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+getVariable(8,k)
Aug 30, 2024 5:03:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.161330879427351; Expression=75*Math.pow(10,-1)+u7(k)*81*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+u8(k); Java Expression: 75*Math.pow(10,-1)+getVariable(7,k)*81*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+getVariable(8,k)
Aug 30, 2024 5:03:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.146350965162664; Expression=74*Math.pow(10,-1)+u7(k)*81*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+78*Math.pow(10,-5)*u8(k)*u9(k)*u3(k); Java Expression: 74*Math.pow(10,-1)+getVariable(7,k)*81*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+78*Math.pow(10,-5)*getVariable(8,k)*getVariable(9,k)*getVariable(3,k)
Aug 30, 2024 5:03:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.132946910595581; Expression=74*Math.pow(10,-1)+u7(k)*81*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+47*Math.pow(10,-5)*27*Math.pow(10,+2)*u8(k); Java Expression: 74*Math.pow(10,-1)+getVariable(7,k)*81*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+47*Math.pow(10,-5)*27*Math.pow(10,+2)*getVariable(8,k)
Aug 30, 2024 5:03:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.110762670013032; Expression=53*Math.pow(10,-1)+u7(k)*81*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u4(k)+24*Math.pow(10,-3)*u8(k)*u9(k)*u8(k); Java Expression: 53*Math.pow(10,-1)+getVariable(7,k)*81*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(4,k)+24*Math.pow(10,-3)*getVariable(8,k)*getVariable(9,k)*getVariable(8,k)
Aug 30, 2024 5:04:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.110762580344955; Expression=53*Math.pow(10,-1)+u7(k)*81*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u4(k)+u8(k)*u9(k)*24*Math.pow(10,-3)*u8(k)-58*Math.pow(10,-9)*u9(k); Java Expression: 53*Math.pow(10,-1)+getVariable(7,k)*81*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(4,k)+getVariable(8,k)*getVariable(9,k)*24*Math.pow(10,-3)*getVariable(8,k)-58*Math.pow(10,-9)*getVariable(9,k)
Aug 30, 2024 5:04:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0863046026999275; Expression=74*Math.pow(10,-1)+u7(k)*81*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+u8(k)*u8(k); Java Expression: 74*Math.pow(10,-1)+getVariable(7,k)*81*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:04:18 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.0863046026999275 -->> Avg.: 5345022.9013396045 -->> Std. Dev.: 2.55680852313108E7
Aug 30, 2024 5:04:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.066150211569041; Expression=59*Math.pow(10,-1)+u7(k)*81*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+u8(k)*u8(k); Java Expression: 59*Math.pow(10,-1)+getVariable(7,k)*81*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:04:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.008607336433185; Expression=74*Math.pow(10,-1)+u7(k)*80*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+u8(k)*u8(k); Java Expression: 74*Math.pow(10,-1)+getVariable(7,k)*80*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:04:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.003525884805306; Expression=76*Math.pow(10,-1)+u7(k)*80*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+u8(k)*u8(k); Java Expression: 76*Math.pow(10,-1)+getVariable(7,k)*80*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:05:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.003508202716043; Expression=76*Math.pow(10,-1)+u7(k)*80*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+44*Math.pow(10,-8)*79*Math.pow(10,+2)+u8(k)*u8(k); Java Expression: 76*Math.pow(10,-1)+getVariable(7,k)*80*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+44*Math.pow(10,-8)*79*Math.pow(10,+2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:06:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.003489802319442; Expression=76*Math.pow(10,-1)+u7(k)*80*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+98*Math.pow(10,-8)*79*Math.pow(10,+2)+u8(k)*u8(k); Java Expression: 76*Math.pow(10,-1)+getVariable(7,k)*80*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+98*Math.pow(10,-8)*79*Math.pow(10,+2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:06:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.003487182882496; Expression=76*Math.pow(10,-1)+u7(k)*80*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+98*Math.pow(10,-8)*86*Math.pow(10,+2)+u8(k)*u8(k); Java Expression: 76*Math.pow(10,-1)+getVariable(7,k)*80*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+98*Math.pow(10,-8)*86*Math.pow(10,+2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:06:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.003457730315789; Expression=76*Math.pow(10,-1)+u7(k)*80*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+44*Math.pow(10,-8)*79*Math.pow(10,+3)+u8(k)*u8(k); Java Expression: 76*Math.pow(10,-1)+getVariable(7,k)*80*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+44*Math.pow(10,-8)*79*Math.pow(10,+3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:06:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.003452528281064; Expression=76*Math.pow(10,-1)+u7(k)*80*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+44*Math.pow(10,-8)*67*Math.pow(10,+3)+u8(k)*u8(k); Java Expression: 76*Math.pow(10,-1)+getVariable(7,k)*80*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+44*Math.pow(10,-8)*67*Math.pow(10,+3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:06:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.00345215571865; Expression=76*Math.pow(10,-1)+u7(k)*80*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+44*Math.pow(10,-8)*59*Math.pow(10,+3)+u8(k)*u8(k); Java Expression: 76*Math.pow(10,-1)+getVariable(7,k)*80*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+44*Math.pow(10,-8)*59*Math.pow(10,+3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:06:41 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.00345215571865 -->> Avg.: 1043.914078692474 -->> Std. Dev.: 3695.751288676867
Aug 30, 2024 5:06:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.003452066862461; Expression=76*Math.pow(10,-1)+u7(k)*80*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+44*Math.pow(10,-8)*60*Math.pow(10,+3)+u8(k)*u8(k); Java Expression: 76*Math.pow(10,-1)+getVariable(7,k)*80*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+44*Math.pow(10,-8)*60*Math.pow(10,+3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:07:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.003452005229924; Expression=76*Math.pow(10,-1)+u7(k)*80*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+44*Math.pow(10,-8)*62*Math.pow(10,+3)+u8(k)*u8(k); Java Expression: 76*Math.pow(10,-1)+getVariable(7,k)*80*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+44*Math.pow(10,-8)*62*Math.pow(10,+3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:07:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.988632069055564; Expression=94*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+44*Math.pow(10,-8)*54*Math.pow(10,+3)+u8(k)*u8(k); Java Expression: 94*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+44*Math.pow(10,-8)*54*Math.pow(10,+3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:07:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.987503459340143; Expression=94*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+44*Math.pow(10,-8)*99*Math.pow(10,+3)+u8(k)*u8(k); Java Expression: 94*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+44*Math.pow(10,-8)*99*Math.pow(10,+3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:07:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.986968538620433; Expression=94*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+99*Math.pow(10,-8)*54*Math.pow(10,+3)+u8(k)*u8(k); Java Expression: 94*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+99*Math.pow(10,-8)*54*Math.pow(10,+3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:08:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.981336876143956; Expression=94*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+44*Math.pow(10,-8)*99*Math.pow(10,+4)+u8(k)*u8(k); Java Expression: 94*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+44*Math.pow(10,-8)*99*Math.pow(10,+4)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:08:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.981336876143955; Expression=94*Math.pow(10,-1)+78*Math.pow(10,-2)*u7(k)-u5(k)-70*Math.pow(10,-2)*u3(k)+44*Math.pow(10,-8)*99*Math.pow(10,+4)+u8(k)*u8(k); Java Expression: 94*Math.pow(10,-1)+78*Math.pow(10,-2)*getVariable(7,k)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+44*Math.pow(10,-8)*99*Math.pow(10,+4)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:08:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.980086914586598; Expression=94*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+52*Math.pow(10,-6)*54*Math.pow(10,+2)+u8(k)*u8(k); Java Expression: 94*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+52*Math.pow(10,-6)*54*Math.pow(10,+2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:08:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.98002449155451; Expression=94*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+44*Math.pow(10,-6)*66*Math.pow(10,+2)+u8(k)*u8(k); Java Expression: 94*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+44*Math.pow(10,-6)*66*Math.pow(10,+2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:08:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.979972485972246; Expression=94*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+56*Math.pow(10,-6)*54*Math.pow(10,+2)+u8(k)*u8(k); Java Expression: 94*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+56*Math.pow(10,-6)*54*Math.pow(10,+2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:08:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.979951236190844; Expression=94*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+44*Math.pow(10,-6)*71*Math.pow(10,+2)+u8(k)*u8(k); Java Expression: 94*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+44*Math.pow(10,-6)*71*Math.pow(10,+2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:08:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.979949146947294; Expression=94*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u3(k)+44*Math.pow(10,-8)*73*Math.pow(10,+4)+u8(k)*u8(k); Java Expression: 94*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(3,k)+44*Math.pow(10,-8)*73*Math.pow(10,+4)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:09:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.921862229831268; Expression=94*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u2(k)*44*Math.pow(10,-5)*54*Math.pow(10,+1)+u8(k)*u8(k); Java Expression: 94*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(2,k)*44*Math.pow(10,-5)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:09:13 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 4.921862229831268 -->> Avg.: 17.103927611274088 -->> Std. Dev.: 27.03369410941552
Aug 30, 2024 5:09:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.91005762226642; Expression=96*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u2(k)*44*Math.pow(10,-5)*54*Math.pow(10,+1)+u8(k)*u8(k); Java Expression: 96*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(2,k)*44*Math.pow(10,-5)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:09:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.910057622266419; Expression=96*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u2(k)*44*Math.pow(10,-8)*54*Math.pow(10,+4)+u8(k)*u8(k); Java Expression: 96*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(2,k)*44*Math.pow(10,-8)*54*Math.pow(10,+4)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:09:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.910057622266418; Expression=96*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-1)*u2(k)*44*Math.pow(10,-8)*54*Math.pow(10,+3)+u8(k)*u8(k); Java Expression: 96*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-1)*getVariable(2,k)*44*Math.pow(10,-8)*54*Math.pow(10,+3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:10:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.907202347187758; Expression=97*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u2(k)*44*Math.pow(10,-8)*54*Math.pow(10,+4)+u8(k)*u8(k); Java Expression: 97*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(2,k)*44*Math.pow(10,-8)*54*Math.pow(10,+4)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:10:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.907202347187757; Expression=97*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-1)*u2(k)*44*Math.pow(10,-8)*54*Math.pow(10,+3)+u8(k)*u8(k); Java Expression: 97*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-1)*getVariable(2,k)*44*Math.pow(10,-8)*54*Math.pow(10,+3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:11:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.906383994197105; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-1)*u2(k)*44*Math.pow(10,-8)*54*Math.pow(10,+3)+u8(k)*u8(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-1)*getVariable(2,k)*44*Math.pow(10,-8)*54*Math.pow(10,+3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:11:54 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.906383994197105 -->> Avg.: 5.492128833616597 -->> Std. Dev.: 1.7877458417228265
Aug 30, 2024 5:11:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.906383994197104; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,-2)*u2(k)*44*Math.pow(10,-8)*54*Math.pow(10,+4)+u8(k)*u8(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,-2)*getVariable(2,k)*44*Math.pow(10,-8)*54*Math.pow(10,+4)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:12:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.906383994197103; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:14:39 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.906383994197103 -->> Avg.: 5.036043948154016 -->> Std. Dev.: 0.1761559763045054
Aug 30, 2024 5:15:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.906365066460404; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)-30*Math.pow(10,-6)*u1(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-6)*getVariable(1,k)
Aug 30, 2024 5:15:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.90635547855252; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)-46*Math.pow(10,-6)*u1(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)-46*Math.pow(10,-6)*getVariable(1,k)
Aug 30, 2024 5:15:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.906349091411933; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)-57*Math.pow(10,-6)*u1(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)-57*Math.pow(10,-6)*getVariable(1,k)
Aug 30, 2024 5:15:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9063479337233895; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)-46*Math.pow(10,-6)*u3(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)-46*Math.pow(10,-6)*getVariable(3,k)
Aug 30, 2024 5:15:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.906333051492519; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)-86*Math.pow(10,-6)*u1(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)-86*Math.pow(10,-6)*getVariable(1,k)
Aug 30, 2024 5:15:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.906270336715569; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)-57*Math.pow(10,-6)*u2(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)-57*Math.pow(10,-6)*getVariable(2,k)
Aug 30, 2024 5:15:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.906219583344658; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)-86*Math.pow(10,-6)*u2(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)-86*Math.pow(10,-6)*getVariable(2,k)
Aug 30, 2024 5:16:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.906076715242331; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)-57*Math.pow(10,-5)*u2(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)-57*Math.pow(10,-5)*getVariable(2,k)
Aug 30, 2024 5:16:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.90175585792784; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)+10*Math.pow(10,-3)*u9(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)+10*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:16:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.900570005339334; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-70*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)+4*Math.pow(10,-3)*u9(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-70*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)+4*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:16:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.853783173717151; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-75*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)+68*Math.pow(10,-3)*u9(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-75*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)+68*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:17:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.824534755463921; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-75*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)+46*Math.pow(10,-3)*u9(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-75*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)+46*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:17:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.816896920785435; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-75*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)+55*Math.pow(10,-3)*u9(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-75*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)+55*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:17:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.814947041924918; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-76*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)+68*Math.pow(10,-3)*u9(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-76*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)+68*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:17:31 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.814947041924918 -->> Avg.: 4.9453621624445265 -->> Std. Dev.: 0.057595602890785656
Aug 30, 2024 5:18:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.813251980430314; Expression=91*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-75*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)+68*Math.pow(10,-3)*u9(k); Java Expression: 91*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-75*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)+68*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:18:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.81276622831921; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-76*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)+58*Math.pow(10,-3)*u9(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-76*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)+58*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:18:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.809887213280566; Expression=98*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-76*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)+61*Math.pow(10,-3)*u9(k); Java Expression: 98*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-76*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)+61*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:18:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.809702820591978; Expression=95*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-76*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)+68*Math.pow(10,-3)*u9(k); Java Expression: 95*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-76*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)+68*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:19:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.809372705504754; Expression=96*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-76*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)+68*Math.pow(10,-3)*u9(k); Java Expression: 96*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-76*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)+68*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:20:24 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.809372705504754 -->> Avg.: 4.903719387707662 -->> Std. Dev.: 0.05976540730907886
Aug 30, 2024 5:21:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.809228672139747; Expression=96*Math.pow(10,-1)+u7(k)*78*Math.pow(10,-2)-u5(k)-76*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+u8(k)*u8(k)+67*Math.pow(10,-3)*u9(k); Java Expression: 96*Math.pow(10,-1)+getVariable(7,k)*78*Math.pow(10,-2)-getVariable(5,k)-76*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)+67*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:23:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.650420212526261; Expression=96*Math.pow(10,-1)+u7(k)*53*Math.pow(10,-2)-u4(k)-76*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,-4)+u8(k)*u8(k)+68*Math.pow(10,-3)*u9(k); Java Expression: 96*Math.pow(10,-1)+getVariable(7,k)*53*Math.pow(10,-2)-getVariable(4,k)-76*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,-4)+getVariable(8,k)*getVariable(8,k)+68*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:23:19 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.650420212526261 -->> Avg.: 4.86767185667955 -->> Std. Dev.: 0.04986703003614975
Aug 30, 2024 5:23:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.650140466624301; Expression=96*Math.pow(10,-1)+u7(k)*53*Math.pow(10,-2)-u4(k)-76*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)+82*Math.pow(10,-9)+u8(k)*u8(k)+68*Math.pow(10,-3)*u9(k); Java Expression: 96*Math.pow(10,-1)+getVariable(7,k)*53*Math.pow(10,-2)-getVariable(4,k)-76*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)+82*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)+68*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:23:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.650138820518751; Expression=96*Math.pow(10,-1)+u7(k)*53*Math.pow(10,-2)-u4(k)-76*Math.pow(10,+2)*u2(k)*42*Math.pow(10,-9)-23*Math.pow(10,-8)+u8(k)*u8(k)+68*Math.pow(10,-3)*u9(k); Java Expression: 96*Math.pow(10,-1)+getVariable(7,k)*53*Math.pow(10,-2)-getVariable(4,k)-76*Math.pow(10,+2)*getVariable(2,k)*42*Math.pow(10,-9)-23*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)+68*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:23:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.649665029971431; Expression=96*Math.pow(10,-1)+u7(k)*53*Math.pow(10,-2)-u4(k)-76*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*54*Math.pow(10,-1)+u8(k)*u8(k)+72*Math.pow(10,-3)*u9(k); Java Expression: 96*Math.pow(10,-1)+getVariable(7,k)*53*Math.pow(10,-2)-getVariable(4,k)-76*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*54*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)+72*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:24:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.648821231998408; Expression=96*Math.pow(10,-1)+u7(k)*53*Math.pow(10,-2)-u4(k)-76*Math.pow(10,+2)*u1(k)*44*Math.pow(10,-9)+53*Math.pow(10,-9)+u8(k)*u8(k)+68*Math.pow(10,-3)*u9(k); Java Expression: 96*Math.pow(10,-1)+getVariable(7,k)*53*Math.pow(10,-2)-getVariable(4,k)-76*Math.pow(10,+2)*getVariable(1,k)*44*Math.pow(10,-9)+53*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)+68*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:24:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.641862759878509; Expression=96*Math.pow(10,-1)+u7(k)*53*Math.pow(10,-2)-u4(k)-76*Math.pow(10,+2)*u1(k)*96*Math.pow(10,-9)*54*Math.pow(10,-1)+u8(k)*u8(k)+68*Math.pow(10,-3)*u9(k); Java Expression: 96*Math.pow(10,-1)+getVariable(7,k)*53*Math.pow(10,-2)-getVariable(4,k)-76*Math.pow(10,+2)*getVariable(1,k)*96*Math.pow(10,-9)*54*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)+68*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:24:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.641708125919273; Expression=96*Math.pow(10,-1)+u7(k)*53*Math.pow(10,-2)-u4(k)-76*Math.pow(10,+2)*u1(k)*44*Math.pow(10,-8)+61*Math.pow(10,-9)+u8(k)*u8(k)+68*Math.pow(10,-3)*u9(k); Java Expression: 96*Math.pow(10,-1)+getVariable(7,k)*53*Math.pow(10,-2)-getVariable(4,k)-76*Math.pow(10,+2)*getVariable(1,k)*44*Math.pow(10,-8)+61*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)+68*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:24:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.64078971445751; Expression=96*Math.pow(10,-1)+u7(k)*53*Math.pow(10,-2)-u4(k)-69*Math.pow(10,+2)*u1(k)*53*Math.pow(10,-9)*54*Math.pow(10,-1)+u8(k)*u8(k)+72*Math.pow(10,-3)*u9(k); Java Expression: 96*Math.pow(10,-1)+getVariable(7,k)*53*Math.pow(10,-2)-getVariable(4,k)-69*Math.pow(10,+2)*getVariable(1,k)*53*Math.pow(10,-9)*54*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)+72*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:24:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.630484008889784; Expression=96*Math.pow(10,-1)+u7(k)*53*Math.pow(10,-2)-u4(k)-76*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)+82*Math.pow(10,-9)+u8(k)*u8(k)*55*Math.pow(10,-3)*u9(k); Java Expression: 96*Math.pow(10,-1)+getVariable(7,k)*53*Math.pow(10,-2)-getVariable(4,k)-76*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)+82*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)*55*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 5:25:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.303070983083266; Expression=96*Math.pow(10,-1)-u7(k)*53*Math.pow(10,-2)-u4(k)-76*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*u8(k)+u8(k)*54*Math.pow(10,-1)+u9(k)*72*Math.pow(10,-3)+u7(k); Java Expression: 96*Math.pow(10,-1)-getVariable(7,k)*53*Math.pow(10,-2)-getVariable(4,k)-76*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*getVariable(8,k)+getVariable(8,k)*54*Math.pow(10,-1)+getVariable(9,k)*72*Math.pow(10,-3)+getVariable(7,k)
Aug 30, 2024 5:25:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.29445824798928; Expression=96*Math.pow(10,-1)-u7(k)*53*Math.pow(10,-2)-u4(k)-29*Math.pow(10,+2)*u2(k)*44*Math.pow(10,-9)*u8(k)+u8(k)*54*Math.pow(10,-1)+u9(k)*72*Math.pow(10,-3)+u7(k); Java Expression: 96*Math.pow(10,-1)-getVariable(7,k)*53*Math.pow(10,-2)-getVariable(4,k)-29*Math.pow(10,+2)*getVariable(2,k)*44*Math.pow(10,-9)*getVariable(8,k)+getVariable(8,k)*54*Math.pow(10,-1)+getVariable(9,k)*72*Math.pow(10,-3)+getVariable(7,k)
Aug 30, 2024 5:25:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.28947700743565; Expression=96*Math.pow(10,-1)-u7(k)*53*Math.pow(10,-2)-u4(k)-76*Math.pow(10,-2)*u2(k)*44*Math.pow(10,-9)*u8(k)+u8(k)*54*Math.pow(10,-1)+u9(k)*72*Math.pow(10,-3)+u7(k); Java Expression: 96*Math.pow(10,-1)-getVariable(7,k)*53*Math.pow(10,-2)-getVariable(4,k)-76*Math.pow(10,-2)*getVariable(2,k)*44*Math.pow(10,-9)*getVariable(8,k)+getVariable(8,k)*54*Math.pow(10,-1)+getVariable(9,k)*72*Math.pow(10,-3)+getVariable(7,k)
Aug 30, 2024 5:25:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.236501989358444; Expression=96*Math.pow(10,-1)-u7(k)*53*Math.pow(10,-2)-u4(k)-76*Math.pow(10,+2)*u2(k)*42*Math.pow(10,-9)*u8(k)+u8(k)*59*Math.pow(10,-1)+u9(k)*68*Math.pow(10,-3)+u7(k); Java Expression: 96*Math.pow(10,-1)-getVariable(7,k)*53*Math.pow(10,-2)-getVariable(4,k)-76*Math.pow(10,+2)*getVariable(2,k)*42*Math.pow(10,-9)*getVariable(8,k)+getVariable(8,k)*59*Math.pow(10,-1)+getVariable(9,k)*68*Math.pow(10,-3)+getVariable(7,k)
Aug 30, 2024 5:25:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.236274576547519; Expression=96*Math.pow(10,-1)-u7(k)*53*Math.pow(10,-2)-u4(k)-76*Math.pow(10,-2)*u2(k)*42*Math.pow(10,-9)*u8(k)+u8(k)*59*Math.pow(10,-1)+u9(k)*68*Math.pow(10,-3)+u7(k); Java Expression: 96*Math.pow(10,-1)-getVariable(7,k)*53*Math.pow(10,-2)-getVariable(4,k)-76*Math.pow(10,-2)*getVariable(2,k)*42*Math.pow(10,-9)*getVariable(8,k)+getVariable(8,k)*59*Math.pow(10,-1)+getVariable(9,k)*68*Math.pow(10,-3)+getVariable(7,k)
Aug 30, 2024 5:25:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.2356165929963945; Expression=96*Math.pow(10,-1)-u7(k)*53*Math.pow(10,-2)-u4(k)-76*Math.pow(10,+2)*u1(k)*42*Math.pow(10,-9)*u8(k)+u8(k)*59*Math.pow(10,-1)+u9(k)*68*Math.pow(10,-3)+u7(k); Java Expression: 96*Math.pow(10,-1)-getVariable(7,k)*53*Math.pow(10,-2)-getVariable(4,k)-76*Math.pow(10,+2)*getVariable(1,k)*42*Math.pow(10,-9)*getVariable(8,k)+getVariable(8,k)*59*Math.pow(10,-1)+getVariable(9,k)*68*Math.pow(10,-3)+getVariable(7,k)
Aug 30, 2024 5:26:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.235452412407361; Expression=96*Math.pow(10,-1)-u7(k)*53*Math.pow(10,-2)-u4(k)-76*Math.pow(10,+2)*u1(k)*60*Math.pow(10,-9)*u8(k)+u8(k)*59*Math.pow(10,-1)+u9(k)*68*Math.pow(10,-3)+u7(k); Java Expression: 96*Math.pow(10,-1)-getVariable(7,k)*53*Math.pow(10,-2)-getVariable(4,k)-76*Math.pow(10,+2)*getVariable(1,k)*60*Math.pow(10,-9)*getVariable(8,k)+getVariable(8,k)*59*Math.pow(10,-1)+getVariable(9,k)*68*Math.pow(10,-3)+getVariable(7,k)
Aug 30, 2024 5:26:17 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.235452412407361 -->> Avg.: 4.790193958392409 -->> Std. Dev.: 0.16351720850366236

Execution time: 1551.376 seconds.



@@;96*Math.pow(10,-1)-getVariable(7,k)*53*Math.pow(10,-2)-getVariable(4,k)-76*Math.pow(10,+2)*getVariable(1,k)*60*Math.pow(10,-9)*getVariable(8,k)+getVariable(8,k)*59*Math.pow(10,-1)+getVariable(9,k)*68*Math.pow(10,-3)+getVariable(7,k)



Run #2
========
Aug 30, 2024 5:26:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=14.987989506551285; Expression=59*Math.pow(10,-2)+u9(k); Java Expression: 59*Math.pow(10,-2)+getVariable(9,k)
Aug 30, 2024 5:26:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=14.51962476739463; Expression=41*Math.pow(10,-8)+u9(k)-u8(k); Java Expression: 41*Math.pow(10,-8)+getVariable(9,k)-getVariable(8,k)
Aug 30, 2024 5:26:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.400594380327485; Expression=7*Math.pow(10,-3)+u4(k); Java Expression: 7*Math.pow(10,-3)+getVariable(4,k)
Aug 30, 2024 5:26:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.333505725839222; Expression=49*Math.pow(10,-2)+67*Math.pow(10,-6)+u5(k); Java Expression: 49*Math.pow(10,-2)+67*Math.pow(10,-6)+getVariable(5,k)
Aug 30, 2024 5:26:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.3304713775525; Expression=25*Math.pow(10,-9)+u5(k); Java Expression: 25*Math.pow(10,-9)+getVariable(5,k)
Aug 30, 2024 5:26:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 5:26:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.545490207838515; Expression=u5(k)+u8(k)*u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:26:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.780883602472543; Expression=31*Math.pow(10,-2)*u7(k); Java Expression: 31*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 5:26:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.088841678637483; Expression=51*Math.pow(10,-3)-u5(k)+u7(k)-u4(k); Java Expression: 51*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:26:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077438698962389; Expression=51*Math.pow(10,-6)-u5(k)+u7(k)-u4(k); Java Expression: 51*Math.pow(10,-6)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:26:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077434302394426; Expression=31*Math.pow(10,-6)-u5(k)+u7(k)-u4(k); Java Expression: 31*Math.pow(10,-6)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:26:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427497070381; Expression=42*Math.pow(10,-9)-u5(k)+u7(k)-u4(k); Java Expression: 42*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:26:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427496630737; Expression=40*Math.pow(10,-9)-u5(k)+u7(k)-u4(k); Java Expression: 40*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:26:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427488057681; Expression=1*Math.pow(10,-9)-u5(k)+u7(k)-u4(k); Java Expression: 1*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 5:27:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077234111941653; Expression=31*Math.pow(10,-9)-u5(k)+u7(k)-88*Math.pow(10,-5)-u4(k); Java Expression: 31*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)-88*Math.pow(10,-5)-getVariable(4,k)
Aug 30, 2024 5:27:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.05875524517269; Expression=31*Math.pow(10,-5)-u5(k)+u7(k)-88*Math.pow(10,-3)-u4(k); Java Expression: 31*Math.pow(10,-5)-getVariable(5,k)+getVariable(7,k)-88*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 5:27:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.058279753418201; Expression=34*Math.pow(10,-9)-u5(k)+u7(k)-9*Math.pow(10,-2)-u4(k); Java Expression: 34*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)-9*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 5:27:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.93033217876807; Expression=1*Math.pow(10,-9)-u5(k)+u7(k)-12*Math.pow(10,-1)-u4(k); Java Expression: 1*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)-12*Math.pow(10,-1)-getVariable(4,k)
Aug 30, 2024 5:27:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.930332125863227; Expression=1*Math.pow(10,-9)-u5(k)+u7(k)-12*Math.pow(10,-1)-u4(k)-32*Math.pow(10,-9)*u5(k); Java Expression: 1*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)-12*Math.pow(10,-1)-getVariable(4,k)-32*Math.pow(10,-9)*getVariable(5,k)
Aug 30, 2024 5:27:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9156459025066255; Expression=1*Math.pow(10,-9)-u5(k)+u7(k)-12*Math.pow(10,-1)-u4(k)-32*Math.pow(10,-4)*u7(k); Java Expression: 1*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)-12*Math.pow(10,-1)-getVariable(4,k)-32*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:27:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.915645899586238; Expression=88*Math.pow(10,-9)-u5(k)+u7(k)-12*Math.pow(10,-1)-u4(k)-32*Math.pow(10,-4)*u7(k); Java Expression: 88*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)-12*Math.pow(10,-1)-getVariable(4,k)-32*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:27:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.906735567006152; Expression=88*Math.pow(10,-9)-u5(k)+u7(k)-12*Math.pow(10,-1)-u4(k)-32*Math.pow(10,-4)*u1(k); Java Expression: 88*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)-12*Math.pow(10,-1)-getVariable(4,k)-32*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 5:27:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.855117459516084; Expression=1*Math.pow(10,-9)-u5(k)+u7(k)-12*Math.pow(10,-3)-u4(k)-32*Math.pow(10,-3)*u1(k); Java Expression: 1*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)-12*Math.pow(10,-3)-getVariable(4,k)-32*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:27:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.844013987938653; Expression=1*Math.pow(10,-3)-u5(k)+u7(k)-12*Math.pow(10,-3)-u4(k)-31*Math.pow(10,-3)*u1(k); Java Expression: 1*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)-12*Math.pow(10,-3)-getVariable(4,k)-31*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:27:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.835939707257354; Expression=67*Math.pow(10,-3)-u5(k)+u7(k)-68*Math.pow(10,-3)-u4(k)-14*Math.pow(10,-3)*u1(k); Java Expression: 67*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)-68*Math.pow(10,-3)-getVariable(4,k)-14*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:27:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8099232826327425; Expression=18*Math.pow(10,-3)-u5(k)+u7(k)-89*Math.pow(10,-3)-u4(k)-25*Math.pow(10,-3)*u1(k); Java Expression: 18*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)-89*Math.pow(10,-3)-getVariable(4,k)-25*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:27:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.795392047501666; Expression=42*Math.pow(10,-3)-u5(k)+u7(k)-20*Math.pow(10,-3)-u4(k)-22*Math.pow(10,-3)*u1(k); Java Expression: 42*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)-20*Math.pow(10,-3)-getVariable(4,k)-22*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:27:43 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.795392047501666 -->> Avg.: 9.814691371859358E9 -->> Std. Dev.: 3.8703688143081635E10
Aug 30, 2024 5:27:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.792807140046095; Expression=42*Math.pow(10,-3)-u5(k)+u7(k)+20*Math.pow(10,-3)-u4(k)-22*Math.pow(10,-3)*u1(k); Java Expression: 42*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+20*Math.pow(10,-3)-getVariable(4,k)-22*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:27:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7912178621251424; Expression=69*Math.pow(10,-3)-u5(k)+u7(k)+20*Math.pow(10,-3)-u4(k)-22*Math.pow(10,-3)*u1(k); Java Expression: 69*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+20*Math.pow(10,-3)-getVariable(4,k)-22*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:27:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.789806037510022; Expression=42*Math.pow(10,-3)-u5(k)+u7(k)+73*Math.pow(10,-3)-u4(k)-22*Math.pow(10,-3)*u1(k); Java Expression: 42*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+73*Math.pow(10,-3)-getVariable(4,k)-22*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:27:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783833454159332; Expression=69*Math.pow(10,-3)-u5(k)+u7(k)+20*Math.pow(10,-2)-u4(k)-22*Math.pow(10,-3)*u1(k); Java Expression: 69*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+20*Math.pow(10,-2)-getVariable(4,k)-22*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783166906562281; Expression=98*Math.pow(10,-3)-u5(k)+u7(k)+20*Math.pow(10,-2)-u4(k)-22*Math.pow(10,-3)*u1(k); Java Expression: 98*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+20*Math.pow(10,-2)-getVariable(4,k)-22*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.782002185174721; Expression=42*Math.pow(10,-2)-u5(k)+u7(k)+20*Math.pow(10,-3)-u4(k)-22*Math.pow(10,-3)*u1(k); Java Expression: 42*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)+20*Math.pow(10,-3)-getVariable(4,k)-22*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7260356563811; Expression=88*Math.pow(10,-3)-u5(k)+u7(k)+12*Math.pow(10,-1)-u4(k)-32*Math.pow(10,-3)*u1(k); Java Expression: 88*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+12*Math.pow(10,-1)-getVariable(4,k)-32*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.725545552038716; Expression=88*Math.pow(10,-4)-u5(k)+u7(k)+12*Math.pow(10,-1)-u4(k)-32*Math.pow(10,-3)*u1(k); Java Expression: 88*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+12*Math.pow(10,-1)-getVariable(4,k)-32*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.676342143138745; Expression=83*Math.pow(10,-3)-u5(k)+u7(k)+20*Math.pow(10,-1)-u4(k)-42*Math.pow(10,-3)*u1(k); Java Expression: 83*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+20*Math.pow(10,-1)-getVariable(4,k)-42*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.675872963687592; Expression=83*Math.pow(10,-5)-u5(k)+u7(k)+20*Math.pow(10,-1)-u4(k)-42*Math.pow(10,-3)*u1(k); Java Expression: 83*Math.pow(10,-5)-getVariable(5,k)+getVariable(7,k)+20*Math.pow(10,-1)-getVariable(4,k)-42*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6695612137140765; Expression=42*Math.pow(10,-3)-u5(k)+u7(k)+20*Math.pow(10,-1)-u4(k)-49*Math.pow(10,-3)*u1(k); Java Expression: 42*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+20*Math.pow(10,-1)-getVariable(4,k)-49*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.669100329134685; Expression=47*Math.pow(10,-3)-u5(k)+u7(k)+20*Math.pow(10,-1)-u4(k)-49*Math.pow(10,-3)*u1(k); Java Expression: 47*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+20*Math.pow(10,-1)-getVariable(4,k)-49*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.592264740445325; Expression=1*Math.pow(10,-5)-u5(k)+u7(k)+59*Math.pow(10,-1)-u4(k)-82*Math.pow(10,-3)*u1(k); Java Expression: 1*Math.pow(10,-5)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(4,k)-82*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.592263585476123; Expression=83*Math.pow(10,-8)-u5(k)+u7(k)+59*Math.pow(10,-1)-u4(k)-82*Math.pow(10,-3)*u1(k); Java Expression: 83*Math.pow(10,-8)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(4,k)-82*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.53565210029642; Expression=83*Math.pow(10,-9)-u5(k)+u7(k)+59*Math.pow(10,-1)-u4(k)-93*Math.pow(10,-3)*u1(k); Java Expression: 83*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(4,k)-93*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.535652077106955; Expression=83*Math.pow(10,-8)-u5(k)+u7(k)+59*Math.pow(10,-1)-u4(k)-93*Math.pow(10,-3)*u1(k); Java Expression: 83*Math.pow(10,-8)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(4,k)-93*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.535400658148231; Expression=83*Math.pow(10,-4)-u5(k)+u7(k)+59*Math.pow(10,-1)-u4(k)-93*Math.pow(10,-3)*u1(k); Java Expression: 83*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(4,k)-93*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.534392437854028; Expression=47*Math.pow(10,-3)-u5(k)+u7(k)+59*Math.pow(10,-1)-u4(k)-93*Math.pow(10,-3)*u1(k); Java Expression: 47*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(4,k)-93*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.533697382934388; Expression=83*Math.pow(10,-3)-u5(k)+u7(k)+59*Math.pow(10,-1)-u4(k)-93*Math.pow(10,-3)*u1(k); Java Expression: 83*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(4,k)-93*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.533681417771269; Expression=84*Math.pow(10,-3)-u5(k)+u7(k)+59*Math.pow(10,-1)-u4(k)-93*Math.pow(10,-3)*u1(k); Java Expression: 84*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(4,k)-93*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.533450545666397; Expression=83*Math.pow(10,-9)-u5(k)+u7(k)+60*Math.pow(10,-1)-u4(k)-93*Math.pow(10,-3)*u1(k); Java Expression: 83*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(4,k)-93*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.533450535967422; Expression=83*Math.pow(10,-8)-u5(k)+u7(k)+60*Math.pow(10,-1)-u4(k)-93*Math.pow(10,-3)*u1(k); Java Expression: 83*Math.pow(10,-8)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(4,k)-93*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.533297023534951; Expression=13*Math.pow(10,-3)-u5(k)+u7(k)+60*Math.pow(10,-1)-u4(k)-93*Math.pow(10,-3)*u1(k); Java Expression: 13*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(4,k)-93*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:28:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.532988726280375; Expression=79*Math.pow(10,-3)-u5(k)+u7(k)+60*Math.pow(10,-1)-u4(k)-93*Math.pow(10,-3)*u1(k); Java Expression: 79*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(4,k)-93*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:29:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.532985000447486; Expression=75*Math.pow(10,-3)-u5(k)+u7(k)+60*Math.pow(10,-1)-u4(k)-93*Math.pow(10,-3)*u1(k); Java Expression: 75*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(4,k)-93*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:29:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5329845208246065; Expression=74*Math.pow(10,-3)-u5(k)+u7(k)+60*Math.pow(10,-1)-u4(k)-93*Math.pow(10,-3)*u1(k); Java Expression: 74*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(4,k)-93*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 5:29:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.479032284300557; Expression=47*Math.pow(10,-3)-u5(k)+u7(k)+59*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-3)*1*Math.pow(10,-2)*u7(k); Java Expression: 47*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-3)*1*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 5:29:24 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.479032284300557 -->> Avg.: 2404374.556895517 -->> Std. Dev.: 1.0687620121764546E7
Aug 30, 2024 5:29:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.44354026780396; Expression=47*Math.pow(10,-2)-u5(k)+u7(k)+59*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-3)*1*Math.pow(10,-2)*u7(k); Java Expression: 47*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-3)*1*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 5:29:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.441379111943807; Expression=91*Math.pow(10,-2)-u5(k)+u7(k)+59*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-3)*1*Math.pow(10,-2)*u7(k); Java Expression: 91*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-3)*1*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 5:30:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.439925025393882; Expression=47*Math.pow(10,-2)-u5(k)+u7(k)+60*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-3)*1*Math.pow(10,-2)*u7(k); Java Expression: 47*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-3)*1*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 5:30:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.431614268443235; Expression=47*Math.pow(10,-2)-u5(k)+u7(k)+60*Math.pow(10,-1)-u4(k)-u1(k)*91*Math.pow(10,-3)*1*Math.pow(10,-2)*u7(k); Java Expression: 47*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*91*Math.pow(10,-3)*1*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 5:30:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.428093363491026; Expression=47*Math.pow(10,-3)-u5(k)+u7(k)+59*Math.pow(10,-1)-u4(k)-u1(k)*80*Math.pow(10,-3)*1*Math.pow(10,-2)*u7(k); Java Expression: 47*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*80*Math.pow(10,-3)*1*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 5:30:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.420601100459673; Expression=74*Math.pow(10,-3)-u5(k)+u7(k)+60*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k); Java Expression: 74*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:30:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.41920491266435; Expression=41*Math.pow(10,-3)-u5(k)+u7(k)+60*Math.pow(10,-1)-u4(k)-u1(k)*87*Math.pow(10,-3)*99*Math.pow(10,-4)*u7(k); Java Expression: 41*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*87*Math.pow(10,-3)*99*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:30:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.417791170816448; Expression=40*Math.pow(10,-4)-u5(k)+u7(k)+60*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k); Java Expression: 40*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:30:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.417724155427148; Expression=20*Math.pow(10,-4)-u5(k)+u7(k)+60*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k); Java Expression: 20*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:30:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.417717494450132; Expression=18*Math.pow(10,-4)-u5(k)+u7(k)+60*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k); Java Expression: 18*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:30:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.417658536663572; Expression=20*Math.pow(10,-6)-u5(k)+u7(k)+60*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k); Java Expression: 20*Math.pow(10,-6)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:30:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.415284809823612; Expression=47*Math.pow(10,-9)-u5(k)+u7(k)+59*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k); Java Expression: 47*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:31:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.415284809606064; Expression=32*Math.pow(10,-9)-u5(k)+u7(k)+59*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k); Java Expression: 32*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:31:38 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.415284809606064 -->> Avg.: 508.332669281615 -->> Std. Dev.: 1599.4810988759689
Aug 30, 2024 5:31:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.415284809287; Expression=10*Math.pow(10,-9)-u5(k)+u7(k)+59*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k); Java Expression: 10*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:31:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.415284809170987; Expression=2*Math.pow(10,-9)-u5(k)+u7(k)+59*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k); Java Expression: 2*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:32:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.408502713097586; Expression=47*Math.pow(10,-9)-u5(k)+u7(k)+49*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-3)*79*Math.pow(10,-4)*u7(k); Java Expression: 47*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)+49*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-3)*79*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:32:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.408301377664284; Expression=47*Math.pow(10,-3)-u5(k)+u7(k)+49*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-3)*79*Math.pow(10,-4)*u7(k); Java Expression: 47*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+49*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-3)*79*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:34:00 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.408301377664284 -->> Avg.: 17.141160285504416 -->> Std. Dev.: 25.73792801760141
Aug 30, 2024 5:34:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.408301377664283; Expression=47*Math.pow(10,-3)-u5(k)+u7(k)+49*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-1)*79*Math.pow(10,-6)*u7(k); Java Expression: 47*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+49*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-1)*79*Math.pow(10,-6)*getVariable(7,k)
Aug 30, 2024 5:36:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.408202084500709; Expression=86*Math.pow(10,-3)-u5(k)+u7(k)+49*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-1)*80*Math.pow(10,-6)*u7(k); Java Expression: 86*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+49*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-1)*80*Math.pow(10,-6)*getVariable(7,k)
Aug 30, 2024 5:36:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.408126210247747; Expression=98*Math.pow(10,-3)-u5(k)+u7(k)+49*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-1)*80*Math.pow(10,-6)*u7(k); Java Expression: 98*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+49*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-1)*80*Math.pow(10,-6)*getVariable(7,k)
Aug 30, 2024 5:36:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4081210892415825; Expression=99*Math.pow(10,-3)-u5(k)+u7(k)+49*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-1)*80*Math.pow(10,-6)*u7(k); Java Expression: 99*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+49*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-1)*80*Math.pow(10,-6)*getVariable(7,k)
Aug 30, 2024 5:36:31 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.4081210892415825 -->> Avg.: 5.958353032020869 -->> Std. Dev.: 1.9962604473134038
Aug 30, 2024 5:36:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.408121089241582; Expression=99*Math.pow(10,-3)-u5(k)+u7(k)+49*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-3)*80*Math.pow(10,-4)*u7(k); Java Expression: 99*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+49*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-3)*80*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:37:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.408116153137846; Expression=99*Math.pow(10,-1)-u5(k)+u7(k)-49*Math.pow(10,-1)-u4(k)-u1(k)*93*Math.pow(10,-3)*80*Math.pow(10,-4)*u7(k); Java Expression: 99*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-49*Math.pow(10,-1)-getVariable(4,k)-getVariable(1,k)*93*Math.pow(10,-3)*80*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:37:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.366054121637697; Expression=47*Math.pow(10,-1)-u5(k)+u7(k)+49*Math.pow(10,-1)-u3(k)-u7(k)*93*Math.pow(10,-3)*75*Math.pow(10,-4)*u7(k); Java Expression: 47*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+49*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*93*Math.pow(10,-3)*75*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:37:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.303878571424324; Expression=47*Math.pow(10,-1)-u5(k)+u7(k)+49*Math.pow(10,-1)-u3(k)-u7(k)*93*Math.pow(10,-3)*89*Math.pow(10,-4)*u7(k); Java Expression: 47*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+49*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*93*Math.pow(10,-3)*89*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:37:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.278821286056188; Expression=47*Math.pow(10,-1)-u5(k)+u7(k)+49*Math.pow(10,-1)-u3(k)-u7(k)*87*Math.pow(10,-3)*89*Math.pow(10,-4)*u7(k); Java Expression: 47*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+49*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*87*Math.pow(10,-3)*89*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:37:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.255166510551948; Expression=47*Math.pow(10,-1)-u5(k)+u7(k)+59*Math.pow(10,-1)-u3(k)-u7(k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k); Java Expression: 47*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*93*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:38:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.249505216141343; Expression=47*Math.pow(10,-1)-u5(k)+u7(k)+59*Math.pow(10,-1)-u3(k)-u7(k)*94*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k); Java Expression: 47*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*94*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:38:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2448445153372445; Expression=47*Math.pow(10,-1)-u5(k)+u7(k)+59*Math.pow(10,-1)-u3(k)-u7(k)*93*Math.pow(10,-3)*94*Math.pow(10,-4)*u7(k); Java Expression: 47*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*93*Math.pow(10,-3)*94*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:38:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.240203534207729; Expression=50*Math.pow(10,-1)-u5(k)+u7(k)+59*Math.pow(10,-1)-u3(k)-u7(k)*93*Math.pow(10,-3)*94*Math.pow(10,-4)*u7(k); Java Expression: 50*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*93*Math.pow(10,-3)*94*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:39:01 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.240203534207729 -->> Avg.: 5.453143746460471 -->> Std. Dev.: 0.13112148966417372
Aug 30, 2024 5:39:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.237508662205016; Expression=50*Math.pow(10,-1)-u5(k)+u7(k)+59*Math.pow(10,-1)-u3(k)-u7(k)*96*Math.pow(10,-3)*94*Math.pow(10,-4)*u7(k); Java Expression: 50*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*96*Math.pow(10,-3)*94*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:39:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.237117012669266; Expression=50*Math.pow(10,-1)-u5(k)+u7(k)+59*Math.pow(10,-1)-u3(k)-u7(k)*93*Math.pow(10,-3)*95*Math.pow(10,-4)*u7(k); Java Expression: 50*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*93*Math.pow(10,-3)*95*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:39:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.233805044921283; Expression=50*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*96*Math.pow(10,-3)*94*Math.pow(10,-4)*u7(k); Java Expression: 50*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*96*Math.pow(10,-3)*94*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:40:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2320104653769866; Expression=51*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*96*Math.pow(10,-3)*94*Math.pow(10,-4)*u7(k); Java Expression: 51*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*96*Math.pow(10,-3)*94*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:40:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.231550048297135; Expression=51*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*97*Math.pow(10,-3)*94*Math.pow(10,-4)*u7(k); Java Expression: 51*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*97*Math.pow(10,-3)*94*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:40:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.225743132737071; Expression=54*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*97*Math.pow(10,-3)*97*Math.pow(10,-4)*u7(k); Java Expression: 54*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*97*Math.pow(10,-3)*97*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:41:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.224539253296157; Expression=57*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*97*Math.pow(10,-3)*97*Math.pow(10,-4)*u7(k); Java Expression: 57*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*97*Math.pow(10,-3)*97*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:41:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.223026329240341; Expression=56*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*97*Math.pow(10,-3)*97*Math.pow(10,-4)*u7(k); Java Expression: 56*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*97*Math.pow(10,-3)*97*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:41:26 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.223026329240341 -->> Avg.: 5.367631345602406 -->> Std. Dev.: 0.08554000405082743
Aug 30, 2024 5:41:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.22165337732163; Expression=56*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*u7(k); Java Expression: 56*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 5:42:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.221596540913499; Expression=56*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*u7(k)+22*Math.pow(10,-5)*u1(k); Java Expression: 56*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*getVariable(7,k)+22*Math.pow(10,-5)*getVariable(1,k)
Aug 30, 2024 5:42:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.22105611943745; Expression=56*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*u7(k)+34*Math.pow(10,-5)*u6(k); Java Expression: 56*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*getVariable(7,k)+34*Math.pow(10,-5)*getVariable(6,k)
Aug 30, 2024 5:43:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.220501954303412; Expression=56*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*u7(k)+98*Math.pow(10,-5)*u6(k); Java Expression: 56*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*getVariable(7,k)+98*Math.pow(10,-5)*getVariable(6,k)
Aug 30, 2024 5:43:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.217359234412587; Expression=56*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*u7(k)+34*Math.pow(10,-3)*u8(k); Java Expression: 56*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*getVariable(7,k)+34*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 5:43:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.21369411147869; Expression=54*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*97*Math.pow(10,-3)*97*Math.pow(10,-4)*u7(k)+86*Math.pow(10,-3)*u8(k); Java Expression: 54*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*97*Math.pow(10,-3)*97*Math.pow(10,-4)*getVariable(7,k)+86*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 5:43:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2133305764354105; Expression=56*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*u7(k)+71*Math.pow(10,-3)*u8(k); Java Expression: 56*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*getVariable(7,k)+71*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 5:43:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.210815482888113; Expression=56*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*u7(k)+98*Math.pow(10,-3)*u8(k); Java Expression: 56*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*getVariable(7,k)+98*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 5:43:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.203077234623382; Expression=56*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*u7(k)-23*Math.pow(10,-1)+u8(k); Java Expression: 56*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*getVariable(7,k)-23*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 5:43:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.187599682194067; Expression=56*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*u7(k)-22*Math.pow(10,-1)+u8(k); Java Expression: 56*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*getVariable(7,k)-22*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 5:43:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.144696441547902; Expression=56*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*u7(k)-18*Math.pow(10,-1)+u8(k); Java Expression: 56*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*97*Math.pow(10,-3)*98*Math.pow(10,-4)*getVariable(7,k)-18*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 5:44:01 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.144696441547902 -->> Avg.: 5.322048674224981 -->> Std. Dev.: 0.08950094545628963
Aug 30, 2024 5:44:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.120344031121508; Expression=50*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*96*Math.pow(10,-3)*57*Math.pow(10,-4)*u7(k)*19*Math.pow(10,-1)+u8(k); Java Expression: 50*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*96*Math.pow(10,-3)*57*Math.pow(10,-4)*getVariable(7,k)*19*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 5:44:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.11869438601464; Expression=52*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-u7(k)*96*Math.pow(10,-3)*57*Math.pow(10,-4)*u7(k)*19*Math.pow(10,-1)+u8(k); Java Expression: 52*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*96*Math.pow(10,-3)*57*Math.pow(10,-4)*getVariable(7,k)*19*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 5:44:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.118542527637116; Expression=52*Math.pow(10,-1)-u5(k)+u7(k)+59*Math.pow(10,-1)-u3(k)-u7(k)*96*Math.pow(10,-3)*57*Math.pow(10,-4)*u7(k)*19*Math.pow(10,-1)+u8(k); Java Expression: 52*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+59*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*96*Math.pow(10,-3)*57*Math.pow(10,-4)*getVariable(7,k)*19*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 5:44:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.111450466684462; Expression=50*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-96*Math.pow(10,-3)*57*Math.pow(10,-4)*u7(k)*19*Math.pow(10,-1)*u7(k)+u8(k)*u8(k)-u8(k); Java Expression: 50*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-96*Math.pow(10,-3)*57*Math.pow(10,-4)*getVariable(7,k)*19*Math.pow(10,-1)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)
Aug 30, 2024 5:45:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.107276188086004; Expression=62*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-96*Math.pow(10,-3)*57*Math.pow(10,-4)*u7(k)*19*Math.pow(10,-1)*u7(k)+u8(k)*u8(k)-u8(k); Java Expression: 62*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-96*Math.pow(10,-3)*57*Math.pow(10,-4)*getVariable(7,k)*19*Math.pow(10,-1)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)
Aug 30, 2024 5:45:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.091150810118717; Expression=52*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-96*Math.pow(10,-3)*57*Math.pow(10,-4)*u7(k)*19*Math.pow(10,-1)*u7(k)+u8(k)*u8(k)-u8(k); Java Expression: 52*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-96*Math.pow(10,-3)*57*Math.pow(10,-4)*getVariable(7,k)*19*Math.pow(10,-1)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)
Aug 30, 2024 5:45:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.083346584567265; Expression=50*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-96*Math.pow(10,-3)*54*Math.pow(10,-4)*u7(k)*19*Math.pow(10,-1)*u7(k)+u8(k)*u8(k)-u8(k); Java Expression: 50*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-96*Math.pow(10,-3)*54*Math.pow(10,-4)*getVariable(7,k)*19*Math.pow(10,-1)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)
Aug 30, 2024 5:45:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.081823886596716; Expression=59*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-96*Math.pow(10,-3)*57*Math.pow(10,-4)*u7(k)*19*Math.pow(10,-1)*u7(k)+u8(k)*u8(k)-u8(k); Java Expression: 59*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-96*Math.pow(10,-3)*57*Math.pow(10,-4)*getVariable(7,k)*19*Math.pow(10,-1)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)
Aug 30, 2024 5:45:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0740120188446145; Expression=56*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-96*Math.pow(10,-3)*57*Math.pow(10,-4)*19*Math.pow(10,-1)*u7(k)*u7(k)+u8(k)*u8(k)-u8(k); Java Expression: 56*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-96*Math.pow(10,-3)*57*Math.pow(10,-4)*19*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)
Aug 30, 2024 5:46:49 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 5.0740120188446145 -->> Avg.: 5.261836256728223 -->> Std. Dev.: 0.11170222859195417
Aug 30, 2024 5:47:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.074012018844614; Expression=56*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-96*Math.pow(10,-3)*57*Math.pow(10,+4)*u7(k)*19*Math.pow(10,-9)*u7(k)+u8(k)*u8(k)-u8(k); Java Expression: 56*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-96*Math.pow(10,-3)*57*Math.pow(10,+4)*getVariable(7,k)*19*Math.pow(10,-9)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)
Aug 30, 2024 5:47:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.071246015155048; Expression=59*Math.pow(10,-1)-u5(k)+u7(k)+60*Math.pow(10,-1)-u3(k)-99*Math.pow(10,-3)*57*Math.pow(10,-4)*u7(k)*19*Math.pow(10,-1)*u7(k)+u8(k)*u8(k)-u8(k); Java Expression: 59*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-99*Math.pow(10,-3)*57*Math.pow(10,-4)*getVariable(7,k)*19*Math.pow(10,-1)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)
Aug 30, 2024 5:49:50 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 5.071246015155048 -->> Avg.: 5.1962465055154885 -->> Std. Dev.: 0.10482383161701542

Execution time: 1412.649 seconds.



@@;59*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-99*Math.pow(10,-3)*57*Math.pow(10,-4)*getVariable(7,k)*19*Math.pow(10,-1)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k)



Run #3
========
Aug 30, 2024 5:49:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.399422368335943; Expression=38*Math.pow(10,-4)+u4(k); Java Expression: 38*Math.pow(10,-4)+getVariable(4,k)
Aug 30, 2024 5:50:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.398031720846474; Expression=48*Math.pow(10,-5)*14*Math.pow(10,-9)*u7(k)*94*Math.pow(10,-2)*u3(k)-u8(k)+u8(k)+u4(k); Java Expression: 48*Math.pow(10,-5)*14*Math.pow(10,-9)*getVariable(7,k)*94*Math.pow(10,-2)*getVariable(3,k)-getVariable(8,k)+getVariable(8,k)+getVariable(4,k)
Aug 30, 2024 5:50:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.332027370464859; Expression=51*Math.pow(10,-5)*u2(k)+u5(k); Java Expression: 51*Math.pow(10,-5)*getVariable(2,k)+getVariable(5,k)
Aug 30, 2024 5:50:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330469613661164; Expression=76*Math.pow(10,-6)+u5(k); Java Expression: 76*Math.pow(10,-6)+getVariable(5,k)
Aug 30, 2024 5:50:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330450758697781; Expression=89*Math.pow(10,-5)+u5(k); Java Expression: 89*Math.pow(10,-5)+getVariable(5,k)
Aug 30, 2024 5:50:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 5:50:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.960494444978452; Expression=36*Math.pow(10,-2)*u7(k); Java Expression: 36*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 5:50:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.780883602472543; Expression=31*Math.pow(10,-2)*u7(k); Java Expression: 31*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 5:50:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709785324194373; Expression=32*Math.pow(10,-2)*u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 5:50:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.579887333973399; Expression=32*Math.pow(10,-2)*u7(k)+u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 5:50:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.4070529324640715; Expression=31*Math.pow(10,-2)*u7(k)+u8(k); Java Expression: 31*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 5:50:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.322152680710125; Expression=32*Math.pow(10,-2)*u7(k)+u8(k)*u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:50:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.958112240713904; Expression=31*Math.pow(10,-2)*u7(k)+u8(k)*u8(k); Java Expression: 31*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:50:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.780227293319446; Expression=u8(k)+u7(k)*65*Math.pow(10,-2)-u3(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*65*Math.pow(10,-2)-getVariable(3,k)+getVariable(8,k)
Aug 30, 2024 5:50:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.402819001296455; Expression=u8(k)+u7(k)*65*Math.pow(10,-2)-u4(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*65*Math.pow(10,-2)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 5:51:01 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.402819001296455 -->> Avg.: 4.553749022322755E9 -->> Std. Dev.: 1.749717136248469E10
Aug 30, 2024 5:51:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.298082173972435; Expression=u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 5:51:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.280773457759272; Expression=u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)+10*Math.pow(10,-3)+u8(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)+10*Math.pow(10,-3)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 5:51:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.278583103114213; Expression=u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)+10*Math.pow(10,-4)+u8(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)+10*Math.pow(10,-4)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 5:51:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2783406239603465; Expression=u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)+10*Math.pow(10,-9)+u8(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)+10*Math.pow(10,-9)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 5:51:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.27809831828094; Expression=u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)-10*Math.pow(10,-4)+u8(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)-10*Math.pow(10,-4)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 5:51:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2759256175336855; Expression=u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)-10*Math.pow(10,-3)+u8(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)-10*Math.pow(10,-3)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 5:51:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.274724810276027; Expression=u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)-15*Math.pow(10,-3)+u8(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)-15*Math.pow(10,-3)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 5:51:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.272098763244758; Expression=u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)-26*Math.pow(10,-3)+u8(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)-26*Math.pow(10,-3)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 5:51:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1285495216122845; Expression=u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)-10*Math.pow(10,-1)+u8(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)-10*Math.pow(10,-1)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 5:51:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.059589976107425; Expression=u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)+10*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)+10*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:51:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.057991011588472; Expression=u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)+10*Math.pow(10,-9)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)+10*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:51:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.056411315165863; Expression=u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)-10*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)-10*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:51:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.997550014533397; Expression=u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)-10*Math.pow(10,-1)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)-10*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:51:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.994442978922107; Expression=u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)-10*Math.pow(10,-1)-94*Math.pow(10,-8)+11*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)-10*Math.pow(10,-1)-94*Math.pow(10,-8)+11*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:51:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.994442946506263; Expression=u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)-10*Math.pow(10,-1)+94*Math.pow(10,-8)+11*Math.pow(10,-2)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)-10*Math.pow(10,-1)+94*Math.pow(10,-8)+11*Math.pow(10,-2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:51:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.993701986468218; Expression=u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)-8*Math.pow(10,-1)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)-8*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:51:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.993701925641897; Expression=u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)-8*Math.pow(10,-1)-80*Math.pow(10,-6)+98*Math.pow(10,-8)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)-8*Math.pow(10,-1)-80*Math.pow(10,-6)+98*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:51:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9937019241490574; Expression=u8(k)+u7(k)*64*Math.pow(10,-2)-u4(k)-8*Math.pow(10,-1)-80*Math.pow(10,-6)-98*Math.pow(10,-8)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*64*Math.pow(10,-2)-getVariable(4,k)-8*Math.pow(10,-1)-80*Math.pow(10,-6)-98*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:52:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9452060320771425; Expression=u8(k)+u7(k)*63*Math.pow(10,-2)-u4(k)-98*Math.pow(10,-8)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*63*Math.pow(10,-2)-getVariable(4,k)-98*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:52:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.945206026704985; Expression=u8(k)+u7(k)*63*Math.pow(10,-2)-u4(k)-87*Math.pow(10,-8)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*63*Math.pow(10,-2)-getVariable(4,k)-87*Math.pow(10,-8)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:52:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.945205988464984; Expression=u8(k)+u7(k)*63*Math.pow(10,-2)-u4(k)-87*Math.pow(10,-9)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*63*Math.pow(10,-2)-getVariable(4,k)-87*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:52:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9452059799672226; Expression=u8(k)+u7(k)*63*Math.pow(10,-2)-u4(k)+87*Math.pow(10,-9)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*63*Math.pow(10,-2)-getVariable(4,k)+87*Math.pow(10,-9)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:52:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.941721163075673; Expression=u8(k)+u7(k)*63*Math.pow(10,-2)-u4(k)+87*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*63*Math.pow(10,-2)-getVariable(4,k)+87*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:52:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.941389458328108; Expression=u8(k)+u7(k)*63*Math.pow(10,-2)-u4(k)+98*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*63*Math.pow(10,-2)-getVariable(4,k)+98*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:52:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9413893491280785; Expression=u8(k)+u7(k)*63*Math.pow(10,-2)-u4(k)+98*Math.pow(10,-3)+80*Math.pow(10,-8)*47*Math.pow(10,-1)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*63*Math.pow(10,-2)-getVariable(4,k)+98*Math.pow(10,-3)+80*Math.pow(10,-8)*47*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:52:34 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 4.9413893491280785 -->> Avg.: 742736.285570262 -->> Std. Dev.: 3525163.007596349
Aug 30, 2024 5:52:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.941378552475208; Expression=u8(k)+u7(k)*63*Math.pow(10,-2)-u4(k)+98*Math.pow(10,-3)+80*Math.pow(10,-8)*47*Math.pow(10,+1)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*63*Math.pow(10,-2)-getVariable(4,k)+98*Math.pow(10,-3)+80*Math.pow(10,-8)*47*Math.pow(10,+1)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:52:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.941135584303242; Expression=u8(k)+u7(k)*63*Math.pow(10,-2)-u4(k)+98*Math.pow(10,-9)+80*Math.pow(10,-6)*47*Math.pow(10,+2)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*63*Math.pow(10,-2)-getVariable(4,k)+98*Math.pow(10,-9)+80*Math.pow(10,-6)*47*Math.pow(10,+2)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:52:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.940166348273043; Expression=u8(k)+u7(k)*63*Math.pow(10,-2)-u4(k)+33*Math.pow(10,-2)+80*Math.pow(10,-5)*47*Math.pow(10,-1)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*63*Math.pow(10,-2)-getVariable(4,k)+33*Math.pow(10,-2)+80*Math.pow(10,-5)*47*Math.pow(10,-1)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:52:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9302006544598385; Expression=u8(k)+u7(k)*52*Math.pow(10,-2)-u4(k)+10*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*52*Math.pow(10,-2)-getVariable(4,k)+10*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:53:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.918358464088348; Expression=u8(k)+u7(k)*52*Math.pow(10,-2)-u4(k)+10*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)+u8(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*52*Math.pow(10,-2)-getVariable(4,k)+10*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 5:53:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.540779287406586; Expression=u8(k)+u7(k)*52*Math.pow(10,-2)-u4(k)+10*Math.pow(10,-1)+49*Math.pow(10,-8)*22*Math.pow(10,+6)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*52*Math.pow(10,-2)-getVariable(4,k)+10*Math.pow(10,-1)+49*Math.pow(10,-8)*22*Math.pow(10,+6)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:53:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.540779287406585; Expression=u8(k)+u7(k)*52*Math.pow(10,-2)-u4(k)+10*Math.pow(10,-1)+49*Math.pow(10,+4)*22*Math.pow(10,-6)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*52*Math.pow(10,-2)-getVariable(4,k)+10*Math.pow(10,-1)+49*Math.pow(10,+4)*22*Math.pow(10,-6)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:53:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.525969674705959; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:53:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.514669399834526; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+88*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+88*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:54:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.497541564320306; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*17*Math.pow(10,+6)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*17*Math.pow(10,+6)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:54:37 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 4.497541564320306 -->> Avg.: 324.1985614387453 -->> Std. Dev.: 1060.8555149707438
Aug 30, 2024 5:54:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.497541564320304; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-1)+49*Math.pow(10,-5)*17*Math.pow(10,+3)+u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-1)+49*Math.pow(10,-5)*17*Math.pow(10,+3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:55:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.383244356698665; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*17*Math.pow(10,+6)*u8(k)-u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*17*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)
Aug 30, 2024 5:55:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.377819421897023; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+96*Math.pow(10,-1)+49*Math.pow(10,-8)*17*Math.pow(10,+6)*u8(k)-u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+96*Math.pow(10,-1)+49*Math.pow(10,-8)*17*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)
Aug 30, 2024 5:55:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.358625598178727; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-1)+48*Math.pow(10,-8)*17*Math.pow(10,+6)*u8(k)-u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-1)+48*Math.pow(10,-8)*17*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)
Aug 30, 2024 5:55:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.350993379702909; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-1)+47*Math.pow(10,-8)*17*Math.pow(10,+6)*u8(k)-u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-1)+47*Math.pow(10,-8)*17*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)
Aug 30, 2024 5:56:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.350993379702908; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-1)+47*Math.pow(10,-5)*17*Math.pow(10,+3)*u8(k)-u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-1)+47*Math.pow(10,-5)*17*Math.pow(10,+3)*getVariable(8,k)-getVariable(8,k)
Aug 30, 2024 5:56:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.346838936378224; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+98*Math.pow(10,-1)+47*Math.pow(10,-8)*17*Math.pow(10,+6)*u8(k)-u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+98*Math.pow(10,-1)+47*Math.pow(10,-8)*17*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)
Aug 30, 2024 5:56:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.333911504186329; Expression=u8(k)+u6(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*17*Math.pow(10,+6)*u8(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(6,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*17*Math.pow(10,+6)*getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 5:56:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.315880220660007; Expression=u8(k)+u6(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*u8(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(6,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 5:57:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.315202969508401; Expression=u8(k)+u6(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-1)+47*Math.pow(10,-8)*18*Math.pow(10,+6)*u8(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(6,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-1)+47*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 5:57:01 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 4.315202969508401 -->> Avg.: 14.861559394376863 -->> Std. Dev.: 21.62238447051028
Aug 30, 2024 5:57:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.3124536665836555; Expression=u8(k)+u6(k)*46*Math.pow(10,-2)-u4(k)+95*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*u8(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(6,k)*46*Math.pow(10,-2)-getVariable(4,k)+95*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 5:57:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.305870698767639; Expression=u8(k)+u6(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-1)+48*Math.pow(10,-8)*18*Math.pow(10,+6)*u8(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(6,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-1)+48*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 5:57:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.304697999609961; Expression=u8(k)+u6(k)*46*Math.pow(10,-2)-u4(k)+98*Math.pow(10,-1)+48*Math.pow(10,-8)*18*Math.pow(10,+6)*u8(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(6,k)*46*Math.pow(10,-2)-getVariable(4,k)+98*Math.pow(10,-1)+48*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 5:58:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.295465866637334; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*u8(k)-u8(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 5:59:40 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.295465866637334 -->> Avg.: 5.250300476567552 -->> Std. Dev.: 1.9787781677628336
Aug 30, 2024 6:02:46 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.295465866637334 -->> Avg.: 4.557607063060696 -->> Std. Dev.: 0.3423631029854556
Aug 30, 2024 6:05:23 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.295465866637334 -->> Avg.: 4.3952666286074145 -->> Std. Dev.: 0.17814533331665566
Aug 30, 2024 6:07:57 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.295465866637334 -->> Avg.: 4.3175290719183925 -->> Std. Dev.: 0.049770192871588625
Aug 30, 2024 6:10:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.295420837530861; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*u8(k)-u8(k)*u8(k)+14*Math.pow(10,-6)*u6(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)*getVariable(8,k)+14*Math.pow(10,-6)*getVariable(6,k)
Aug 30, 2024 6:10:52 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.295420837530861 -->> Avg.: 4.297313379253229 -->> Std. Dev.: 0.005116475130743723
Aug 30, 2024 6:10:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.295202182583058; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*u8(k)-u8(k)*u8(k)+84*Math.pow(10,-6)*u6(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)*getVariable(8,k)+84*Math.pow(10,-6)*getVariable(6,k)
Aug 30, 2024 6:11:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.294280331638186; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*u8(k)-u8(k)*u8(k)+43*Math.pow(10,-5)*u6(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-5)*getVariable(6,k)
Aug 30, 2024 6:11:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.293652012074691; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*u8(k)-u8(k)*u8(k)+67*Math.pow(10,-6)*u4(k)*u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)*getVariable(8,k)+67*Math.pow(10,-6)*getVariable(4,k)*getVariable(4,k)
Aug 30, 2024 6:11:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.293381162235276; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*u8(k)-u8(k)*u8(k)+96*Math.pow(10,-5)*u6(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)*getVariable(8,k)+96*Math.pow(10,-5)*getVariable(6,k)
Aug 30, 2024 6:11:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.287032991588441; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*u8(k)-u8(k)*u8(k)+60*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-1)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)*getVariable(8,k)+60*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:11:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.28002953699157; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-8)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*u8(k)-u8(k)*u8(k)+67*Math.pow(10,-4)*u4(k)*u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-8)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)*getVariable(8,k)+67*Math.pow(10,-4)*getVariable(4,k)*getVariable(4,k)
Aug 30, 2024 6:12:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.278923677179125; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-4)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*u8(k)-u8(k)*u8(k)+67*Math.pow(10,-4)*u4(k)*u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-4)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)*getVariable(8,k)+67*Math.pow(10,-4)*getVariable(4,k)*getVariable(4,k)
Aug 30, 2024 6:12:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.274977600119579; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+46*Math.pow(10,-3)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*u8(k)-u8(k)*u8(k)+67*Math.pow(10,-4)*u4(k)*u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+46*Math.pow(10,-3)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)*getVariable(8,k)+67*Math.pow(10,-4)*getVariable(4,k)*getVariable(4,k)
Aug 30, 2024 6:12:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.269948747880249; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-3)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*u8(k)-u8(k)*u8(k)+67*Math.pow(10,-4)*u4(k)*u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-3)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)*getVariable(8,k)+67*Math.pow(10,-4)*getVariable(4,k)*getVariable(4,k)
Aug 30, 2024 6:12:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.243688522880152; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-8)+50*Math.pow(10,-8)*18*Math.pow(10,+6)*u8(k)-u8(k)*u8(k)+67*Math.pow(10,-4)*u4(k)*u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-8)+50*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)*getVariable(8,k)+67*Math.pow(10,-4)*getVariable(4,k)*getVariable(4,k)
Aug 30, 2024 6:13:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.200426107334919; Expression=u8(k)+u7(k)*46*Math.pow(10,-2)-u4(k)+97*Math.pow(10,-2)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*u8(k)-u8(k)-u8(k)+67*Math.pow(10,-4)*u4(k)*u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-2)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)-getVariable(8,k)+67*Math.pow(10,-4)*getVariable(4,k)*getVariable(4,k)
Aug 30, 2024 6:13:49 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.200426107334919 -->> Avg.: 4.291945509933969 -->> Std. Dev.: 0.012507652808680837

Execution time: 1438.937 seconds.



@@;getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-2)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)-getVariable(8,k)+67*Math.pow(10,-4)*getVariable(4,k)*getVariable(4,k)



Run #4
========
Aug 30, 2024 6:13:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=187797.97514804968; Expression=76*Math.pow(10,-1)+9*Math.pow(10,-3)*91*Math.pow(10,+4)+u8(k)*u7(k)-u7(k)-u3(k)+u6(k)+17*Math.pow(10,+4)+29*Math.pow(10,+1)+u3(k)+u4(k)*u7(k)-u2(k)-u5(k)+u2(k)*u5(k); Java Expression: 76*Math.pow(10,-1)+9*Math.pow(10,-3)*91*Math.pow(10,+4)+getVariable(8,k)*getVariable(7,k)-getVariable(7,k)-getVariable(3,k)+getVariable(6,k)+17*Math.pow(10,+4)+29*Math.pow(10,+1)+getVariable(3,k)+getVariable(4,k)*getVariable(7,k)-getVariable(2,k)-getVariable(5,k)+getVariable(2,k)*getVariable(5,k)
Aug 30, 2024 6:13:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=139.2085148451773; Expression=50*Math.pow(10,-9)+u9(k)-u7(k)+u8(k)-u3(k); Java Expression: 50*Math.pow(10,-9)+getVariable(9,k)-getVariable(7,k)+getVariable(8,k)-getVariable(3,k)
Aug 30, 2024 6:13:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=35.37307298502272; Expression=u7(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 6:13:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=34.20395556514894; Expression=24*Math.pow(10,-4)*u9(k); Java Expression: 24*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:13:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=14.804491401624364; Expression=74*Math.pow(10,-1)+u4(k); Java Expression: 74*Math.pow(10,-1)+getVariable(4,k)
Aug 30, 2024 6:13:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.398065000117969; Expression=91*Math.pow(10,-6)+u4(k); Java Expression: 91*Math.pow(10,-6)+getVariable(4,k)
Aug 30, 2024 6:13:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330471378133048; Expression=u5(k)+u5(k)-u5(k); Java Expression: getVariable(5,k)+getVariable(5,k)-getVariable(5,k)
Aug 30, 2024 6:13:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 6:14:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.022115957332106; Expression=u8(k)-u4(k)+u7(k)-u4(k); Java Expression: getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 6:14:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.958000197847749; Expression=u8(k)-u4(k)+62*Math.pow(10,-2)-49*Math.pow(10,-5)+u7(k)-u4(k); Java Expression: getVariable(8,k)-getVariable(4,k)+62*Math.pow(10,-2)-49*Math.pow(10,-5)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 6:14:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.505065264045398; Expression=u8(k)-u5(k)+u7(k)-u4(k); Java Expression: getVariable(8,k)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 30, 2024 6:14:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388946502078; Expression=u8(k)-u5(k)+u7(k)-u3(k); Java Expression: getVariable(8,k)-getVariable(5,k)+getVariable(7,k)-getVariable(3,k)
Aug 30, 2024 6:14:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.991119283813314; Expression=u8(k)-u5(k)-2*Math.pow(10,-2)+u7(k)-39*Math.pow(10,-9)-u3(k); Java Expression: getVariable(8,k)-getVariable(5,k)-2*Math.pow(10,-2)+getVariable(7,k)-39*Math.pow(10,-9)-getVariable(3,k)
Aug 30, 2024 6:14:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.990879450449045; Expression=u8(k)-u5(k)-2*Math.pow(10,-2)+u7(k)-39*Math.pow(10,-4)-u3(k); Java Expression: getVariable(8,k)-getVariable(5,k)-2*Math.pow(10,-2)+getVariable(7,k)-39*Math.pow(10,-4)-getVariable(3,k)
Aug 30, 2024 6:14:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.981451201555257; Expression=u8(k)-u5(k)-24*Math.pow(10,-2)+u7(k)-40*Math.pow(10,-4)-u3(k); Java Expression: getVariable(8,k)-getVariable(5,k)-24*Math.pow(10,-2)+getVariable(7,k)-40*Math.pow(10,-4)-getVariable(3,k)
Aug 30, 2024 6:14:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.981146095011813; Expression=u8(k)-u5(k)-52*Math.pow(10,-2)+u7(k)-37*Math.pow(10,-4)-u3(k); Java Expression: getVariable(8,k)-getVariable(5,k)-52*Math.pow(10,-2)+getVariable(7,k)-37*Math.pow(10,-4)-getVariable(3,k)
Aug 30, 2024 6:14:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.980501415010712; Expression=u8(k)-u5(k)-54*Math.pow(10,-6)+u7(k)-29*Math.pow(10,-2)-u3(k); Java Expression: getVariable(8,k)-getVariable(5,k)-54*Math.pow(10,-6)+getVariable(7,k)-29*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 6:14:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.979672433366581; Expression=u8(k)-u5(k)-40*Math.pow(10,-2)+u7(k)-26*Math.pow(10,-4)-u3(k); Java Expression: getVariable(8,k)-getVariable(5,k)-40*Math.pow(10,-2)+getVariable(7,k)-26*Math.pow(10,-4)-getVariable(3,k)
Aug 30, 2024 6:14:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.97966768295897; Expression=u8(k)-u5(k)-40*Math.pow(10,-2)+u7(k)-15*Math.pow(10,-9)-u3(k); Java Expression: getVariable(8,k)-getVariable(5,k)-40*Math.pow(10,-2)+getVariable(7,k)-15*Math.pow(10,-9)-getVariable(3,k)
Aug 30, 2024 6:14:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.979659947608738; Expression=u8(k)-u5(k)-2*Math.pow(10,-6)+u7(k)-39*Math.pow(10,-2)-u3(k); Java Expression: getVariable(8,k)-getVariable(5,k)-2*Math.pow(10,-6)+getVariable(7,k)-39*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 6:14:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.979659942820421; Expression=u8(k)-u5(k)-89*Math.pow(10,-6)+u7(k)-39*Math.pow(10,-2)-u3(k); Java Expression: getVariable(8,k)-getVariable(5,k)-89*Math.pow(10,-6)+getVariable(7,k)-39*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 6:14:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9637900917748015; Expression=u8(k)-u5(k)-2*Math.pow(10,-1)+u7(k)-39*Math.pow(10,-3)-u3(k)-20*Math.pow(10,-4)*u1(k); Java Expression: getVariable(8,k)-getVariable(5,k)-2*Math.pow(10,-1)+getVariable(7,k)-39*Math.pow(10,-3)-getVariable(3,k)-20*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 6:14:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.934375455863571; Expression=u8(k)-u5(k)-2*Math.pow(10,-4)+u7(k)-39*Math.pow(10,-1)-u4(k)-20*Math.pow(10,-6)*u1(k); Java Expression: getVariable(8,k)-getVariable(5,k)-2*Math.pow(10,-4)+getVariable(7,k)-39*Math.pow(10,-1)-getVariable(4,k)-20*Math.pow(10,-6)*getVariable(1,k)
Aug 30, 2024 6:14:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.702986824749591; Expression=u8(k)-u5(k)-1*Math.pow(10,-2)+u7(k)+52*Math.pow(10,-1)-u3(k)-58*Math.pow(10,-3)*u1(k); Java Expression: getVariable(8,k)-getVariable(5,k)-1*Math.pow(10,-2)+getVariable(7,k)+52*Math.pow(10,-1)-getVariable(3,k)-58*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 6:14:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.664999638878292; Expression=u8(k)-u5(k)-27*Math.pow(10,-2)+u7(k)+52*Math.pow(10,-1)-u3(k)-58*Math.pow(10,-3)*u1(k); Java Expression: getVariable(8,k)-getVariable(5,k)-27*Math.pow(10,-2)+getVariable(7,k)+52*Math.pow(10,-1)-getVariable(3,k)-58*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 6:14:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.633109976465599; Expression=u8(k)-u5(k)-1*Math.pow(10,-2)+u7(k)+52*Math.pow(10,-1)-u3(k)-83*Math.pow(10,-3)*u1(k); Java Expression: getVariable(8,k)-getVariable(5,k)-1*Math.pow(10,-2)+getVariable(7,k)+52*Math.pow(10,-1)-getVariable(3,k)-83*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 6:14:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.62242582033425; Expression=u8(k)-u5(k)-87*Math.pow(10,-2)+u7(k)+52*Math.pow(10,-1)-u3(k)-58*Math.pow(10,-3)*u1(k); Java Expression: getVariable(8,k)-getVariable(5,k)-87*Math.pow(10,-2)+getVariable(7,k)+52*Math.pow(10,-1)-getVariable(3,k)-58*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 6:14:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.564732045954469; Expression=u8(k)-u5(k)-81*Math.pow(10,-2)+u7(k)+69*Math.pow(10,-1)-u3(k)-77*Math.pow(10,-3)*u1(k); Java Expression: getVariable(8,k)-getVariable(5,k)-81*Math.pow(10,-2)+getVariable(7,k)+69*Math.pow(10,-1)-getVariable(3,k)-77*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 6:15:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.558139377670168; Expression=u8(k)-u5(k)-94*Math.pow(10,-2)+u7(k)+69*Math.pow(10,-1)-u3(k)-77*Math.pow(10,-3)*u1(k); Java Expression: getVariable(8,k)-getVariable(5,k)-94*Math.pow(10,-2)+getVariable(7,k)+69*Math.pow(10,-1)-getVariable(3,k)-77*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 6:15:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.546662218382179; Expression=u8(k)-u5(k)-81*Math.pow(10,-2)+u7(k)+69*Math.pow(10,-1)-u3(k)-80*Math.pow(10,-3)*u1(k); Java Expression: getVariable(8,k)-getVariable(5,k)-81*Math.pow(10,-2)+getVariable(7,k)+69*Math.pow(10,-1)-getVariable(3,k)-80*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 6:15:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.538409348451467; Expression=u8(k)-u5(k)-1*Math.pow(10,-2)+u7(k)+63*Math.pow(10,-1)-u3(k)-83*Math.pow(10,-3)*u1(k); Java Expression: getVariable(8,k)-getVariable(5,k)-1*Math.pow(10,-2)+getVariable(7,k)+63*Math.pow(10,-1)-getVariable(3,k)-83*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 6:15:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.520996838387984; Expression=u8(k)-u5(k)-81*Math.pow(10,-2)+u7(k)+69*Math.pow(10,-1)-u4(k)-80*Math.pow(10,-3)*u7(k); Java Expression: getVariable(8,k)-getVariable(5,k)-81*Math.pow(10,-2)+getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)-80*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:15:16 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.520996838387984 -->> Avg.: 8.02480149670609E9 -->> Std. Dev.: 3.0064752792973297E10
Aug 30, 2024 6:15:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5154170387125685; Expression=u8(k)-u5(k)-1*Math.pow(10,-2)+u7(k)+52*Math.pow(10,-1)-u4(k)-83*Math.pow(10,-3)*u7(k); Java Expression: getVariable(8,k)-getVariable(5,k)-1*Math.pow(10,-2)+getVariable(7,k)+52*Math.pow(10,-1)-getVariable(4,k)-83*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:15:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.513181467297984; Expression=u8(k)-u5(k)+1*Math.pow(10,-2)+u7(k)+52*Math.pow(10,-1)-u4(k)-83*Math.pow(10,-3)*u7(k); Java Expression: getVariable(8,k)-getVariable(5,k)+1*Math.pow(10,-2)+getVariable(7,k)+52*Math.pow(10,-1)-getVariable(4,k)-83*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:15:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.486203711018002; Expression=u8(k)-u5(k)+35*Math.pow(10,-2)+u7(k)+52*Math.pow(10,-1)-u4(k)-83*Math.pow(10,-3)*u7(k); Java Expression: getVariable(8,k)-getVariable(5,k)+35*Math.pow(10,-2)+getVariable(7,k)+52*Math.pow(10,-1)-getVariable(4,k)-83*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:15:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.479083386514457; Expression=u8(k)-u5(k)-81*Math.pow(10,-2)+u7(k)+69*Math.pow(10,-1)-u4(k)-84*Math.pow(10,-3)*u7(k); Java Expression: getVariable(8,k)-getVariable(5,k)-81*Math.pow(10,-2)+getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)-84*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:15:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.47661336758611; Expression=u8(k)-u5(k)-94*Math.pow(10,-2)+u7(k)+69*Math.pow(10,-1)-u4(k)-84*Math.pow(10,-3)*u7(k); Java Expression: getVariable(8,k)-getVariable(5,k)-94*Math.pow(10,-2)+getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)-84*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:15:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.468839820097393; Expression=u8(k)-u5(k)-81*Math.pow(10,-8)+u7(k)+69*Math.pow(10,-1)-u4(k)-90*Math.pow(10,-3)*u7(k); Java Expression: getVariable(8,k)-getVariable(5,k)-81*Math.pow(10,-8)+getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)-90*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:15:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.468834661604504; Expression=u8(k)-u5(k)-81*Math.pow(10,-6)+u7(k)+69*Math.pow(10,-1)-u4(k)-90*Math.pow(10,-3)*u7(k); Java Expression: getVariable(8,k)-getVariable(5,k)-81*Math.pow(10,-6)+getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)-90*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:15:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.435472014666402; Expression=u8(k)-u5(k)+81*Math.pow(10,-2)+u7(k)+69*Math.pow(10,-1)-u4(k)-99*Math.pow(10,-3)*u7(k); Java Expression: getVariable(8,k)-getVariable(5,k)+81*Math.pow(10,-2)+getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)-99*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:15:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.433607175622383; Expression=u8(k)-u5(k)+42*Math.pow(10,-2)+u7(k)+69*Math.pow(10,-1)-u4(k)-99*Math.pow(10,-3)*u7(k); Java Expression: getVariable(8,k)-getVariable(5,k)+42*Math.pow(10,-2)+getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)-99*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:15:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.432281798599118; Expression=u8(k)-u5(k)+47*Math.pow(10,-2)+u7(k)+69*Math.pow(10,-1)-u4(k)-99*Math.pow(10,-3)*u7(k); Java Expression: getVariable(8,k)-getVariable(5,k)+47*Math.pow(10,-2)+getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)-99*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:16:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.431552671172788; Expression=u8(k)-u5(k)+51*Math.pow(10,-2)+u7(k)+69*Math.pow(10,-1)-u4(k)-99*Math.pow(10,-3)*u7(k); Java Expression: getVariable(8,k)-getVariable(5,k)+51*Math.pow(10,-2)+getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)-99*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:16:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.431298542695914; Expression=u8(k)-u5(k)+53*Math.pow(10,-2)+u7(k)+69*Math.pow(10,-1)-u4(k)-99*Math.pow(10,-3)*u7(k); Java Expression: getVariable(8,k)-getVariable(5,k)+53*Math.pow(10,-2)+getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)-99*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:16:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.430989035200995; Expression=u8(k)-u5(k)+60*Math.pow(10,-2)+u7(k)+69*Math.pow(10,-1)-u4(k)-99*Math.pow(10,-3)*u7(k); Java Expression: getVariable(8,k)-getVariable(5,k)+60*Math.pow(10,-2)+getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)-99*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:17:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.430938263448513; Expression=u8(k)-u5(k)+53*Math.pow(10,-2)+u7(k)+69*Math.pow(10,-1)-u4(k)-99*Math.pow(10,-3)*u7(k)+50*Math.pow(10,-1)*21*Math.pow(10,-5)*u5(k); Java Expression: getVariable(8,k)-getVariable(5,k)+53*Math.pow(10,-2)+getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)-99*Math.pow(10,-3)*getVariable(7,k)+50*Math.pow(10,-1)*21*Math.pow(10,-5)*getVariable(5,k)
Aug 30, 2024 6:17:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.430843624352443; Expression=u8(k)-u5(k)+53*Math.pow(10,-2)+u7(k)+69*Math.pow(10,-1)-u4(k)-99*Math.pow(10,-3)*u7(k)+50*Math.pow(10,-1)*90*Math.pow(10,-5)*u8(k); Java Expression: getVariable(8,k)-getVariable(5,k)+53*Math.pow(10,-2)+getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)-99*Math.pow(10,-3)*getVariable(7,k)+50*Math.pow(10,-1)*90*Math.pow(10,-5)*getVariable(8,k)
Aug 30, 2024 6:17:17 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.430843624352443 -->> Avg.: 1347378.4736392833 -->> Std. Dev.: 6831358.3401082475
Aug 30, 2024 6:17:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.426597007717289; Expression=u8(k)-u5(k)+53*Math.pow(10,-2)+u7(k)+69*Math.pow(10,-1)-u4(k)-99*Math.pow(10,-3)*u7(k)+50*Math.pow(10,-1)*49*Math.pow(10,-5)*u9(k); Java Expression: getVariable(8,k)-getVariable(5,k)+53*Math.pow(10,-2)+getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)-99*Math.pow(10,-3)*getVariable(7,k)+50*Math.pow(10,-1)*49*Math.pow(10,-5)*getVariable(9,k)
Aug 30, 2024 6:17:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.329241118954877; Expression=u8(k)-u5(k)+81*Math.pow(10,-2)*u7(k)+69*Math.pow(10,-1)-u4(k)+99*Math.pow(10,-3)*u6(k); Java Expression: getVariable(8,k)-getVariable(5,k)+81*Math.pow(10,-2)*getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)+99*Math.pow(10,-3)*getVariable(6,k)
Aug 30, 2024 6:17:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2968571885275075; Expression=u8(k)-u5(k)+81*Math.pow(10,-2)*u7(k)+74*Math.pow(10,-1)-u4(k)+99*Math.pow(10,-3)*u6(k); Java Expression: getVariable(8,k)-getVariable(5,k)+81*Math.pow(10,-2)*getVariable(7,k)+74*Math.pow(10,-1)-getVariable(4,k)+99*Math.pow(10,-3)*getVariable(6,k)
Aug 30, 2024 6:18:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.296024273924239; Expression=u8(k)-u5(k)+81*Math.pow(10,-2)*u7(k)+75*Math.pow(10,-1)-u4(k)+99*Math.pow(10,-3)*u6(k); Java Expression: getVariable(8,k)-getVariable(5,k)+81*Math.pow(10,-2)*getVariable(7,k)+75*Math.pow(10,-1)-getVariable(4,k)+99*Math.pow(10,-3)*getVariable(6,k)
Aug 30, 2024 6:19:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2943166237492605; Expression=u8(k)-u5(k)+81*Math.pow(10,-2)*u7(k)+75*Math.pow(10,-1)-u4(k)+98*Math.pow(10,-3)*u6(k); Java Expression: getVariable(8,k)-getVariable(5,k)+81*Math.pow(10,-2)*getVariable(7,k)+75*Math.pow(10,-1)-getVariable(4,k)+98*Math.pow(10,-3)*getVariable(6,k)
Aug 30, 2024 6:19:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2935581097707125; Expression=u8(k)-u5(k)+81*Math.pow(10,-2)*u7(k)+76*Math.pow(10,-1)-u4(k)+98*Math.pow(10,-3)*u6(k); Java Expression: getVariable(8,k)-getVariable(5,k)+81*Math.pow(10,-2)*getVariable(7,k)+76*Math.pow(10,-1)-getVariable(4,k)+98*Math.pow(10,-3)*getVariable(6,k)
Aug 30, 2024 6:19:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.232682559458325; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+69*Math.pow(10,-1)-u4(k)+99*Math.pow(10,-3)*u6(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)+99*Math.pow(10,-3)*getVariable(6,k)
Aug 30, 2024 6:19:39 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.232682559458325 -->> Avg.: 775.7569678699308 -->> Std. Dev.: 2263.1335319434265
Aug 30, 2024 6:20:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.975858032059205; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+69*Math.pow(10,-1)-u4(k)+99*Math.pow(10,-3)*u7(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)+99*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:20:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.947286068944881; Expression=u8(k)*u8(k)+48*Math.pow(10,-2)*u7(k)+69*Math.pow(10,-1)-u4(k)+99*Math.pow(10,-3)*u6(k); Java Expression: getVariable(8,k)*getVariable(8,k)+48*Math.pow(10,-2)*getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)+99*Math.pow(10,-3)*getVariable(6,k)
Aug 30, 2024 6:20:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.912550305107126; Expression=u8(k)*u8(k)+55*Math.pow(10,-2)*u7(k)+69*Math.pow(10,-1)-u4(k)+99*Math.pow(10,-3)*u5(k); Java Expression: getVariable(8,k)*getVariable(8,k)+55*Math.pow(10,-2)*getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)+99*Math.pow(10,-3)*getVariable(5,k)
Aug 30, 2024 6:20:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.860833821937354; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+75*Math.pow(10,-1)-u4(k)+99*Math.pow(10,-3)*u7(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+75*Math.pow(10,-1)-getVariable(4,k)+99*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:20:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.848188273572857; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+83*Math.pow(10,-1)-u4(k)+99*Math.pow(10,-3)*u6(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+83*Math.pow(10,-1)-getVariable(4,k)+99*Math.pow(10,-3)*getVariable(6,k)
Aug 30, 2024 6:20:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.83898254866131; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+96*Math.pow(10,-1)-u4(k)+99*Math.pow(10,-3)*u6(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+96*Math.pow(10,-1)-getVariable(4,k)+99*Math.pow(10,-3)*getVariable(6,k)
Aug 30, 2024 6:20:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.799678210045376; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+90*Math.pow(10,-1)-u4(k)+99*Math.pow(10,-3)*u6(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+90*Math.pow(10,-1)-getVariable(4,k)+99*Math.pow(10,-3)*getVariable(6,k)
Aug 30, 2024 6:20:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.6785145669405495; Expression=u8(k)*u8(k)+48*Math.pow(10,-2)*u7(k)+69*Math.pow(10,-1)-u4(k)+u6(k)*99*Math.pow(10,-3)+u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+48*Math.pow(10,-2)*getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*99*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:20:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.646511862813258; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+69*Math.pow(10,-1)-u4(k)+u6(k)*99*Math.pow(10,-3)+u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*99*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:20:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.6312699699260955; Expression=u8(k)*u8(k)+48*Math.pow(10,-2)*u7(k)+69*Math.pow(10,-1)-u4(k)+u6(k)*90*Math.pow(10,-3)+u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+48*Math.pow(10,-2)*getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*90*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:20:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.627472766770308; Expression=u8(k)*u8(k)+48*Math.pow(10,-2)*u7(k)+69*Math.pow(10,-1)-u4(k)+u6(k)*92*Math.pow(10,-3)+u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+48*Math.pow(10,-2)*getVariable(7,k)+69*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*92*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:20:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.608845827529433; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+76*Math.pow(10,-1)-u4(k)+u6(k)*98*Math.pow(10,-3)+u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+76*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*98*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:21:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.5182405348797126; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+76*Math.pow(10,-1)-u4(k)+u6(k)*98*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+76*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*98*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:22:08 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 4.5182405348797126 -->> Avg.: 17.708675599947785 -->> Std. Dev.: 28.11316937857197
Aug 30, 2024 6:22:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.385026139350683; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+66*Math.pow(10,-1)-u4(k)+u6(k)*98*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+66*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*98*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:22:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.362181990270268; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+76*Math.pow(10,-1)-u4(k)+u6(k)*81*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+76*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*81*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:23:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.351412174406288; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+76*Math.pow(10,-1)-u4(k)+u6(k)*88*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+76*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*88*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:23:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.3416039860536495; Expression=u8(k)*u8(k)+46*Math.pow(10,-2)*u7(k)+76*Math.pow(10,-1)-u4(k)+u6(k)*98*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+46*Math.pow(10,-2)*getVariable(7,k)+76*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*98*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:23:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.336492446926768; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*81*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*81*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:23:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.330923600024087; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+80*Math.pow(10,-1)-u4(k)+u6(k)*81*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+80*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*81*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:24:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.329091473479073; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+82*Math.pow(10,-1)-u4(k)+u6(k)*81*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+82*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*81*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:24:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.320784048849813; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*78*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*78*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:24:38 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.320784048849813 -->> Avg.: 5.569879297332605 -->> Std. Dev.: 2.296470883783467
Aug 30, 2024 6:25:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.31993232109483; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*77*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*77*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:26:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.3182229905113045; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+85*Math.pow(10,-1)-u4(k)+u6(k)*77*Math.pow(10,-3)+u8(k)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+85*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*77*Math.pow(10,-3)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:26:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.258184217767635; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*36*Math.pow(10,-3)+43*Math.pow(10,-1)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*36*Math.pow(10,-3)+43*Math.pow(10,-1)*getVariable(8,k)
Aug 30, 2024 6:27:21 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.258184217767635 -->> Avg.: 4.856000060112571 -->> Std. Dev.: 0.49115331678115687
Aug 30, 2024 6:28:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.257426979640626; Expression=u8(k)+u8(k)+47*Math.pow(10,-2)*u7(k)+81*Math.pow(10,-1)-u4(k)+u6(k)*36*Math.pow(10,-3)+43*Math.pow(10,-1)*u8(k); Java Expression: getVariable(8,k)+getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+81*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*36*Math.pow(10,-3)+43*Math.pow(10,-1)*getVariable(8,k)
Aug 30, 2024 6:28:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.255795654512285; Expression=u8(k)*u8(k)+47*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u9(k)*84*Math.pow(10,-3)+43*Math.pow(10,-1)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(9,k)*84*Math.pow(10,-3)+43*Math.pow(10,-1)*getVariable(8,k)
Aug 30, 2024 6:28:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.232230721722748; Expression=u8(k)+u8(k)+47*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u9(k)*84*Math.pow(10,-3)+43*Math.pow(10,-1)*u8(k); Java Expression: getVariable(8,k)+getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(9,k)*84*Math.pow(10,-3)+43*Math.pow(10,-1)*getVariable(8,k)
Aug 30, 2024 6:29:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.22677380253966; Expression=u8(k)+u8(k)+47*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u9(k)*78*Math.pow(10,-3)+43*Math.pow(10,-1)*u8(k); Java Expression: getVariable(8,k)+getVariable(8,k)+47*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(9,k)*78*Math.pow(10,-3)+43*Math.pow(10,-1)*getVariable(8,k)
Aug 30, 2024 6:29:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.189320561212688; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*84*Math.pow(10,-3)+43*Math.pow(10,-1)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*84*Math.pow(10,-3)+43*Math.pow(10,-1)*getVariable(8,k)
Aug 30, 2024 6:30:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.173838492749667; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*84*Math.pow(10,-3)+41*Math.pow(10,-1)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*84*Math.pow(10,-3)+41*Math.pow(10,-1)*getVariable(8,k)
Aug 30, 2024 6:30:15 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.173838492749667 -->> Avg.: 4.6156548291471475 -->> Std. Dev.: 0.4313829139571119
Aug 30, 2024 6:30:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.1729254270492095; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*83*Math.pow(10,-3)+41*Math.pow(10,-1)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*83*Math.pow(10,-3)+41*Math.pow(10,-1)*getVariable(8,k)
Aug 30, 2024 6:31:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.172871041373606; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+85*Math.pow(10,-1)-u4(k)+u6(k)*83*Math.pow(10,-3)+41*Math.pow(10,-1)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+85*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*83*Math.pow(10,-3)+41*Math.pow(10,-1)*getVariable(8,k)
Aug 30, 2024 6:31:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.171468075609267; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+43*Math.pow(10,-1)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+43*Math.pow(10,-1)*getVariable(8,k)
Aug 30, 2024 6:32:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.171468060189516; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*43*Math.pow(10,-1)+12*Math.pow(10,-5)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*43*Math.pow(10,-1)+12*Math.pow(10,-5)*getVariable(8,k)
Aug 30, 2024 6:33:01 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.171468060189516 -->> Avg.: 4.390328735624225 -->> Std. Dev.: 0.272771387649532
Aug 30, 2024 6:33:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.171468055999913; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*43*Math.pow(10,-1)+36*Math.pow(10,-5)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*43*Math.pow(10,-1)+36*Math.pow(10,-5)*getVariable(8,k)
Aug 30, 2024 6:33:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.17146805458039; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*43*Math.pow(10,-1)+33*Math.pow(10,-5)*u8(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*43*Math.pow(10,-1)+33*Math.pow(10,-5)*getVariable(8,k)
Aug 30, 2024 6:33:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.171467890986631; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*43*Math.pow(10,-1)+97*Math.pow(10,-9)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*43*Math.pow(10,-1)+97*Math.pow(10,-9)*getVariable(9,k)
Aug 30, 2024 6:33:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.171387326938526; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*43*Math.pow(10,-1)+12*Math.pow(10,-5)*u4(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*43*Math.pow(10,-1)+12*Math.pow(10,-5)*getVariable(4,k)
Aug 30, 2024 6:33:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.171357572533201; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*43*Math.pow(10,-1)+84*Math.pow(10,-5)*u3(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*43*Math.pow(10,-1)+84*Math.pow(10,-5)*getVariable(3,k)
Aug 30, 2024 6:33:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.170955093614456; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*43*Math.pow(10,-1)+96*Math.pow(10,-5)*u4(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*43*Math.pow(10,-1)+96*Math.pow(10,-5)*getVariable(4,k)
Aug 30, 2024 6:34:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.170874356955837; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*43*Math.pow(10,-1)+12*Math.pow(10,-4)*u4(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*43*Math.pow(10,-1)+12*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 6:34:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.169804106379653; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*43*Math.pow(10,-1)+97*Math.pow(10,-5)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*43*Math.pow(10,-1)+97*Math.pow(10,-5)*getVariable(9,k)
Aug 30, 2024 6:34:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.169463050972335; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*43*Math.pow(10,-1)+12*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*43*Math.pow(10,-1)+12*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:34:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.167298453721323; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*43*Math.pow(10,-1)+33*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*43*Math.pow(10,-1)+33*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:34:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.167076971302625; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*43*Math.pow(10,-1)+61*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*43*Math.pow(10,-1)+61*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:34:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.16699176456183; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*43*Math.pow(10,-1)+59*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*43*Math.pow(10,-1)+59*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:35:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.166957491779037; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*43*Math.pow(10,-1)+40*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*43*Math.pow(10,-1)+40*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:35:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.166816768391999; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*43*Math.pow(10,-1)+46*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*43*Math.pow(10,-1)+46*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:35:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.161714222407711; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*42*Math.pow(10,-1)+60*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*42*Math.pow(10,-1)+60*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:35:59 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.161714222407711 -->> Avg.: 4.256419667819328 -->> Std. Dev.: 0.09328475512663785
Aug 30, 2024 6:36:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.160646639686312; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*42*Math.pow(10,-1)+76*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*42*Math.pow(10,-1)+76*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:36:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.160575178836613; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*42*Math.pow(10,-1)+92*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*42*Math.pow(10,-1)+92*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:36:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.160529627395654; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*42*Math.pow(10,-1)+90*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*42*Math.pow(10,-1)+90*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:36:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.160517286293536; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*42*Math.pow(10,-1)+81*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*42*Math.pow(10,-1)+81*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:36:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.160490487785571; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*42*Math.pow(10,-1)+87*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*42*Math.pow(10,-1)+87*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:36:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.159769990847262; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+84*Math.pow(10,-1)-u4(k)+u6(k)*77*Math.pow(10,-3)+u8(k)*42*Math.pow(10,-1)+81*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+84*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*77*Math.pow(10,-3)+getVariable(8,k)*42*Math.pow(10,-1)+81*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:37:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.159384540137727; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+83*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*42*Math.pow(10,-1)+76*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+83*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*42*Math.pow(10,-1)+76*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:37:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.157664500563454; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+83*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*42*Math.pow(10,-1)+95*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+83*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*42*Math.pow(10,-1)+95*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:38:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.157565188154153; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+83*Math.pow(10,-1)-u4(k)+u6(k)*80*Math.pow(10,-3)+u8(k)*42*Math.pow(10,-1)+97*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+83*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*80*Math.pow(10,-3)+getVariable(8,k)*42*Math.pow(10,-1)+97*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:38:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.156571023365161; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+86*Math.pow(10,-1)-u4(k)+u6(k)*77*Math.pow(10,-3)+u8(k)*42*Math.pow(10,-1)+81*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+86*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*77*Math.pow(10,-3)+getVariable(8,k)*42*Math.pow(10,-1)+81*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:38:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.1556407144727405; Expression=u8(k)*u8(k)+43*Math.pow(10,-2)*u7(k)+86*Math.pow(10,-1)-u4(k)+u6(k)*77*Math.pow(10,-3)+u8(k)*42*Math.pow(10,-1)+93*Math.pow(10,-4)*u9(k); Java Expression: getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+86*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*77*Math.pow(10,-3)+getVariable(8,k)*42*Math.pow(10,-1)+93*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 6:38:58 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.1556407144727405 -->> Avg.: 4.211266260897771 -->> Std. Dev.: 0.060222831723301125

Execution time: 1509.3 seconds.



@@;getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+86*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*77*Math.pow(10,-3)+getVariable(8,k)*42*Math.pow(10,-1)+93*Math.pow(10,-4)*getVariable(9,k)



Run #5
========
Aug 30, 2024 6:39:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=176.73006014011307; Expression=u8(k)-u3(k)-u7(k); Java Expression: getVariable(8,k)-getVariable(3,k)-getVariable(7,k)
Aug 30, 2024 6:39:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=34.29410715618585; Expression=u9(k)-u9(k); Java Expression: getVariable(9,k)-getVariable(9,k)
Aug 30, 2024 6:39:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=15.55622945041116; Expression=u7(k)-u1(k); Java Expression: getVariable(7,k)-getVariable(1,k)
Aug 30, 2024 6:39:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=12.308402173465213; Expression=22*Math.pow(10,-9)+u3(k); Java Expression: 22*Math.pow(10,-9)+getVariable(3,k)
Aug 30, 2024 6:39:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.401107403628263; Expression=84*Math.pow(10,-4)+u4(k); Java Expression: 84*Math.pow(10,-4)+getVariable(4,k)
Aug 30, 2024 6:39:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.398053659997672; Expression=6*Math.pow(10,-5)+u4(k); Java Expression: 6*Math.pow(10,-5)+getVariable(4,k)
Aug 30, 2024 6:39:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.3014855933376; Expression=57*Math.pow(10,-6)+u8(k)*67*Math.pow(10,-3)+u5(k); Java Expression: 57*Math.pow(10,-6)+getVariable(8,k)*67*Math.pow(10,-3)+getVariable(5,k)
Aug 30, 2024 6:39:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 6:39:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.029108899325577; Expression=u8(k)+u5(k)-u2(k)*u1(k)*26*Math.pow(10,-9)*u6(k); Java Expression: getVariable(8,k)+getVariable(5,k)-getVariable(2,k)*getVariable(1,k)*26*Math.pow(10,-9)*getVariable(6,k)
Aug 30, 2024 6:39:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.009020206580576; Expression=u8(k)+u5(k)-u2(k)*u1(k)*90*Math.pow(10,-9)*u6(k); Java Expression: getVariable(8,k)+getVariable(5,k)-getVariable(2,k)*getVariable(1,k)*90*Math.pow(10,-9)*getVariable(6,k)
Aug 30, 2024 6:39:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.998125947553435; Expression=u8(k)+u5(k)-90*Math.pow(10,-9)*u2(k)*31*Math.pow(10,+1)*u4(k); Java Expression: getVariable(8,k)+getVariable(5,k)-90*Math.pow(10,-9)*getVariable(2,k)*31*Math.pow(10,+1)*getVariable(4,k)
Aug 30, 2024 6:39:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.9920172326768455; Expression=u8(k)+u5(k)-u2(k)*u2(k)*79*Math.pow(10,-9)*u6(k); Java Expression: getVariable(8,k)+getVariable(5,k)-getVariable(2,k)*getVariable(2,k)*79*Math.pow(10,-9)*getVariable(6,k)
Aug 30, 2024 6:39:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.085217047834099; Expression=35*Math.pow(10,-3)-u4(k)-u5(k)+u7(k); Java Expression: 35*Math.pow(10,-3)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 6:39:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.084991833600476; Expression=34*Math.pow(10,-3)-u4(k)-u5(k)+u7(k); Java Expression: 34*Math.pow(10,-3)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 6:39:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077504435121403; Expression=35*Math.pow(10,-5)-u4(k)-u5(k)+u7(k); Java Expression: 35*Math.pow(10,-5)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 6:39:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077435181703012; Expression=35*Math.pow(10,-6)-u4(k)-u5(k)+u7(k); Java Expression: 35*Math.pow(10,-6)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 6:39:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077434961875619; Expression=34*Math.pow(10,-6)-u4(k)-u5(k)+u7(k); Java Expression: 34*Math.pow(10,-6)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 6:39:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427499268591; Expression=52*Math.pow(10,-9)-u4(k)-u5(k)+u7(k); Java Expression: 52*Math.pow(10,-9)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 6:39:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427495531625; Expression=35*Math.pow(10,-9)-u4(k)-u5(k)+u7(k); Java Expression: 35*Math.pow(10,-9)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 6:39:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427489816257; Expression=9*Math.pow(10,-9)-u4(k)-u5(k)+u7(k); Java Expression: 9*Math.pow(10,-9)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 6:39:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427489376608; Expression=7*Math.pow(10,-9)-u4(k)-u5(k)+u7(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 6:39:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427488497324; Expression=3*Math.pow(10,-9)-u4(k)-u5(k)+u7(k); Java Expression: 3*Math.pow(10,-9)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 6:39:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0774274880576815; Expression=1*Math.pow(10,-9)-u4(k)-u5(k)+u7(k); Java Expression: 1*Math.pow(10,-9)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 30, 2024 6:39:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0581430994691114; Expression=3*Math.pow(10,-9)-u4(k)-u5(k)+u7(k)-u8(k); Java Expression: 3*Math.pow(10,-9)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(8,k)
Aug 30, 2024 6:39:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388946697509; Expression=3*Math.pow(10,-9)-u3(k)-u5(k)+u7(k)+u8(k); Java Expression: 3*Math.pow(10,-9)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:39:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388946567221; Expression=1*Math.pow(10,-9)-u3(k)-u5(k)+u7(k)+u8(k); Java Expression: 1*Math.pow(10,-9)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:40:27 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.992388946567221 -->> Avg.: 9.692854283594793E9 -->> Std. Dev.: 4.295741507587304E10
Aug 30, 2024 6:41:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992149053281528; Expression=94*Math.pow(10,-9)-u3(k)-37*Math.pow(10,-4)-u5(k)+u7(k)+u8(k); Java Expression: 94*Math.pow(10,-9)-getVariable(3,k)-37*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:41:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.991949808165893; Expression=94*Math.pow(10,-9)-u3(k)-68*Math.pow(10,-4)-u5(k)+u7(k)+u8(k); Java Expression: 94*Math.pow(10,-9)-getVariable(3,k)-68*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:41:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.991944041472471; Expression=1*Math.pow(10,-5)-u3(k)-69*Math.pow(10,-4)-u5(k)+u7(k)+u8(k); Java Expression: 1*Math.pow(10,-5)-getVariable(3,k)-69*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:41:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.987401511555979; Expression=12*Math.pow(10,-9)-u3(k)-86*Math.pow(10,-3)-u5(k)+u7(k)+u8(k); Java Expression: 12*Math.pow(10,-9)-getVariable(3,k)-86*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:41:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.986669839101526; Expression=94*Math.pow(10,-9)-u3(k)-68*Math.pow(10,-2)-u5(k)+u7(k)+u8(k); Java Expression: 94*Math.pow(10,-9)-getVariable(3,k)-68*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:41:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.979694647618095; Expression=94*Math.pow(10,-9)-u3(k)-37*Math.pow(10,-2)-u5(k)+u7(k)+u8(k); Java Expression: 94*Math.pow(10,-9)-getVariable(3,k)-37*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:41:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.979694647594226; Expression=87*Math.pow(10,-9)-u3(k)-37*Math.pow(10,-2)-u5(k)+u7(k)+u8(k); Java Expression: 87*Math.pow(10,-9)-getVariable(3,k)-37*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:41:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.979692141385453; Expression=1*Math.pow(10,-8)-u3(k)-41*Math.pow(10,-2)-u5(k)+u7(k)+u8(k); Java Expression: 1*Math.pow(10,-8)-getVariable(3,k)-41*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:41:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.842561106779589; Expression=62*Math.pow(10,-9)-u4(k)-29*Math.pow(10,-1)-u5(k)+u7(k)+u8(k); Java Expression: 62*Math.pow(10,-9)-getVariable(4,k)-29*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:41:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.842556938446464; Expression=62*Math.pow(10,-5)-u4(k)-29*Math.pow(10,-1)-u5(k)+u7(k)+u8(k); Java Expression: 62*Math.pow(10,-5)-getVariable(4,k)-29*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:41:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.842459800841903; Expression=2*Math.pow(10,-2)-u4(k)-29*Math.pow(10,-1)-u5(k)+u7(k)+u8(k); Java Expression: 2*Math.pow(10,-2)-getVariable(4,k)-29*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:42:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8424348212880375; Expression=3*Math.pow(10,-2)-u4(k)-29*Math.pow(10,-1)-u5(k)+u7(k)+u8(k); Java Expression: 3*Math.pow(10,-2)-getVariable(4,k)-29*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:42:05 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.8424348212880375 -->> Avg.: 1199772.876241678 -->> Std. Dev.: 6150240.080091903
Aug 30, 2024 6:42:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.799569729994608; Expression=1*Math.pow(10,-2)-u4(k)-11*Math.pow(10,-1)*u5(k)+u7(k)+u8(k); Java Expression: 1*Math.pow(10,-2)-getVariable(4,k)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:42:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.797418152251048; Expression=84*Math.pow(10,-2)-u4(k)-11*Math.pow(10,-1)*u5(k)+u7(k)+u8(k); Java Expression: 84*Math.pow(10,-2)-getVariable(4,k)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:42:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783916143248724; Expression=38*Math.pow(10,-2)-u4(k)-11*Math.pow(10,-1)*u5(k)+u7(k)+u8(k); Java Expression: 38*Math.pow(10,-2)-getVariable(4,k)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:42:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7839154955737015; Expression=50*Math.pow(10,-2)-u4(k)-11*Math.pow(10,-1)*u5(k)+u7(k)+u8(k); Java Expression: 50*Math.pow(10,-2)-getVariable(4,k)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:42:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783743139475853; Expression=40*Math.pow(10,-2)-u4(k)-11*Math.pow(10,-1)*u5(k)+u7(k)+u8(k); Java Expression: 40*Math.pow(10,-2)-getVariable(4,k)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:42:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783606737483164; Expression=40*Math.pow(10,-2)-u4(k)-11*Math.pow(10,-1)*u5(k)+u7(k)+45*Math.pow(10,-3)+u8(k); Java Expression: 40*Math.pow(10,-2)-getVariable(4,k)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)+45*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:42:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783605964819482; Expression=40*Math.pow(10,-2)-u4(k)-11*Math.pow(10,-1)*u5(k)+u7(k)+44*Math.pow(10,-3)+u8(k); Java Expression: 40*Math.pow(10,-2)-getVariable(4,k)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)+44*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:43:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783604603189547; Expression=40*Math.pow(10,-2)-u4(k)-11*Math.pow(10,-1)*u5(k)+u7(k)+40*Math.pow(10,-3)+u8(k); Java Expression: 40*Math.pow(10,-2)-getVariable(4,k)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)+40*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 6:43:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783604603189546; Expression=44*Math.pow(10,-2)-u4(k)-11*Math.pow(10,-1)*u5(k)+u7(k)+u8(k); Java Expression: 44*Math.pow(10,-2)-getVariable(4,k)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 30, 2024 6:43:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7836046031874; Expression=44*Math.pow(10,-2)-u4(k)-11*Math.pow(10,-1)*u5(k)+u7(k)+40*Math.pow(10,-8)+u8(k); Java Expression: 44*Math.pow(10,-2)-getVariable(4,k)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)+40*Math.pow(10,-8)+getVariable(8,k)
Aug 30, 2024 6:43:51 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.7836046031874 -->> Avg.: 333.15041127848843 -->> Std. Dev.: 1064.5480768093523
Aug 30, 2024 6:43:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.78360460318634; Expression=44*Math.pow(10,-2)-u4(k)-11*Math.pow(10,-1)*u5(k)+u7(k)+60*Math.pow(10,-8)+u8(k); Java Expression: 44*Math.pow(10,-2)-getVariable(4,k)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-8)+getVariable(8,k)
Aug 30, 2024 6:43:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783604603185932; Expression=44*Math.pow(10,-2)-u4(k)-11*Math.pow(10,-1)*u5(k)+u7(k)+68*Math.pow(10,-8)+u8(k); Java Expression: 44*Math.pow(10,-2)-getVariable(4,k)-11*Math.pow(10,-1)*getVariable(5,k)+getVariable(7,k)+68*Math.pow(10,-8)+getVariable(8,k)
Aug 30, 2024 6:44:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7835768043843565; Expression=44*Math.pow(10,-2)-u4(k)-u5(k)*11*Math.pow(10,-1)+u7(k)+u8(k)+68*Math.pow(10,-8)*u9(k)*u3(k); Java Expression: 44*Math.pow(10,-2)-getVariable(4,k)-getVariable(5,k)*11*Math.pow(10,-1)+getVariable(7,k)+getVariable(8,k)+68*Math.pow(10,-8)*getVariable(9,k)*getVariable(3,k)
Aug 30, 2024 6:44:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783571105616863; Expression=44*Math.pow(10,-2)-u4(k)-u5(k)*11*Math.pow(10,-1)+u7(k)+u8(k)+82*Math.pow(10,-8)*u9(k)*u3(k); Java Expression: 44*Math.pow(10,-2)-getVariable(4,k)-getVariable(5,k)*11*Math.pow(10,-1)+getVariable(7,k)+getVariable(8,k)+82*Math.pow(10,-8)*getVariable(9,k)*getVariable(3,k)
Aug 30, 2024 6:44:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.781802700511916; Expression=44*Math.pow(10,-2)-u4(k)-u5(k)*11*Math.pow(10,-1)+u7(k)+u8(k)+68*Math.pow(10,-6)*u9(k)*u3(k); Java Expression: 44*Math.pow(10,-2)-getVariable(4,k)-getVariable(5,k)*11*Math.pow(10,-1)+getVariable(7,k)+getVariable(8,k)+68*Math.pow(10,-6)*getVariable(9,k)*getVariable(3,k)
Aug 30, 2024 6:44:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.781671293761374; Expression=44*Math.pow(10,-2)-u4(k)-u5(k)*11*Math.pow(10,-1)+u7(k)+u8(k)+83*Math.pow(10,-6)*u9(k)*u3(k); Java Expression: 44*Math.pow(10,-2)-getVariable(4,k)-getVariable(5,k)*11*Math.pow(10,-1)+getVariable(7,k)+getVariable(8,k)+83*Math.pow(10,-6)*getVariable(9,k)*getVariable(3,k)
Aug 30, 2024 6:44:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.781640542609733; Expression=44*Math.pow(10,-2)-u4(k)-u5(k)*11*Math.pow(10,-1)+u7(k)+u8(k)+91*Math.pow(10,-6)*u9(k)*u3(k); Java Expression: 44*Math.pow(10,-2)-getVariable(4,k)-getVariable(5,k)*11*Math.pow(10,-1)+getVariable(7,k)+getVariable(8,k)+91*Math.pow(10,-6)*getVariable(9,k)*getVariable(3,k)
Aug 30, 2024 6:44:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.776753523954359; Expression=44*Math.pow(10,-2)-u4(k)-u5(k)*11*Math.pow(10,-1)+u7(k)+u8(k)+68*Math.pow(10,-6)*u9(k)*u9(k); Java Expression: 44*Math.pow(10,-2)-getVariable(4,k)-getVariable(5,k)*11*Math.pow(10,-1)+getVariable(7,k)+getVariable(8,k)+68*Math.pow(10,-6)*getVariable(9,k)*getVariable(9,k)
Aug 30, 2024 6:44:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.774759372037049; Expression=44*Math.pow(10,-2)-u4(k)-u5(k)*11*Math.pow(10,-1)+u7(k)+u8(k)+96*Math.pow(10,-6)*u9(k)*u9(k); Java Expression: 44*Math.pow(10,-2)-getVariable(4,k)-getVariable(5,k)*11*Math.pow(10,-1)+getVariable(7,k)+getVariable(8,k)+96*Math.pow(10,-6)*getVariable(9,k)*getVariable(9,k)
Aug 30, 2024 6:44:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7698430270111025; Expression=44*Math.pow(10,-8)-u4(k)-u5(k)*11*Math.pow(10,-1)+u7(k)+u8(k)+96*Math.pow(10,-6)*u9(k)*u2(k); Java Expression: 44*Math.pow(10,-8)-getVariable(4,k)-getVariable(5,k)*11*Math.pow(10,-1)+getVariable(7,k)+getVariable(8,k)+96*Math.pow(10,-6)*getVariable(9,k)*getVariable(2,k)
Aug 30, 2024 6:45:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.769790090472304; Expression=44*Math.pow(10,-2)-u4(k)-u5(k)*11*Math.pow(10,-1)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u6(k); Java Expression: 44*Math.pow(10,-2)-getVariable(4,k)-getVariable(5,k)*11*Math.pow(10,-1)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(6,k)
Aug 30, 2024 6:45:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.76966866041826; Expression=44*Math.pow(10,-8)-u4(k)-u5(k)*11*Math.pow(10,-1)+u7(k)+u8(k)+91*Math.pow(10,-6)*u9(k)*u2(k); Java Expression: 44*Math.pow(10,-8)-getVariable(4,k)-getVariable(5,k)*11*Math.pow(10,-1)+getVariable(7,k)+getVariable(8,k)+91*Math.pow(10,-6)*getVariable(9,k)*getVariable(2,k)
Aug 30, 2024 6:45:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.768944648320633; Expression=44*Math.pow(10,-2)-u4(k)-u5(k)*11*Math.pow(10,-1)+u7(k)+u8(k)-26*Math.pow(10,-6)*u7(k)*u6(k); Java Expression: 44*Math.pow(10,-2)-getVariable(4,k)-getVariable(5,k)*11*Math.pow(10,-1)+getVariable(7,k)+getVariable(8,k)-26*Math.pow(10,-6)*getVariable(7,k)*getVariable(6,k)
Aug 30, 2024 6:45:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.751968072343694; Expression=64*Math.pow(10,-2)-u4(k)-u5(k)*11*Math.pow(10,-1)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u6(k); Java Expression: 64*Math.pow(10,-2)-getVariable(4,k)-getVariable(5,k)*11*Math.pow(10,-1)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(6,k)
Aug 30, 2024 6:45:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.742255381802325; Expression=81*Math.pow(10,-2)-u4(k)-u5(k)*11*Math.pow(10,-1)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u6(k); Java Expression: 81*Math.pow(10,-2)-getVariable(4,k)-getVariable(5,k)*11*Math.pow(10,-1)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(6,k)
Aug 30, 2024 6:45:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.738887207326181; Expression=91*Math.pow(10,-2)-u4(k)-u5(k)*11*Math.pow(10,-1)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u6(k); Java Expression: 91*Math.pow(10,-2)-getVariable(4,k)-getVariable(5,k)*11*Math.pow(10,-1)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(6,k)
Aug 30, 2024 6:45:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.738593683469208; Expression=84*Math.pow(10,-2)-u4(k)-u5(k)*11*Math.pow(10,-1)+u7(k)+u8(k)-86*Math.pow(10,-6)*u7(k)*u6(k); Java Expression: 84*Math.pow(10,-2)-getVariable(4,k)-getVariable(5,k)*11*Math.pow(10,-1)+getVariable(7,k)+getVariable(8,k)-86*Math.pow(10,-6)*getVariable(7,k)*getVariable(6,k)
Aug 30, 2024 6:45:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6931138283745755; Expression=81*Math.pow(10,-2)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u6(k)*u3(k); Java Expression: 81*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(6,k)*getVariable(3,k)
Aug 30, 2024 6:45:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.664822328750574; Expression=62*Math.pow(10,-2)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u6(k)*u3(k); Java Expression: 62*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(6,k)*getVariable(3,k)
Aug 30, 2024 6:45:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.618455073057691; Expression=7*Math.pow(10,-2)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u6(k)*u3(k); Java Expression: 7*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(6,k)*getVariable(3,k)
Aug 30, 2024 6:45:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.616392956291727; Expression=7*Math.pow(10,-5)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u6(k)*u3(k); Java Expression: 7*Math.pow(10,-5)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(6,k)*getVariable(3,k)
Aug 30, 2024 6:46:00 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.616392956291727 -->> Avg.: 14.871922812021218 -->> Std. Dev.: 20.22628718626937
Aug 30, 2024 6:46:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.616391329838346; Expression=81*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u6(k)*u3(k); Java Expression: 81*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(6,k)*getVariable(3,k)
Aug 30, 2024 6:46:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.616391328117422; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u6(k)*u3(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(6,k)*getVariable(3,k)
Aug 30, 2024 6:46:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.598925260707127; Expression=7*Math.pow(10,-5)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-58*Math.pow(10,-6)*u7(k)*u6(k)*u3(k); Java Expression: 7*Math.pow(10,-5)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-58*Math.pow(10,-6)*getVariable(7,k)*getVariable(6,k)*getVariable(3,k)
Aug 30, 2024 6:46:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.259786276982052; Expression=81*Math.pow(10,-2)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k); Java Expression: 81*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)
Aug 30, 2024 6:46:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.253488665108572; Expression=84*Math.pow(10,-2)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k); Java Expression: 84*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)
Aug 30, 2024 6:46:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.235581875886465; Expression=93*Math.pow(10,-2)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k); Java Expression: 93*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)
Aug 30, 2024 6:46:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.229943503901964; Expression=96*Math.pow(10,-2)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k); Java Expression: 96*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)
Aug 30, 2024 6:46:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.226276881037785; Expression=98*Math.pow(10,-2)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k); Java Expression: 98*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)
Aug 30, 2024 6:47:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.010061075564003; Expression=81*Math.pow(10,-2)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k); Java Expression: 81*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)
Aug 30, 2024 6:47:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.00983765357897; Expression=81*Math.pow(10,-5)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k); Java Expression: 81*Math.pow(10,-5)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)
Aug 30, 2024 6:47:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0040866997302045; Expression=8*Math.pow(10,-2)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k); Java Expression: 8*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)
Aug 30, 2024 6:47:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.995383413029257; Expression=27*Math.pow(10,-2)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k); Java Expression: 27*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)
Aug 30, 2024 6:47:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.994507528272615; Expression=50*Math.pow(10,-2)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k); Java Expression: 50*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)
Aug 30, 2024 6:47:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.993714855384971; Expression=44*Math.pow(10,-2)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k); Java Expression: 44*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)
Aug 30, 2024 6:48:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.993701142269121; Expression=37*Math.pow(10,-2)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k); Java Expression: 37*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)
Aug 30, 2024 6:48:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.930758552670035; Expression=27*Math.pow(10,-2)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k); Java Expression: 27*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:48:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.887866788195163; Expression=72*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k); Java Expression: 72*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:48:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.887866779619316; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:48:32 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.887866779619316 -->> Avg.: 6.00063914034592 -->> Std. Dev.: 1.346931943328686
Aug 30, 2024 6:49:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.887866778827701; Expression=1*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k); Java Expression: 1*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:50:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.887678104887088; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-41*Math.pow(10,-6)*u1(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-41*Math.pow(10,-6)*getVariable(1,k)
Aug 30, 2024 6:50:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.887516830314727; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-9*Math.pow(10,-5)*u4(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-9*Math.pow(10,-5)*getVariable(4,k)
Aug 30, 2024 6:50:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.887499165825287; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-9*Math.pow(10,-5)*u3(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-9*Math.pow(10,-5)*getVariable(3,k)
Aug 30, 2024 6:50:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.884574279811768; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)+u8(k)-60*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-83*Math.pow(10,-5)*u3(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-60*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-83*Math.pow(10,-5)*getVariable(3,k)
Aug 30, 2024 6:50:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.818778591825087; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)-u8(k)-53*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-53*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:51:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.818778591825086; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)-u8(k)-53*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u2(k)-u2(k)+u8(k)*u8(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-53*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(2,k)-getVariable(2,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:51:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.801489302385466; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)-u8(k)-54*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-54*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:51:37 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.801489302385466 -->> Avg.: 5.514379820536636 -->> Std. Dev.: 0.431694410798214
Aug 30, 2024 6:52:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.801489302385465; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)-u8(k)-54*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u2(k)-u2(k)+u8(k)*u8(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-54*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(2,k)-getVariable(2,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 6:52:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.8014492527413015; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)-u8(k)-54*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-30*Math.pow(10,-6)*u3(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-54*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-6)*getVariable(3,k)
Aug 30, 2024 6:52:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.8014041371924465; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)-u8(k)-54*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-30*Math.pow(10,-6)*u7(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-54*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-6)*getVariable(7,k)
Aug 30, 2024 6:52:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.786433223679264; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)-u8(k)-53*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-18*Math.pow(10,-4)*u2(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-53*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-18*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 6:53:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.778875065979392; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)-u8(k)-53*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-55*Math.pow(10,-4)*u2(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-53*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-55*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 6:53:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.778875064922744; Expression=27*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)-u8(k)-53*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-55*Math.pow(10,-4)*u2(k); Java Expression: 27*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-53*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-55*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 6:53:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.776517827000079; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)-u8(k)-53*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u2(k)-u2(k)+u8(k)*u8(k)-52*Math.pow(10,-4)*u2(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-53*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(2,k)-getVariable(2,k)+getVariable(8,k)*getVariable(8,k)-52*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 6:53:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.774978630390065; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)-u8(k)-53*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-52*Math.pow(10,-2)-39*Math.pow(10,-8)*u2(k)*u3(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-53*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-52*Math.pow(10,-2)-39*Math.pow(10,-8)*getVariable(2,k)*getVariable(3,k)
Aug 30, 2024 6:54:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.772280237085003; Expression=28*Math.pow(10,-2)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)-u8(k)-53*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-55*Math.pow(10,-4)*u2(k); Java Expression: 28*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-53*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-55*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 6:54:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.7722330455687745; Expression=27*Math.pow(10,-2)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)-u8(k)-53*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-55*Math.pow(10,-4)*u2(k); Java Expression: 27*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-53*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-55*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 6:55:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.772233045568774; Expression=27*Math.pow(10,-2)-u4(k)-u7(k)*11*Math.pow(10,-2)+u7(k)-u8(k)-53*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u2(k)-u2(k)+u8(k)*u8(k)-55*Math.pow(10,-4)*u2(k); Java Expression: 27*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*11*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-53*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(2,k)-getVariable(2,k)+getVariable(8,k)*getVariable(8,k)-55*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 6:55:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.700260825103506; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*17*Math.pow(10,-2)+u7(k)-u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-30*Math.pow(10,-6)*u3(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*17*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-6)*getVariable(3,k)
Aug 30, 2024 6:55:23 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.700260825103506 -->> Avg.: 5.282718117521016 -->> Std. Dev.: 0.4410190833144288
Aug 30, 2024 6:55:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.699802900792311; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*17*Math.pow(10,-2)+u7(k)-u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u2(k)-u2(k)+u8(k)*u8(k)-30*Math.pow(10,-6)*u2(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*17*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(2,k)-getVariable(2,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-6)*getVariable(2,k)
Aug 30, 2024 6:55:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.66865205907456; Expression=7*Math.pow(10,-2)-u4(k)-u7(k)*17*Math.pow(10,-2)+u7(k)-u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u2(k)-u2(k)+u8(k)*u8(k)-30*Math.pow(10,-4)*u2(k); Java Expression: 7*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*17*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(2,k)-getVariable(2,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 6:55:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.667741198947983; Expression=26*Math.pow(10,-4)-u4(k)-u7(k)*17*Math.pow(10,-2)+u7(k)-u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u2(k)-u2(k)+u8(k)*u8(k)-30*Math.pow(10,-4)*u2(k); Java Expression: 26*Math.pow(10,-4)-getVariable(4,k)-getVariable(7,k)*17*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(2,k)-getVariable(2,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 6:55:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.667725554007125; Expression=7*Math.pow(10,-9)-u4(k)-u7(k)*17*Math.pow(10,-2)+u7(k)-u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u2(k)-u2(k)+u8(k)*u8(k)-30*Math.pow(10,-4)*u2(k); Java Expression: 7*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*17*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(2,k)-getVariable(2,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 6:56:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.662558753103916; Expression=26*Math.pow(10,-2)-u4(k)-u7(k)*17*Math.pow(10,-2)+u7(k)-u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-30*Math.pow(10,-3)*u5(k); Java Expression: 26*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*17*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-3)*getVariable(5,k)
Aug 30, 2024 6:57:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.659821388976622; Expression=59*Math.pow(10,-2)-u4(k)-u7(k)*17*Math.pow(10,-2)+u7(k)-u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-30*Math.pow(10,-3)*u5(k); Java Expression: 59*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*17*Math.pow(10,-2)+getVariable(7,k)-getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-3)*getVariable(5,k)
Aug 30, 2024 6:57:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.6247513769315844; Expression=26*Math.pow(10,-2)-u4(k)-u7(k)*17*Math.pow(10,-2)+u7(k)+u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-30*Math.pow(10,-3)*u2(k); Java Expression: 26*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*17*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 6:58:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.568382232463844; Expression=51*Math.pow(10,-2)-u4(k)-u7(k)*17*Math.pow(10,-2)+u7(k)+u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-30*Math.pow(10,-3)*u2(k); Java Expression: 51*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*17*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 6:58:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.5070601074067485; Expression=26*Math.pow(10,-2)-u4(k)-u7(k)*17*Math.pow(10,-2)+u7(k)+u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-30*Math.pow(10,-3)*u7(k); Java Expression: 26*Math.pow(10,-2)-getVariable(4,k)-getVariable(7,k)*17*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:58:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.476731822227737; Expression=26*Math.pow(10,-3)-u4(k)-u7(k)*17*Math.pow(10,-2)+u7(k)+u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-30*Math.pow(10,-3)*u7(k); Java Expression: 26*Math.pow(10,-3)-getVariable(4,k)-getVariable(7,k)*17*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:59:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.474104844984533; Expression=26*Math.pow(10,-9)-u4(k)-u7(k)*17*Math.pow(10,-2)+u7(k)+u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-30*Math.pow(10,-3)*u7(k); Java Expression: 26*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*17*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 6:59:36 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.474104844984533 -->> Avg.: 5.0539398604189 -->> Std. Dev.: 0.41899807538585676
Aug 30, 2024 6:59:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.455206523897564; Expression=26*Math.pow(10,-9)-u4(k)-u7(k)*20*Math.pow(10,-2)+u7(k)+u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-31*Math.pow(10,-4)*u7(k); Java Expression: 26*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*20*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-31*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 7:00:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.453929686503388; Expression=26*Math.pow(10,-3)-u4(k)-u7(k)*20*Math.pow(10,-2)+u7(k)+u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-31*Math.pow(10,-4)*u2(k); Java Expression: 26*Math.pow(10,-3)-getVariable(4,k)-getVariable(7,k)*20*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-31*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 7:01:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.453729868920289; Expression=26*Math.pow(10,-3)-u4(k)-u7(k)*20*Math.pow(10,-2)+u7(k)+u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-30*Math.pow(10,-4)*u2(k); Java Expression: 26*Math.pow(10,-3)-getVariable(4,k)-getVariable(7,k)*20*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-30*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 7:01:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.453505313369619; Expression=26*Math.pow(10,-3)-u4(k)-u7(k)*20*Math.pow(10,-2)+u7(k)+u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-27*Math.pow(10,-4)*u2(k); Java Expression: 26*Math.pow(10,-3)-getVariable(4,k)-getVariable(7,k)*20*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-27*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 7:02:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.453490865566329; Expression=26*Math.pow(10,-8)-u4(k)-u7(k)*20*Math.pow(10,-2)+u7(k)+u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-27*Math.pow(10,-4)*u2(k); Java Expression: 26*Math.pow(10,-8)-getVariable(4,k)-getVariable(7,k)*20*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-27*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 7:02:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.453481855976592; Expression=5*Math.pow(10,-3)-u4(k)-u7(k)*20*Math.pow(10,-2)+u7(k)+u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-27*Math.pow(10,-4)*u2(k); Java Expression: 5*Math.pow(10,-3)-getVariable(4,k)-getVariable(7,k)*20*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-27*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 7:02:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.4534784593472025; Expression=10*Math.pow(10,-3)-u4(k)-u7(k)*20*Math.pow(10,-2)+u7(k)+u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-27*Math.pow(10,-4)*u2(k); Java Expression: 10*Math.pow(10,-3)-getVariable(4,k)-getVariable(7,k)*20*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-27*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 7:03:56 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.4534784593472025 -->> Avg.: 4.796837175036006 -->> Std. Dev.: 0.27960247060962556
Aug 30, 2024 7:04:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.453478459347202; Expression=10*Math.pow(10,-3)-u4(k)-u7(k)*20*Math.pow(10,-2)+u7(k)+u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u2(k)-u2(k)+u8(k)*u8(k)-27*Math.pow(10,-4)*u2(k); Java Expression: 10*Math.pow(10,-3)-getVariable(4,k)-getVariable(7,k)*20*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(2,k)-getVariable(2,k)+getVariable(8,k)*getVariable(8,k)-27*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 7:06:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.453478453651807; Expression=11*Math.pow(10,-3)-u4(k)-u7(k)*20*Math.pow(10,-2)+u7(k)+u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-27*Math.pow(10,-4)*u2(k); Java Expression: 11*Math.pow(10,-3)-getVariable(4,k)-getVariable(7,k)*20*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-27*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 7:07:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.453478453651806; Expression=11*Math.pow(10,-3)-u4(k)-20*Math.pow(10,-2)*u7(k)+u7(k)+u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-27*Math.pow(10,-4)*u2(k); Java Expression: 11*Math.pow(10,-3)-getVariable(4,k)-20*Math.pow(10,-2)*getVariable(7,k)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-27*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 7:07:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.453472478739306; Expression=11*Math.pow(10,-3)-u4(k)-u7(k)*20*Math.pow(10,-2)+u7(k)+u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-26*Math.pow(10,-4)*u2(k); Java Expression: 11*Math.pow(10,-3)-getVariable(4,k)-getVariable(7,k)*20*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-26*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 7:08:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.453443751395911; Expression=11*Math.pow(10,-8)-u4(k)-u7(k)*20*Math.pow(10,-2)+u7(k)+u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-26*Math.pow(10,-4)*u2(k); Java Expression: 11*Math.pow(10,-8)-getVariable(4,k)-getVariable(7,k)*20*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-26*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 7:08:18 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.453443751395911 -->> Avg.: 4.6451512962581365 -->> Std. Dev.: 0.17617427258279017
Aug 30, 2024 7:08:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.453443751259629; Expression=11*Math.pow(10,-9)-u4(k)-u7(k)*20*Math.pow(10,-2)+u7(k)+u8(k)-39*Math.pow(10,-6)*u7(k)*u7(k)*u3(k)+u9(k)-u9(k)+u8(k)*u8(k)-26*Math.pow(10,-4)*u2(k); Java Expression: 11*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*20*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-26*Math.pow(10,-4)*getVariable(2,k)

Execution time: 1764.114 seconds.



@@;11*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*20*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-26*Math.pow(10,-4)*getVariable(2,k)



Run #6
========
Aug 30, 2024 7:08:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.306121959491481; Expression=u4(k)-u8(k); Java Expression: getVariable(4,k)-getVariable(8,k)
Aug 30, 2024 7:08:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 7:08:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837859; Expression=u7(k)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)
Aug 30, 2024 7:08:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427476626927; Expression=u7(k)-u5(k)-51*Math.pow(10,-9)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-51*Math.pow(10,-9)-getVariable(4,k)
Aug 30, 2024 7:09:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427472889955; Expression=u7(k)-u5(k)-68*Math.pow(10,-9)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-68*Math.pow(10,-9)-getVariable(4,k)
Aug 30, 2024 7:09:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.066420588150916; Expression=u7(k)-u5(k)-51*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-51*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 7:09:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.964950122908191; Expression=u7(k)-u5(k)-68*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-68*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 7:09:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.951181678581833; Expression=u7(k)-u5(k)-82*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-82*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 7:09:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.93885844638529; Expression=u7(k)-u5(k)-99*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-99*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 7:09:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.930332178745148; Expression=u7(k)-u5(k)-12*Math.pow(10,-1)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-12*Math.pow(10,-1)-getVariable(4,k)
Aug 30, 2024 7:09:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.929119571823649; Expression=u7(k)-u5(k)-14*Math.pow(10,-1)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-14*Math.pow(10,-1)-getVariable(4,k)
Aug 30, 2024 7:09:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928882637025391; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-getVariable(4,k)
Aug 30, 2024 7:10:37 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.928882637025391 -->> Avg.: 6.0302308530885935E9 -->> Std. Dev.: 2.68469527458814E10
Aug 30, 2024 7:11:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928882636904123; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-2*Math.pow(10,-8)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-2*Math.pow(10,-8)-getVariable(4,k)
Aug 30, 2024 7:11:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9287950916095475; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-2*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-2*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 7:11:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9287879886675094; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-49*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-49*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 7:11:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928785872236788; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-48*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-48*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 7:11:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.92877501284756; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-40*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-40*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 7:11:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928773952392186; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-34*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-34*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 7:11:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928773631201596; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-36*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-36*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 7:12:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928512482835907; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-u4(k)-36*Math.pow(10,-3)-u6(k)*71*Math.pow(10,-6)-u3(k)+u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-getVariable(4,k)-36*Math.pow(10,-3)-getVariable(6,k)*71*Math.pow(10,-6)-getVariable(3,k)+getVariable(3,k)
Aug 30, 2024 7:12:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928426030133771; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-u4(k)-36*Math.pow(10,-3)-u6(k)*95*Math.pow(10,-6)-u3(k)+u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-getVariable(4,k)-36*Math.pow(10,-3)-getVariable(6,k)*95*Math.pow(10,-6)-getVariable(3,k)+getVariable(3,k)
Aug 30, 2024 7:12:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928254068568184; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-u4(k)-36*Math.pow(10,-3)-u1(k)*71*Math.pow(10,-6)-u3(k)+u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-getVariable(4,k)-36*Math.pow(10,-3)-getVariable(1,k)*71*Math.pow(10,-6)-getVariable(3,k)+getVariable(3,k)
Aug 30, 2024 7:12:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.925504566061553; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-u4(k)-36*Math.pow(10,-3)*u1(k)*u4(k)*67*Math.pow(10,-6)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-getVariable(4,k)-36*Math.pow(10,-3)*getVariable(1,k)*getVariable(4,k)*67*Math.pow(10,-6)*getVariable(2,k)
Aug 30, 2024 7:12:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.91099377554025; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-u4(k)-36*Math.pow(10,-3)*u1(k)*u4(k)*1*Math.pow(10,-5)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-getVariable(4,k)-36*Math.pow(10,-3)*getVariable(1,k)*getVariable(4,k)*1*Math.pow(10,-5)*getVariable(2,k)
Aug 30, 2024 7:12:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.898465295118685; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-u4(k)-75*Math.pow(10,-3)*u1(k)*u4(k)*10*Math.pow(10,-6)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-getVariable(4,k)-75*Math.pow(10,-3)*getVariable(1,k)*getVariable(4,k)*10*Math.pow(10,-6)*getVariable(2,k)
Aug 30, 2024 7:12:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.85913228750733; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-u4(k)-36*Math.pow(10,-3)*u1(k)*u1(k)*1*Math.pow(10,-5)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-getVariable(4,k)-36*Math.pow(10,-3)*getVariable(1,k)*getVariable(1,k)*1*Math.pow(10,-5)*getVariable(2,k)
Aug 30, 2024 7:12:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.813632648120654; Expression=u7(k)-u5(k)-98*Math.pow(10,-5)-u4(k)-81*Math.pow(10,-8)*u1(k)*u4(k)*29*Math.pow(10,-1)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)-98*Math.pow(10,-5)-getVariable(4,k)-81*Math.pow(10,-8)*getVariable(1,k)*getVariable(4,k)*29*Math.pow(10,-1)*getVariable(2,k)
Aug 30, 2024 7:12:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.804107508802351; Expression=u7(k)-u5(k)-98*Math.pow(10,-5)-u4(k)-81*Math.pow(10,-8)*u1(k)*u5(k)*29*Math.pow(10,-1)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)-98*Math.pow(10,-5)-getVariable(4,k)-81*Math.pow(10,-8)*getVariable(1,k)*getVariable(5,k)*29*Math.pow(10,-1)*getVariable(2,k)
Aug 30, 2024 7:12:58 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.804107508802351 -->> Avg.: 642792.1927831733 -->> Std. Dev.: 3004982.6744075404
Aug 30, 2024 7:13:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.799878512684579; Expression=u7(k)-u5(k)-13*Math.pow(10,-5)-u4(k)-36*Math.pow(10,-8)*u1(k)*u5(k)*67*Math.pow(10,-1)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-5)-getVariable(4,k)-36*Math.pow(10,-8)*getVariable(1,k)*getVariable(5,k)*67*Math.pow(10,-1)*getVariable(2,k)
Aug 30, 2024 7:13:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.771388049418642; Expression=u7(k)-u5(k)-13*Math.pow(10,-5)-u4(k)-86*Math.pow(10,-8)*u1(k)*u5(k)*34*Math.pow(10,-1)*u2(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-5)-getVariable(4,k)-86*Math.pow(10,-8)*getVariable(1,k)*getVariable(5,k)*34*Math.pow(10,-1)*getVariable(2,k)
Aug 30, 2024 7:13:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.748521390517125; Expression=u7(k)-u5(k)-98*Math.pow(10,-5)-u4(k)-81*Math.pow(10,-8)*51*Math.pow(10,-1)*u1(k)*u5(k)*u2(k)-u1(k)+u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-98*Math.pow(10,-5)-getVariable(4,k)-81*Math.pow(10,-8)*51*Math.pow(10,-1)*getVariable(1,k)*getVariable(5,k)*getVariable(2,k)-getVariable(1,k)+getVariable(1,k)
Aug 30, 2024 7:13:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.748034632921286; Expression=u7(k)-u5(k)-98*Math.pow(10,-5)-u4(k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*u1(k)*u5(k)*u2(k)-u1(k)+u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-98*Math.pow(10,-5)-getVariable(4,k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*getVariable(1,k)*getVariable(5,k)*getVariable(2,k)-getVariable(1,k)+getVariable(1,k)
Aug 30, 2024 7:13:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.747862262970393; Expression=u7(k)-u5(k)+98*Math.pow(10,-5)-u4(k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*u1(k)*u5(k)*u2(k)-u1(k)+u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+98*Math.pow(10,-5)-getVariable(4,k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*getVariable(1,k)*getVariable(5,k)*getVariable(2,k)-getVariable(1,k)+getVariable(1,k)
Aug 30, 2024 7:13:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.725033826739018; Expression=u7(k)-u5(k)-83*Math.pow(10,-5)-u4(k)-81*Math.pow(10,-8)*u6(k)*u7(k)*29*Math.pow(10,-1)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)-83*Math.pow(10,-5)-getVariable(4,k)-81*Math.pow(10,-8)*getVariable(6,k)*getVariable(7,k)*29*Math.pow(10,-1)*getVariable(7,k)
Aug 30, 2024 7:13:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.594465599906882; Expression=u7(k)-u5(k)-83*Math.pow(10,-5)-u4(k)-81*Math.pow(10,-8)*u1(k)*u7(k)*29*Math.pow(10,-1)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)-83*Math.pow(10,-5)-getVariable(4,k)-81*Math.pow(10,-8)*getVariable(1,k)*getVariable(7,k)*29*Math.pow(10,-1)*getVariable(7,k)
Aug 30, 2024 7:13:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.594424321208385; Expression=u7(k)-u5(k)-56*Math.pow(10,-5)-u4(k)-81*Math.pow(10,-8)*u1(k)*u7(k)*29*Math.pow(10,-1)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)-56*Math.pow(10,-5)-getVariable(4,k)-81*Math.pow(10,-8)*getVariable(1,k)*getVariable(7,k)*29*Math.pow(10,-1)*getVariable(7,k)
Aug 30, 2024 7:13:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.594212013763799; Expression=u7(k)-u5(k)+83*Math.pow(10,-5)-u4(k)-81*Math.pow(10,-8)*u1(k)*u7(k)*29*Math.pow(10,-1)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+83*Math.pow(10,-5)-getVariable(4,k)-81*Math.pow(10,-8)*getVariable(1,k)*getVariable(7,k)*29*Math.pow(10,-1)*getVariable(7,k)
Aug 30, 2024 7:13:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.493929759134618; Expression=u7(k)-u5(k)-83*Math.pow(10,-4)-u4(k)-u6(k)*81*Math.pow(10,-8)*u7(k)*u7(k)*29*Math.pow(10,-1)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-83*Math.pow(10,-4)-getVariable(4,k)-getVariable(6,k)*81*Math.pow(10,-8)*getVariable(7,k)*getVariable(7,k)*29*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 7:14:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.484706303092009; Expression=u7(k)-u5(k)-13*Math.pow(10,-9)-u4(k)-u6(k)*36*Math.pow(10,-8)*u7(k)*u7(k)*67*Math.pow(10,-1)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-9)-getVariable(4,k)-getVariable(6,k)*36*Math.pow(10,-8)*getVariable(7,k)*getVariable(7,k)*67*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 7:14:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.41922746855747; Expression=u7(k)-u5(k)-83*Math.pow(10,-4)-u4(k)-u7(k)*81*Math.pow(10,-8)*u7(k)*u7(k)*29*Math.pow(10,-1)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-83*Math.pow(10,-4)-getVariable(4,k)-getVariable(7,k)*81*Math.pow(10,-8)*getVariable(7,k)*getVariable(7,k)*29*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 7:14:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.358267242550905; Expression=u7(k)-u5(k)-13*Math.pow(10,-5)-u4(k)-u7(k)*36*Math.pow(10,-8)*u1(k)*u7(k)*86*Math.pow(10,-1)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-5)-getVariable(4,k)-getVariable(7,k)*36*Math.pow(10,-8)*getVariable(1,k)*getVariable(7,k)*86*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 7:14:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.358266591623276; Expression=u7(k)-u5(k)-13*Math.pow(10,-9)-u4(k)-u7(k)*36*Math.pow(10,-8)*u1(k)*u7(k)*86*Math.pow(10,-1)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*36*Math.pow(10,-8)*getVariable(1,k)*getVariable(7,k)*86*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 7:14:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3379138730621145; Expression=u7(k)-u5(k)-13*Math.pow(10,-8)-u4(k)-u7(k)*49*Math.pow(10,-8)*u1(k)*u7(k)*72*Math.pow(10,-1)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-8)-getVariable(4,k)-getVariable(7,k)*49*Math.pow(10,-8)*getVariable(1,k)*getVariable(7,k)*72*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 7:15:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.337903400960733; Expression=u7(k)-u5(k)+13*Math.pow(10,-5)-u4(k)-u7(k)*49*Math.pow(10,-8)*u1(k)*u7(k)*72*Math.pow(10,-1)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+13*Math.pow(10,-5)-getVariable(4,k)-getVariable(7,k)*49*Math.pow(10,-8)*getVariable(1,k)*getVariable(7,k)*72*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 7:15:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.257803093508133; Expression=u7(k)-u5(k)-98*Math.pow(10,-5)-u4(k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*u7(k)*u1(k)*u7(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-98*Math.pow(10,-5)-getVariable(4,k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*getVariable(7,k)*getVariable(1,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:15:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.257557028527933; Expression=u7(k)-u5(k)-98*Math.pow(10,-4)-u4(k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*u7(k)*u1(k)*u7(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-98*Math.pow(10,-4)-getVariable(4,k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*getVariable(7,k)*getVariable(1,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:15:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.243434190189754; Expression=u7(k)-u5(k)-98*Math.pow(10,-5)-u4(k)-79*Math.pow(10,-8)*55*Math.pow(10,-1)*u7(k)*u1(k)*u7(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-98*Math.pow(10,-5)-getVariable(4,k)-79*Math.pow(10,-8)*55*Math.pow(10,-1)*getVariable(7,k)*getVariable(1,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:15:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.243172248372811; Expression=u7(k)-u5(k)-98*Math.pow(10,-5)-u4(k)-79*Math.pow(10,-8)*55*Math.pow(10,-1)*u7(k)*u1(k)*u7(k)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-98*Math.pow(10,-5)-getVariable(4,k)-79*Math.pow(10,-8)*55*Math.pow(10,-1)*getVariable(7,k)*getVariable(1,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:15:53 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.243172248372811 -->> Avg.: 562.9097886616435 -->> Std. Dev.: 1629.072167662494
Aug 30, 2024 7:15:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2251186095594395; Expression=u7(k)-u5(k)-98*Math.pow(10,-5)-u4(k)-90*Math.pow(10,-8)*51*Math.pow(10,-1)*u7(k)*u1(k)*u7(k)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-98*Math.pow(10,-5)-getVariable(4,k)-90*Math.pow(10,-8)*51*Math.pow(10,-1)*getVariable(7,k)*getVariable(1,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:16:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.224951380810185; Expression=u7(k)-u5(k)-98*Math.pow(10,-4)-u4(k)-90*Math.pow(10,-8)*51*Math.pow(10,-1)*u7(k)*u1(k)*u7(k)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-98*Math.pow(10,-4)-getVariable(4,k)-90*Math.pow(10,-8)*51*Math.pow(10,-1)*getVariable(7,k)*getVariable(1,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:16:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.218473406478078; Expression=u7(k)-u5(k)-98*Math.pow(10,-5)-u4(k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-98*Math.pow(10,-5)-getVariable(4,k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:16:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2183811344450435; Expression=u7(k)-u5(k)-45*Math.pow(10,-5)-u4(k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-45*Math.pow(10,-5)-getVariable(4,k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:16:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.218303001726493; Expression=u7(k)-u5(k)-98*Math.pow(10,-8)-u4(k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-98*Math.pow(10,-8)-getVariable(4,k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:16:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.208017742246471; Expression=u7(k)-u5(k)-8*Math.pow(10,-5)-u4(k)-79*Math.pow(10,-8)*55*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-8*Math.pow(10,-5)-getVariable(4,k)-79*Math.pow(10,-8)*55*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:16:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.207852955700677; Expression=u7(k)-u5(k)+98*Math.pow(10,-5)-u4(k)-79*Math.pow(10,-8)*55*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+98*Math.pow(10,-5)-getVariable(4,k)-79*Math.pow(10,-8)*55*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:16:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.195748656402892; Expression=u7(k)-u5(k)-13*Math.pow(10,-5)-u4(k)-49*Math.pow(10,-8)*72*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-5)-getVariable(4,k)-49*Math.pow(10,-8)*72*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:16:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.185203382504316; Expression=u7(k)-u5(k)-98*Math.pow(10,-5)-u4(k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-98*Math.pow(10,-5)-getVariable(4,k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:16:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.18514661099599; Expression=u7(k)-u5(k)-30*Math.pow(10,-5)-u4(k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-30*Math.pow(10,-5)-getVariable(4,k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:16:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.18512160106482; Expression=u7(k)-u5(k)-98*Math.pow(10,-9)-u4(k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-98*Math.pow(10,-9)-getVariable(4,k)-79*Math.pow(10,-8)*51*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:16:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.184371097991497; Expression=u7(k)-u5(k)-98*Math.pow(10,-9)-u4(k)-79*Math.pow(10,-8)*50*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-98*Math.pow(10,-9)-getVariable(4,k)-79*Math.pow(10,-8)*50*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:16:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1636155016229175; Expression=u7(k)-u5(k)-72*Math.pow(10,-5)-u4(k)-79*Math.pow(10,-8)*55*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-72*Math.pow(10,-5)-getVariable(4,k)-79*Math.pow(10,-8)*55*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:16:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.097672027004826; Expression=u7(k)-u5(k)+98*Math.pow(10,-5)-u4(k)-90*Math.pow(10,-8)*51*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+70*Math.pow(10,-5)+99*Math.pow(10,-8)*35*Math.pow(10,+3)*u8(k)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)+98*Math.pow(10,-5)-getVariable(4,k)-90*Math.pow(10,-8)*51*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+70*Math.pow(10,-5)+99*Math.pow(10,-8)*35*Math.pow(10,+3)*getVariable(8,k)*getVariable(9,k)
Aug 30, 2024 7:17:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.076210625694618; Expression=u7(k)-u5(k)+54*Math.pow(10,-5)-u4(k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+54*Math.pow(10,-5)-getVariable(4,k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:17:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.074464042571331; Expression=u7(k)-u5(k)+54*Math.pow(10,-3)-u4(k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+54*Math.pow(10,-3)-getVariable(4,k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:18:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.07350581998589; Expression=u7(k)-u5(k)+95*Math.pow(10,-3)-u4(k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+95*Math.pow(10,-3)-getVariable(4,k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:18:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.073486585609501; Expression=u7(k)-u5(k)+96*Math.pow(10,-3)-u4(k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+96*Math.pow(10,-3)-getVariable(4,k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:19:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.073430064674788; Expression=u7(k)-u5(k)+99*Math.pow(10,-3)-u4(k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+99*Math.pow(10,-3)-getVariable(4,k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:19:20 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.073430064674788 -->> Avg.: 16.511484337643267 -->> Std. Dev.: 25.326076891182026
Aug 30, 2024 7:19:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.073407952832155; Expression=u7(k)-u5(k)+95*Math.pow(10,-3)-u4(k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+u8(k)+52*Math.pow(10,-4)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+95*Math.pow(10,-3)-getVariable(4,k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)+52*Math.pow(10,-4)+getVariable(8,k)
Aug 30, 2024 7:19:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.073308515935326; Expression=u7(k)-u5(k)+96*Math.pow(10,-3)-u4(k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+98*Math.pow(10,-4)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+96*Math.pow(10,-3)-getVariable(4,k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+98*Math.pow(10,-4)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:19:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.072766938242785; Expression=u7(k)-u5(k)+95*Math.pow(10,-3)-u4(k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+u8(k)+52*Math.pow(10,-3)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+95*Math.pow(10,-3)-getVariable(4,k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)+52*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 7:20:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.072597358541106; Expression=u7(k)-u5(k)+75*Math.pow(10,-3)-u4(k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+u8(k)+98*Math.pow(10,-3)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+75*Math.pow(10,-3)-getVariable(4,k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)+98*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 7:20:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.072582557565288; Expression=u7(k)-u5(k)+99*Math.pow(10,-3)-u4(k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+u8(k)+11*Math.pow(10,-2)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+99*Math.pow(10,-3)-getVariable(4,k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)+11*Math.pow(10,-2)+getVariable(8,k)
Aug 30, 2024 7:20:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.062589962362517; Expression=u7(k)-u5(k)*99*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*99*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:20:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.057064724447713; Expression=u7(k)-u5(k)*95*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)+u8(k)+52*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*95*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)+getVariable(8,k)+52*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 7:21:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.038937211943037; Expression=u7(k)-u5(k)*95*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)+52*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*95*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)+52*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 7:21:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.021225383068616; Expression=u7(k)-u5(k)*95*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)+9*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)*95*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)+9*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 7:22:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.001619903609675; Expression=u7(k)-u5(k)*93*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)+52*Math.pow(10,-9)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*93*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)+52*Math.pow(10,-9)*getVariable(8,k)
Aug 30, 2024 7:22:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.001619074020362; Expression=u7(k)-u5(k)*93*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)-52*Math.pow(10,-6)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*93*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)-52*Math.pow(10,-6)*getVariable(8,k)
Aug 30, 2024 7:22:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.001611677780637; Expression=u7(k)-u5(k)*93*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)-52*Math.pow(10,-5)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*93*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)-52*Math.pow(10,-5)*getVariable(8,k)
Aug 30, 2024 7:22:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.001486057065457; Expression=u7(k)-u5(k)*93*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)-52*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*93*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*58*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)-52*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 7:22:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9935495237455525; Expression=u7(k)-u5(k)*93*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*61*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)-52*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*93*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*61*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)-52*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 7:22:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9849958445676865; Expression=u7(k)-u5(k)*93*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*61*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)+52*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*93*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*61*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)+52*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 7:23:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.983446045143164; Expression=u7(k)-u5(k)*93*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*61*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)+85*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*93*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*61*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)+85*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 7:23:03 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.983446045143164 -->> Avg.: 5.690315862561228 -->> Std. Dev.: 1.2063835332307524
Aug 30, 2024 7:24:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.983260243347496; Expression=u7(k)-u5(k)*93*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*61*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)+90*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*93*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*61*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)+90*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 7:24:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.983120892411346; Expression=u7(k)-u5(k)*93*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*61*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)+94*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*93*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*61*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)+94*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 7:24:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.937428134007425; Expression=u7(k)-u5(k)*93*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*71*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)+52*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)*93*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*71*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)+52*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 7:25:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.8797454088076835; Expression=u7(k)-u5(k)*93*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*77*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)+52*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)*93*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*77*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)+52*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 7:26:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.879188261526055; Expression=u7(k)-u5(k)*93*Math.pow(10,-2)-u4(k)-89*Math.pow(10,-8)*77*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)+52*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(5,k)*93*Math.pow(10,-2)-getVariable(4,k)-89*Math.pow(10,-8)*77*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)+52*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 7:26:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.643579891874831; Expression=u7(k)-u7(k)*27*Math.pow(10,-2)-u3(k)-88*Math.pow(10,-8)*77*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)+52*Math.pow(10,-3)*u9(k); Java Expression: getVariable(7,k)-getVariable(7,k)*27*Math.pow(10,-2)-getVariable(3,k)-88*Math.pow(10,-8)*77*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)+52*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 7:26:58 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.643579891874831 -->> Avg.: 5.312575683167636 -->> Std. Dev.: 0.37912722030518275
Aug 30, 2024 7:27:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.605051120583001; Expression=u7(k)-u7(k)*27*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*77*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)+52*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*27*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*77*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)+52*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 7:27:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.604600731613135; Expression=u7(k)-u7(k)*27*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*77*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)+7*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*27*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*77*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)+7*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 7:27:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.562857043414116; Expression=u7(k)-u7(k)*27*Math.pow(10,-2)-u4(k)-92*Math.pow(10,-8)*77*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)+52*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*27*Math.pow(10,-2)-getVariable(4,k)-92*Math.pow(10,-8)*77*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)+52*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 7:27:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.5548903034826616; Expression=u7(k)-u7(k)*27*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*84*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)+52*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*27*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*84*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)+52*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 7:27:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.43982962366961; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-92*Math.pow(10,-8)*77*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+u8(k)*u8(k)+52*Math.pow(10,-5)+u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-92*Math.pow(10,-8)*77*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)+52*Math.pow(10,-5)+getVariable(8,k)
Aug 30, 2024 7:28:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.439747918603249; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-92*Math.pow(10,-8)*u7(k)*u7(k)*77*Math.pow(10,-1)*u7(k)+u8(k)*u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-92*Math.pow(10,-8)*getVariable(7,k)*getVariable(7,k)*77*Math.pow(10,-1)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)+getVariable(8,k)
Aug 30, 2024 7:28:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.350287264584555; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-92*Math.pow(10,-8)*u7(k)*u7(k)*77*Math.pow(10,-1)*u7(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-92*Math.pow(10,-8)*getVariable(7,k)*getVariable(7,k)*77*Math.pow(10,-1)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:28:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.235454708490979; Expression=u7(k)-u7(k)*27*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*96*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+52*Math.pow(10,-3)*u8(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*27*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*96*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+52*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:29:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.215785040168133; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-92*Math.pow(10,-8)*u7(k)*u7(k)*93*Math.pow(10,-1)*u7(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-92*Math.pow(10,-8)*getVariable(7,k)*getVariable(7,k)*93*Math.pow(10,-1)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:29:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.209306190182077; Expression=u7(k)-u7(k)*27*Math.pow(10,-2)-u4(k)-88*Math.pow(10,-8)*96*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)-52*Math.pow(10,-3)*u8(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*27*Math.pow(10,-2)-getVariable(4,k)-88*Math.pow(10,-8)*96*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)-52*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:30:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.207465120396977; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-92*Math.pow(10,-8)*93*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)+52*Math.pow(10,-3)*u8(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-92*Math.pow(10,-8)*93*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)+52*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:30:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.19935773464207; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-92*Math.pow(10,-8)*u7(k)*u7(k)*92*Math.pow(10,-1)*u7(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-92*Math.pow(10,-8)*getVariable(7,k)*getVariable(7,k)*92*Math.pow(10,-1)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:30:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.1761250850345135; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-89*Math.pow(10,-8)*u7(k)*u7(k)*93*Math.pow(10,-1)*u7(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-89*Math.pow(10,-8)*getVariable(7,k)*getVariable(7,k)*93*Math.pow(10,-1)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:30:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.166771336983091; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-92*Math.pow(10,-8)*u7(k)*u7(k)*88*Math.pow(10,-1)*u7(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-92*Math.pow(10,-8)*getVariable(7,k)*getVariable(7,k)*88*Math.pow(10,-1)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:30:53 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.166771336983091 -->> Avg.: 5.01211892510663 -->> Std. Dev.: 0.3909274398830032
Aug 30, 2024 7:32:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.166771336058919; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-92*Math.pow(10,-8)*88*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)-34*Math.pow(10,-9)*u8(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-92*Math.pow(10,-8)*88*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)-34*Math.pow(10,-9)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:32:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.166697462275961; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-87*Math.pow(10,-8)*u7(k)*u7(k)*93*Math.pow(10,-1)*u7(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-87*Math.pow(10,-8)*getVariable(7,k)*getVariable(7,k)*93*Math.pow(10,-1)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:32:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.166204091689839; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-92*Math.pow(10,-8)*88*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)-34*Math.pow(10,-3)*u8(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-92*Math.pow(10,-8)*88*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)-34*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:33:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.166003085375577; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-87*Math.pow(10,-8)*93*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)-52*Math.pow(10,-3)*u8(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-87*Math.pow(10,-8)*93*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)-52*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:34:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.165997203747186; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-87*Math.pow(10,-8)*93*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)-48*Math.pow(10,-3)*u8(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-87*Math.pow(10,-8)*93*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)-48*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:34:41 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.165997203747186 -->> Avg.: 4.742274219603091 -->> Std. Dev.: 0.3956225894414549
Aug 30, 2024 7:35:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.164444674652212; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-86*Math.pow(10,-8)*93*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)-48*Math.pow(10,-3)*u8(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-86*Math.pow(10,-8)*93*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)-48*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:36:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.1634417185929715; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-86*Math.pow(10,-8)*93*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)-80*Math.pow(10,-3)*u8(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-86*Math.pow(10,-8)*93*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)-80*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:37:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.163273636524067; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-86*Math.pow(10,-8)*93*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)-89*Math.pow(10,-3)*u8(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-86*Math.pow(10,-8)*93*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)-89*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:37:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.1632150023215475; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-86*Math.pow(10,-8)*93*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)-93*Math.pow(10,-3)*u8(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-86*Math.pow(10,-8)*93*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)-93*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:38:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.163166257320109; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-86*Math.pow(10,-4)*93*Math.pow(10,-5)*u7(k)*u7(k)*u7(k)-97*Math.pow(10,-3)*u8(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-86*Math.pow(10,-4)*93*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)-97*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:38:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.163114491519665; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-86*Math.pow(10,-8)*92*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)-93*Math.pow(10,-3)*u8(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-86*Math.pow(10,-8)*92*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)-93*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:38:42 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.163114491519665 -->> Avg.: 4.551052143571317 -->> Std. Dev.: 0.39086930185206786
Aug 30, 2024 7:38:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.163114491519664; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-86*Math.pow(10,-4)*92*Math.pow(10,-5)*u7(k)*u7(k)*u7(k)-93*Math.pow(10,-3)*u8(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-86*Math.pow(10,-4)*92*Math.pow(10,-5)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)-93*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:39:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.1629619454428575; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-86*Math.pow(10,-8)*92*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)-96*Math.pow(10,-3)*u8(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-86*Math.pow(10,-8)*92*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)-96*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:41:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.162912331835869; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-86*Math.pow(10,-8)*92*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)-97*Math.pow(10,-3)*u8(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-86*Math.pow(10,-8)*92*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)-97*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:42:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.162814957382713; Expression=u7(k)-u7(k)*28*Math.pow(10,-2)-u4(k)-86*Math.pow(10,-8)*92*Math.pow(10,-1)*u7(k)*u7(k)*u7(k)-99*Math.pow(10,-3)*u8(k)+u8(k)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-86*Math.pow(10,-8)*92*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)-99*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 7:42:51 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.162814957382713 -->> Avg.: 4.377017856551964 -->> Std. Dev.: 0.31988356839229665

Execution time: 2071.993 seconds.



@@;getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-86*Math.pow(10,-8)*92*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)-99*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)



Run #7
========
Aug 30, 2024 7:43:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7900.247698944141; Expression=81*Math.pow(10,+2)-u2(k); Java Expression: 81*Math.pow(10,+2)-getVariable(2,k)
Aug 30, 2024 7:43:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=177.1371626781488; Expression=u7(k)+u7(k); Java Expression: getVariable(7,k)+getVariable(7,k)
Aug 30, 2024 7:43:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=111.43253506013022; Expression=u7(k)+u3(k); Java Expression: getVariable(7,k)+getVariable(3,k)
Aug 30, 2024 7:43:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=25.85494208990758; Expression=14*Math.pow(10,-9)-38*Math.pow(10,-2)*u7(k)+u6(k); Java Expression: 14*Math.pow(10,-9)-38*Math.pow(10,-2)*getVariable(7,k)+getVariable(6,k)
Aug 30, 2024 7:43:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=12.8690551574372; Expression=u3(k)+u8(k); Java Expression: getVariable(3,k)+getVariable(8,k)
Aug 30, 2024 7:43:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=12.313247087166108; Expression=95*Math.pow(10,-4)+u3(k); Java Expression: 95*Math.pow(10,-4)+getVariable(3,k)
Aug 30, 2024 7:43:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.32873412276282; Expression=76*Math.pow(10,-5)*u6(k)+u5(k); Java Expression: 76*Math.pow(10,-5)*getVariable(6,k)+getVariable(5,k)
Aug 30, 2024 7:43:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.52367130739522; Expression=70*Math.pow(10,-5)*41*Math.pow(10,+1)*u7(k); Java Expression: 70*Math.pow(10,-5)*41*Math.pow(10,+1)*getVariable(7,k)
Aug 30, 2024 7:43:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.514879905512585; Expression=33*Math.pow(10,-2)*u6(k); Java Expression: 33*Math.pow(10,-2)*getVariable(6,k)
Aug 30, 2024 7:43:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.802980697300695; Expression=33*Math.pow(10,-2)*u7(k); Java Expression: 33*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 7:43:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709785324194373; Expression=32*Math.pow(10,-2)*u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 7:43:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.131407434512216; Expression=u7(k)-u3(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)
Aug 30, 2024 7:44:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837859; Expression=u7(k)-u4(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)
Aug 30, 2024 7:44:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.076768726644776; Expression=u7(k)-u4(k)-30*Math.pow(10,-4)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-30*Math.pow(10,-4)-getVariable(5,k)
Aug 30, 2024 7:44:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0758925714714955; Expression=u7(k)-u4(k)-70*Math.pow(10,-4)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-70*Math.pow(10,-4)-getVariable(5,k)
Aug 30, 2024 7:44:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.018600633869172; Expression=u7(k)-u4(k)-30*Math.pow(10,-2)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-30*Math.pow(10,-2)-getVariable(5,k)
Aug 30, 2024 7:44:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388946502078; Expression=u7(k)-u3(k)-u5(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 7:44:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.96278390380322; Expression=u7(k)-u4(k)-70*Math.pow(10,-2)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-70*Math.pow(10,-2)-getVariable(5,k)
Aug 30, 2024 7:44:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.941322732932241; Expression=u7(k)-u4(k)-95*Math.pow(10,-2)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-95*Math.pow(10,-2)-getVariable(5,k)
Aug 30, 2024 7:44:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.941322732932239; Expression=u7(k)-u5(k)-95*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-95*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 7:44:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.939940034803846; Expression=u7(k)-u5(k)-17*Math.pow(10,-1)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-17*Math.pow(10,-1)-getVariable(4,k)
Aug 30, 2024 7:45:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.93885844638529; Expression=u7(k)-u5(k)-99*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-99*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 7:45:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.929119571823649; Expression=u7(k)-u5(k)-14*Math.pow(10,-1)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-14*Math.pow(10,-1)-getVariable(4,k)
Aug 30, 2024 7:45:12 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.929119571823649 -->> Avg.: 1.3670617704695858E10 -->> Std. Dev.: 5.58910959622357E10
Aug 30, 2024 7:45:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928882637025391; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-getVariable(4,k)
Aug 30, 2024 7:47:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928882576394862; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-1*Math.pow(10,-5)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-1*Math.pow(10,-5)-getVariable(4,k)
Aug 30, 2024 7:47:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928830431118543; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-1*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-1*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 7:47:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928818429662382; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-59*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-59*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 7:47:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928776618799997; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-30*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-30*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 7:47:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928773952392186; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-34*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-34*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 7:47:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.921606680507555; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-u4(k)-1*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-getVariable(4,k)-1*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 7:47:30 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.921606680507555 -->> Avg.: 3034554.1782072084 -->> Std. Dev.: 1.543506815845723E7
Aug 30, 2024 7:47:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.90742516918772; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-u4(k)-1*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-getVariable(4,k)-1*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 7:47:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9018588705661275; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-u4(k)-7*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-getVariable(4,k)-7*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 7:47:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5772279555080315; Expression=u7(k)-u5(k)+72*Math.pow(10,-1)-u4(k)-98*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+72*Math.pow(10,-1)-getVariable(4,k)-98*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 7:47:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.535855998532008; Expression=u7(k)-u5(k)+62*Math.pow(10,-1)-u4(k)-98*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+62*Math.pow(10,-1)-getVariable(4,k)-98*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 7:48:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.529706650693716; Expression=u7(k)-u5(k)+64*Math.pow(10,-1)-u4(k)-98*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+64*Math.pow(10,-1)-getVariable(4,k)-98*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 7:49:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.52934287649519; Expression=u7(k)-u5(k)+65*Math.pow(10,-1)-u4(k)-98*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+65*Math.pow(10,-1)-getVariable(4,k)-98*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 7:49:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.525413138993865; Expression=u7(k)-u5(k)+85*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+85*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 7:49:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.519597488365361; Expression=u7(k)-u5(k)+93*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+93*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 7:49:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.519594179635617; Expression=u7(k)-u5(k)+93*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*u1(k)-47*Math.pow(10,-8)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+93*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*getVariable(1,k)-47*Math.pow(10,-8)*getVariable(1,k)
Aug 30, 2024 7:49:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.518347679893999; Expression=u7(k)-u5(k)+86*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+86*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 7:50:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.509637250803565; Expression=u7(k)-u5(k)+88*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+88*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 7:50:03 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.509637250803565 -->> Avg.: 483.46361589063076 -->> Std. Dev.: 1381.1223496482696
Aug 30, 2024 7:50:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.508000852856466; Expression=u7(k)-u5(k)+89*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+89*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 7:50:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.50734395080527; Expression=u7(k)-u5(k)+89*Math.pow(10,-1)-u3(k)-99*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+89*Math.pow(10,-1)-getVariable(3,k)-99*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 7:51:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.499998031012122; Expression=u7(k)-u5(k)+93*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*u1(k)-47*Math.pow(10,-4)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+93*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*getVariable(1,k)-47*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 7:51:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.496464397797831; Expression=u7(k)-u5(k)+95*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*u1(k)-90*Math.pow(10,-4)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+95*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*getVariable(1,k)-90*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 7:51:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.370989373969341; Expression=u7(k)-u5(k)+95*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*u1(k)*90*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+95*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*getVariable(1,k)*90*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 7:52:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.324337367634241; Expression=u7(k)-u5(k)+91*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*u1(k)*90*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+91*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*getVariable(1,k)*90*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 7:52:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.311519308835264; Expression=u7(k)-u5(k)+85*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*u1(k)*86*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+85*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*getVariable(1,k)*86*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 7:52:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.310370825768629; Expression=u7(k)-u5(k)+82*Math.pow(10,-1)-u3(k)-99*Math.pow(10,-3)*u1(k)*84*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+82*Math.pow(10,-1)-getVariable(3,k)-99*Math.pow(10,-3)*getVariable(1,k)*84*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 7:52:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.308178509640196; Expression=u7(k)-u5(k)+89*Math.pow(10,-1)-u3(k)-99*Math.pow(10,-3)*u1(k)*92*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+89*Math.pow(10,-1)-getVariable(3,k)-99*Math.pow(10,-3)*getVariable(1,k)*92*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 7:52:53 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.308178509640196 -->> Avg.: 16.202414136837735 -->> Std. Dev.: 24.460899758860503
Aug 30, 2024 7:52:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.308033440156509; Expression=u7(k)-u5(k)+89*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*u1(k)*92*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+89*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*getVariable(1,k)*92*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 7:53:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.307505059204466; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*u1(k)*90*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*getVariable(1,k)*90*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 7:56:02 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.307505059204466 -->> Avg.: 5.9586981789492075 -->> Std. Dev.: 1.4709100582264325
Aug 30, 2024 7:56:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3074687862794105; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-u1(k)*98*Math.pow(10,-3)*u7(k)*90*Math.pow(10,-4)+34*Math.pow(10,-6)*u6(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-getVariable(1,k)*98*Math.pow(10,-3)*getVariable(7,k)*90*Math.pow(10,-4)+34*Math.pow(10,-6)*getVariable(6,k)
Aug 30, 2024 7:56:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.306708477001071; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-u1(k)*98*Math.pow(10,-3)*u7(k)*90*Math.pow(10,-4)+34*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-getVariable(1,k)*98*Math.pow(10,-3)*getVariable(7,k)*90*Math.pow(10,-4)+34*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 7:56:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.306665098278207; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-u1(k)*98*Math.pow(10,-3)*u7(k)*90*Math.pow(10,-4)+37*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-getVariable(1,k)*98*Math.pow(10,-3)*getVariable(7,k)*90*Math.pow(10,-4)+37*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 7:56:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.306503750285956; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-u1(k)*98*Math.pow(10,-3)*u7(k)*90*Math.pow(10,-4)+77*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-getVariable(1,k)*98*Math.pow(10,-3)*getVariable(7,k)*90*Math.pow(10,-4)+77*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 7:56:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.306460553200579; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-u1(k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k)+u6(k)*9*Math.pow(10,-6)*u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-getVariable(1,k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)+getVariable(6,k)*9*Math.pow(10,-6)*getVariable(3,k)
Aug 30, 2024 7:56:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.304564497050768; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-u1(k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k)+u6(k)*45*Math.pow(10,-6)*u3(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-getVariable(1,k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)+getVariable(6,k)*45*Math.pow(10,-6)*getVariable(3,k)
Aug 30, 2024 7:56:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.304413353341845; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-u1(k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k)+u6(k)*45*Math.pow(10,-6)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-getVariable(1,k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)+getVariable(6,k)*45*Math.pow(10,-6)*getVariable(5,k)
Aug 30, 2024 7:57:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3037698153307415; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-u1(k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k)+u3(k)*78*Math.pow(10,-6)*u5(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-getVariable(1,k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)+getVariable(3,k)*78*Math.pow(10,-6)*getVariable(5,k)
Aug 30, 2024 7:57:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.302160033653879; Expression=u7(k)-u5(k)+86*Math.pow(10,-1)-u3(k)-u1(k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k)+u5(k)*45*Math.pow(10,-6)*u6(k); Java Expression: getVariable(7,k)-getVariable(5,k)+86*Math.pow(10,-1)-getVariable(3,k)-getVariable(1,k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)+getVariable(5,k)*45*Math.pow(10,-6)*getVariable(6,k)
Aug 30, 2024 7:57:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.291405898948565; Expression=u7(k)-u5(k)+95*Math.pow(10,-1)-u3(k)-89*Math.pow(10,-3)*u7(k)*90*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+95*Math.pow(10,-1)-getVariable(3,k)-89*Math.pow(10,-3)*getVariable(7,k)*90*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 7:58:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.291046600241102; Expression=u7(k)-u5(k)+95*Math.pow(10,-1)-u3(k)-89*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k)*u7(k)+u8(k)*45*Math.pow(10,-8)*u4(k)*u6(k); Java Expression: getVariable(7,k)-getVariable(5,k)+95*Math.pow(10,-1)-getVariable(3,k)-89*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)*getVariable(7,k)+getVariable(8,k)*45*Math.pow(10,-8)*getVariable(4,k)*getVariable(6,k)
Aug 30, 2024 7:58:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.286673506889845; Expression=u7(k)-u5(k)+95*Math.pow(10,-1)-u3(k)-u7(k)*89*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k)+u2(k)*41*Math.pow(10,-6)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)+95*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*89*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)+getVariable(2,k)*41*Math.pow(10,-6)*getVariable(1,k)
Aug 30, 2024 7:58:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.270436036425549; Expression=u7(k)-u5(k)+98*Math.pow(10,-1)-u3(k)-89*Math.pow(10,-3)*u7(k)*90*Math.pow(10,-4)*u7(k); Java Expression: getVariable(7,k)-getVariable(5,k)+98*Math.pow(10,-1)-getVariable(3,k)-89*Math.pow(10,-3)*getVariable(7,k)*90*Math.pow(10,-4)*getVariable(7,k)
Aug 30, 2024 7:58:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.19830306264654; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-u7(k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k)+u8(k)-34*Math.pow(10,-6)*u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)+getVariable(8,k)-34*Math.pow(10,-6)*getVariable(4,k)
Aug 30, 2024 7:58:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.198138549442707; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-u7(k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k)+u8(k)-34*Math.pow(10,-8)*u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)+getVariable(8,k)-34*Math.pow(10,-8)*getVariable(4,k)
Aug 30, 2024 7:58:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.185138222477695; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-u7(k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k)+u8(k)+34*Math.pow(10,-3)*u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)+getVariable(8,k)+34*Math.pow(10,-3)*getVariable(4,k)
Aug 30, 2024 7:58:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.134677231249356; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-u7(k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k)+u8(k)*47*Math.pow(10,-3)*u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)+getVariable(8,k)*47*Math.pow(10,-3)*getVariable(4,k)
Aug 30, 2024 7:58:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.129910539568556; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-u7(k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k)+u8(k)*45*Math.pow(10,-3)*u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)+getVariable(8,k)*45*Math.pow(10,-3)*getVariable(4,k)
Aug 30, 2024 7:58:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.125297500441984; Expression=u7(k)-u5(k)+86*Math.pow(10,-1)-u3(k)-u7(k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k)+u8(k)*45*Math.pow(10,-3)*u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+86*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)+getVariable(8,k)*45*Math.pow(10,-3)*getVariable(4,k)
Aug 30, 2024 7:59:26 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.125297500441984 -->> Avg.: 5.512178411016942 -->> Std. Dev.: 0.2583267602625744
Aug 30, 2024 7:59:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.114710385849396; Expression=u7(k)-u5(k)+86*Math.pow(10,-1)-u3(k)-u7(k)*98*Math.pow(10,-3)*92*Math.pow(10,-4)*u7(k)+u8(k)*45*Math.pow(10,-3)*u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)+86*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*98*Math.pow(10,-3)*92*Math.pow(10,-4)*getVariable(7,k)+getVariable(8,k)*45*Math.pow(10,-3)*getVariable(4,k)
Aug 30, 2024 7:59:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.083679486920634; Expression=u7(k)-u5(k)+86*Math.pow(10,-1)-u3(k)-u7(k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k)+u3(k)*45*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+86*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)+getVariable(3,k)*45*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 8:00:06 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.059346798406611; Expression=u7(k)-u5(k)+86*Math.pow(10,-1)-u3(k)-u7(k)*98*Math.pow(10,-3)*95*Math.pow(10,-4)*u7(k)+u3(k)*45*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+86*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*98*Math.pow(10,-3)*95*Math.pow(10,-4)*getVariable(7,k)+getVariable(3,k)*45*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 8:00:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.031432576448967; Expression=u7(k)-u5(k)+59*Math.pow(10,-1)-u3(k)-u7(k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*u7(k)+u3(k)*89*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+59*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*98*Math.pow(10,-3)*90*Math.pow(10,-4)*getVariable(7,k)+getVariable(3,k)*89*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 8:00:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.021946280694846; Expression=u7(k)-u5(k)+87*Math.pow(10,-1)-u3(k)-u7(k)*98*Math.pow(10,-3)*99*Math.pow(10,-4)*u7(k)+u3(k)*57*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+87*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*98*Math.pow(10,-3)*99*Math.pow(10,-4)*getVariable(7,k)+getVariable(3,k)*57*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 8:00:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.016824558191182; Expression=u7(k)-u5(k)+59*Math.pow(10,-1)-u3(k)-u7(k)*98*Math.pow(10,-3)*92*Math.pow(10,-4)*u7(k)+u3(k)*89*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+59*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*98*Math.pow(10,-3)*92*Math.pow(10,-4)*getVariable(7,k)+getVariable(3,k)*89*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 8:01:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.016824558191181; Expression=u7(k)-u5(k)+59*Math.pow(10,-1)-u3(k)-u7(k)*u7(k)*98*Math.pow(10,-3)*92*Math.pow(10,-4)+u3(k)*89*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+59*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*getVariable(7,k)*98*Math.pow(10,-3)*92*Math.pow(10,-4)+getVariable(3,k)*89*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 8:01:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0122247071007; Expression=u7(k)-u5(k)+59*Math.pow(10,-1)-u3(k)-u7(k)*98*Math.pow(10,-3)*94*Math.pow(10,-4)*u7(k)+u3(k)*89*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+59*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*98*Math.pow(10,-3)*94*Math.pow(10,-4)*getVariable(7,k)+getVariable(3,k)*89*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 8:02:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.008818765812708; Expression=u7(k)-u5(k)+61*Math.pow(10,-1)-u3(k)-u7(k)*98*Math.pow(10,-3)*94*Math.pow(10,-4)*u7(k)+u3(k)*89*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+61*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*98*Math.pow(10,-3)*94*Math.pow(10,-4)*getVariable(7,k)+getVariable(3,k)*89*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 8:02:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.008818765812707; Expression=u7(k)-u5(k)+61*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*94*Math.pow(10,-4)*u7(k)*u7(k)+89*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+61*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*94*Math.pow(10,-4)*getVariable(7,k)*getVariable(7,k)+89*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:03:08 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.008818765812707 -->> Avg.: 5.3378910412044425 -->> Std. Dev.: 0.21562705414982927
Aug 30, 2024 8:03:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.005579032873315; Expression=u7(k)-u5(k)+61*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*96*Math.pow(10,-4)*u7(k)*u7(k)+89*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+61*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*96*Math.pow(10,-4)*getVariable(7,k)*getVariable(7,k)+89*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:04:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.002417173549401; Expression=u7(k)-u5(k)+64*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*96*Math.pow(10,-4)*u7(k)*u7(k)+89*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+64*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*96*Math.pow(10,-4)*getVariable(7,k)*getVariable(7,k)+89*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:05:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.001471036237139; Expression=u7(k)-u5(k)+64*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*96*Math.pow(10,-4)*u7(k)*u7(k)+88*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+64*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*96*Math.pow(10,-4)*getVariable(7,k)*getVariable(7,k)+88*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:05:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9981113595862; Expression=u7(k)-u5(k)+64*Math.pow(10,-1)-u3(k)-99*Math.pow(10,-3)*96*Math.pow(10,-4)*u7(k)*u7(k)+89*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+64*Math.pow(10,-1)-getVariable(3,k)-99*Math.pow(10,-3)*96*Math.pow(10,-4)*getVariable(7,k)*getVariable(7,k)+89*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:06:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.996855521468261; Expression=u7(k)-u5(k)+64*Math.pow(10,-1)-u3(k)-99*Math.pow(10,-3)*98*Math.pow(10,-4)*u7(k)*u7(k)+89*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)+64*Math.pow(10,-1)-getVariable(3,k)-99*Math.pow(10,-3)*98*Math.pow(10,-4)*getVariable(7,k)*getVariable(7,k)+89*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:06:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9211901479045785; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*96*Math.pow(10,-4)*u7(k)*u7(k)+89*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*96*Math.pow(10,-4)*getVariable(7,k)*getVariable(7,k)+89*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:06:53 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.9211901479045785 -->> Avg.: 5.21606019494099 -->> Std. Dev.: 0.18009878393361634
Aug 30, 2024 8:07:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.907723461482012; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*97*Math.pow(10,-4)*u7(k)*u7(k)+89*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*97*Math.pow(10,-4)*getVariable(7,k)*getVariable(7,k)+89*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:08:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.905832681106931; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*97*Math.pow(10,-4)*u7(k)*u7(k)+87*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*97*Math.pow(10,-4)*getVariable(7,k)*getVariable(7,k)+87*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:08:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.8968884737811615; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-99*Math.pow(10,-3)*97*Math.pow(10,-4)*u7(k)*u7(k)+89*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-99*Math.pow(10,-3)*97*Math.pow(10,-4)*getVariable(7,k)*getVariable(7,k)+89*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:08:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.888406030838523; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*99*Math.pow(10,-4)*u7(k)*u7(k)+89*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*99*Math.pow(10,-4)*getVariable(7,k)*getVariable(7,k)+89*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:09:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.887858060160182; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-98*Math.pow(10,-3)*99*Math.pow(10,-4)*u7(k)*u7(k)+90*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-98*Math.pow(10,-3)*99*Math.pow(10,-4)*getVariable(7,k)*getVariable(7,k)+90*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:09:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.882539270030739; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-99*Math.pow(10,-3)*99*Math.pow(10,-4)*u7(k)*u7(k)+89*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-99*Math.pow(10,-3)*99*Math.pow(10,-4)*getVariable(7,k)*getVariable(7,k)+89*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:10:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.882539270030738; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-u7(k)*99*Math.pow(10,-3)*u7(k)*99*Math.pow(10,-4)+89*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*99*Math.pow(10,-3)*getVariable(7,k)*99*Math.pow(10,-4)+89*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:10:38 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.882539270030738 -->> Avg.: 5.1039352969651635 -->> Std. Dev.: 0.16130462754180122
Aug 30, 2024 8:11:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.880642390396648; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-99*Math.pow(10,-3)*99*Math.pow(10,-4)*u7(k)*u7(k)+90*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-99*Math.pow(10,-3)*99*Math.pow(10,-4)*getVariable(7,k)*getVariable(7,k)+90*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:11:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.87981004781838; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-u7(k)*99*Math.pow(10,-5)*u7(k)-99*Math.pow(10,-4)+89*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*99*Math.pow(10,-5)*getVariable(7,k)-99*Math.pow(10,-4)+89*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:11:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.8793011793419145; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-u7(k)*99*Math.pow(10,-5)*u7(k)-70*Math.pow(10,-6)+89*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*99*Math.pow(10,-5)*getVariable(7,k)-70*Math.pow(10,-6)+89*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:11:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.870850291050366; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-u7(k)*99*Math.pow(10,-5)*u7(k)-12*Math.pow(10,-4)+94*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*99*Math.pow(10,-5)*getVariable(7,k)-12*Math.pow(10,-4)+94*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:11:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.8707578494993395; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-u7(k)*99*Math.pow(10,-5)*u7(k)-12*Math.pow(10,-3)+94*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*99*Math.pow(10,-5)*getVariable(7,k)-12*Math.pow(10,-3)+94*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:12:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.870739293377394; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-u7(k)*99*Math.pow(10,-5)*u7(k)-82*Math.pow(10,-3)+94*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*99*Math.pow(10,-5)*getVariable(7,k)-82*Math.pow(10,-3)+94*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:12:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.87073642085192; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-u7(k)*99*Math.pow(10,-5)*u7(k)-15*Math.pow(10,-3)+94*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*99*Math.pow(10,-5)*getVariable(7,k)-15*Math.pow(10,-3)+94*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:12:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.87067833652833; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-u7(k)*99*Math.pow(10,-5)*u7(k)-25*Math.pow(10,-3)+94*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*99*Math.pow(10,-5)*getVariable(7,k)-25*Math.pow(10,-3)+94*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:12:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.870634420490887; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-u7(k)*99*Math.pow(10,-5)*u7(k)-59*Math.pow(10,-3)+94*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*99*Math.pow(10,-5)*getVariable(7,k)-59*Math.pow(10,-3)+94*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:13:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.870625522009443; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-u7(k)*99*Math.pow(10,-5)*u7(k)-43*Math.pow(10,-3)+94*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*99*Math.pow(10,-5)*getVariable(7,k)-43*Math.pow(10,-3)+94*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:13:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.870624538321656; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-u7(k)*99*Math.pow(10,-5)*u7(k)-44*Math.pow(10,-3)+94*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*99*Math.pow(10,-5)*getVariable(7,k)-44*Math.pow(10,-3)+94*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:14:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.870574423347896; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-u7(k)*99*Math.pow(10,-5)*u7(k)-59*Math.pow(10,-3)+95*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*99*Math.pow(10,-5)*getVariable(7,k)-59*Math.pow(10,-3)+95*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:14:22 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.870574423347896 -->> Avg.: 5.019220452536346 -->> Std. Dev.: 0.14513364721846334
Aug 30, 2024 8:14:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.87054549097368; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-u7(k)*99*Math.pow(10,-5)*u7(k)-62*Math.pow(10,-3)+95*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*99*Math.pow(10,-5)*getVariable(7,k)-62*Math.pow(10,-3)+95*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)
Aug 30, 2024 8:14:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.870357794082248; Expression=u7(k)-u5(k)*8*Math.pow(10,-1)-u3(k)-u7(k)*99*Math.pow(10,-5)*u7(k)-92*Math.pow(10,-3)+95*Math.pow(10,-3)*u3(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*99*Math.pow(10,-5)*getVariable(7,k)-92*Math.pow(10,-3)+95*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)

Execution time: 1890.302 seconds.



@@;getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*99*Math.pow(10,-5)*getVariable(7,k)-92*Math.pow(10,-3)+95*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k)



Run #8
========
Aug 30, 2024 8:14:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.25706592737827E10; Expression=18*Math.pow(10,-8)-44*Math.pow(10,+2)-u4(k)+2*Math.pow(10,-5)+u9(k)*u3(k)+55*Math.pow(10,-2)*5*Math.pow(10,+8)*u9(k)-40*Math.pow(10,-8)-u9(k)+u6(k)+u3(k)*u9(k)-u4(k)-u2(k)-99*Math.pow(10,+6)*u8(k)-u5(k)+u2(k)+u7(k)*4*Math.pow(10,+8)+u7(k)+u9(k)-u2(k)-70*Math.pow(10,-1)-u2(k)-u7(k); Java Expression: 18*Math.pow(10,-8)-44*Math.pow(10,+2)-getVariable(4,k)+2*Math.pow(10,-5)+getVariable(9,k)*getVariable(3,k)+55*Math.pow(10,-2)*5*Math.pow(10,+8)*getVariable(9,k)-40*Math.pow(10,-8)-getVariable(9,k)+getVariable(6,k)+getVariable(3,k)*getVariable(9,k)-getVariable(4,k)-getVariable(2,k)-99*Math.pow(10,+6)*getVariable(8,k)-getVariable(5,k)+getVariable(2,k)+getVariable(7,k)*4*Math.pow(10,+8)+getVariable(7,k)+getVariable(9,k)-getVariable(2,k)-70*Math.pow(10,-1)-getVariable(2,k)-getVariable(7,k)
Aug 30, 2024 8:14:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=86.13548323672744; Expression=u4(k)+u1(k); Java Expression: getVariable(4,k)+getVariable(1,k)
Aug 30, 2024 8:14:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=14.916756659204442; Expression=23*Math.pow(10,-4)*u1(k)-u1(k)+u8(k)*71*Math.pow(10,-3)*9*Math.pow(10,-2)*u1(k)+u7(k); Java Expression: 23*Math.pow(10,-4)*getVariable(1,k)-getVariable(1,k)+getVariable(8,k)*71*Math.pow(10,-3)*9*Math.pow(10,-2)*getVariable(1,k)+getVariable(7,k)
Aug 30, 2024 8:14:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.328881351172834; Expression=23*Math.pow(10,-2)+68*Math.pow(10,-3)+u5(k); Java Expression: 23*Math.pow(10,-2)+68*Math.pow(10,-3)+getVariable(5,k)
Aug 30, 2024 8:14:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.059461641840322; Expression=u8(k)+u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 8:14:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 8:14:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.545490207838515; Expression=u8(k)*u8(k)+u5(k); Java Expression: getVariable(8,k)*getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 8:14:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837859; Expression=u7(k)-u4(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)
Aug 30, 2024 8:14:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077423531067617; Expression=u7(k)-u4(k)-18*Math.pow(10,-6)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-18*Math.pow(10,-6)-getVariable(5,k)
Aug 30, 2024 8:14:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.073496076654043; Expression=u7(k)-u4(k)-18*Math.pow(10,-3)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-18*Math.pow(10,-3)-getVariable(5,k)
Aug 30, 2024 8:14:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.946906522758424; Expression=u7(k)-u4(k)-18*Math.pow(10,-1)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-18*Math.pow(10,-1)-getVariable(5,k)
Aug 30, 2024 8:14:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.938284314811643; Expression=u7(k)-u4(k)-10*Math.pow(10,-1)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-10*Math.pow(10,-1)-getVariable(5,k)
Aug 30, 2024 8:15:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.929119571823652; Expression=u7(k)-u4(k)-14*Math.pow(10,-1)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-14*Math.pow(10,-1)-getVariable(5,k)
Aug 30, 2024 8:15:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928882637025394; Expression=u7(k)-u4(k)-13*Math.pow(10,-1)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-13*Math.pow(10,-1)-getVariable(5,k)
Aug 30, 2024 8:15:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928882637025391; Expression=u7(k)-u5(k)-13*Math.pow(10,-1)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-13*Math.pow(10,-1)-getVariable(4,k)
Aug 30, 2024 8:16:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.92083878735857; Expression=u7(k)-u5(k)-19*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-19*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 8:16:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.86053974635668; Expression=u7(k)-u5(k)-24*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-24*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 8:16:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.84409438030483; Expression=u7(k)-u5(k)-30*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-30*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 8:16:47 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.84409438030483 -->> Avg.: 1.0111811068512354E10 -->> Std. Dev.: 4.295273612303791E10
Aug 30, 2024 8:16:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.84256110719975; Expression=u7(k)-u5(k)-29*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-29*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 30, 2024 8:17:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.842561107199749; Expression=u7(k)-u4(k)-29*Math.pow(10,-1)-u5(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-29*Math.pow(10,-1)-getVariable(5,k)+getVariable(8,k)
Aug 30, 2024 8:17:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.797449070521119; Expression=u7(k)-u5(k)-24*Math.pow(10,-2)*u2(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(5,k)-24*Math.pow(10,-2)*getVariable(2,k)+getVariable(8,k)
Aug 30, 2024 8:18:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.797410755796385; Expression=u7(k)-u5(k)-24*Math.pow(10,-2)*u2(k)+u8(k)-71*Math.pow(10,-4)*73*Math.pow(10,-5)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-24*Math.pow(10,-2)*getVariable(2,k)+getVariable(8,k)-71*Math.pow(10,-4)*73*Math.pow(10,-5)*getVariable(1,k)
Aug 30, 2024 8:18:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.797152323082114; Expression=u7(k)-u5(k)-24*Math.pow(10,-2)*u2(k)+u8(k)-93*Math.pow(10,-5)*94*Math.pow(10,-3)*u6(k); Java Expression: getVariable(7,k)-getVariable(5,k)-24*Math.pow(10,-2)*getVariable(2,k)+getVariable(8,k)-93*Math.pow(10,-5)*94*Math.pow(10,-3)*getVariable(6,k)
Aug 30, 2024 8:19:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.77427855685917; Expression=u7(k)-u5(k)-24*Math.pow(10,-2)*u2(k)+u8(k)-71*Math.pow(10,-4)*u1(k); Java Expression: getVariable(7,k)-getVariable(5,k)-24*Math.pow(10,-2)*getVariable(2,k)+getVariable(8,k)-71*Math.pow(10,-4)*getVariable(1,k)
Aug 30, 2024 8:19:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.474565749365028; Expression=u7(k)-u4(k)-43*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-43*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 8:19:13 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.474565749365028 -->> Avg.: 2248363.9389301687 -->> Std. Dev.: 1.083546685447871E7
Aug 30, 2024 8:19:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.47448560183126; Expression=u7(k)-u4(k)-43*Math.pow(10,-2)*u1(k)+u1(k)*17*Math.pow(10,-4)*4*Math.pow(10,-5)*u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-43*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*17*Math.pow(10,-4)*4*Math.pow(10,-5)*getVariable(2,k)
Aug 30, 2024 8:20:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.47341481976075; Expression=u7(k)-u4(k)-43*Math.pow(10,-2)*u1(k)+u1(k)*18*Math.pow(10,-4)*55*Math.pow(10,-5)*u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-43*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*18*Math.pow(10,-4)*55*Math.pow(10,-5)*getVariable(2,k)
Aug 30, 2024 8:20:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.467350566908916; Expression=u7(k)-u4(k)-43*Math.pow(10,-2)*u1(k)+u1(k)*17*Math.pow(10,-4)*4*Math.pow(10,-3)*u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-43*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*17*Math.pow(10,-4)*4*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 8:20:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.46715121260748; Expression=u7(k)-u4(k)-43*Math.pow(10,-2)*u1(k)+u1(k)*17*Math.pow(10,-4)*4*Math.pow(10,-3)*u6(k); Java Expression: getVariable(7,k)-getVariable(4,k)-43*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*17*Math.pow(10,-4)*4*Math.pow(10,-3)*getVariable(6,k)
Aug 30, 2024 8:20:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4634124694270545; Expression=u7(k)-u4(k)-43*Math.pow(10,-2)*u1(k)+u1(k)*18*Math.pow(10,-4)-55*Math.pow(10,-5)*u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-43*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*18*Math.pow(10,-4)-55*Math.pow(10,-5)*getVariable(2,k)
Aug 30, 2024 8:20:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.455630482964655; Expression=u7(k)-u4(k)-43*Math.pow(10,-2)*u1(k)+u1(k)*66*Math.pow(10,-4)*4*Math.pow(10,-3)*u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-43*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*66*Math.pow(10,-4)*4*Math.pow(10,-3)*getVariable(2,k)
Aug 30, 2024 8:20:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.455329478330797; Expression=u7(k)-u4(k)-43*Math.pow(10,-2)*u1(k)+u1(k)*17*Math.pow(10,-1)*4*Math.pow(10,-5)*u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-43*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*17*Math.pow(10,-1)*4*Math.pow(10,-5)*getVariable(5,k)
Aug 30, 2024 8:20:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.428684484325889; Expression=u7(k)-u4(k)-43*Math.pow(10,-2)*u1(k)+u1(k)*17*Math.pow(10,-1)*4*Math.pow(10,-5)*u6(k); Java Expression: getVariable(7,k)-getVariable(4,k)-43*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*17*Math.pow(10,-1)*4*Math.pow(10,-5)*getVariable(6,k)
Aug 30, 2024 8:20:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.42805172011312; Expression=u7(k)-u4(k)-43*Math.pow(10,-2)*u1(k)+u1(k)*17*Math.pow(10,-4)*42*Math.pow(10,-3)*u6(k); Java Expression: getVariable(7,k)-getVariable(4,k)-43*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*17*Math.pow(10,-4)*42*Math.pow(10,-3)*getVariable(6,k)
Aug 30, 2024 8:20:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4029931004294465; Expression=u7(k)-u4(k)-40*Math.pow(10,-2)*u1(k)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-40*Math.pow(10,-2)*getVariable(1,k)-getVariable(8,k)
Aug 30, 2024 8:20:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.402087998864088; Expression=u7(k)-u4(k)-40*Math.pow(10,-2)*u1(k)-u8(k)-55*Math.pow(10,-4)+30*Math.pow(10,-5)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-40*Math.pow(10,-2)*getVariable(1,k)-getVariable(8,k)-55*Math.pow(10,-4)+30*Math.pow(10,-5)*getVariable(8,k)
Aug 30, 2024 8:20:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.278295869319859; Expression=u7(k)-u3(k)-40*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(3,k)-40*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 8:21:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.278292373459881; Expression=u7(k)-u3(k)-40*Math.pow(10,-2)*u1(k)+u8(k)*90*Math.pow(10,-4)*60*Math.pow(10,-5)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-40*Math.pow(10,-2)*getVariable(1,k)+getVariable(8,k)*90*Math.pow(10,-4)*60*Math.pow(10,-5)*getVariable(3,k)
Aug 30, 2024 8:21:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2782470434405955; Expression=u7(k)-u3(k)-40*Math.pow(10,-2)*u1(k)+u8(k)*47*Math.pow(10,-4)*55*Math.pow(10,-3)*u1(k); Java Expression: getVariable(7,k)-getVariable(3,k)-40*Math.pow(10,-2)*getVariable(1,k)+getVariable(8,k)*47*Math.pow(10,-4)*55*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 8:21:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.276915781604498; Expression=u7(k)-u3(k)-40*Math.pow(10,-2)*u1(k)+u6(k)*90*Math.pow(10,-4)*60*Math.pow(10,-5)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-40*Math.pow(10,-2)*getVariable(1,k)+getVariable(6,k)*90*Math.pow(10,-4)*60*Math.pow(10,-5)*getVariable(3,k)
Aug 30, 2024 8:21:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.276831929953591; Expression=u7(k)-u3(k)-40*Math.pow(10,-2)*u1(k)+u1(k)*90*Math.pow(10,-4)*60*Math.pow(10,-5)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-40*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*90*Math.pow(10,-4)*60*Math.pow(10,-5)*getVariable(3,k)
Aug 30, 2024 8:21:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.27584090771526; Expression=u7(k)-u3(k)-40*Math.pow(10,-2)*u1(k)+u1(k)*47*Math.pow(10,-4)*55*Math.pow(10,-3)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-40*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*47*Math.pow(10,-4)*55*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 8:21:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2656045985161235; Expression=u7(k)-u3(k)-40*Math.pow(10,-2)*u1(k)+u1(k)*38*Math.pow(10,-4)*55*Math.pow(10,-3)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-40*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*38*Math.pow(10,-4)*55*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 8:21:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.261395988961193; Expression=u7(k)-u3(k)-40*Math.pow(10,-2)*u1(k)+u1(k)*47*Math.pow(10,-4)*20*Math.pow(10,-3)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-40*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*47*Math.pow(10,-4)*20*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 8:21:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.260673438170086; Expression=u7(k)-u3(k)-40*Math.pow(10,-2)*u1(k)+u1(k)*52*Math.pow(10,-4)*20*Math.pow(10,-3)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-40*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*52*Math.pow(10,-4)*20*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 8:21:49 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.260673438170086 -->> Avg.: 597.146935790272 -->> Std. Dev.: 1716.9888223698897
Aug 30, 2024 8:21:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.260118076287568; Expression=u7(k)-u3(k)-40*Math.pow(10,-2)*u1(k)+u1(k)*25*Math.pow(10,-4)*46*Math.pow(10,-3)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-40*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*25*Math.pow(10,-4)*46*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 8:21:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.259754653404312; Expression=u7(k)-u3(k)-40*Math.pow(10,-2)*u1(k)+u1(k)*68*Math.pow(10,-4)*20*Math.pow(10,-3)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-40*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*68*Math.pow(10,-4)*20*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 8:22:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.180686577927129; Expression=u7(k)-u3(k)-43*Math.pow(10,-2)*u1(k)+u1(k)*82*Math.pow(10,-4)*95*Math.pow(10,-3)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-43*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*82*Math.pow(10,-4)*95*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 8:22:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.175628799994438; Expression=u7(k)-u3(k)-43*Math.pow(10,-2)*u1(k)+u1(k)*85*Math.pow(10,-4)*95*Math.pow(10,-3)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-43*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*85*Math.pow(10,-4)*95*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 8:22:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1750139371710775; Expression=u7(k)-u3(k)-43*Math.pow(10,-2)*u1(k)+u1(k)*82*Math.pow(10,-4)*99*Math.pow(10,-3)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-43*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*82*Math.pow(10,-4)*99*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 8:22:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.171043124735615; Expression=u7(k)-u3(k)-43*Math.pow(10,-2)*u1(k)+u1(k)*91*Math.pow(10,-4)*99*Math.pow(10,-3)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-43*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*91*Math.pow(10,-4)*99*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 8:22:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.94056310229046; Expression=u7(k)-u3(k)-71*Math.pow(10,-2)*u1(k)+u1(k)*82*Math.pow(10,-4)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*82*Math.pow(10,-4)*getVariable(3,k)
Aug 30, 2024 8:23:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.891007681831759; Expression=u7(k)-u3(k)-71*Math.pow(10,-2)*u1(k)+u1(k)*75*Math.pow(10,-4)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*75*Math.pow(10,-4)*getVariable(3,k)
Aug 30, 2024 8:23:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.812059124963576; Expression=u7(k)-u3(k)-69*Math.pow(10,-2)*u1(k)+u1(k)*75*Math.pow(10,-4)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-69*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*75*Math.pow(10,-4)*getVariable(3,k)
Aug 30, 2024 8:23:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.796863749061946; Expression=u7(k)-u3(k)-73*Math.pow(10,-2)*u1(k)+u1(k)*82*Math.pow(10,-4)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-73*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*82*Math.pow(10,-4)*getVariable(3,k)
Aug 30, 2024 8:24:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.790555072282004; Expression=u7(k)-u3(k)-73*Math.pow(10,-2)*u1(k)+u1(k)*84*Math.pow(10,-4)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-73*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*84*Math.pow(10,-4)*getVariable(3,k)
Aug 30, 2024 8:24:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.777722063309407; Expression=u7(k)-u3(k)-71*Math.pow(10,-2)*u1(k)+u1(k)*82*Math.pow(10,-1)*95*Math.pow(10,-5)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*82*Math.pow(10,-1)*95*Math.pow(10,-5)*getVariable(3,k)
Aug 30, 2024 8:24:37 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 4.777722063309407 -->> Avg.: 18.27540193199951 -->> Std. Dev.: 30.473852112468162
Aug 30, 2024 8:25:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.777194519846279; Expression=u7(k)-u3(k)-71*Math.pow(10,-2)*u1(k)+u1(k)*78*Math.pow(10,-4)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*78*Math.pow(10,-4)*getVariable(3,k)
Aug 30, 2024 8:27:28 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.777194519846279 -->> Avg.: 5.623481033869993 -->> Std. Dev.: 1.4607572639094577
Aug 30, 2024 8:29:54 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.777194519846279 -->> Avg.: 5.16865966432928 -->> Std. Dev.: 0.4236824377335378
Aug 30, 2024 8:31:45 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.777194519846279 -->> Avg.: 4.963636446555821 -->> Std. Dev.: 0.28708398290653464
Aug 30, 2024 8:33:40 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.777194519846279 -->> Avg.: 4.830250445586648 -->> Std. Dev.: 0.13791731705814222
Aug 30, 2024 8:34:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.773599355746651; Expression=u7(k)-u3(k)-71*Math.pow(10,-2)*u1(k)+u1(k)*78*Math.pow(10,-4)*u3(k)+62*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*78*Math.pow(10,-4)*getVariable(3,k)+62*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:34:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.7734731930068754; Expression=u7(k)-u3(k)-71*Math.pow(10,-2)*u1(k)+u1(k)*78*Math.pow(10,-4)*u3(k)+59*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*78*Math.pow(10,-4)*getVariable(3,k)+59*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:34:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.773412261943638; Expression=u7(k)-u3(k)-71*Math.pow(10,-2)*u1(k)+u1(k)*78*Math.pow(10,-4)*u3(k)+39*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*78*Math.pow(10,-4)*getVariable(3,k)+39*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:34:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.772995224053384; Expression=u7(k)-u3(k)-71*Math.pow(10,-2)*u1(k)+u1(k)*78*Math.pow(10,-4)*u3(k)+62*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*78*Math.pow(10,-4)*getVariable(3,k)+62*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 8:34:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.771777107383714; Expression=u7(k)-u3(k)-71*Math.pow(10,-2)*u1(k)+u1(k)*78*Math.pow(10,-4)*u3(k)+90*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*78*Math.pow(10,-4)*getVariable(3,k)+90*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 8:35:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.771706266052179; Expression=u7(k)-u3(k)-71*Math.pow(10,-2)*u1(k)+u1(k)*78*Math.pow(10,-4)*u3(k)+92*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*78*Math.pow(10,-4)*getVariable(3,k)+92*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 8:35:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.771571051971051; Expression=u7(k)-u3(k)-71*Math.pow(10,-2)*u1(k)+u1(k)*78*Math.pow(10,-4)*u3(k)+96*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*78*Math.pow(10,-4)*getVariable(3,k)+96*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 8:35:34 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.771571051971051 -->> Avg.: 4.776824984238155 -->> Std. Dev.: 0.0021070813727438677
Aug 30, 2024 8:35:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.761225572006149; Expression=u7(k)-u3(k)-71*Math.pow(10,-2)*u1(k)+u1(k)*78*Math.pow(10,-4)*u3(k)+u8(k)*90*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*78*Math.pow(10,-4)*getVariable(3,k)+getVariable(8,k)*90*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 8:35:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.760695501560713; Expression=u7(k)-u3(k)-71*Math.pow(10,-2)*u1(k)+u1(k)*78*Math.pow(10,-4)*u3(k)+u8(k)*96*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*78*Math.pow(10,-4)*getVariable(3,k)+getVariable(8,k)*96*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 8:36:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.760613669622246; Expression=u7(k)-u3(k)-71*Math.pow(10,-2)*u1(k)+u1(k)*78*Math.pow(10,-4)*u3(k)+u8(k)*97*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*78*Math.pow(10,-4)*getVariable(3,k)+getVariable(8,k)*97*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 8:36:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.760533698842886; Expression=u7(k)-u3(k)-71*Math.pow(10,-2)*u1(k)+u1(k)*78*Math.pow(10,-4)*u3(k)+u8(k)*98*Math.pow(10,-3)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*78*Math.pow(10,-4)*getVariable(3,k)+getVariable(8,k)*98*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 8:37:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.751249918591479; Expression=u7(k)-u3(k)-71*Math.pow(10,-2)*u1(k)+u1(k)*78*Math.pow(10,-4)*u3(k)+u8(k)*98*Math.pow(10,-3)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*78*Math.pow(10,-4)*getVariable(3,k)+getVariable(8,k)*98*Math.pow(10,-3)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 8:37:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.751093046194106; Expression=u7(k)-u3(k)-71*Math.pow(10,-2)*u1(k)+u1(k)*78*Math.pow(10,-4)*u3(k)+u8(k)*96*Math.pow(10,-3)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*78*Math.pow(10,-4)*getVariable(3,k)+getVariable(8,k)*96*Math.pow(10,-3)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 8:37:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.750794366798063; Expression=u7(k)-u3(k)-71*Math.pow(10,-2)*u1(k)+u1(k)*78*Math.pow(10,-4)*u3(k)+u8(k)*90*Math.pow(10,-3)*u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*78*Math.pow(10,-4)*getVariable(3,k)+getVariable(8,k)*90*Math.pow(10,-3)*getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 8:38:04 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.750794366798063 -->> Avg.: 4.773285577373941 -->> Std. Dev.: 0.007134770362070999

Execution time: 1418.804 seconds.



@@;getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*78*Math.pow(10,-4)*getVariable(3,k)+getVariable(8,k)*90*Math.pow(10,-3)*getVariable(8,k)*getVariable(8,k)



Run #9
========
Aug 30, 2024 8:38:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=2.5359366498341713E20; Expression=25*Math.pow(10,+8)-u8(k)-u5(k)-56*Math.pow(10,+2)*u6(k)-u5(k)*50*Math.pow(10,-1)*87*Math.pow(10,-6)+u2(k)*52*Math.pow(10,+8)-39*Math.pow(10,-3)+u9(k)*56*Math.pow(10,+5)*u7(k)+39*Math.pow(10,+3)+u3(k)+u5(k)+u7(k)*u5(k)-53*Math.pow(10,+4)*u7(k)*25*Math.pow(10,+9)*14*Math.pow(10,+1)+u8(k)*27*Math.pow(10,+3)-u5(k)-u6(k)+93*Math.pow(10,+9)*48*Math.pow(10,+8)+u2(k)*u2(k)+u6(k)-u3(k)+u1(k)+12*Math.pow(10,+2)-u1(k)*u2(k)*u6(k)-u5(k)-u9(k)*45*Math.pow(10,-6)*u7(k)*46*Math.pow(10,+5)*10*Math.pow(10,+4)+u2(k)-u9(k)*40*Math.pow(10,+1)+u3(k)-62*Math.pow(10,+5)*u4(k)-u8(k)-u8(k)*u8(k); Java Expression: 25*Math.pow(10,+8)-getVariable(8,k)-getVariable(5,k)-56*Math.pow(10,+2)*getVariable(6,k)-getVariable(5,k)*50*Math.pow(10,-1)*87*Math.pow(10,-6)+getVariable(2,k)*52*Math.pow(10,+8)-39*Math.pow(10,-3)+getVariable(9,k)*56*Math.pow(10,+5)*getVariable(7,k)+39*Math.pow(10,+3)+getVariable(3,k)+getVariable(5,k)+getVariable(7,k)*getVariable(5,k)-53*Math.pow(10,+4)*getVariable(7,k)*25*Math.pow(10,+9)*14*Math.pow(10,+1)+getVariable(8,k)*27*Math.pow(10,+3)-getVariable(5,k)-getVariable(6,k)+93*Math.pow(10,+9)*48*Math.pow(10,+8)+getVariable(2,k)*getVariable(2,k)+getVariable(6,k)-getVariable(3,k)+getVariable(1,k)+12*Math.pow(10,+2)-getVariable(1,k)*getVariable(2,k)*getVariable(6,k)-getVariable(5,k)-getVariable(9,k)*45*Math.pow(10,-6)*getVariable(7,k)*46*Math.pow(10,+5)*10*Math.pow(10,+4)+getVariable(2,k)-getVariable(9,k)*40*Math.pow(10,+1)+getVariable(3,k)-62*Math.pow(10,+5)*getVariable(4,k)-getVariable(8,k)-getVariable(8,k)*getVariable(8,k)
Aug 30, 2024 8:38:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=1.669954888722626E11; Expression=u1(k)*u4(k)+u3(k)-u9(k)+u5(k)*50*Math.pow(10,+8)+u3(k)-u1(k)-u4(k)+u2(k)+u2(k)+u9(k); Java Expression: getVariable(1,k)*getVariable(4,k)+getVariable(3,k)-getVariable(9,k)+getVariable(5,k)*50*Math.pow(10,+8)+getVariable(3,k)-getVariable(1,k)-getVariable(4,k)+getVariable(2,k)+getVariable(2,k)+getVariable(9,k)
Aug 30, 2024 8:38:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=307889.56211661454; Expression=83*Math.pow(10,+2)*u4(k); Java Expression: 83*Math.pow(10,+2)*getVariable(4,k)
Aug 30, 2024 8:38:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=71.55314747536714; Expression=u8(k)-u3(k); Java Expression: getVariable(8,k)-getVariable(3,k)
Aug 30, 2024 8:38:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=37.892555533089954; Expression=u5(k)-u4(k); Java Expression: getVariable(5,k)-getVariable(4,k)
Aug 30, 2024 8:38:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=35.168600009652316; Expression=u8(k)*u9(k); Java Expression: getVariable(8,k)*getVariable(9,k)
Aug 30, 2024 8:38:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.399642055642806; Expression=44*Math.pow(10,-4)+u4(k); Java Expression: 44*Math.pow(10,-4)+getVariable(4,k)
Aug 30, 2024 8:38:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.33040225414843; Expression=3*Math.pow(10,-3)+u5(k); Java Expression: 3*Math.pow(10,-3)+getVariable(5,k)
Aug 30, 2024 8:38:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.404135094767029; Expression=34*Math.pow(10,-2)*u6(k); Java Expression: 34*Math.pow(10,-2)*getVariable(6,k)
Aug 30, 2024 8:38:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837859; Expression=u7(k)-u5(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-getVariable(4,k)
Aug 30, 2024 8:38:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0773593505489325; Expression=u7(k)-u5(k)-31*Math.pow(10,-5)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-31*Math.pow(10,-5)-getVariable(4,k)
Aug 30, 2024 8:38:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.00064530869036; Expression=u7(k)-u5(k)-41*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-41*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:38:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.973053094308622; Expression=u7(k)-u5(k)-61*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-61*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:38:32 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.94948109385686; Expression=u7(k)-u5(k)-84*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-84*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:38:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9462802755592215; Expression=u7(k)-u5(k)-88*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-88*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:38:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.93885844638529; Expression=u7(k)-u5(k)-99*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-99*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:38:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.938858429492128; Expression=u7(k)-u5(k)-99*Math.pow(10,-2)-29*Math.pow(10,-8)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-99*Math.pow(10,-2)-29*Math.pow(10,-8)-getVariable(4,k)
Aug 30, 2024 8:38:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.93885839978351; Expression=u7(k)-u5(k)-99*Math.pow(10,-2)-80*Math.pow(10,-8)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-99*Math.pow(10,-2)-80*Math.pow(10,-8)-getVariable(4,k)
Aug 30, 2024 8:38:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.934735655856186; Expression=u7(k)-u5(k)-99*Math.pow(10,-2)-80*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-99*Math.pow(10,-2)-80*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 8:38:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9342100109192275; Expression=u7(k)-u5(k)-99*Math.pow(10,-2)-92*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-99*Math.pow(10,-2)-92*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 8:39:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.929633049433711; Expression=u7(k)-u5(k)-12*Math.pow(10,-1)-35*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-12*Math.pow(10,-1)-35*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 8:39:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.929519522608098; Expression=u7(k)-u5(k)-63*Math.pow(10,-2)-80*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-63*Math.pow(10,-2)-80*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:39:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.929151655665366; Expression=u7(k)-u5(k)-12*Math.pow(10,-1)-69*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-12*Math.pow(10,-1)-69*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 8:39:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928922056261113; Expression=u7(k)-u5(k)-12*Math.pow(10,-1)-94*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-12*Math.pow(10,-1)-94*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 8:39:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9287950916095475; Expression=u7(k)-u5(k)-61*Math.pow(10,-2)-71*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-61*Math.pow(10,-2)-71*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:39:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928775012847562; Expression=u7(k)-u5(k)-99*Math.pow(10,-2)-35*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-99*Math.pow(10,-2)-35*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:39:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.92877501284756; Expression=u7(k)-u5(k)-44*Math.pow(10,-2)-90*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(5,k)-44*Math.pow(10,-2)-90*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:39:25 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.92877501284756 -->> Avg.: 1.270841809377872E10 -->> Std. Dev.: 5.9520613215625984E10
Aug 30, 2024 8:39:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.778341936027727; Expression=u7(k)-u1(k)*44*Math.pow(10,-2)-90*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*44*Math.pow(10,-2)-90*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:39:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.619202790802474; Expression=u7(k)-u1(k)*44*Math.pow(10,-2)-17*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*44*Math.pow(10,-2)-17*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:39:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6145723010456186; Expression=u7(k)-u1(k)*44*Math.pow(10,-2)*93*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*44*Math.pow(10,-2)*93*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:39:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.607269200937241; Expression=u7(k)-u1(k)*44*Math.pow(10,-2)-90*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*44*Math.pow(10,-2)-90*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 8:39:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5951808987196845; Expression=u7(k)-u1(k)*44*Math.pow(10,-2)-17*Math.pow(10,-9)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*44*Math.pow(10,-2)-17*Math.pow(10,-9)-getVariable(4,k)
Aug 30, 2024 8:39:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.584517046165932; Expression=u7(k)-u1(k)*44*Math.pow(10,-2)+90*Math.pow(10,-3)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*44*Math.pow(10,-2)+90*Math.pow(10,-3)-getVariable(4,k)
Aug 30, 2024 8:39:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5536351159434805; Expression=u7(k)-u1(k)*44*Math.pow(10,-2)+90*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*44*Math.pow(10,-2)+90*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:39:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.553635112265453; Expression=u7(k)-u1(k)*44*Math.pow(10,-2)+90*Math.pow(10,-2)-u4(k)-12*Math.pow(10,-9)*u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*44*Math.pow(10,-2)+90*Math.pow(10,-2)-getVariable(4,k)-12*Math.pow(10,-9)*getVariable(4,k)
Aug 30, 2024 8:39:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.552675260015143; Expression=u7(k)-u1(k)*44*Math.pow(10,-2)+87*Math.pow(10,-2)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*44*Math.pow(10,-2)+87*Math.pow(10,-2)-getVariable(4,k)
Aug 30, 2024 8:39:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.378961835056725; Expression=u7(k)-u1(k)*41*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*41*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 8:40:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.351170229654723; Expression=u7(k)-u1(k)*41*Math.pow(10,-2)+22*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*41*Math.pow(10,-2)+22*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 8:40:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.321949374735015; Expression=u7(k)-u1(k)*41*Math.pow(10,-2)+89*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*41*Math.pow(10,-2)+89*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 8:40:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.273495089061909; Expression=u7(k)-u1(k)*44*Math.pow(10,-2)*90*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*44*Math.pow(10,-2)*90*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 8:40:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.272893193479762; Expression=u7(k)-u1(k)*75*Math.pow(10,-2)*53*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*75*Math.pow(10,-2)*53*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 8:40:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.272466935455686; Expression=u7(k)-u1(k)*44*Math.pow(10,-2)*90*Math.pow(10,-2)-17*Math.pow(10,-3)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*44*Math.pow(10,-2)*90*Math.pow(10,-2)-17*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 8:40:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.271435629135965; Expression=u7(k)-u1(k)*75*Math.pow(10,-2)*53*Math.pow(10,-2)-41*Math.pow(10,-3)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*75*Math.pow(10,-2)*53*Math.pow(10,-2)-41*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 8:40:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.268275304925812; Expression=u7(k)-u1(k)*44*Math.pow(10,-2)*90*Math.pow(10,-2)-99*Math.pow(10,-3)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*44*Math.pow(10,-2)*90*Math.pow(10,-2)-99*Math.pow(10,-3)-getVariable(3,k)
Aug 30, 2024 8:40:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.265674863252978; Expression=u7(k)-u1(k)*44*Math.pow(10,-2)*90*Math.pow(10,-2)-17*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*44*Math.pow(10,-2)*90*Math.pow(10,-2)-17*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 8:40:59 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.265674863252978 -->> Avg.: 1773373.1662261675 -->> Std. Dev.: 8034668.091422841
Aug 30, 2024 8:41:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.264525761637298; Expression=u7(k)-u1(k)*44*Math.pow(10,-2)*90*Math.pow(10,-2)-44*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*44*Math.pow(10,-2)*90*Math.pow(10,-2)-44*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 8:41:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2636937872358835; Expression=u7(k)-u1(k)*44*Math.pow(10,-2)*90*Math.pow(10,-2)-39*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*44*Math.pow(10,-2)*90*Math.pow(10,-2)-39*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 8:41:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.263326836988723; Expression=u7(k)-u1(k)*44*Math.pow(10,-2)*90*Math.pow(10,-2)-32*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*44*Math.pow(10,-2)*90*Math.pow(10,-2)-32*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 8:41:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.237833239622195; Expression=u7(k)-u1(k)*44*Math.pow(10,-2)*87*Math.pow(10,-2)-98*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*44*Math.pow(10,-2)*87*Math.pow(10,-2)-98*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 8:41:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.223365478626058; Expression=u7(k)-u1(k)*44*Math.pow(10,-2)*87*Math.pow(10,-2)-u3(k)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*44*Math.pow(10,-2)*87*Math.pow(10,-2)-getVariable(3,k)-getVariable(8,k)
Aug 30, 2024 8:41:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.216372730158149; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-62*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-62*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 8:42:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2160971756762615; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-64*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-64*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 8:42:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.215898295812335; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-66*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-66*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 8:42:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.215761774730403; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)-66*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)-66*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 8:42:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.21573659684408; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-99*Math.pow(10,-2)-62*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-99*Math.pow(10,-2)-62*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 8:42:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.21573059164089; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-70*Math.pow(10,-2)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-70*Math.pow(10,-2)-getVariable(3,k)
Aug 30, 2024 8:42:51 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.21573059164089 -->> Avg.: 406.37474470680604 -->> Std. Dev.: 1296.0959294121842
Aug 30, 2024 8:43:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.215730591415306; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-70*Math.pow(10,-2)-63*Math.pow(10,-8)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-70*Math.pow(10,-2)-63*Math.pow(10,-8)-getVariable(3,k)
Aug 30, 2024 8:43:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.215730404075026; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-70*Math.pow(10,-2)-63*Math.pow(10,-5)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-70*Math.pow(10,-2)-63*Math.pow(10,-5)-getVariable(3,k)
Aug 30, 2024 8:43:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.215729807351712; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-70*Math.pow(10,-2)-u3(k)+63*Math.pow(10,-8)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-70*Math.pow(10,-2)-getVariable(3,k)+63*Math.pow(10,-8)*getVariable(3,k)
Aug 30, 2024 8:43:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.213863760516925; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-70*Math.pow(10,-2)-u3(k)+63*Math.pow(10,-4)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-70*Math.pow(10,-2)-getVariable(3,k)+63*Math.pow(10,-4)*getVariable(3,k)
Aug 30, 2024 8:43:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2132332507197505; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-99*Math.pow(10,-2)-62*Math.pow(10,-2)-u3(k)+60*Math.pow(10,-4)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-99*Math.pow(10,-2)-62*Math.pow(10,-2)-getVariable(3,k)+60*Math.pow(10,-4)*getVariable(3,k)
Aug 30, 2024 8:43:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.213185079903811; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-70*Math.pow(10,-2)-u3(k)+37*Math.pow(10,-4)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-70*Math.pow(10,-2)-getVariable(3,k)+37*Math.pow(10,-4)*getVariable(3,k)
Aug 30, 2024 8:43:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.207840838863066; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-95*Math.pow(10,-2)-u3(k)+63*Math.pow(10,-4)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-95*Math.pow(10,-2)-getVariable(3,k)+63*Math.pow(10,-4)*getVariable(3,k)
Aug 30, 2024 8:43:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.207715947073211; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-89*Math.pow(10,-2)-u3(k)+70*Math.pow(10,-4)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-89*Math.pow(10,-2)-getVariable(3,k)+70*Math.pow(10,-4)*getVariable(3,k)
Aug 30, 2024 8:43:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.206481775926219; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)-89*Math.pow(10,-2)-u3(k)+76*Math.pow(10,-4)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)-89*Math.pow(10,-2)-getVariable(3,k)+76*Math.pow(10,-4)*getVariable(3,k)
Aug 30, 2024 8:44:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.205588150481642; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)-89*Math.pow(10,-2)-u3(k)+9*Math.pow(10,-3)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)-89*Math.pow(10,-2)-getVariable(3,k)+9*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 8:44:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.205508761434233; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)-89*Math.pow(10,-2)-u3(k)+92*Math.pow(10,-4)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)-89*Math.pow(10,-2)-getVariable(3,k)+92*Math.pow(10,-4)*getVariable(3,k)
Aug 30, 2024 8:44:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.205363095921614; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-95*Math.pow(10,-2)-u3(k)+97*Math.pow(10,-4)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-95*Math.pow(10,-2)-getVariable(3,k)+97*Math.pow(10,-4)*getVariable(3,k)
Aug 30, 2024 8:44:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.205343015881637; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-95*Math.pow(10,-2)-u3(k)+98*Math.pow(10,-4)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-90*Math.pow(10,-2)-95*Math.pow(10,-2)-getVariable(3,k)+98*Math.pow(10,-4)*getVariable(3,k)
Aug 30, 2024 8:44:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.205113844555598; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-91*Math.pow(10,-2)-95*Math.pow(10,-2)-u3(k)+97*Math.pow(10,-4)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-91*Math.pow(10,-2)-95*Math.pow(10,-2)-getVariable(3,k)+97*Math.pow(10,-4)*getVariable(3,k)
Aug 30, 2024 8:44:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.188080706015782; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-70*Math.pow(10,-2)*63*Math.pow(10,-1)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-70*Math.pow(10,-2)*63*Math.pow(10,-1)-getVariable(3,k)
Aug 30, 2024 8:44:46 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.188080706015782 -->> Avg.: 15.825757449314834 -->> Std. Dev.: 23.337643717952915
Aug 30, 2024 8:45:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.187375525837341; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-70*Math.pow(10,-2)*69*Math.pow(10,-1)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-70*Math.pow(10,-2)*69*Math.pow(10,-1)-getVariable(3,k)
Aug 30, 2024 8:45:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.185601410102174; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-70*Math.pow(10,-2)*64*Math.pow(10,-1)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-70*Math.pow(10,-2)*64*Math.pow(10,-1)-getVariable(3,k)
Aug 30, 2024 8:45:20 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.184362929770198; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-75*Math.pow(10,-2)*63*Math.pow(10,-1)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-75*Math.pow(10,-2)*63*Math.pow(10,-1)-getVariable(3,k)
Aug 30, 2024 8:45:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.183475969761478; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-70*Math.pow(10,-2)*66*Math.pow(10,-1)-u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-70*Math.pow(10,-2)*66*Math.pow(10,-1)-getVariable(3,k)
Aug 30, 2024 8:45:37 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.152807363113266; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-94*Math.pow(10,-2)*u3(k)-63*Math.pow(10,-1)-43*Math.pow(10,-4)*u3(k)+77*Math.pow(10,-9)*u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-94*Math.pow(10,-2)*getVariable(3,k)-63*Math.pow(10,-1)-43*Math.pow(10,-4)*getVariable(3,k)+77*Math.pow(10,-9)*getVariable(4,k)
Aug 30, 2024 8:45:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.139331214245592; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-89*Math.pow(10,-2)*u3(k)-70*Math.pow(10,-1)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-89*Math.pow(10,-2)*getVariable(3,k)-70*Math.pow(10,-1)-getVariable(8,k)
Aug 30, 2024 8:45:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.126737038190212; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-90*Math.pow(10,-2)*u3(k)-70*Math.pow(10,-1)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-90*Math.pow(10,-2)*getVariable(3,k)-70*Math.pow(10,-1)-getVariable(8,k)
Aug 30, 2024 8:45:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.124791929103824; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-1*Math.pow(10,-2)*u3(k)-63*Math.pow(10,-1)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-1*Math.pow(10,-2)*getVariable(3,k)-63*Math.pow(10,-1)-getVariable(4,k)
Aug 30, 2024 8:45:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.116078891899443; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)*96*Math.pow(10,-2)-89*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)*96*Math.pow(10,-2)-89*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 8:46:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.111131657315238; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-89*Math.pow(10,-9)*u3(k)-70*Math.pow(10,-1)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-89*Math.pow(10,-9)*getVariable(3,k)-70*Math.pow(10,-1)-getVariable(4,k)
Aug 30, 2024 8:46:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1110520699872035; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-89*Math.pow(10,-6)*u3(k)-70*Math.pow(10,-1)-u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)*90*Math.pow(10,-2)-89*Math.pow(10,-6)*getVariable(3,k)-70*Math.pow(10,-1)-getVariable(4,k)
Aug 30, 2024 8:46:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.089967857838027; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)*95*Math.pow(10,-2)-89*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)*95*Math.pow(10,-2)-89*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 8:46:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.064986371833338; Expression=u7(k)-u1(k)*39*Math.pow(10,-2)-90*Math.pow(10,-2)*89*Math.pow(10,-2)*u3(k)-70*Math.pow(10,-1)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*39*Math.pow(10,-2)-90*Math.pow(10,-2)*89*Math.pow(10,-2)*getVariable(3,k)-70*Math.pow(10,-1)-getVariable(8,k)
Aug 30, 2024 8:47:09 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.064986371833338 -->> Avg.: 5.7072426900705215 -->> Std. Dev.: 1.7226320093333436
Aug 30, 2024 8:47:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.064984121973277; Expression=u7(k)-u1(k)*39*Math.pow(10,-2)-90*Math.pow(10,-2)*89*Math.pow(10,-2)*u3(k)-70*Math.pow(10,-1)-84*Math.pow(10,-6)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*39*Math.pow(10,-2)-90*Math.pow(10,-2)*89*Math.pow(10,-2)*getVariable(3,k)-70*Math.pow(10,-1)-84*Math.pow(10,-6)-getVariable(8,k)
Aug 30, 2024 8:47:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.063568874053053; Expression=u7(k)-u1(k)*39*Math.pow(10,-2)-90*Math.pow(10,-2)*89*Math.pow(10,-2)*u3(k)-70*Math.pow(10,-1)-72*Math.pow(10,-3)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*39*Math.pow(10,-2)-90*Math.pow(10,-2)*89*Math.pow(10,-2)*getVariable(3,k)-70*Math.pow(10,-1)-72*Math.pow(10,-3)-getVariable(8,k)
Aug 30, 2024 8:47:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.031377897295151; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-getVariable(8,k)
Aug 30, 2024 8:47:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.031377835054968; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-9*Math.pow(10,-6)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-9*Math.pow(10,-6)-getVariable(8,k)
Aug 30, 2024 8:47:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.031367093574245; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-68*Math.pow(10,-3)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-68*Math.pow(10,-3)-getVariable(8,k)
Aug 30, 2024 8:48:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.031335460281039; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-68*Math.pow(10,-4)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-68*Math.pow(10,-4)-getVariable(8,k)
Aug 30, 2024 8:48:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.031329459025216; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-79*Math.pow(10,-4)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-79*Math.pow(10,-4)-getVariable(8,k)
Aug 30, 2024 8:48:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.031309209378273; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-12*Math.pow(10,-3)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-12*Math.pow(10,-3)-getVariable(8,k)
Aug 30, 2024 8:48:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.031259840522182; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-30*Math.pow(10,-3)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-30*Math.pow(10,-3)-getVariable(8,k)
Aug 30, 2024 8:48:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.031257555432307; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-35*Math.pow(10,-3)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-35*Math.pow(10,-3)-getVariable(8,k)
Aug 30, 2024 8:48:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.03100018625417; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)-75*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-79*Math.pow(10,-3)-u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)-75*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-79*Math.pow(10,-3)-getVariable(8,k)
Aug 30, 2024 8:48:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.014416513926544; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*84*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-u8(k)-35*Math.pow(10,-3)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*84*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-getVariable(8,k)-35*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 8:48:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.011712203118845; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)*98*Math.pow(10,-2)-80*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-68*Math.pow(10,-4)*u2(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)*98*Math.pow(10,-2)-80*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-68*Math.pow(10,-4)*getVariable(2,k)
Aug 30, 2024 8:48:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.007172235899063; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-38*Math.pow(10,-3)*u5(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-38*Math.pow(10,-3)*getVariable(5,k)
Aug 30, 2024 8:49:09 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.997666801187534; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*u3(k)-95*Math.pow(10,-1)-35*Math.pow(10,-3)*u5(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*getVariable(3,k)-95*Math.pow(10,-1)-35*Math.pow(10,-3)*getVariable(5,k)
Aug 30, 2024 8:49:13 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.989349423131019; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-30*Math.pow(10,-1)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-30*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 8:49:32 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.989349423131019 -->> Avg.: 5.233573871580507 -->> Std. Dev.: 0.220283429960073
Aug 30, 2024 8:49:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9840424048351135; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-12*Math.pow(10,-3)*u7(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*80*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-12*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 8:50:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.929088542871002; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-86*Math.pow(10,-1)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-96*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-86*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 8:50:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9007020656284475; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-86*Math.pow(10,-1)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-86*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 8:50:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.885677741746856; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-94*Math.pow(10,-1)-86*Math.pow(10,-1)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-94*Math.pow(10,-1)-86*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 8:50:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.878452253165866; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 8:52:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.878452253165865; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-94*Math.pow(10,-1)-89*Math.pow(10,-1)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-94*Math.pow(10,-1)-89*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 8:52:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.8784522531658645; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,+2)*67*Math.pow(10,-6)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,+2)*67*Math.pow(10,-6)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+getVariable(8,k)
Aug 30, 2024 8:52:12 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.8784522531658645 -->> Avg.: 5.105536371480899 -->> Std. Dev.: 0.12534153034806123
Aug 30, 2024 8:52:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.878452252554561; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+92*Math.pow(10,-9)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+92*Math.pow(10,-9)+getVariable(8,k)
Aug 30, 2024 8:52:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.87845224705287; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,+2)*67*Math.pow(10,-6)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+92*Math.pow(10,-8)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,+2)*67*Math.pow(10,-6)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+92*Math.pow(10,-8)+getVariable(8,k)
Aug 30, 2024 8:52:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.878446226824937; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+92*Math.pow(10,-5)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+92*Math.pow(10,-5)+getVariable(8,k)
Aug 30, 2024 8:52:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.878407165807657; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+77*Math.pow(10,-4)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+77*Math.pow(10,-4)+getVariable(8,k)
Aug 30, 2024 8:52:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.878399796905996; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,+2)*67*Math.pow(10,-6)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+92*Math.pow(10,-4)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,+2)*67*Math.pow(10,-6)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+92*Math.pow(10,-4)+getVariable(8,k)
Aug 30, 2024 8:53:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.878358310865153; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+44*Math.pow(10,-3)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+44*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 8:53:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.878345241051893; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+35*Math.pow(10,-3)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+35*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 8:53:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.878344591507977; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+33*Math.pow(10,-3)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+33*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 8:53:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.8783445742173495; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+32*Math.pow(10,-3)+u8(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+32*Math.pow(10,-3)+getVariable(8,k)
Aug 30, 2024 8:53:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.8781828199902915; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*u3(k)*67*Math.pow(10,-2)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+u8(k)+77*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*getVariable(3,k)*67*Math.pow(10,-2)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+getVariable(8,k)+77*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:54:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.875926514909428; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*u3(k)*67*Math.pow(10,-2)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+u8(k)+33*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*getVariable(3,k)*67*Math.pow(10,-2)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+getVariable(8,k)+33*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:54:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.870614962463423; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+44*Math.pow(10,-9)+u8(k)+u9(k)*4*Math.pow(10,-6)*u9(k)*u4(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+44*Math.pow(10,-9)+getVariable(8,k)+getVariable(9,k)*4*Math.pow(10,-6)*getVariable(9,k)*getVariable(4,k)
Aug 30, 2024 8:54:51 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.870614962463423 -->> Avg.: 5.0357169420980625 -->> Std. Dev.: 0.13261068885071314
Aug 30, 2024 8:55:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.870138184247092; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*u3(k)*67*Math.pow(10,-2)-95*Math.pow(10,-1)-91*Math.pow(10,-1)+u8(k)+90*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*getVariable(3,k)*67*Math.pow(10,-2)-95*Math.pow(10,-1)-91*Math.pow(10,-1)+getVariable(8,k)+90*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:56:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.869950044126004; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*u3(k)*67*Math.pow(10,-2)-95*Math.pow(10,-1)-91*Math.pow(10,-1)+u8(k)+93*Math.pow(10,-4)*u9(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*getVariable(3,k)*67*Math.pow(10,-2)-95*Math.pow(10,-1)-91*Math.pow(10,-1)+getVariable(8,k)+93*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 8:56:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.868656705043202; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+44*Math.pow(10,-9)+u8(k)+u9(k)*4*Math.pow(10,-6)*u3(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+44*Math.pow(10,-9)+getVariable(8,k)+getVariable(9,k)*4*Math.pow(10,-6)*getVariable(3,k)*getVariable(3,k)
Aug 30, 2024 8:56:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.867882688842871; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+44*Math.pow(10,-9)+u8(k)+u9(k)*4*Math.pow(10,-6)*u9(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+44*Math.pow(10,-9)+getVariable(8,k)+getVariable(9,k)*4*Math.pow(10,-6)*getVariable(9,k)*getVariable(3,k)
Aug 30, 2024 8:57:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.8678826883918855; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+34*Math.pow(10,-9)+u8(k)+u9(k)*4*Math.pow(10,-6)*u9(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)+34*Math.pow(10,-9)+getVariable(8,k)+getVariable(9,k)*4*Math.pow(10,-6)*getVariable(9,k)*getVariable(3,k)
Aug 30, 2024 8:58:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.867882684874174; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)-44*Math.pow(10,-9)+u8(k)+u9(k)*4*Math.pow(10,-6)*u9(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)-44*Math.pow(10,-9)+getVariable(8,k)+getVariable(9,k)*4*Math.pow(10,-6)*getVariable(9,k)*getVariable(3,k)
Aug 30, 2024 8:58:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.867882684287887; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)-57*Math.pow(10,-9)+u8(k)+u9(k)*4*Math.pow(10,-6)*u9(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)-57*Math.pow(10,-9)+getVariable(8,k)+getVariable(9,k)*4*Math.pow(10,-6)*getVariable(9,k)*getVariable(3,k)
Aug 30, 2024 8:58:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.847132390537818; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)-44*Math.pow(10,-2)+u8(k)+u3(k)*4*Math.pow(10,-6)*u6(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)-44*Math.pow(10,-2)+getVariable(8,k)+getVariable(3,k)*4*Math.pow(10,-6)*getVariable(6,k)*getVariable(3,k)
Aug 30, 2024 8:58:45 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.847132390537818 -->> Avg.: 4.968901553857016 -->> Std. Dev.: 0.1111866672183405
Aug 30, 2024 8:59:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.823937599276615; Expression=u7(k)-u1(k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)-92*Math.pow(10,-2)+u8(k)+u3(k)*8*Math.pow(10,-6)*u6(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*38*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)-92*Math.pow(10,-2)+getVariable(8,k)+getVariable(3,k)*8*Math.pow(10,-6)*getVariable(6,k)*getVariable(3,k)
Aug 30, 2024 8:59:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.714964295202717; Expression=u7(k)-u1(k)*51*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)-44*Math.pow(10,-2)+u8(k)+u3(k)*69*Math.pow(10,-6)*u6(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*51*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)-44*Math.pow(10,-2)+getVariable(8,k)+getVariable(3,k)*69*Math.pow(10,-6)*getVariable(6,k)*getVariable(3,k)
Aug 30, 2024 9:00:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.698059419519204; Expression=u7(k)-u1(k)*51*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)-44*Math.pow(10,-4)+u8(k)+u3(k)*69*Math.pow(10,-6)*u6(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*51*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)-44*Math.pow(10,-4)+getVariable(8,k)+getVariable(3,k)*69*Math.pow(10,-6)*getVariable(6,k)*getVariable(3,k)
Aug 30, 2024 9:01:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.697930045130782; Expression=u7(k)-u1(k)*51*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)-44*Math.pow(10,-3)+u8(k)+u3(k)*69*Math.pow(10,-6)*u6(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*51*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)-44*Math.pow(10,-3)+getVariable(8,k)+getVariable(3,k)*69*Math.pow(10,-6)*getVariable(6,k)*getVariable(3,k)
Aug 30, 2024 9:01:40 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.684815518696867; Expression=u7(k)-u1(k)*51*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)-44*Math.pow(10,-2)+u8(k)+u3(k)*72*Math.pow(10,-6)*u6(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*51*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-91*Math.pow(10,-1)-44*Math.pow(10,-2)+getVariable(8,k)+getVariable(3,k)*72*Math.pow(10,-6)*getVariable(6,k)*getVariable(3,k)
Aug 30, 2024 9:02:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.68463239503108; Expression=u7(k)-u1(k)*51*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*u3(k)-92*Math.pow(10,-1)-89*Math.pow(10,-1)-66*Math.pow(10,-2)+u8(k)+u3(k)*72*Math.pow(10,-6)*u6(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(1,k)*51*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-89*Math.pow(10,-1)-66*Math.pow(10,-2)+getVariable(8,k)+getVariable(3,k)*72*Math.pow(10,-6)*getVariable(6,k)*getVariable(3,k)
Aug 30, 2024 9:02:27 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.68463239503108 -->> Avg.: 4.893343629561453 -->> Std. Dev.: 0.09738572779336013

Execution time: 5397.107 seconds.



@@;getVariable(7,k)-getVariable(1,k)*51*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-89*Math.pow(10,-1)-66*Math.pow(10,-2)+getVariable(8,k)+getVariable(3,k)*72*Math.pow(10,-6)*getVariable(6,k)*getVariable(3,k)




 Execution report
==================

#Run;Obj.;Model;Time
0;4.554994625042096;getVariable(7,k)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)-43*Math.pow(10,-2)*getVariable(7,k)+getVariable(8,k)*29*Math.pow(10,-3)*getVariable(2,k)+76*Math.pow(10,-4)*getVariable(9,k);1360.236
1;4.235452412407361;96*Math.pow(10,-1)-getVariable(7,k)*53*Math.pow(10,-2)-getVariable(4,k)-76*Math.pow(10,+2)*getVariable(1,k)*60*Math.pow(10,-9)*getVariable(8,k)+getVariable(8,k)*59*Math.pow(10,-1)+getVariable(9,k)*68*Math.pow(10,-3)+getVariable(7,k);1551.376
2;5.071246015155048;59*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)+60*Math.pow(10,-1)-getVariable(3,k)-99*Math.pow(10,-3)*57*Math.pow(10,-4)*getVariable(7,k)*19*Math.pow(10,-1)*getVariable(7,k)+getVariable(8,k)*getVariable(8,k)-getVariable(8,k);1412.649
3;4.200426107334919;getVariable(8,k)+getVariable(7,k)*46*Math.pow(10,-2)-getVariable(4,k)+97*Math.pow(10,-2)+49*Math.pow(10,-8)*18*Math.pow(10,+6)*getVariable(8,k)-getVariable(8,k)-getVariable(8,k)+67*Math.pow(10,-4)*getVariable(4,k)*getVariable(4,k);1438.937
4;4.1556407144727405;getVariable(8,k)*getVariable(8,k)+43*Math.pow(10,-2)*getVariable(7,k)+86*Math.pow(10,-1)-getVariable(4,k)+getVariable(6,k)*77*Math.pow(10,-3)+getVariable(8,k)*42*Math.pow(10,-1)+93*Math.pow(10,-4)*getVariable(9,k);1509.3
5;4.453443751259629;11*Math.pow(10,-9)-getVariable(4,k)-getVariable(7,k)*20*Math.pow(10,-2)+getVariable(7,k)+getVariable(8,k)-39*Math.pow(10,-6)*getVariable(7,k)*getVariable(7,k)*getVariable(3,k)+getVariable(9,k)-getVariable(9,k)+getVariable(8,k)*getVariable(8,k)-26*Math.pow(10,-4)*getVariable(2,k);1764.114
6;4.162814957382713;getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-2)-getVariable(4,k)-86*Math.pow(10,-8)*92*Math.pow(10,-1)*getVariable(7,k)*getVariable(7,k)*getVariable(7,k)-99*Math.pow(10,-3)*getVariable(8,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k);2071.993
7;4.870357794082248;getVariable(7,k)-getVariable(5,k)*8*Math.pow(10,-1)-getVariable(3,k)-getVariable(7,k)*99*Math.pow(10,-5)*getVariable(7,k)-92*Math.pow(10,-3)+95*Math.pow(10,-3)*getVariable(3,k)*getVariable(8,k);1890.302
8;4.750794366798063;getVariable(7,k)-getVariable(3,k)-71*Math.pow(10,-2)*getVariable(1,k)+getVariable(1,k)*78*Math.pow(10,-4)*getVariable(3,k)+getVariable(8,k)*90*Math.pow(10,-3)*getVariable(8,k)*getVariable(8,k);1418.804
9;4.68463239503108;getVariable(7,k)-getVariable(1,k)*51*Math.pow(10,-2)-92*Math.pow(10,-2)*67*Math.pow(10,-2)*getVariable(3,k)-92*Math.pow(10,-1)-89*Math.pow(10,-1)-66*Math.pow(10,-2)+getVariable(8,k)+getVariable(3,k)*72*Math.pow(10,-6)*getVariable(6,k)*getVariable(3,k);5397.107
