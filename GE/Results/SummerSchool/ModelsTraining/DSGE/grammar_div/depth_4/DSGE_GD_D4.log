{MutationProb=0.05, Executions=10, ChangeProbabilityDynamic=0.25, TrainingPath=/home/jmmc/Projects/PMT_2/Data/train_bmi_marker.csv, MutationTypeDynamic=All genes, GrammaticalEvolutionType=2, Objectives=0, ClassPathSeparator=:, TestPath=/Users/hidalgo/GitHub/bmi-marker/linear-exp/test_bmi_marker.csv, NumGenerations=1000, NumIndividuals=1024, RealDataCopied=0, ErrorThreshold=0.0, TypeOfDepthForDynamicSGE=0, TournamentSize=5, ModelWidth=0, BnfPathFile=/home/jmmc/Projects/PMT_2/exp_2_sg/sg_grammar.bnf, LoggerLevel=INFO, LoggerBasePath=/home/jmmc/Projects/PMT_2/work, ViewResults=false, CrossoverTypeDynamic=Uniform, AlgorithmType=1, LogPopulation=0, CrossoverProb=0.9, MaxTreeDepth=4, WorkDir=/home/jmmc/Projects/PMT_2/work, NormalizeData=false}
Tree: true
Depth: 4
Aug 30, 2024 11:33:54 PM data.NormalizedDataTable <init>
INFO: Reading data file ...

Detecting file format ...

Aug 30, 2024 11:33:54 PM data.NormalizedDataTable <init>
INFO: ... done.
Uniform: 0.25
jeco.core.algorithm.ga.StaticSimpleGeneticAlgorithm@b2adaa7
algorithm.DynamicSGE@5ed25b2

Run #0
========
Aug 30, 2024 11:33:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.190850320153156E15; Expression=73*Math.pow(10,+6)*94*Math.pow(10,+9)/u5(k)/u1(k); Java Expression: 73*Math.pow(10,+6)*94*Math.pow(10,+9)/getVariable(5,k)/getVariable(1,k)
Aug 30, 2024 11:33:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=31.45252959646968; Expression=u6(k)/u5(k); Java Expression: getVariable(6,k)/getVariable(5,k)
Aug 30, 2024 11:33:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=10.306121959491481; Expression=u4(k)-u8(k); Java Expression: getVariable(4,k)-getVariable(8,k)
Aug 30, 2024 11:33:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.327482401451556; Expression=u8(k)/u2(k)+u5(k); Java Expression: getVariable(8,k)/getVariable(2,k)+getVariable(5,k)
Aug 30, 2024 11:33:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.327192216878712; Expression=u5(k)-u6(k)*1*Math.pow(10,-1)*u3(k)*u8(k)*4*Math.pow(10,-5)/u8(k)/u8(k); Java Expression: getVariable(5,k)-getVariable(6,k)*1*Math.pow(10,-1)*getVariable(3,k)*getVariable(8,k)*4*Math.pow(10,-5)/getVariable(8,k)/getVariable(8,k)
Aug 30, 2024 11:33:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 30, 2024 11:34:00 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.293818213588942; Expression=17*Math.pow(10,+1)*u5(k)/u2(k); Java Expression: 17*Math.pow(10,+1)*getVariable(5,k)/getVariable(2,k)
Aug 30, 2024 11:34:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=7.053960890414428; Expression=34*Math.pow(10,-2)*u7(k); Java Expression: 34*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 11:34:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709785324194373; Expression=32*Math.pow(10,-2)*u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)
Aug 30, 2024 11:34:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709764592489905; Expression=32*Math.pow(10,-2)*u7(k)-33*Math.pow(10,-3)/u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-33*Math.pow(10,-3)/getVariable(7,k)
Aug 30, 2024 11:34:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709757057509738; Expression=32*Math.pow(10,-2)*u7(k)-45*Math.pow(10,-3)/u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-45*Math.pow(10,-3)/getVariable(7,k)
Aug 30, 2024 11:34:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709753155228449; Expression=32*Math.pow(10,-2)*u7(k)-45*Math.pow(10,-3)/u6(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-45*Math.pow(10,-3)/getVariable(6,k)
Aug 30, 2024 11:34:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709578700763501; Expression=32*Math.pow(10,-2)*u7(k)-33*Math.pow(10,-2)/u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-33*Math.pow(10,-2)/getVariable(7,k)
Aug 30, 2024 11:34:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709462940319551; Expression=32*Math.pow(10,-2)*u7(k)-u6(k)/u1(k)/u6(k)/u4(k)*u3(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(6,k)/getVariable(1,k)/getVariable(6,k)/getVariable(4,k)*getVariable(3,k)
Aug 30, 2024 11:34:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.700096991470291; Expression=32*Math.pow(10,-2)*u7(k)-45*Math.pow(10,-3)/u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-45*Math.pow(10,-3)/getVariable(8,k)
Aug 30, 2024 11:34:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.579887318169841; Expression=32*Math.pow(10,-2)*u7(k)-45*Math.pow(10,-3)/77*Math.pow(10,-4)+u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-45*Math.pow(10,-3)/77*Math.pow(10,-4)+getVariable(8,k)
Aug 30, 2024 11:34:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.25846394152609; Expression=89*Math.pow(10,-3)-u5(k)-u1(k)/u7(k)-u3(k)+u7(k); Java Expression: 89*Math.pow(10,-3)-getVariable(5,k)-getVariable(1,k)/getVariable(7,k)-getVariable(3,k)+getVariable(7,k)
Aug 30, 2024 11:34:50 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.196042886259897; Expression=32*Math.pow(10,-2)-u5(k)-u1(k)/u7(k)-u3(k)+u7(k); Java Expression: 32*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(7,k)-getVariable(3,k)+getVariable(7,k)
Aug 30, 2024 11:34:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.076940004824973; Expression=89*Math.pow(10,-2)-u5(k)-u1(k)/u7(k)-u3(k)+u7(k); Java Expression: 89*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(7,k)-getVariable(3,k)+getVariable(7,k)
Aug 30, 2024 11:34:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0592440544999855; Expression=32*Math.pow(10,-2)-u5(k)+u1(k)/u7(k)-u3(k)+u7(k); Java Expression: 32*Math.pow(10,-2)-getVariable(5,k)+getVariable(1,k)/getVariable(7,k)-getVariable(3,k)+getVariable(7,k)
Aug 30, 2024 11:34:54 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.991909392723976; Expression=89*Math.pow(10,-3)-u5(k)-u1(k)/u7(k)-u3(k)+17*Math.pow(10,-1)+u7(k)/u5(k)/u1(k)+u7(k); Java Expression: 89*Math.pow(10,-3)-getVariable(5,k)-getVariable(1,k)/getVariable(7,k)-getVariable(3,k)+17*Math.pow(10,-1)+getVariable(7,k)/getVariable(5,k)/getVariable(1,k)+getVariable(7,k)
Aug 30, 2024 11:34:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.99185730040472; Expression=95*Math.pow(10,-3)-u5(k)-u1(k)/u7(k)-u3(k)+17*Math.pow(10,-1)+u7(k)/u5(k)/u1(k)+u7(k); Java Expression: 95*Math.pow(10,-3)-getVariable(5,k)-getVariable(1,k)/getVariable(7,k)-getVariable(3,k)+17*Math.pow(10,-1)+getVariable(7,k)/getVariable(5,k)/getVariable(1,k)+getVariable(7,k)
Aug 30, 2024 11:34:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.938941025034914; Expression=91*Math.pow(10,-3)-u5(k)-u1(k)/u7(k)-u4(k)+u7(k); Java Expression: 91*Math.pow(10,-3)-getVariable(5,k)-getVariable(1,k)/getVariable(7,k)-getVariable(4,k)+getVariable(7,k)
Aug 30, 2024 11:34:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.929958432972341; Expression=66*Math.pow(10,-4)-u5(k)-u1(k)/u7(k)-u4(k)+u7(k); Java Expression: 66*Math.pow(10,-4)-getVariable(5,k)-getVariable(1,k)/getVariable(7,k)-getVariable(4,k)+getVariable(7,k)
Aug 30, 2024 11:34:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.929306165499324; Expression=91*Math.pow(10,-8)-u5(k)-u1(k)/u7(k)-u4(k)+u7(k); Java Expression: 91*Math.pow(10,-8)-getVariable(5,k)-getVariable(1,k)/getVariable(7,k)-getVariable(4,k)+getVariable(7,k)
Aug 30, 2024 11:35:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.929306161567684; Expression=87*Math.pow(10,-8)-u5(k)-u1(k)/u7(k)-u4(k)+u7(k); Java Expression: 87*Math.pow(10,-8)-getVariable(5,k)-getVariable(1,k)/getVariable(7,k)-getVariable(4,k)+getVariable(7,k)
Aug 30, 2024 11:35:04 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.929306131097488; Expression=56*Math.pow(10,-8)-u5(k)-u1(k)/u7(k)-u4(k)+u7(k); Java Expression: 56*Math.pow(10,-8)-getVariable(5,k)-getVariable(1,k)/getVariable(7,k)-getVariable(4,k)+getVariable(7,k)
Aug 30, 2024 11:35:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.929306084999061; Expression=91*Math.pow(10,-9)-u5(k)-u1(k)/u7(k)-u4(k)+u7(k); Java Expression: 91*Math.pow(10,-9)-getVariable(5,k)-getVariable(1,k)/getVariable(7,k)-getVariable(4,k)+getVariable(7,k)
Aug 30, 2024 11:35:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.929306079593066; Expression=36*Math.pow(10,-9)-u5(k)-u1(k)/u7(k)-u4(k)+u7(k); Java Expression: 36*Math.pow(10,-9)-getVariable(5,k)-getVariable(1,k)/getVariable(7,k)-getVariable(4,k)+getVariable(7,k)
Aug 30, 2024 11:35:08 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8178584972690945; Expression=66*Math.pow(10,-4)-u5(k)-u1(k)/u4(k)-u4(k)+u7(k); Java Expression: 66*Math.pow(10,-4)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)-getVariable(4,k)+getVariable(7,k)
Aug 30, 2024 11:35:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.817515371842219; Expression=91*Math.pow(10,-4)-u5(k)-u1(k)/u4(k)-u4(k)+u7(k); Java Expression: 91*Math.pow(10,-4)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)-getVariable(4,k)+getVariable(7,k)
Aug 30, 2024 11:35:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.783115701305165; Expression=32*Math.pow(10,-2)-u5(k)-u1(k)/u4(k)-u4(k)+u7(k); Java Expression: 32*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)-getVariable(4,k)+getVariable(7,k)
Aug 30, 2024 11:35:16 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7632380391592; Expression=89*Math.pow(10,-2)-u5(k)-u1(k)/u4(k)-u4(k)+u7(k); Java Expression: 89*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)-getVariable(4,k)+getVariable(7,k)
Aug 30, 2024 11:35:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.763012341957676; Expression=74*Math.pow(10,-2)-u5(k)-u1(k)/u4(k)-u4(k)+u7(k); Java Expression: 74*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)-getVariable(4,k)+getVariable(7,k)
Aug 30, 2024 11:35:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.762982373477951; Expression=87*Math.pow(10,-2)-u5(k)-u1(k)/u4(k)-u4(k)+u7(k); Java Expression: 87*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)-getVariable(4,k)+getVariable(7,k)
Aug 30, 2024 11:35:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.72254044048088; Expression=89*Math.pow(10,-2)-u5(k)-u1(k)/u9(k)-u4(k)+u7(k); Java Expression: 89*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)+getVariable(7,k)
Aug 30, 2024 11:35:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.722171585386824; Expression=91*Math.pow(10,-2)-u5(k)-u1(k)/u9(k)-u4(k)+u7(k); Java Expression: 91*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)+getVariable(7,k)
Aug 30, 2024 11:35:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.721749338455168; Expression=94*Math.pow(10,-2)-u5(k)-u1(k)/u9(k)-u4(k)+u7(k); Java Expression: 94*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)+getVariable(7,k)
Aug 30, 2024 11:35:47 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.721395100085744; Expression=99*Math.pow(10,-2)-u5(k)-u1(k)/u9(k)-u4(k)+u7(k); Java Expression: 99*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)+getVariable(7,k)
Aug 30, 2024 11:36:09 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.721395100085744 -->> Avg.: 322283.33931036456 -->> Std. Dev.: 1382029.3737885377
Aug 30, 2024 11:36:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.721392246800918; Expression=99*Math.pow(10,-2)-u5(k)-u1(k)/u9(k)-u4(k)+u7(k)-u2(k)/29*Math.pow(10,-6)*u4(k); Java Expression: 99*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)+getVariable(7,k)-getVariable(2,k)/29*Math.pow(10,-6)*getVariable(4,k)
Aug 30, 2024 11:36:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.721389579338452; Expression=99*Math.pow(10,-2)-u5(k)-u1(k)/u9(k)-u4(k)+u7(k)-u2(k)/29*Math.pow(10,-6)*u3(k); Java Expression: 99*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)+getVariable(7,k)-getVariable(2,k)/29*Math.pow(10,-6)*getVariable(3,k)
Aug 30, 2024 11:36:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.720483815142389; Expression=99*Math.pow(10,-2)-u5(k)-u1(k)/u9(k)-u4(k)+u7(k)-u2(k)/29*Math.pow(10,-3)*u3(k); Java Expression: 99*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)+getVariable(7,k)-getVariable(2,k)/29*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 11:36:19 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.719750371793327; Expression=99*Math.pow(10,-2)-u5(k)-u1(k)/u9(k)-u4(k)+u7(k)-u2(k)/45*Math.pow(10,-3)*u3(k); Java Expression: 99*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)+getVariable(7,k)-getVariable(2,k)/45*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 11:36:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.718807197473142; Expression=99*Math.pow(10,-2)-u5(k)-u1(k)/u9(k)-u4(k)+u7(k)-u6(k)/45*Math.pow(10,-3)*u9(k); Java Expression: 99*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)+getVariable(7,k)-getVariable(6,k)/45*Math.pow(10,-3)*getVariable(9,k)
Aug 30, 2024 11:36:30 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.716166833161478; Expression=99*Math.pow(10,-2)-u5(k)-u1(k)/u9(k)-u4(k)+u7(k)-u1(k)/45*Math.pow(10,-3)*u3(k); Java Expression: 99*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)+getVariable(7,k)-getVariable(1,k)/45*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 11:36:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.706627003286624; Expression=94*Math.pow(10,-2)-u5(k)-u1(k)/u9(k)-u4(k)+u7(k)-u7(k)/42*Math.pow(10,-3)*u7(k); Java Expression: 94*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)+getVariable(7,k)-getVariable(7,k)/42*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 11:36:46 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.700164487172758; Expression=99*Math.pow(10,-2)-u5(k)-u1(k)/u9(k)-u4(k)+u7(k)-u1(k)/45*Math.pow(10,-3)*u1(k); Java Expression: 99*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)+getVariable(7,k)-getVariable(1,k)/45*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:36:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.699782682686592; Expression=99*Math.pow(10,-2)-u5(k)-u1(k)/u9(k)-u4(k)+u7(k)-u7(k)/20*Math.pow(10,-3)*u7(k); Java Expression: 99*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)+getVariable(7,k)-getVariable(7,k)/20*Math.pow(10,-3)*getVariable(7,k)
Aug 30, 2024 11:36:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.695355108216675; Expression=94*Math.pow(10,-2)-u5(k)-u1(k)/u9(k)-u4(k)+u7(k)-u1(k)/6*Math.pow(10,-3)*u1(k); Java Expression: 94*Math.pow(10,-2)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)+getVariable(7,k)-getVariable(1,k)/6*Math.pow(10,-3)*getVariable(1,k)
Aug 30, 2024 11:37:01 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.629184320826082; Expression=99*Math.pow(10,-2)-u5(k)-u3(k)/u9(k)-u4(k)+u7(k)-u1(k)/45*Math.pow(10,-2)*u1(k); Java Expression: 99*Math.pow(10,-2)-getVariable(5,k)-getVariable(3,k)/getVariable(9,k)-getVariable(4,k)+getVariable(7,k)-getVariable(1,k)/45*Math.pow(10,-2)*getVariable(1,k)
Aug 30, 2024 11:37:12 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.589537497680247; Expression=32*Math.pow(10,-2)*u7(k)-u7(k)/u9(k)+u8(k)+u8(k)*u8(k)+8*Math.pow(10,-3)*u4(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(9,k)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)+8*Math.pow(10,-3)*getVariable(4,k)
Aug 30, 2024 11:37:21 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.506096733927034; Expression=32*Math.pow(10,-2)*u7(k)-u7(k)/u9(k)+u8(k)+u8(k)*u8(k)+8*Math.pow(10,-8)*u4(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(9,k)+getVariable(8,k)+getVariable(8,k)*getVariable(8,k)+8*Math.pow(10,-8)*getVariable(4,k)
Aug 30, 2024 11:37:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=5.128221468394668; Expression=32*Math.pow(10,-2)*u7(k)-u7(k)/u9(k)+u8(k)*u8(k)*u8(k)+8*Math.pow(10,-3)*u4(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+8*Math.pow(10,-3)*getVariable(4,k)
Aug 30, 2024 11:37:34 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.89718903321848; Expression=32*Math.pow(10,-2)*u7(k)-u7(k)/u5(k)+u8(k)*u8(k)*u8(k)-8*Math.pow(10,-3)*u4(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-8*Math.pow(10,-3)*getVariable(4,k)
Aug 30, 2024 11:37:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.881366180196187; Expression=32*Math.pow(10,-2)*u7(k)-u7(k)/u9(k)+u8(k)*u8(k)*u8(k)-96*Math.pow(10,-4)*u4(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-96*Math.pow(10,-4)*getVariable(4,k)
Aug 30, 2024 11:37:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.645973704992933; Expression=32*Math.pow(10,-2)*u7(k)-u7(k)/u1(k)+u8(k)*u8(k)*u8(k)-8*Math.pow(10,-2)*u4(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(7,k)/getVariable(1,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-8*Math.pow(10,-2)*getVariable(4,k)
Aug 30, 2024 11:38:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.525757306257306; Expression=32*Math.pow(10,-2)*u7(k)-u2(k)/u9(k)+u8(k)*u8(k)*u8(k)+8*Math.pow(10,-8)*u4(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+8*Math.pow(10,-8)*getVariable(4,k)
Aug 30, 2024 11:38:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.503154234635224; Expression=32*Math.pow(10,-2)*u7(k)-u2(k)/u5(k)+u8(k)*u8(k)*u8(k)-8*Math.pow(10,-3)*u4(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-8*Math.pow(10,-3)*getVariable(4,k)
Aug 30, 2024 11:38:17 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.489035466312996; Expression=32*Math.pow(10,-2)*u7(k)-u2(k)/u5(k)+u8(k)*u8(k)*u8(k)-8*Math.pow(10,-4)*u9(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-8*Math.pow(10,-4)*getVariable(9,k)
Aug 30, 2024 11:38:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.487264432287985; Expression=32*Math.pow(10,-2)*u7(k)-u2(k)/u5(k)+u8(k)*u8(k)*u8(k)-8*Math.pow(10,-3)*u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-8*Math.pow(10,-3)*getVariable(8,k)
Aug 30, 2024 11:38:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.485196297364536; Expression=32*Math.pow(10,-2)*u7(k)-u2(k)/u5(k)+u8(k)*u8(k)*u8(k)-8*Math.pow(10,-6)*u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-8*Math.pow(10,-6)*getVariable(5,k)
Aug 30, 2024 11:38:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.485192705998985; Expression=32*Math.pow(10,-2)*u7(k)-u2(k)/u5(k)+u8(k)*u8(k)*u8(k)-8*Math.pow(10,-6)*u4(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-8*Math.pow(10,-6)*getVariable(4,k)
Aug 30, 2024 11:38:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.485184562485005; Expression=32*Math.pow(10,-2)*u7(k)-u2(k)/u5(k)+u8(k)*u8(k)*u8(k)-8*Math.pow(10,-8)*u3(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-8*Math.pow(10,-8)*getVariable(3,k)
Aug 30, 2024 11:38:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.4851841436669595; Expression=32*Math.pow(10,-2)*u7(k)-u2(k)/u5(k)+u8(k)*u8(k)*u8(k)+8*Math.pow(10,-8)*u2(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(5,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)+8*Math.pow(10,-8)*getVariable(2,k)
Aug 30, 2024 11:38:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.476752320832524; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-96*Math.pow(10,-3)*u4(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-96*Math.pow(10,-3)*getVariable(4,k)
Aug 30, 2024 11:38:38 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.43145552246156; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-96*Math.pow(10,-3)*u3(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-96*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 11:38:50 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 4.43145552246156 -->> Avg.: 769.0960599765913 -->> Std. Dev.: 1994.4448533979607
Aug 30, 2024 11:39:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.431287857422484; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-99*Math.pow(10,-3)*u3(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-99*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 11:39:14 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.430989236352158; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-98*Math.pow(10,-3)*u3(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-98*Math.pow(10,-3)*getVariable(3,k)
Aug 30, 2024 11:40:26 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.412585400332174; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-98*Math.pow(10,-3)*u3(k)+u7(k)/u7(k)-u2(k)/u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-98*Math.pow(10,-3)*getVariable(3,k)+getVariable(7,k)/getVariable(7,k)-getVariable(2,k)/getVariable(7,k)
Aug 30, 2024 11:40:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.408186677910965; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-98*Math.pow(10,-3)*u3(k)+u3(k)/u3(k)-u7(k)/u6(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-98*Math.pow(10,-3)*getVariable(3,k)+getVariable(3,k)/getVariable(3,k)-getVariable(7,k)/getVariable(6,k)
Aug 30, 2024 11:40:39 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.390626618385105; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-98*Math.pow(10,-3)*u3(k)+u7(k)/u7(k)-u2(k)/u6(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-98*Math.pow(10,-3)*getVariable(3,k)+getVariable(7,k)/getVariable(7,k)-getVariable(2,k)/getVariable(6,k)
Aug 30, 2024 11:40:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.385797013286942; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-98*Math.pow(10,-3)*u3(k)+u5(k)/u3(k)-u7(k)/u6(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-98*Math.pow(10,-3)*getVariable(3,k)+getVariable(5,k)/getVariable(3,k)-getVariable(7,k)/getVariable(6,k)
Aug 30, 2024 11:40:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.353694564391202; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-92*Math.pow(10,-3)*u3(k)+u7(k)/u7(k)-u2(k)/u6(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-92*Math.pow(10,-3)*getVariable(3,k)+getVariable(7,k)/getVariable(7,k)-getVariable(2,k)/getVariable(6,k)
Aug 30, 2024 11:41:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.31125948573246; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-76*Math.pow(10,-3)*u3(k)+u7(k)/u2(k)-u2(k)/u6(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-76*Math.pow(10,-3)*getVariable(3,k)+getVariable(7,k)/getVariable(2,k)-getVariable(2,k)/getVariable(6,k)
Aug 30, 2024 11:41:42 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.302144749914299; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-71*Math.pow(10,-3)*u3(k)+u7(k)/u2(k)-u2(k)/u6(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-71*Math.pow(10,-3)*getVariable(3,k)+getVariable(7,k)/getVariable(2,k)-getVariable(2,k)/getVariable(6,k)
Aug 30, 2024 11:41:45 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 4.302144749914299 -->> Avg.: 29.674559197271943 -->> Std. Dev.: 43.322134288745126
Aug 30, 2024 11:41:48 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.262462552716668; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-98*Math.pow(10,-3)*u3(k)+u7(k)/u3(k)-u2(k)/u6(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-98*Math.pow(10,-3)*getVariable(3,k)+getVariable(7,k)/getVariable(3,k)-getVariable(2,k)/getVariable(6,k)
Aug 30, 2024 11:42:03 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.2547939250893325; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-99*Math.pow(10,-3)*u3(k)+u7(k)/u3(k)-u2(k)/u6(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-99*Math.pow(10,-3)*getVariable(3,k)+getVariable(7,k)/getVariable(3,k)-getVariable(2,k)/getVariable(6,k)
Aug 30, 2024 11:42:18 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.205287405932975; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-76*Math.pow(10,-3)*u3(k)+u7(k)/u2(k)-u2(k)/u6(k)/u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-76*Math.pow(10,-3)*getVariable(3,k)+getVariable(7,k)/getVariable(2,k)-getVariable(2,k)/getVariable(6,k)/getVariable(8,k)
Aug 30, 2024 11:42:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.195040469930929; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-99*Math.pow(10,-3)*u3(k)+u6(k)/u3(k)-u2(k)/u6(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-99*Math.pow(10,-3)*getVariable(3,k)+getVariable(6,k)/getVariable(3,k)-getVariable(2,k)/getVariable(6,k)
Aug 30, 2024 11:42:53 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.1733456454228675; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-76*Math.pow(10,-3)/u3(k)+u7(k)/u2(k)-u2(k)/u5(k)/u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-76*Math.pow(10,-3)/getVariable(3,k)+getVariable(7,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)/getVariable(8,k)
Aug 30, 2024 11:43:07 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.1545872722063635; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-99*Math.pow(10,-3)*u3(k)+u7(k)/u2(k)-u2(k)/u6(k)+u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-99*Math.pow(10,-3)*getVariable(3,k)+getVariable(7,k)/getVariable(2,k)-getVariable(2,k)/getVariable(6,k)+getVariable(8,k)
Aug 30, 2024 11:43:15 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.1502367259126025; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-76*Math.pow(10,-3)/u9(k)*u7(k)/u2(k)-u2(k)/u5(k)/u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-76*Math.pow(10,-3)/getVariable(9,k)*getVariable(7,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)/getVariable(8,k)
Aug 30, 2024 11:43:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.1501747295254345; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-76*Math.pow(10,-3)/u9(k)*u2(k)/u2(k)-u2(k)/u5(k)/u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-76*Math.pow(10,-3)/getVariable(9,k)*getVariable(2,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)/getVariable(8,k)
Aug 30, 2024 11:43:29 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.149783070709096; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-76*Math.pow(10,-3)/u5(k)+u8(k)/u2(k)-u2(k)/u5(k)/u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-76*Math.pow(10,-3)/getVariable(5,k)+getVariable(8,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)/getVariable(8,k)
Aug 30, 2024 11:43:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.149777546268232; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-96*Math.pow(10,-2)/u9(k)*u2(k)/u2(k)-u2(k)/u5(k)/u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-96*Math.pow(10,-2)/getVariable(9,k)*getVariable(2,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)/getVariable(8,k)
Aug 30, 2024 11:43:44 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.147481842903245; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-70*Math.pow(10,-3)/u3(k)+u5(k)/u2(k)-u2(k)/u5(k)/u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-70*Math.pow(10,-3)/getVariable(3,k)+getVariable(5,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)/getVariable(8,k)
Aug 30, 2024 11:43:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.14579914616198; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-96*Math.pow(10,-2)/u9(k)*u2(k)/u6(k)-u2(k)/u5(k)/u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-96*Math.pow(10,-2)/getVariable(9,k)*getVariable(2,k)/getVariable(6,k)-getVariable(2,k)/getVariable(5,k)/getVariable(8,k)
Aug 30, 2024 11:43:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.145129266066688; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-70*Math.pow(10,-3)/u8(k)+u5(k)/u2(k)-u2(k)/u5(k)/u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-70*Math.pow(10,-3)/getVariable(8,k)+getVariable(5,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)/getVariable(8,k)
Aug 30, 2024 11:43:59 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.142134134403596; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-98*Math.pow(10,-3)/u7(k)+u9(k)/u2(k)-u2(k)/u5(k)/u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-98*Math.pow(10,-3)/getVariable(7,k)+getVariable(9,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)/getVariable(8,k)
Aug 30, 2024 11:44:23 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.139248453664917; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-76*Math.pow(10,-3)/u8(k)+u9(k)/u2(k)-u2(k)/u5(k)/u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-76*Math.pow(10,-3)/getVariable(8,k)+getVariable(9,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)/getVariable(8,k)
Aug 30, 2024 11:44:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.137871854344873; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-98*Math.pow(10,-1)/u7(k)+u9(k)/u2(k)-u2(k)/u5(k)/u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-98*Math.pow(10,-1)/getVariable(7,k)+getVariable(9,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)/getVariable(8,k)
Aug 30, 2024 11:44:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.1342079676188055; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-98*Math.pow(10,-3)+u8(k)*u9(k)/u2(k)-u2(k)/u5(k)/u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-98*Math.pow(10,-3)+getVariable(8,k)*getVariable(9,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)/getVariable(8,k)
Aug 30, 2024 11:44:49 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.134159695766782; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-99*Math.pow(10,-3)+u8(k)*u9(k)/u2(k)-u2(k)/u5(k)/u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-99*Math.pow(10,-3)+getVariable(8,k)*getVariable(9,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)/getVariable(8,k)
Aug 30, 2024 11:44:58 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 4.134159695766782 -->> Avg.: 10.369965553739467 -->> Std. Dev.: 10.822394675248905
Aug 30, 2024 11:45:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.134021676122933; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-98*Math.pow(10,-1)/u9(k)+u9(k)/u2(k)-u2(k)/u5(k)/u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-98*Math.pow(10,-1)/getVariable(9,k)+getVariable(9,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)/getVariable(8,k)
Aug 30, 2024 11:46:02 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.133748568612611; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-84*Math.pow(10,-1)/u9(k)+u9(k)/u2(k)-u2(k)/u5(k)/u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-84*Math.pow(10,-1)/getVariable(9,k)+getVariable(9,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)/getVariable(8,k)
Aug 30, 2024 11:46:27 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.121735713664657; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-84*Math.pow(10,-1)/u9(k)+u6(k)/u2(k)-u2(k)/u5(k)/u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-84*Math.pow(10,-1)/getVariable(9,k)+getVariable(6,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)/getVariable(8,k)
Aug 30, 2024 11:46:33 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.109062402932086; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)-76*Math.pow(10,-3)*u3(k)*u7(k)/u6(k)-u2(k)/u6(k)+u8(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)-76*Math.pow(10,-3)*getVariable(3,k)*getVariable(7,k)/getVariable(6,k)-getVariable(2,k)/getVariable(6,k)+getVariable(8,k)
Aug 30, 2024 11:46:57 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.092541433591962; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)*67*Math.pow(10,-2)*u8(k)+u9(k)/u2(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*67*Math.pow(10,-2)*getVariable(8,k)+getVariable(9,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:48:27 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.092541433591962 -->> Avg.: 5.017056168689306 -->> Std. Dev.: 1.4403163301626323
Aug 30, 2024 11:49:28 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.091890926436691; Expression=32*Math.pow(10,-2)*u6(k)+u3(k)/u9(k)+u8(k)*u8(k)*u8(k)*67*Math.pow(10,-2)*u8(k)+u9(k)/u2(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)+getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*67*Math.pow(10,-2)*getVariable(8,k)+getVariable(9,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:49:43 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.077572429495613; Expression=32*Math.pow(10,-2)*u6(k)+u3(k)/u3(k)+u8(k)*u8(k)*u8(k)*67*Math.pow(10,-2)*u8(k)+u9(k)/u2(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)+getVariable(3,k)/getVariable(3,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*67*Math.pow(10,-2)*getVariable(8,k)+getVariable(9,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:49:45 PM data.NormalizedDataTable evaluate
INFO: Best FIT=4.0052030069508255; Expression=32*Math.pow(10,-2)*u6(k)+u3(k)/u3(k)+u8(k)*u8(k)*u8(k)*84*Math.pow(10,-2)*u8(k)+u9(k)/u2(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)+getVariable(3,k)/getVariable(3,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*84*Math.pow(10,-2)*getVariable(8,k)+getVariable(9,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:49:51 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.977669380469256; Expression=32*Math.pow(10,-2)*u6(k)-u3(k)/u3(k)+u8(k)*u8(k)*u8(k)*84*Math.pow(10,-2)*u8(k)+u9(k)/u2(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)-getVariable(3,k)/getVariable(3,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*84*Math.pow(10,-2)*getVariable(8,k)+getVariable(9,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:49:52 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.920135254290941; Expression=32*Math.pow(10,-2)*u6(k)-u3(k)/u9(k)+u8(k)*u8(k)*u8(k)*86*Math.pow(10,-2)*u8(k)+u2(k)/u2(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)-getVariable(3,k)/getVariable(9,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*86*Math.pow(10,-2)*getVariable(8,k)+getVariable(2,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:49:58 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.8787752604734855; Expression=32*Math.pow(10,-2)*u6(k)-u3(k)/u6(k)+u8(k)*u8(k)*u8(k)*86*Math.pow(10,-2)*u8(k)+u9(k)/u2(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)-getVariable(3,k)/getVariable(6,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*86*Math.pow(10,-2)*getVariable(8,k)+getVariable(9,k)/getVariable(2,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:50:10 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.85858253353425; Expression=32*Math.pow(10,-2)*u6(k)-u9(k)/u3(k)+u8(k)*u8(k)*u8(k)*84*Math.pow(10,-2)*u8(k)+u9(k)/u4(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)-getVariable(9,k)/getVariable(3,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*84*Math.pow(10,-2)*getVariable(8,k)+getVariable(9,k)/getVariable(4,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:50:24 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.8489684573157943; Expression=32*Math.pow(10,-2)*u6(k)-u6(k)/u2(k)+u8(k)*u8(k)*u8(k)*86*Math.pow(10,-2)*u8(k)+u9(k)/u1(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)-getVariable(6,k)/getVariable(2,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*86*Math.pow(10,-2)*getVariable(8,k)+getVariable(9,k)/getVariable(1,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:51:05 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.8428319398038004; Expression=32*Math.pow(10,-2)*u6(k)-u5(k)/u3(k)+u8(k)*u8(k)*u8(k)*84*Math.pow(10,-2)*u8(k)+u3(k)/u4(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)-getVariable(5,k)/getVariable(3,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*84*Math.pow(10,-2)*getVariable(8,k)+getVariable(3,k)/getVariable(4,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:51:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.8418715099774254; Expression=32*Math.pow(10,-2)*u6(k)-u1(k)/u2(k)+u8(k)*u8(k)*u8(k)*86*Math.pow(10,-2)*u8(k)+u9(k)/u1(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)-getVariable(1,k)/getVariable(2,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*86*Math.pow(10,-2)*getVariable(8,k)+getVariable(9,k)/getVariable(1,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:51:31 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.8375251430089103; Expression=32*Math.pow(10,-2)*u6(k)-u1(k)/u2(k)+u8(k)*u8(k)*u8(k)*84*Math.pow(10,-2)*u8(k)+u9(k)/u1(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)-getVariable(1,k)/getVariable(2,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*84*Math.pow(10,-2)*getVariable(8,k)+getVariable(9,k)/getVariable(1,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:51:55 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 3.8375251430089103 -->> Avg.: 4.398403499357354 -->> Std. Dev.: 0.5321627256057504
Aug 30, 2024 11:54:11 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.8328551431807374; Expression=32*Math.pow(10,-2)*u6(k)-u1(k)/u6(k)+u8(k)*u8(k)*u8(k)*84*Math.pow(10,-2)*u8(k)+u6(k)/u1(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)-getVariable(1,k)/getVariable(6,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*84*Math.pow(10,-2)*getVariable(8,k)+getVariable(6,k)/getVariable(1,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:54:25 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.830074128528473; Expression=32*Math.pow(10,-2)*u6(k)-u1(k)/u6(k)+u8(k)*u8(k)*u8(k)*84*Math.pow(10,-2)*u8(k)+u7(k)/u1(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)-getVariable(1,k)/getVariable(6,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*84*Math.pow(10,-2)*getVariable(8,k)+getVariable(7,k)/getVariable(1,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:54:41 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.8300378781426763; Expression=32*Math.pow(10,-2)*u6(k)-u6(k)/u6(k)+u8(k)*u8(k)*u8(k)*84*Math.pow(10,-2)*u8(k)+u7(k)/u1(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)-getVariable(6,k)/getVariable(6,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*84*Math.pow(10,-2)*getVariable(8,k)+getVariable(7,k)/getVariable(1,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:54:55 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.828582282563443; Expression=32*Math.pow(10,-2)*u6(k)-u6(k)/u7(k)+u8(k)*u8(k)*u8(k)*84*Math.pow(10,-2)*u8(k)+u7(k)/u1(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)-getVariable(6,k)/getVariable(7,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*84*Math.pow(10,-2)*getVariable(8,k)+getVariable(7,k)/getVariable(1,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:54:56 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.8178995895440897; Expression=32*Math.pow(10,-2)*u6(k)-u1(k)/u6(k)+u8(k)*u8(k)*u8(k)*78*Math.pow(10,-2)*u8(k)+u7(k)/u1(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)-getVariable(1,k)/getVariable(6,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*78*Math.pow(10,-2)*getVariable(8,k)+getVariable(7,k)/getVariable(1,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:55:20 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 3.8178995895440897 -->> Avg.: 4.105441165331691 -->> Std. Dev.: 0.2090453072919616
Aug 30, 2024 11:55:35 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.8078689278755085; Expression=32*Math.pow(10,-2)*u6(k)-u1(k)/u7(k)+u8(k)*u8(k)*u8(k)*78*Math.pow(10,-2)*u8(k)+u7(k)/u1(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)-getVariable(1,k)/getVariable(7,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*78*Math.pow(10,-2)*getVariable(8,k)+getVariable(7,k)/getVariable(1,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:55:36 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.799592356770155; Expression=32*Math.pow(10,-2)*u6(k)-u1(k)/u3(k)+u8(k)*u8(k)*u8(k)*78*Math.pow(10,-2)*u8(k)+u7(k)/u3(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)-getVariable(1,k)/getVariable(3,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*78*Math.pow(10,-2)*getVariable(8,k)+getVariable(7,k)/getVariable(3,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:56:22 PM data.NormalizedDataTable evaluate
INFO: Best FIT=3.780369439385447; Expression=32*Math.pow(10,-2)*u6(k)-u1(k)/u3(k)+u8(k)*u8(k)*u8(k)*78*Math.pow(10,-2)*u8(k)+u7(k)/u4(k)-u2(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(6,k)-getVariable(1,k)/getVariable(3,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*78*Math.pow(10,-2)*getVariable(8,k)+getVariable(7,k)/getVariable(4,k)-getVariable(2,k)/getVariable(5,k)
Aug 30, 2024 11:58:42 PM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 3.780369439385447 -->> Avg.: 3.983010669864022 -->> Std. Dev.: 0.1712949767064615
Aug 31, 2024 12:02:07 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 3.780369439385447 -->> Avg.: 3.8994667316318727 -->> Std. Dev.: 0.14035391438175093
Aug 31, 2024 12:05:34 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 3.780369439385447 -->> Avg.: 3.8329734983303503 -->> Std. Dev.: 0.09167923838871113

Execution time: 1911.079 seconds.



@@;32*Math.pow(10,-2)*getVariable(6,k)-getVariable(1,k)/getVariable(3,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*78*Math.pow(10,-2)*getVariable(8,k)+getVariable(7,k)/getVariable(4,k)-getVariable(2,k)/getVariable(5,k)



Run #1
========
Aug 31, 2024 12:05:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6833.007924726258; Expression=u2(k)+u8(k)/u1(k)-u7(k)*u8(k)*u9(k); Java Expression: getVariable(2,k)+getVariable(8,k)/getVariable(1,k)-getVariable(7,k)*getVariable(8,k)*getVariable(9,k)
Aug 31, 2024 12:05:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=12.308402162251648; Expression=u3(k)+u4(k)-u4(k); Java Expression: getVariable(3,k)+getVariable(4,k)-getVariable(4,k)
Aug 31, 2024 12:05:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.329761572895992; Expression=5*Math.pow(10,-5)*u4(k)*u8(k)+u5(k); Java Expression: 5*Math.pow(10,-5)*getVariable(4,k)*getVariable(8,k)+getVariable(5,k)
Aug 31, 2024 12:05:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 31, 2024 12:06:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.966340476816091; Expression=66*Math.pow(10,-8)/u4(k)-u3(k)+u4(k)+u5(k)+u8(k); Java Expression: 66*Math.pow(10,-8)/getVariable(4,k)-getVariable(3,k)+getVariable(4,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 12:06:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.966339086199725; Expression=37*Math.pow(10,-8)*u4(k)-u3(k)+u4(k)+u5(k)+u8(k); Java Expression: 37*Math.pow(10,-8)*getVariable(4,k)-getVariable(3,k)+getVariable(4,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 12:06:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.920317990969883; Expression=66*Math.pow(10,-8)/u4(k)-u3(k)/u4(k)+u5(k)+u8(k); Java Expression: 66*Math.pow(10,-8)/getVariable(4,k)-getVariable(3,k)/getVariable(4,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 12:06:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.920317990951525; Expression=78*Math.pow(10,-8)/u4(k)-u3(k)/u4(k)+u5(k)+u8(k); Java Expression: 78*Math.pow(10,-8)/getVariable(4,k)-getVariable(3,k)/getVariable(4,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 12:06:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.832366896431637; Expression=87*Math.pow(10,-8)*u4(k)-u3(k)/u9(k)+u5(k)+u8(k); Java Expression: 87*Math.pow(10,-8)*getVariable(4,k)-getVariable(3,k)/getVariable(9,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 12:06:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.212223594177845; Expression=31*Math.pow(10,+1)/90*Math.pow(10,-1)*u7(k)/u6(k)*u6(k); Java Expression: 31*Math.pow(10,+1)/90*Math.pow(10,-1)*getVariable(7,k)/getVariable(6,k)*getVariable(6,k)
Aug 31, 2024 12:06:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.059284001366658; Expression=43*Math.pow(10,-4)*u5(k)*u2(k)*u8(k); Java Expression: 43*Math.pow(10,-4)*getVariable(5,k)*getVariable(2,k)*getVariable(8,k)
Aug 31, 2024 12:06:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.525097431631527; Expression=u5(k)*u2(k)*u8(k)*43*Math.pow(10,-4)-u8(k); Java Expression: getVariable(5,k)*getVariable(2,k)*getVariable(8,k)*43*Math.pow(10,-4)-getVariable(8,k)
Aug 31, 2024 12:06:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.3097968881959545; Expression=u5(k)*u2(k)*u8(k)*41*Math.pow(10,-4)-u8(k); Java Expression: getVariable(5,k)*getVariable(2,k)*getVariable(8,k)*41*Math.pow(10,-4)-getVariable(8,k)
Aug 31, 2024 12:06:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.096767778050689; Expression=76*Math.pow(10,-3)/u4(k)*u3(k)-u4(k)-u5(k)+u7(k); Java Expression: 76*Math.pow(10,-3)/getVariable(4,k)*getVariable(3,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 31, 2024 12:06:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0820290597690105; Expression=17*Math.pow(10,-3)/u5(k)*u3(k)-u4(k)-u5(k)+u7(k); Java Expression: 17*Math.pow(10,-3)/getVariable(5,k)*getVariable(3,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 31, 2024 12:06:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.079315317607063; Expression=76*Math.pow(10,-4)/u4(k)*u3(k)-u4(k)-u5(k)+u7(k); Java Expression: 76*Math.pow(10,-4)/getVariable(4,k)*getVariable(3,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 31, 2024 12:06:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427654902587; Expression=76*Math.pow(10,-8)/u3(k)*u3(k)-u4(k)-u5(k)+u7(k); Java Expression: 76*Math.pow(10,-8)/getVariable(3,k)*getVariable(3,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 31, 2024 12:06:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427577964884; Expression=41*Math.pow(10,-8)/u3(k)*u3(k)-u4(k)-u5(k)+u7(k); Java Expression: 41*Math.pow(10,-8)/getVariable(3,k)*getVariable(3,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 31, 2024 12:06:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0774275066646615; Expression=76*Math.pow(10,-9)/u4(k)*u3(k)-u4(k)-u5(k)+u7(k); Java Expression: 76*Math.pow(10,-9)/getVariable(4,k)*getVariable(3,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 31, 2024 12:06:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427504544327; Expression=76*Math.pow(10,-9)/u3(k)*u3(k)-u4(k)-u5(k)+u7(k); Java Expression: 76*Math.pow(10,-9)/getVariable(3,k)*getVariable(3,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 31, 2024 12:06:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427500256515; Expression=14*Math.pow(10,-8)/u1(k)*u3(k)-u4(k)-u5(k)+u7(k); Java Expression: 14*Math.pow(10,-8)/getVariable(1,k)*getVariable(3,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 31, 2024 12:06:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.07742749482366; Expression=76*Math.pow(10,-9)/u6(k)*u3(k)-u4(k)-u5(k)+u7(k); Java Expression: 76*Math.pow(10,-9)/getVariable(6,k)*getVariable(3,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)
Aug 31, 2024 12:06:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.04314552212379; Expression=76*Math.pow(10,-5)/u1(k)*u3(k)-u4(k)-u5(k)+u7(k)-u3(k)*u8(k)/u9(k)/u6(k)*u6(k); Java Expression: 76*Math.pow(10,-5)/getVariable(1,k)*getVariable(3,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(3,k)*getVariable(8,k)/getVariable(9,k)/getVariable(6,k)*getVariable(6,k)
Aug 31, 2024 12:06:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.043140014310094; Expression=84*Math.pow(10,-5)/u1(k)*u3(k)-u4(k)-u5(k)+u7(k)-u3(k)*u8(k)/u9(k)/u6(k)*u6(k); Java Expression: 84*Math.pow(10,-5)/getVariable(1,k)*getVariable(3,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(3,k)*getVariable(8,k)/getVariable(9,k)/getVariable(6,k)*getVariable(6,k)
Aug 31, 2024 12:07:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.841646731306484; Expression=76*Math.pow(10,-5)/u1(k)*u3(k)-u4(k)-u5(k)+u7(k)-u3(k)/u8(k)/u9(k)/u6(k)*u6(k); Java Expression: 76*Math.pow(10,-5)/getVariable(1,k)*getVariable(3,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(3,k)/getVariable(8,k)/getVariable(9,k)/getVariable(6,k)*getVariable(6,k)
Aug 31, 2024 12:07:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.812278514483738; Expression=66*Math.pow(10,-4)/u1(k)*u5(k)-u4(k)-u5(k)+u7(k)-u3(k)/u8(k)/u9(k)/u6(k)*u7(k); Java Expression: 66*Math.pow(10,-4)/getVariable(1,k)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(3,k)/getVariable(8,k)/getVariable(9,k)/getVariable(6,k)*getVariable(7,k)
Aug 31, 2024 12:07:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.76381560108553; Expression=66*Math.pow(10,-8)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)/u8(k)/u9(k)/u6(k)*u6(k); Java Expression: 66*Math.pow(10,-8)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(9,k)/getVariable(6,k)*getVariable(6,k)
Aug 31, 2024 12:07:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.760683250601173; Expression=66*Math.pow(10,-4)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)/u8(k)/u9(k)/u6(k)*u6(k); Java Expression: 66*Math.pow(10,-4)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(9,k)/getVariable(6,k)*getVariable(6,k)
Aug 31, 2024 12:07:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7341772261955075; Expression=66*Math.pow(10,-3)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)/u8(k)/u9(k)/u6(k)*u6(k); Java Expression: 66*Math.pow(10,-3)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(9,k)/getVariable(6,k)*getVariable(6,k)
Aug 31, 2024 12:07:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.729193612635669; Expression=78*Math.pow(10,-3)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)/u8(k)/u9(k)/u6(k)*u6(k); Java Expression: 78*Math.pow(10,-3)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(9,k)/getVariable(6,k)*getVariable(6,k)
Aug 31, 2024 12:07:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.69239225201324; Expression=66*Math.pow(10,-8)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)/13*Math.pow(10,-1)/u8(k)/u9(k)*u6(k); Java Expression: 66*Math.pow(10,-8)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)/13*Math.pow(10,-1)/getVariable(8,k)/getVariable(9,k)*getVariable(6,k)
Aug 31, 2024 12:07:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672086868968404; Expression=66*Math.pow(10,-8)/u8(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)/u8(k)/u9(k)/u6(k)*u1(k); Java Expression: 66*Math.pow(10,-8)/getVariable(8,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(9,k)/getVariable(6,k)*getVariable(1,k)
Aug 31, 2024 12:07:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.669161374059934; Expression=38*Math.pow(10,-5)/u8(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)/u8(k)/u9(k)/u6(k)*u1(k); Java Expression: 38*Math.pow(10,-5)/getVariable(8,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(9,k)/getVariable(6,k)*getVariable(1,k)
Aug 31, 2024 12:07:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.662412526322119; Expression=66*Math.pow(10,-4)/u8(k)*u9(k)-u4(k)-u5(k)+u7(k)-u7(k)/u8(k)/u9(k)/u6(k)*u1(k); Java Expression: 66*Math.pow(10,-4)/getVariable(8,k)*getVariable(9,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(9,k)/getVariable(6,k)*getVariable(1,k)
Aug 31, 2024 12:07:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.642479613865495; Expression=66*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)/u8(k)/u9(k)/u6(k)*u6(k); Java Expression: 66*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(9,k)/getVariable(6,k)*getVariable(6,k)
Aug 31, 2024 12:07:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.637555418797125; Expression=46*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)/u8(k)/u9(k)/u6(k)*u6(k); Java Expression: 46*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(9,k)/getVariable(6,k)*getVariable(6,k)
Aug 31, 2024 12:07:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.577135485386761; Expression=66*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)/u8(k)/u9(k)/u6(k)*u7(k); Java Expression: 66*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(9,k)/getVariable(6,k)*getVariable(7,k)
Aug 31, 2024 12:08:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.577018572586687; Expression=63*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)/u8(k)/u9(k)/u6(k)*u7(k); Java Expression: 63*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(9,k)/getVariable(6,k)*getVariable(7,k)
Aug 31, 2024 12:08:03 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.577018572586687 -->> Avg.: 421053.58356217964 -->> Std. Dev.: 1994979.0859796756
Aug 31, 2024 12:08:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.577003950142814; Expression=65*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)/u8(k)/u9(k)/u6(k)*u7(k); Java Expression: 65*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(9,k)/getVariable(6,k)*getVariable(7,k)
Aug 31, 2024 12:08:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.576964978562636; Expression=64*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)/u8(k)/u9(k)/u6(k)*u7(k); Java Expression: 64*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)/getVariable(8,k)/getVariable(9,k)/getVariable(6,k)*getVariable(7,k)
Aug 31, 2024 12:09:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.564111345207403; Expression=66*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*13*Math.pow(10,-3)/u8(k)/u9(k)*u6(k); Java Expression: 66*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*13*Math.pow(10,-3)/getVariable(8,k)/getVariable(9,k)*getVariable(6,k)
Aug 31, 2024 12:09:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5023099404564855; Expression=66*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*13*Math.pow(10,-3)/u8(k)/u9(k)*u7(k); Java Expression: 66*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*13*Math.pow(10,-3)/getVariable(8,k)/getVariable(9,k)*getVariable(7,k)
Aug 31, 2024 12:10:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.489406389178615; Expression=76*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*13*Math.pow(10,-3)/u8(k)/u9(k)*u7(k); Java Expression: 76*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*13*Math.pow(10,-3)/getVariable(8,k)/getVariable(9,k)*getVariable(7,k)
Aug 31, 2024 12:10:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.487364222355145; Expression=79*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*13*Math.pow(10,-3)/u8(k)/u9(k)*u7(k); Java Expression: 79*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*13*Math.pow(10,-3)/getVariable(8,k)/getVariable(9,k)*getVariable(7,k)
Aug 31, 2024 12:10:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.487118843487868; Expression=90*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*13*Math.pow(10,-3)/u8(k)/u9(k)*u7(k); Java Expression: 90*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*13*Math.pow(10,-3)/getVariable(8,k)/getVariable(9,k)*getVariable(7,k)
Aug 31, 2024 12:10:53 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.487118843487868 -->> Avg.: 459.772803506904 -->> Std. Dev.: 1301.6949948234967
Aug 31, 2024 12:10:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.485957730875752; Expression=83*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*13*Math.pow(10,-3)/u8(k)/u9(k)*u7(k); Java Expression: 83*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*13*Math.pow(10,-3)/getVariable(8,k)/getVariable(9,k)*getVariable(7,k)
Aug 31, 2024 12:11:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.485890793297417; Expression=86*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*13*Math.pow(10,-3)/u8(k)/u9(k)*u7(k); Java Expression: 86*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*13*Math.pow(10,-3)/getVariable(8,k)/getVariable(9,k)*getVariable(7,k)
Aug 31, 2024 12:11:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.48584131566359; Expression=84*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*13*Math.pow(10,-3)/u8(k)/u9(k)*u7(k); Java Expression: 84*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*13*Math.pow(10,-3)/getVariable(8,k)/getVariable(9,k)*getVariable(7,k)
Aug 31, 2024 12:12:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4858190027547264; Expression=85*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*13*Math.pow(10,-3)/u8(k)/u9(k)*u7(k); Java Expression: 85*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*13*Math.pow(10,-3)/getVariable(8,k)/getVariable(9,k)*getVariable(7,k)
Aug 31, 2024 12:12:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.481726953565816; Expression=84*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*14*Math.pow(10,-3)/u8(k)/u9(k)*u7(k); Java Expression: 84*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*14*Math.pow(10,-3)/getVariable(8,k)/getVariable(9,k)*getVariable(7,k)
Aug 31, 2024 12:12:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.476835250958087; Expression=97*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*14*Math.pow(10,-3)/u8(k)/u9(k)*u7(k); Java Expression: 97*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*14*Math.pow(10,-3)/getVariable(8,k)/getVariable(9,k)*getVariable(7,k)
Aug 31, 2024 12:12:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.473918611128514; Expression=84*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*14*Math.pow(10,-3)/u8(k)/u5(k)*u7(k); Java Expression: 84*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*14*Math.pow(10,-3)/getVariable(8,k)/getVariable(5,k)*getVariable(7,k)
Aug 31, 2024 12:13:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.469362462496437; Expression=88*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*14*Math.pow(10,-3)/u8(k)/u5(k)*u7(k); Java Expression: 88*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*14*Math.pow(10,-3)/getVariable(8,k)/getVariable(5,k)*getVariable(7,k)
Aug 31, 2024 12:13:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.464626453807314; Expression=97*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*14*Math.pow(10,-3)/u8(k)/u5(k)*u7(k); Java Expression: 97*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*14*Math.pow(10,-3)/getVariable(8,k)/getVariable(5,k)*getVariable(7,k)
Aug 31, 2024 12:13:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.460351519987756; Expression=97*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*18*Math.pow(10,-3)/u8(k)/u5(k)*u7(k); Java Expression: 97*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*18*Math.pow(10,-3)/getVariable(8,k)/getVariable(5,k)*getVariable(7,k)
Aug 31, 2024 12:14:01 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.460351519987756 -->> Avg.: 27.962567822889294 -->> Std. Dev.: 35.72101589979938
Aug 31, 2024 12:14:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4439727181723; Expression=97*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*17*Math.pow(10,-3)/u8(k)/u5(k)*u7(k); Java Expression: 97*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*17*Math.pow(10,-3)/getVariable(8,k)/getVariable(5,k)*getVariable(7,k)
Aug 31, 2024 12:14:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.438259247348355; Expression=99*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*17*Math.pow(10,-3)/u8(k)/u5(k)*u7(k); Java Expression: 99*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*17*Math.pow(10,-3)/getVariable(8,k)/getVariable(5,k)*getVariable(7,k)
Aug 31, 2024 12:14:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4259674302045; Expression=97*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*18*Math.pow(10,-3)/u8(k)/u4(k)*u7(k); Java Expression: 97*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*18*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)
Aug 31, 2024 12:17:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4226680069557265; Expression=99*Math.pow(10,-2)/u1(k)*u2(k)-u4(k)-u5(k)+u7(k)-u7(k)*18*Math.pow(10,-3)/u8(k)/u4(k)*u7(k); Java Expression: 99*Math.pow(10,-2)/getVariable(1,k)*getVariable(2,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*18*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)
Aug 31, 2024 12:17:14 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.4226680069557265 -->> Avg.: 11.176289231714039 -->> Std. Dev.: 10.860257066257939
Aug 31, 2024 12:17:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.398368506113638; Expression=97*Math.pow(10,-1)/u1(k)*u5(k)-u4(k)-u5(k)+u7(k)-u7(k)*32*Math.pow(10,-3)/u8(k)/u4(k)*u7(k); Java Expression: 97*Math.pow(10,-1)/getVariable(1,k)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*32*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)
Aug 31, 2024 12:17:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.386605975370893; Expression=98*Math.pow(10,-1)/u1(k)*u5(k)-u4(k)-u5(k)+u7(k)-u7(k)*32*Math.pow(10,-3)/u8(k)/u4(k)*u7(k); Java Expression: 98*Math.pow(10,-1)/getVariable(1,k)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*32*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)
Aug 31, 2024 12:17:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3694926305353645; Expression=52*Math.pow(10,-1)/u1(k)*u5(k)-u4(k)-u5(k)+u7(k)-u7(k)*18*Math.pow(10,-3)/u8(k)/u4(k)*u7(k); Java Expression: 52*Math.pow(10,-1)/getVariable(1,k)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*18*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)
Aug 31, 2024 12:17:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.354871177982032; Expression=72*Math.pow(10,-1)/u1(k)*u5(k)-u4(k)-u5(k)+u7(k)-u7(k)*18*Math.pow(10,-3)/u8(k)/u4(k)*u7(k); Java Expression: 72*Math.pow(10,-1)/getVariable(1,k)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*18*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)
Aug 31, 2024 12:18:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.239425709977555; Expression=97*Math.pow(10,-1)/u1(k)*u5(k)-u4(k)-u5(k)+u7(k)-u7(k)*28*Math.pow(10,-3)/u8(k)/u4(k)*u7(k); Java Expression: 97*Math.pow(10,-1)/getVariable(1,k)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*28*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)
Aug 31, 2024 12:18:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.218632416515595; Expression=97*Math.pow(10,-1)/u1(k)*u5(k)-u4(k)-u5(k)+u7(k)-u7(k)*26*Math.pow(10,-3)/u8(k)/u4(k)*u7(k); Java Expression: 97*Math.pow(10,-1)/getVariable(1,k)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*26*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)
Aug 31, 2024 12:19:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.217174105274819; Expression=99*Math.pow(10,-1)/u1(k)*u5(k)-u4(k)-u5(k)+u7(k)-u7(k)*27*Math.pow(10,-3)/u8(k)/u4(k)*u7(k); Java Expression: 99*Math.pow(10,-1)/getVariable(1,k)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*27*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)
Aug 31, 2024 12:19:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.216734098756454; Expression=98*Math.pow(10,-1)/u1(k)*u5(k)-u4(k)-u5(k)+u7(k)-u7(k)*26*Math.pow(10,-3)/u8(k)/u4(k)*u7(k); Java Expression: 98*Math.pow(10,-1)/getVariable(1,k)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*26*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)
Aug 31, 2024 12:20:26 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.216734098756454 -->> Avg.: 5.836459110068876 -->> Std. Dev.: 1.2851201634301168
Aug 31, 2024 12:20:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.215188248626351; Expression=99*Math.pow(10,-1)/u1(k)*u5(k)-u4(k)-u5(k)+u7(k)-u7(k)*26*Math.pow(10,-3)/u8(k)/u4(k)*u7(k); Java Expression: 99*Math.pow(10,-1)/getVariable(1,k)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*26*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)
Aug 31, 2024 12:23:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.215188248626349; Expression=99*Math.pow(10,-1)/u1(k)*u5(k)-u4(k)-u5(k)+u7(k)-u7(k)*26*Math.pow(10,-3)/u8(k)/u4(k)*u7(k)+u7(k)-u7(k); Java Expression: 99*Math.pow(10,-1)/getVariable(1,k)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*26*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 12:23:38 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.215188248626349 -->> Avg.: 5.394168821851749 -->> Std. Dev.: 0.13675439991484825
Aug 31, 2024 12:24:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.180713475650193; Expression=99*Math.pow(10,-1)/u1(k)*u5(k)-u4(k)-u5(k)+u7(k)-u7(k)*26*Math.pow(10,-3)/u8(k)/u4(k)*u7(k)*u3(k)/u4(k); Java Expression: 99*Math.pow(10,-1)/getVariable(1,k)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*26*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)*getVariable(3,k)/getVariable(4,k)
Aug 31, 2024 12:24:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.031240297273581; Expression=99*Math.pow(10,-1)/u1(k)*u5(k)-u4(k)-u5(k)+u7(k)-u7(k)*26*Math.pow(10,-3)/u8(k)/u4(k)*u7(k)*u7(k)/u6(k); Java Expression: 99*Math.pow(10,-1)/getVariable(1,k)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*26*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)*getVariable(7,k)/getVariable(6,k)
Aug 31, 2024 12:26:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.028166627386249; Expression=99*Math.pow(10,-1)/u1(k)*u5(k)-u4(k)-u5(k)+u7(k)-u7(k)*25*Math.pow(10,-3)/u8(k)/u4(k)*u7(k)*u7(k)/u6(k); Java Expression: 99*Math.pow(10,-1)/getVariable(1,k)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*25*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)*getVariable(7,k)/getVariable(6,k)
Aug 31, 2024 12:26:53 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.028166627386249 -->> Avg.: 5.302940729288292 -->> Std. Dev.: 0.14944938403078925
Aug 31, 2024 12:30:15 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.028166627386249 -->> Avg.: 5.214186633573401 -->> Std. Dev.: 0.151285814987914
Aug 31, 2024 12:32:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.982571575607377; Expression=99*Math.pow(10,-1)/u1(k)*u5(k)-u4(k)-u5(k)+u7(k)-u7(k)*9*Math.pow(10,-3)/u8(k)/u4(k)*u7(k)*u7(k)/u5(k); Java Expression: 99*Math.pow(10,-1)/getVariable(1,k)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*9*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)*getVariable(7,k)/getVariable(5,k)
Aug 31, 2024 12:33:37 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.982571575607377 -->> Avg.: 5.1328999515373015 -->> Std. Dev.: 0.11831094986693211
Aug 31, 2024 12:36:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.894727748218812; Expression=99*Math.pow(10,-1)/u4(k)*u5(k)-u4(k)-u5(k)+u7(k)-u7(k)*15*Math.pow(10,-3)/u8(k)/u4(k)*u7(k)*u7(k)/u5(k); Java Expression: 99*Math.pow(10,-1)/getVariable(4,k)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*15*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)*getVariable(7,k)/getVariable(5,k)
Aug 31, 2024 12:37:00 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.894727748218812 -->> Avg.: 5.072147839992789 -->> Std. Dev.: 0.09337177000534944

Execution time: 1885.212 seconds.



@@;99*Math.pow(10,-1)/getVariable(4,k)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*15*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)*getVariable(7,k)/getVariable(5,k)



Run #2
========
Aug 31, 2024 12:37:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=92.9349847226667; Expression=u1(k)/u8(k)-u6(k)+u1(k)-u4(k)/u7(k)/u8(k)-u6(k); Java Expression: getVariable(1,k)/getVariable(8,k)-getVariable(6,k)+getVariable(1,k)-getVariable(4,k)/getVariable(7,k)/getVariable(8,k)-getVariable(6,k)
Aug 31, 2024 12:37:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=67.18462759890927; Expression=6*Math.pow(10,-8)-u5(k); Java Expression: 6*Math.pow(10,-8)-getVariable(5,k)
Aug 31, 2024 12:37:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=34.29402537738939; Expression=77*Math.pow(10,-6)/u6(k)*u7(k); Java Expression: 77*Math.pow(10,-6)/getVariable(6,k)*getVariable(7,k)
Aug 31, 2024 12:37:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=17.51106041646358; Expression=98*Math.pow(10,-5)/u1(k)*41*Math.pow(10,+4)+u9(k); Java Expression: 98*Math.pow(10,-5)/getVariable(1,k)*41*Math.pow(10,+4)+getVariable(9,k)
Aug 31, 2024 12:37:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=13.99225363276434; Expression=u4(k)-u4(k)+u2(k)/u1(k)/u2(k)*81*Math.pow(10,+3)/u4(k); Java Expression: getVariable(4,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)/getVariable(2,k)*81*Math.pow(10,+3)/getVariable(4,k)
Aug 31, 2024 12:37:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=9.55201321722219; Expression=40*Math.pow(10,+1)/1*Math.pow(10,-2)-9*Math.pow(10,-4)+u5(k)+u8(k); Java Expression: 40*Math.pow(10,+1)/1*Math.pow(10,-2)-9*Math.pow(10,-4)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 12:37:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.838502705278417; Expression=u1(k)/u6(k)-u8(k)-u7(k)/22*Math.pow(10,-4)+u5(k); Java Expression: getVariable(1,k)/getVariable(6,k)-getVariable(8,k)-getVariable(7,k)/22*Math.pow(10,-4)+getVariable(5,k)
Aug 31, 2024 12:37:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330471368844538; Expression=40*Math.pow(10,-8)+u5(k); Java Expression: 40*Math.pow(10,-8)+getVariable(5,k)
Aug 31, 2024 12:37:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.33043804823506; Expression=85*Math.pow(10,+2)/59*Math.pow(10,-5)+u5(k); Java Expression: 85*Math.pow(10,+2)/59*Math.pow(10,-5)+getVariable(5,k)
Aug 31, 2024 12:37:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.329960849085964; Expression=52*Math.pow(10,+4)*45*Math.pow(10,-9)+u5(k); Java Expression: 52*Math.pow(10,+4)*45*Math.pow(10,-9)+getVariable(5,k)
Aug 31, 2024 12:37:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.141352418519757; Expression=u1(k)/u6(k)*u8(k)-u7(k)/22*Math.pow(10,-4)+u5(k); Java Expression: getVariable(1,k)/getVariable(6,k)*getVariable(8,k)-getVariable(7,k)/22*Math.pow(10,-4)+getVariable(5,k)
Aug 31, 2024 12:37:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 12:37:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.516421584706645; Expression=u8(k)-u6(k)/u9(k)+u8(k)+u5(k)-u2(k)+u2(k); Java Expression: getVariable(8,k)-getVariable(6,k)/getVariable(9,k)+getVariable(8,k)+getVariable(5,k)-getVariable(2,k)+getVariable(2,k)
Aug 31, 2024 12:37:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.405130153203191; Expression=u8(k)-u6(k)/u9(k)/u8(k)+u5(k)-u2(k)+u2(k); Java Expression: getVariable(8,k)-getVariable(6,k)/getVariable(9,k)/getVariable(8,k)+getVariable(5,k)-getVariable(2,k)+getVariable(2,k)
Aug 31, 2024 12:37:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.679327286954933; Expression=u9(k)/u5(k)+31*Math.pow(10,-2)*u7(k); Java Expression: getVariable(9,k)/getVariable(5,k)+31*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 12:37:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.087477766851772; Expression=45*Math.pow(10,-3)-u5(k)+u7(k)-u4(k); Java Expression: 45*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 31, 2024 12:37:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427499048777; Expression=51*Math.pow(10,-9)-u5(k)+u7(k)-u4(k); Java Expression: 51*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 31, 2024 12:37:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427495751442; Expression=36*Math.pow(10,-9)-u5(k)+u7(k)-u4(k); Java Expression: 36*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 31, 2024 12:37:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427488057681; Expression=1*Math.pow(10,-9)-u5(k)+u7(k)-u4(k); Java Expression: 1*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)
Aug 31, 2024 12:37:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388952169681; Expression=87*Math.pow(10,-9)-u5(k)+u8(k)-u3(k)+u7(k); Java Expression: 87*Math.pow(10,-9)-getVariable(5,k)+getVariable(8,k)-getVariable(3,k)+getVariable(7,k)
Aug 31, 2024 12:37:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9923889479352646; Expression=22*Math.pow(10,-9)-u5(k)+u8(k)-u3(k)+u7(k); Java Expression: 22*Math.pow(10,-9)-getVariable(5,k)+getVariable(8,k)-getVariable(3,k)+getVariable(7,k)
Aug 31, 2024 12:37:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388946958088; Expression=7*Math.pow(10,-9)-u5(k)+u8(k)-u3(k)+u7(k); Java Expression: 7*Math.pow(10,-9)-getVariable(5,k)+getVariable(8,k)-getVariable(3,k)+getVariable(7,k)
Aug 31, 2024 12:37:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388946697508; Expression=3*Math.pow(10,-9)-u5(k)+u8(k)-u3(k)+u7(k); Java Expression: 3*Math.pow(10,-9)-getVariable(5,k)+getVariable(8,k)-getVariable(3,k)+getVariable(7,k)
Aug 31, 2024 12:37:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.97964840589014; Expression=36*Math.pow(10,-4)-u5(k)+u7(k)-u4(k)+u1(k)-4*Math.pow(10,-3)*u7(k)-u1(k); Java Expression: 36*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-4*Math.pow(10,-3)*getVariable(7,k)-getVariable(1,k)
Aug 31, 2024 12:38:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.979100272236967; Expression=36*Math.pow(10,-6)-u5(k)+u7(k)-u4(k)+u1(k)-4*Math.pow(10,-3)*u7(k)-u1(k); Java Expression: 36*Math.pow(10,-6)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-4*Math.pow(10,-3)*getVariable(7,k)-getVariable(1,k)
Aug 31, 2024 12:38:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.97909475425034; Expression=53*Math.pow(10,-9)-u5(k)+u7(k)-u4(k)+u1(k)-4*Math.pow(10,-3)*u7(k)-u1(k); Java Expression: 53*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-4*Math.pow(10,-3)*getVariable(7,k)-getVariable(1,k)
Aug 31, 2024 12:38:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.958913369560171; Expression=12*Math.pow(10,-9)-u5(k)+u7(k)-u4(k)+u1(k)-5*Math.pow(10,-3)*u7(k)-u1(k); Java Expression: 12*Math.pow(10,-9)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-5*Math.pow(10,-3)*getVariable(7,k)-getVariable(1,k)
Aug 31, 2024 12:38:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8698182651709265; Expression=80*Math.pow(10,-4)-u5(k)+u7(k)-u4(k)+u1(k)-19*Math.pow(10,-3)*u7(k)-u1(k); Java Expression: 80*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-19*Math.pow(10,-3)*getVariable(7,k)-getVariable(1,k)
Aug 31, 2024 12:38:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.864758075505681; Expression=52*Math.pow(10,-6)-u5(k)+u7(k)-u4(k)+u1(k)-18*Math.pow(10,-3)*u7(k)-u1(k); Java Expression: 52*Math.pow(10,-6)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-18*Math.pow(10,-3)*getVariable(7,k)-getVariable(1,k)
Aug 31, 2024 12:38:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.862376586646207; Expression=80*Math.pow(10,-3)-u5(k)+u7(k)-u4(k)+u1(k)-19*Math.pow(10,-3)*u7(k)-u1(k); Java Expression: 80*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-19*Math.pow(10,-3)*getVariable(7,k)-getVariable(1,k)
Aug 31, 2024 12:38:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.80263648916196; Expression=80*Math.pow(10,-4)-u5(k)+u7(k)-u4(k)+u1(k)-19*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 80*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-19*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:38:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.800980148493024; Expression=80*Math.pow(10,-3)-u5(k)+u7(k)-u4(k)+u1(k)-19*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 80*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-19*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:38:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.796600933225321; Expression=80*Math.pow(10,-4)-u5(k)+u7(k)-u4(k)+u1(k)-23*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 80*Math.pow(10,-4)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-23*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:38:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.790982842244719; Expression=80*Math.pow(10,-3)-u5(k)+u7(k)-u4(k)+u1(k)-23*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 80*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-23*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:38:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.79076806434262; Expression=83*Math.pow(10,-3)-u5(k)+u7(k)-u4(k)+u1(k)-23*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 83*Math.pow(10,-3)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-23*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:38:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.785659533587333; Expression=83*Math.pow(10,-2)-u5(k)+u7(k)-u4(k)+u1(k)-23*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 83*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-23*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:39:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.776065125616588; Expression=52*Math.pow(10,-2)-u5(k)+u7(k)-u4(k)+u1(k)-23*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 52*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-23*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:39:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.747367986249465; Expression=92*Math.pow(10,-2)-u5(k)+u7(k)-u4(k)+u1(k)-28*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 92*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-28*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:39:26 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.747367986249465 -->> Avg.: 1095393.6363347801 -->> Std. Dev.: 5265015.675452535
Aug 31, 2024 12:39:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.73923287234969; Expression=87*Math.pow(10,-2)-u5(k)+u7(k)-u4(k)+u1(k)-30*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 87*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-30*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:39:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7369035126199694; Expression=97*Math.pow(10,-2)-u5(k)+u7(k)-u4(k)+u1(k)-30*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 97*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-30*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:39:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.736766398252282; Expression=98*Math.pow(10,-2)-u5(k)+u7(k)-u4(k)+u1(k)-30*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 98*Math.pow(10,-2)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-30*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:39:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.630300035713837; Expression=41*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u1(k)-61*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 41*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-61*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:40:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.603447117192853; Expression=37*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u1(k)-61*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 37*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-61*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:40:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.55671536563252; Expression=57*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u1(k)-95*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 57*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-95*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:40:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.543092258254623; Expression=55*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u1(k)-89*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 55*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-89*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:40:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.537800977003425; Expression=65*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u1(k)-95*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 65*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-95*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:40:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5375607694830835; Expression=57*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u1(k)-89*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 57*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-89*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:41:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.533847703914493; Expression=64*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u1(k)-95*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 64*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-95*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:41:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.532825919706702; Expression=61*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u1(k)-95*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 61*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-95*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:41:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.528965911651185; Expression=65*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u1(k)-99*Math.pow(10,-3)*u1(k)-u1(k); Java Expression: 65*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(1,k)-99*Math.pow(10,-3)*getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 12:42:04 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.528965911651185 -->> Avg.: 976.0328154662311 -->> Std. Dev.: 2742.5916112517784
Aug 31, 2024 12:42:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.528965911651184; Expression=65*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)+u3(k)-99*Math.pow(10,-3)*u1(k)-u3(k); Java Expression: 65*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)+getVariable(3,k)-99*Math.pow(10,-3)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:42:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.490691333413479; Expression=99*Math.pow(10,-1)-u5(k)+u7(k)-u4(k)/u3(k)-99*Math.pow(10,-3)*u1(k)-u3(k); Java Expression: 99*Math.pow(10,-1)-getVariable(5,k)+getVariable(7,k)-getVariable(4,k)/getVariable(3,k)-99*Math.pow(10,-3)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:43:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.312701661281373; Expression=53*Math.pow(10,-4)*u5(k)+u7(k)-u4(k)/u3(k)-4*Math.pow(10,-1)*u1(k)-u3(k); Java Expression: 53*Math.pow(10,-4)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)/getVariable(3,k)-4*Math.pow(10,-1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:43:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.274106941274427; Expression=70*Math.pow(10,-4)*u5(k)+u7(k)-u4(k)/u2(k)-4*Math.pow(10,-1)*u1(k)-u3(k); Java Expression: 70*Math.pow(10,-4)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)/getVariable(2,k)-4*Math.pow(10,-1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:43:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2636944451359895; Expression=70*Math.pow(10,-4)*u5(k)+u7(k)-u4(k)/u1(k)-4*Math.pow(10,-1)*u1(k)-u3(k); Java Expression: 70*Math.pow(10,-4)*getVariable(5,k)+getVariable(7,k)-getVariable(4,k)/getVariable(1,k)-4*Math.pow(10,-1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:43:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.263525703283897; Expression=53*Math.pow(10,-4)*u6(k)+u7(k)-u4(k)/u3(k)-4*Math.pow(10,-1)*u1(k)-u3(k); Java Expression: 53*Math.pow(10,-4)*getVariable(6,k)+getVariable(7,k)-getVariable(4,k)/getVariable(3,k)-4*Math.pow(10,-1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:43:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.251026326667689; Expression=53*Math.pow(10,-4)*u2(k)+u7(k)-u4(k)/u3(k)-4*Math.pow(10,-1)*u1(k)-u3(k); Java Expression: 53*Math.pow(10,-4)*getVariable(2,k)+getVariable(7,k)-getVariable(4,k)/getVariable(3,k)-4*Math.pow(10,-1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:43:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.248878331850026; Expression=69*Math.pow(10,-4)*u6(k)+u7(k)-u4(k)/u3(k)-4*Math.pow(10,-1)*u1(k)-u3(k); Java Expression: 69*Math.pow(10,-4)*getVariable(6,k)+getVariable(7,k)-getVariable(4,k)/getVariable(3,k)-4*Math.pow(10,-1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:43:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.248115263773445; Expression=70*Math.pow(10,-4)*u6(k)+u7(k)-u4(k)/u3(k)-4*Math.pow(10,-1)*u1(k)-u3(k); Java Expression: 70*Math.pow(10,-4)*getVariable(6,k)+getVariable(7,k)-getVariable(4,k)/getVariable(3,k)-4*Math.pow(10,-1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:43:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.247147241815605; Expression=69*Math.pow(10,-4)*u6(k)+u7(k)-u5(k)/u3(k)-4*Math.pow(10,-1)*u1(k)-u3(k); Java Expression: 69*Math.pow(10,-4)*getVariable(6,k)+getVariable(7,k)-getVariable(5,k)/getVariable(3,k)-4*Math.pow(10,-1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:43:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.245259782779176; Expression=69*Math.pow(10,-4)*u6(k)+u7(k)-u9(k)/u3(k)-4*Math.pow(10,-1)*u1(k)-u3(k); Java Expression: 69*Math.pow(10,-4)*getVariable(6,k)+getVariable(7,k)-getVariable(9,k)/getVariable(3,k)-4*Math.pow(10,-1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:43:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2423334074019285; Expression=78*Math.pow(10,-4)*u6(k)+u7(k)-u5(k)/u3(k)-4*Math.pow(10,-1)*u1(k)-u3(k); Java Expression: 78*Math.pow(10,-4)*getVariable(6,k)+getVariable(7,k)-getVariable(5,k)/getVariable(3,k)-4*Math.pow(10,-1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:44:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.237899681102185; Expression=87*Math.pow(10,-4)*u6(k)+u7(k)-u4(k)/u3(k)-4*Math.pow(10,-1)*u1(k)-u3(k); Java Expression: 87*Math.pow(10,-4)*getVariable(6,k)+getVariable(7,k)-getVariable(4,k)/getVariable(3,k)-4*Math.pow(10,-1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:44:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.232524493551062; Expression=87*Math.pow(10,-4)*u6(k)+u7(k)-u9(k)/u3(k)-4*Math.pow(10,-1)*u1(k)-u3(k); Java Expression: 87*Math.pow(10,-4)*getVariable(6,k)+getVariable(7,k)-getVariable(9,k)/getVariable(3,k)-4*Math.pow(10,-1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:44:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.228742864896705; Expression=95*Math.pow(10,-4)*u6(k)+u7(k)-u9(k)/u3(k)-4*Math.pow(10,-1)*u1(k)-u3(k); Java Expression: 95*Math.pow(10,-4)*getVariable(6,k)+getVariable(7,k)-getVariable(9,k)/getVariable(3,k)-4*Math.pow(10,-1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:44:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.22728688386912; Expression=99*Math.pow(10,-4)*u6(k)+u7(k)-u9(k)/u3(k)-4*Math.pow(10,-1)*u1(k)-u3(k); Java Expression: 99*Math.pow(10,-4)*getVariable(6,k)+getVariable(7,k)-getVariable(9,k)/getVariable(3,k)-4*Math.pow(10,-1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:44:49 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.22728688386912 -->> Avg.: 30.341187270996524 -->> Std. Dev.: 42.59054144807159
Aug 31, 2024 12:45:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.22602759216871; Expression=99*Math.pow(10,-4)*u1(k)+u7(k)-u9(k)/u3(k)-4*Math.pow(10,-1)*u1(k)-u3(k); Java Expression: 99*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(9,k)/getVariable(3,k)-4*Math.pow(10,-1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:46:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.218404248818815; Expression=99*Math.pow(10,-4)*u1(k)+u7(k)-u7(k)/u6(k)-4*Math.pow(10,-1)*u1(k)-u3(k); Java Expression: 99*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)-4*Math.pow(10,-1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:47:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0507309037543635; Expression=99*Math.pow(10,-4)*u1(k)+u7(k)-u7(k)/u6(k)/27*Math.pow(10,+1)*u1(k)-u3(k); Java Expression: 99*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)/27*Math.pow(10,+1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:47:39 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.0507309037543635 -->> Avg.: 10.89713792435476 -->> Std. Dev.: 10.916259036805997
Aug 31, 2024 12:47:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.040150912875911; Expression=90*Math.pow(10,-4)*u1(k)+u7(k)-u7(k)/u6(k)/27*Math.pow(10,+1)*u1(k)-u3(k); Java Expression: 90*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)/27*Math.pow(10,+1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:47:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.005528094627224; Expression=49*Math.pow(10,-4)*u1(k)+u7(k)-u7(k)/u6(k)/27*Math.pow(10,+1)*u1(k)-u3(k); Java Expression: 49*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)/27*Math.pow(10,+1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:47:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.99464673509447; Expression=20*Math.pow(10,-4)*u1(k)+u7(k)-u7(k)/u6(k)/27*Math.pow(10,+1)*u1(k)-u3(k); Java Expression: 20*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)/27*Math.pow(10,+1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:47:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.99352460066231; Expression=99*Math.pow(10,-5)*u1(k)+u7(k)-u7(k)/u6(k)/27*Math.pow(10,+1)*u1(k)-u3(k); Java Expression: 99*Math.pow(10,-5)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)/27*Math.pow(10,+1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:48:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.990956614202057; Expression=20*Math.pow(10,-4)*u4(k)+u7(k)-u7(k)/u6(k)/27*Math.pow(10,+1)*u1(k)-u3(k); Java Expression: 20*Math.pow(10,-4)*getVariable(4,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)/27*Math.pow(10,+1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:48:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.988781531875884; Expression=99*Math.pow(10,-5)*u2(k)+u7(k)-u7(k)/u6(k)/27*Math.pow(10,+1)*u1(k)-u3(k); Java Expression: 99*Math.pow(10,-5)*getVariable(2,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)/27*Math.pow(10,+1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:48:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.98021096254478; Expression=99*Math.pow(10,-4)*u3(k)+u7(k)-u7(k)/u6(k)/27*Math.pow(10,+1)*u1(k)-u3(k); Java Expression: 99*Math.pow(10,-4)*getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)/27*Math.pow(10,+1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:48:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.980167295722193; Expression=90*Math.pow(10,-4)*u3(k)+u7(k)-u7(k)/u6(k)/27*Math.pow(10,+1)*u1(k)-u3(k); Java Expression: 90*Math.pow(10,-4)*getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)/27*Math.pow(10,+1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:48:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.980155160285235; Expression=94*Math.pow(10,-4)*u3(k)+u7(k)-u7(k)/u6(k)/27*Math.pow(10,+1)*u1(k)-u3(k); Java Expression: 94*Math.pow(10,-4)*getVariable(3,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)/27*Math.pow(10,+1)*getVariable(1,k)-getVariable(3,k)
Aug 31, 2024 12:48:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.579179040809889; Expression=99*Math.pow(10,-4)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k); Java Expression: 99*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)
Aug 31, 2024 12:48:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.55740623506676; Expression=51*Math.pow(10,-4)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k); Java Expression: 51*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)
Aug 31, 2024 12:49:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.557097724036629; Expression=46*Math.pow(10,-4)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k); Java Expression: 46*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)
Aug 31, 2024 12:49:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.557090578000258; Expression=43*Math.pow(10,-4)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k); Java Expression: 43*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)
Aug 31, 2024 12:50:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.557078129402902; Expression=44*Math.pow(10,-4)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k); Java Expression: 44*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)
Aug 31, 2024 12:50:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.555920782648845; Expression=43*Math.pow(10,-4)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)+u8(k)/u6(k); Java Expression: 43*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)+getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 12:50:28 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.555920782648845 -->> Avg.: 5.571399759327254 -->> Std. Dev.: 1.1261567207845147
Aug 31, 2024 12:50:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.55438224146821; Expression=46*Math.pow(10,-4)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)+u8(k)/u5(k); Java Expression: 46*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)+getVariable(8,k)/getVariable(5,k)
Aug 31, 2024 12:50:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.554138622945442; Expression=43*Math.pow(10,-4)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)+u8(k)/u5(k); Java Expression: 43*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)+getVariable(8,k)/getVariable(5,k)
Aug 31, 2024 12:51:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.553464867668577; Expression=46*Math.pow(10,-4)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)+u8(k)/u9(k); Java Expression: 46*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)+getVariable(8,k)/getVariable(9,k)
Aug 31, 2024 12:51:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.5532289490159075; Expression=43*Math.pow(10,-4)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)+u8(k)/u9(k); Java Expression: 43*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)+getVariable(8,k)/getVariable(9,k)
Aug 31, 2024 12:51:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.52852380339812; Expression=43*Math.pow(10,-4)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)-24*Math.pow(10,-1)+u8(k); Java Expression: 43*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)-24*Math.pow(10,-1)+getVariable(8,k)
Aug 31, 2024 12:51:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.461304687587833; Expression=51*Math.pow(10,-4)/u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)-12*Math.pow(10,-1)+u8(k); Java Expression: 51*Math.pow(10,-4)/getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)-12*Math.pow(10,-1)+getVariable(8,k)
Aug 31, 2024 12:51:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.447911413696372; Expression=99*Math.pow(10,-4)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)-22*Math.pow(10,-1)+u8(k); Java Expression: 99*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)-22*Math.pow(10,-1)+getVariable(8,k)
Aug 31, 2024 12:51:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.44436137759195; Expression=99*Math.pow(10,-4)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)-20*Math.pow(10,-1)+u8(k); Java Expression: 99*Math.pow(10,-4)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)-20*Math.pow(10,-1)+getVariable(8,k)
Aug 31, 2024 12:53:26 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.44436137759195 -->> Avg.: 5.098537379188063 -->> Std. Dev.: 0.43063547075609826
Aug 31, 2024 12:56:34 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.44436137759195 -->> Avg.: 4.869053959352873 -->> Std. Dev.: 0.4021824472978233
Aug 31, 2024 12:56:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.444325606476052; Expression=11*Math.pow(10,-3)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)-20*Math.pow(10,-1)+u8(k); Java Expression: 11*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)-20*Math.pow(10,-1)+getVariable(8,k)
Aug 31, 2024 12:57:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.443004638413844; Expression=11*Math.pow(10,-3)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)-21*Math.pow(10,-1)+u8(k); Java Expression: 11*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)-21*Math.pow(10,-1)+getVariable(8,k)
Aug 31, 2024 12:58:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.442776511457671; Expression=12*Math.pow(10,-3)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)-21*Math.pow(10,-1)+u8(k); Java Expression: 12*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)-21*Math.pow(10,-1)+getVariable(8,k)
Aug 31, 2024 12:59:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.44191315787788; Expression=12*Math.pow(10,-3)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)-22*Math.pow(10,-1)+u8(k); Java Expression: 12*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)-22*Math.pow(10,-1)+getVariable(8,k)
Aug 31, 2024 12:59:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.441413236690991; Expression=13*Math.pow(10,-3)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)-22*Math.pow(10,-1)+u8(k); Java Expression: 13*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)-22*Math.pow(10,-1)+getVariable(8,k)
Aug 31, 2024 12:59:48 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.441413236690991 -->> Avg.: 4.68318070104718 -->> Std. Dev.: 0.32421677298139234
Aug 31, 2024 1:01:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.44141323669099; Expression=13*Math.pow(10,-3)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-22*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 13*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-22*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:01:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.441007786663179; Expression=13*Math.pow(10,-3)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)-23*Math.pow(10,-1)+u8(k); Java Expression: 13*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)-23*Math.pow(10,-1)+getVariable(8,k)
Aug 31, 2024 1:02:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.441007786663178; Expression=13*Math.pow(10,-3)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-23*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 13*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-23*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:02:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.439151481415349; Expression=28*Math.pow(10,-3)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)-22*Math.pow(10,-1)/u8(k); Java Expression: 28*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)-22*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 1:03:00 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.439151481415349 -->> Avg.: 4.530037652081651 -->> Std. Dev.: 0.1887877491613027
Aug 31, 2024 1:03:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.435828631431698; Expression=13*Math.pow(10,-3)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-23*Math.pow(10,-1)-u4(k)+u8(k)+u5(k)/u2(k)*u8(k); Java Expression: 13*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-23*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(5,k)/getVariable(2,k)*getVariable(8,k)
Aug 31, 2024 1:03:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.380058322310473; Expression=48*Math.pow(10,-3)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)-45*Math.pow(10,-1)/u8(k); Java Expression: 48*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)-45*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 1:03:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.375482936977198; Expression=47*Math.pow(10,-3)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)-45*Math.pow(10,-1)/u8(k); Java Expression: 47*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)-45*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 1:03:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.3695667612131155; Expression=48*Math.pow(10,-3)*u1(k)+u7(k)-u7(k)/u6(k)*4*Math.pow(10,-1)*u1(k)-u4(k)-49*Math.pow(10,-1)/u8(k); Java Expression: 48*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)-49*Math.pow(10,-1)/getVariable(8,k)
Aug 31, 2024 1:06:12 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.3695667612131155 -->> Avg.: 4.441107021756101 -->> Std. Dev.: 0.04657552558645065

Execution time: 1751.078 seconds.



@@;48*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)-49*Math.pow(10,-1)/getVariable(8,k)



Run #3
========
Aug 31, 2024 1:06:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=139.05952846289088; Expression=55*Math.pow(10,-3)-u7(k); Java Expression: 55*Math.pow(10,-3)-getVariable(7,k)
Aug 31, 2024 1:06:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=108.95038248153148; Expression=u7(k)+u4(k); Java Expression: getVariable(7,k)+getVariable(4,k)
Aug 31, 2024 1:06:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=34.07868380653745; Expression=u4(k)/u2(k); Java Expression: getVariable(4,k)/getVariable(2,k)
Aug 31, 2024 1:06:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=33.80260409640956; Expression=31*Math.pow(10,-9)+u3(k)/u1(k)+u7(k)-u7(k); Java Expression: 31*Math.pow(10,-9)+getVariable(3,k)/getVariable(1,k)+getVariable(7,k)-getVariable(7,k)
Aug 31, 2024 1:06:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=32.35890023924621; Expression=u4(k)/u4(k)/u5(k)+u8(k)/12*Math.pow(10,-1)+u4(k)/u7(k)+u8(k); Java Expression: getVariable(4,k)/getVariable(4,k)/getVariable(5,k)+getVariable(8,k)/12*Math.pow(10,-1)+getVariable(4,k)/getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 1:06:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=27.124295052746994; Expression=u8(k)/u9(k)*u2(k); Java Expression: getVariable(8,k)/getVariable(9,k)*getVariable(2,k)
Aug 31, 2024 1:06:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=12.30886092250553; Expression=9*Math.pow(10,-4)+u3(k); Java Expression: 9*Math.pow(10,-4)+getVariable(3,k)
Aug 31, 2024 1:06:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=10.731668056345766; Expression=u4(k)+u8(k); Java Expression: getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:06:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=10.124485688657764; Expression=u5(k)+u2(k)/u9(k); Java Expression: getVariable(5,k)+getVariable(2,k)/getVariable(9,k)
Aug 31, 2024 1:06:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.356476013437922; Expression=88*Math.pow(10,-2)+u5(k); Java Expression: 88*Math.pow(10,-2)+getVariable(5,k)
Aug 31, 2024 1:06:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 1:06:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.563892919372513; Expression=36*Math.pow(10,-2)*u6(k); Java Expression: 36*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 1:06:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.386080212875442; Expression=87*Math.pow(10,+6)/3*Math.pow(10,-8)*u2(k)*u7(k)/u2(k); Java Expression: 87*Math.pow(10,+6)/3*Math.pow(10,-8)*getVariable(2,k)*getVariable(7,k)/getVariable(2,k)
Aug 31, 2024 1:06:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.011790807085696; Expression=u8(k)+u7(k)-u5(k)+u9(k)/u7(k)-u3(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)+getVariable(9,k)/getVariable(7,k)-getVariable(3,k)
Aug 31, 2024 1:06:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.998415749734772; Expression=u8(k)+u7(k)-u5(k)-u9(k)/u7(k)-u3(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(9,k)/getVariable(7,k)-getVariable(3,k)
Aug 31, 2024 1:07:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992270235269219; Expression=u8(k)+u7(k)-u5(k)+u8(k)/u7(k)-u3(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)+getVariable(8,k)/getVariable(7,k)-getVariable(3,k)
Aug 31, 2024 1:07:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9651933148197225; Expression=u8(k)+u7(k)-u5(k)-u1(k)/u7(k)-u3(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(7,k)-getVariable(3,k)
Aug 31, 2024 1:07:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9346464663731675; Expression=u8(k)+u7(k)-u5(k)-u1(k)/u2(k)-u3(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(2,k)-getVariable(3,k)
Aug 31, 2024 1:07:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.934646466373166; Expression=u8(k)+u7(k)-u3(k)-u1(k)/u2(k)-u5(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(3,k)-getVariable(1,k)/getVariable(2,k)-getVariable(5,k)
Aug 31, 2024 1:08:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.757625337938184; Expression=u8(k)+u7(k)-u5(k)-u9(k)/92*Math.pow(10,-4)-u7(k)/u3(k)-u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(9,k)/92*Math.pow(10,-4)-getVariable(7,k)/getVariable(3,k)-getVariable(4,k)
Aug 31, 2024 1:08:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7576159089695; Expression=u8(k)+u7(k)-u5(k)-u7(k)/92*Math.pow(10,-4)-u7(k)/u3(k)-u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/92*Math.pow(10,-4)-getVariable(7,k)/getVariable(3,k)-getVariable(4,k)
Aug 31, 2024 1:08:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.756742363180586; Expression=u8(k)+u7(k)-u5(k)-u7(k)/92*Math.pow(10,-2)-u7(k)/u3(k)-u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/92*Math.pow(10,-2)-getVariable(7,k)/getVariable(3,k)-getVariable(4,k)
Aug 31, 2024 1:08:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.748028818036925; Expression=u8(k)+u7(k)-u5(k)-u7(k)/14*Math.pow(10,-1)-u7(k)/u3(k)-u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/14*Math.pow(10,-1)-getVariable(7,k)/getVariable(3,k)-getVariable(4,k)
Aug 31, 2024 1:08:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.741750800965715; Expression=u8(k)+u7(k)-u5(k)-u7(k)/34*Math.pow(10,-1)-u7(k)/u3(k)-u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/34*Math.pow(10,-1)-getVariable(7,k)/getVariable(3,k)-getVariable(4,k)
Aug 31, 2024 1:08:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.720362634727847; Expression=u8(k)+u7(k)-u5(k)-u7(k)/14*Math.pow(10,-1)*u7(k)/u3(k)-u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/14*Math.pow(10,-1)*getVariable(7,k)/getVariable(3,k)-getVariable(4,k)
Aug 31, 2024 1:08:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.59914263132439; Expression=u8(k)+u7(k)-u5(k)-u7(k)/10*Math.pow(10,-1)*u7(k)/u3(k)-u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/10*Math.pow(10,-1)*getVariable(7,k)/getVariable(3,k)-getVariable(4,k)
Aug 31, 2024 1:08:34 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.59914263132439 -->> Avg.: 231188.66689007232 -->> Std. Dev.: 1080055.4003411895
Aug 31, 2024 1:08:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.559323071108184; Expression=u8(k)+u7(k)-u5(k)-u7(k)/10*Math.pow(10,-1)*u7(k)/u4(k)-u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/10*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)
Aug 31, 2024 1:09:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.51779216006166; Expression=u8(k)+u7(k)-u5(k)-u1(k)/6*Math.pow(10,-1)*u7(k)/u3(k)-u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/6*Math.pow(10,-1)*getVariable(7,k)/getVariable(3,k)-getVariable(4,k)
Aug 31, 2024 1:09:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.493430953789564; Expression=u8(k)+u7(k)-u5(k)-u1(k)/6*Math.pow(10,-1)*u7(k)/u4(k)-u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/6*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)
Aug 31, 2024 1:10:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.489161509172991; Expression=u8(k)+u7(k)-u5(k)-u1(k)/8*Math.pow(10,-1)*u7(k)/u4(k)-u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/8*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)
Aug 31, 2024 1:10:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.446327830905658; Expression=u8(k)+u7(k)-u5(k)-u1(k)/6*Math.pow(10,-1)*u1(k)/u4(k)-u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/6*Math.pow(10,-1)*getVariable(1,k)/getVariable(4,k)-getVariable(4,k)
Aug 31, 2024 1:11:08 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.446327830905658 -->> Avg.: 470.4478443078189 -->> Std. Dev.: 1275.307935297559
Aug 31, 2024 1:11:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4454841823791105; Expression=u8(k)+u7(k)-u5(k)-u1(k)/6*Math.pow(10,-1)*u1(k)/u4(k)-u4(k)+u1(k)/u7(k)*u8(k)/u7(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/6*Math.pow(10,-1)*getVariable(1,k)/getVariable(4,k)-getVariable(4,k)+getVariable(1,k)/getVariable(7,k)*getVariable(8,k)/getVariable(7,k)
Aug 31, 2024 1:12:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.442780664278413; Expression=u8(k)+u7(k)-u5(k)-u1(k)/6*Math.pow(10,-1)*u1(k)/u4(k)-u4(k)+u7(k)/u1(k)*u8(k)/u3(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/6*Math.pow(10,-1)*getVariable(1,k)/getVariable(4,k)-getVariable(4,k)+getVariable(7,k)/getVariable(1,k)*getVariable(8,k)/getVariable(3,k)
Aug 31, 2024 1:12:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.438601852898802; Expression=u8(k)+u7(k)-u5(k)-u1(k)/6*Math.pow(10,-1)*u1(k)/u4(k)-u4(k)+u1(k)/u7(k)*u4(k)/u7(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/6*Math.pow(10,-1)*getVariable(1,k)/getVariable(4,k)-getVariable(4,k)+getVariable(1,k)/getVariable(7,k)*getVariable(4,k)/getVariable(7,k)
Aug 31, 2024 1:12:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.433846850837584; Expression=u8(k)+u7(k)-u5(k)-u1(k)/6*Math.pow(10,-1)*u1(k)/u4(k)-u4(k)+u9(k)/u7(k)*u3(k)/u7(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/6*Math.pow(10,-1)*getVariable(1,k)/getVariable(4,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)*getVariable(3,k)/getVariable(7,k)
Aug 31, 2024 1:12:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.420252889579103; Expression=u8(k)+u7(k)-u5(k)-u7(k)/6*Math.pow(10,-1)*u1(k)/u4(k)-u4(k)+u4(k)/u7(k)*u7(k)/u1(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/6*Math.pow(10,-1)*getVariable(1,k)/getVariable(4,k)-getVariable(4,k)+getVariable(4,k)/getVariable(7,k)*getVariable(7,k)/getVariable(1,k)
Aug 31, 2024 1:12:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.376571141180047; Expression=u8(k)+u7(k)-u5(k)-u1(k)/6*Math.pow(10,-1)*u7(k)/u4(k)-u4(k)+u6(k)/u1(k)*u4(k)/u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/6*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)+getVariable(6,k)/getVariable(1,k)*getVariable(4,k)/getVariable(4,k)
Aug 31, 2024 1:12:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.354635631934526; Expression=u8(k)+u7(k)-u5(k)-u1(k)/6*Math.pow(10,-1)*u7(k)/u4(k)-u4(k)+u9(k)/u3(k)*u7(k)/u1(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/6*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)+getVariable(9,k)/getVariable(3,k)*getVariable(7,k)/getVariable(1,k)
Aug 31, 2024 1:12:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.320912690835716; Expression=u8(k)+u7(k)-u5(k)-u1(k)/6*Math.pow(10,-1)*u7(k)/u4(k)-u4(k)+u9(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/6*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)+getVariable(9,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 1:13:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.309938715735535; Expression=u8(k)+u7(k)-u5(k)-u1(k)/5*Math.pow(10,-1)*u7(k)/u4(k)-u4(k)+u9(k)/u3(k)*u7(k)/u1(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/5*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)+getVariable(9,k)/getVariable(3,k)*getVariable(7,k)/getVariable(1,k)
Aug 31, 2024 1:13:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.289511063718466; Expression=u8(k)+u7(k)-u5(k)-u1(k)/5*Math.pow(10,-1)*u7(k)/u4(k)-u4(k)+u9(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/5*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)+getVariable(9,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 1:13:57 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.289511063718466 -->> Avg.: 29.541646068674815 -->> Std. Dev.: 39.97794109264957
Aug 31, 2024 1:14:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.266573636930943; Expression=u8(k)+u7(k)-u5(k)-u1(k)/5*Math.pow(10,-1)*u7(k)/u4(k)-u4(k)+u9(k)/u3(k)*u2(k)/u7(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/5*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)+getVariable(9,k)/getVariable(3,k)*getVariable(2,k)/getVariable(7,k)
Aug 31, 2024 1:15:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.248575906795368; Expression=u8(k)+u7(k)-u5(k)-u1(k)/5*Math.pow(10,-1)*u7(k)/u4(k)-u4(k)+u9(k)/u3(k)*u6(k)/u1(k)*u4(k)/u9(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/5*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)+getVariable(9,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)*getVariable(4,k)/getVariable(9,k)*getVariable(8,k)
Aug 31, 2024 1:15:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.238869765124848; Expression=u8(k)+u7(k)-u5(k)-u1(k)/5*Math.pow(10,-1)*u7(k)/u4(k)-u4(k)+u9(k)/u3(k)*u6(k)/u1(k)*u4(k)/u4(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/5*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)+getVariable(9,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)*getVariable(4,k)/getVariable(4,k)*getVariable(8,k)
Aug 31, 2024 1:16:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.236197358508542; Expression=u8(k)+u7(k)-u5(k)-u1(k)/5*Math.pow(10,-1)*u7(k)/u5(k)-u4(k)+u9(k)/u3(k)*u6(k)/u1(k)*u4(k)/u4(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/5*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(9,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)*getVariable(4,k)/getVariable(4,k)*getVariable(8,k)
Aug 31, 2024 1:16:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.226786625287554; Expression=u8(k)+u7(k)-u5(k)-u1(k)/5*Math.pow(10,-1)*u7(k)/u4(k)-u4(k)+u9(k)/u3(k)*u6(k)/u1(k)*u4(k)/u3(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/5*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)+getVariable(9,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)*getVariable(4,k)/getVariable(3,k)*getVariable(8,k)
Aug 31, 2024 1:16:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.209647726559949; Expression=u8(k)+u7(k)-u5(k)-u1(k)/5*Math.pow(10,-1)*u7(k)/u4(k)-u4(k)+u9(k)/u3(k)*u2(k)/u7(k)/u4(k)*u8(k)*u5(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/5*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)+getVariable(9,k)/getVariable(3,k)*getVariable(2,k)/getVariable(7,k)/getVariable(4,k)*getVariable(8,k)*getVariable(5,k)
Aug 31, 2024 1:16:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.192373692404558; Expression=u8(k)+u7(k)-u5(k)-u1(k)/5*Math.pow(10,-1)*u7(k)/u4(k)-u4(k)+u9(k)/u3(k)*u2(k)/u7(k)/u3(k)*u8(k)*u5(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/5*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)+getVariable(9,k)/getVariable(3,k)*getVariable(2,k)/getVariable(7,k)/getVariable(3,k)*getVariable(8,k)*getVariable(5,k)
Aug 31, 2024 1:16:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.143064157071953; Expression=u8(k)+u7(k)-u5(k)-u7(k)/5*Math.pow(10,-1)*u7(k)/u4(k)-u4(k)+u9(k)/u3(k)+u6(k)/u1(k)*u4(k)/u3(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/5*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)+getVariable(9,k)/getVariable(3,k)+getVariable(6,k)/getVariable(1,k)*getVariable(4,k)/getVariable(3,k)*getVariable(8,k)
Aug 31, 2024 1:17:06 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.143064157071953 -->> Avg.: 11.039583011933784 -->> Std. Dev.: 10.874472151202001
Aug 31, 2024 1:18:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.118680662682634; Expression=u8(k)+u7(k)-u5(k)-u7(k)/5*Math.pow(10,-1)*u7(k)/u4(k)-u4(k)+u9(k)/u3(k)+u2(k)/u1(k)*u5(k)/u3(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/5*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)+getVariable(9,k)/getVariable(3,k)+getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/getVariable(3,k)*getVariable(8,k)
Aug 31, 2024 1:18:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.096319999050414; Expression=u8(k)+u7(k)-u5(k)-u7(k)/5*Math.pow(10,-1)*u7(k)/u4(k)-u4(k)+u9(k)/u7(k)+u2(k)/u1(k)*u5(k)/u3(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/5*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)+getVariable(9,k)/getVariable(7,k)+getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/getVariable(3,k)*getVariable(8,k)
Aug 31, 2024 1:19:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.083412606200114; Expression=u8(k)+u7(k)-u5(k)-u7(k)/5*Math.pow(10,-1)*u7(k)/u5(k)-u4(k)+u9(k)/u3(k)+u2(k)/u1(k)*u5(k)/u3(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/5*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(9,k)/getVariable(3,k)+getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/getVariable(3,k)*getVariable(8,k)
Aug 31, 2024 1:19:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.082363107653; Expression=u8(k)+u7(k)-u5(k)-u7(k)/5*Math.pow(10,-1)*u7(k)/u5(k)-u4(k)+u9(k)/u5(k)+u2(k)/u1(k)*u5(k)/u3(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/5*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(9,k)/getVariable(5,k)+getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/getVariable(3,k)*getVariable(8,k)
Aug 31, 2024 1:20:31 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.082363107653 -->> Avg.: 5.683111725150143 -->> Std. Dev.: 1.208487412826165
Aug 31, 2024 1:20:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.078977388367401; Expression=u8(k)+u7(k)-u5(k)-u7(k)/4*Math.pow(10,-1)*u7(k)/u4(k)-u4(k)+u9(k)/u5(k)+u2(k)/u1(k)*u5(k)/u3(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)+getVariable(9,k)/getVariable(5,k)+getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/getVariable(3,k)*getVariable(8,k)
Aug 31, 2024 1:21:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.075562842660384; Expression=u8(k)+u7(k)-u5(k)-u7(k)/4*Math.pow(10,-1)*u7(k)/u4(k)-u4(k)+u9(k)/u3(k)+u2(k)/u1(k)*u5(k)/u3(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)+getVariable(9,k)/getVariable(3,k)+getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/getVariable(3,k)*getVariable(8,k)
Aug 31, 2024 1:21:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.07521204228284; Expression=u8(k)+u7(k)-u5(k)-u7(k)/4*Math.pow(10,-1)*u7(k)/u4(k)-u4(k)+u1(k)/u3(k)+u2(k)/u1(k)*u5(k)/u3(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)+getVariable(1,k)/getVariable(3,k)+getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/getVariable(3,k)*getVariable(8,k)
Aug 31, 2024 1:21:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.049233522006295; Expression=u8(k)+u7(k)-u5(k)-u7(k)/4*Math.pow(10,-1)*u7(k)/u4(k)-u4(k)+u6(k)/u3(k)+u2(k)/u1(k)*u5(k)/u3(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(4,k)-getVariable(4,k)+getVariable(6,k)/getVariable(3,k)+getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/getVariable(3,k)*getVariable(8,k)
Aug 31, 2024 1:22:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.027834300844166; Expression=u8(k)+u7(k)-u5(k)-u7(k)/4*Math.pow(10,-1)*u7(k)/u5(k)-u4(k)+u6(k)/u5(k)+u2(k)/u1(k)*u5(k)/u3(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(6,k)/getVariable(5,k)+getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/getVariable(3,k)*getVariable(8,k)
Aug 31, 2024 1:24:05 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.027834300844166 -->> Avg.: 5.267345390905254 -->> Std. Dev.: 0.18266505352589996
Aug 31, 2024 1:25:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.021122464087867; Expression=u8(k)+u7(k)-u5(k)-u7(k)/4*Math.pow(10,-1)*u7(k)/u5(k)-u4(k)+u2(k)/u1(k)+u2(k)/u1(k)*u5(k)/u3(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(2,k)/getVariable(1,k)+getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/getVariable(3,k)*getVariable(8,k)
Aug 31, 2024 1:27:45 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.021122464087867 -->> Avg.: 5.167159588482167 -->> Std. Dev.: 0.13958599100464117
Aug 31, 2024 1:28:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.01401850808815; Expression=u8(k)+u7(k)-u5(k)-u7(k)/4*Math.pow(10,-1)*u7(k)/u5(k)-u4(k)+u2(k)/u7(k)*u2(k)/u1(k)*u5(k)/u3(k)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(2,k)/getVariable(7,k)*getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/getVariable(3,k)*getVariable(8,k)
Aug 31, 2024 1:31:29 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.01401850808815 -->> Avg.: 5.094533591363587 -->> Std. Dev.: 0.0917037501252599
Aug 31, 2024 1:33:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.000296200144247; Expression=u8(k)+u7(k)-u5(k)-u7(k)/4*Math.pow(10,-1)*u7(k)/u5(k)-u4(k)+u8(k)/u7(k)*u2(k)/u1(k)*u5(k)/82*Math.pow(10,+1)*u3(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(8,k)/getVariable(7,k)*getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/82*Math.pow(10,+1)*getVariable(3,k)
Aug 31, 2024 1:34:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.988770431292871; Expression=u8(k)+u7(k)-u5(k)-u7(k)/4*Math.pow(10,-1)*u7(k)/u5(k)-u4(k)+u8(k)/u7(k)*u2(k)/u1(k)*u5(k)/80*Math.pow(10,+1)*u3(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(8,k)/getVariable(7,k)*getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/80*Math.pow(10,+1)*getVariable(3,k)
Aug 31, 2024 1:34:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.984149963308722; Expression=u8(k)+u7(k)-u5(k)-u7(k)/4*Math.pow(10,-1)*u7(k)/u5(k)-u4(k)+u8(k)/u7(k)*u2(k)/u1(k)*u5(k)/79*Math.pow(10,+1)*u3(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(8,k)/getVariable(7,k)*getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/79*Math.pow(10,+1)*getVariable(3,k)
Aug 31, 2024 1:34:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.975380691440907; Expression=u8(k)+u7(k)-u5(k)-u7(k)/4*Math.pow(10,-1)*u7(k)/u5(k)-u4(k)+u8(k)/u7(k)*u2(k)/u1(k)*u5(k)/74*Math.pow(10,+1)*u3(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(8,k)/getVariable(7,k)*getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/74*Math.pow(10,+1)*getVariable(3,k)
Aug 31, 2024 1:34:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.919720470306689; Expression=u8(k)+u7(k)-u5(k)-u7(k)/4*Math.pow(10,-1)*u7(k)/u5(k)-u4(k)+u8(k)/u7(k)*u2(k)/u1(k)*u5(k)/79*Math.pow(10,+1)*u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(8,k)/getVariable(7,k)*getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/79*Math.pow(10,+1)*getVariable(4,k)
Aug 31, 2024 1:34:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.8930174430440285; Expression=u8(k)+u7(k)-u5(k)-u7(k)/4*Math.pow(10,-1)*u7(k)/u5(k)-u4(k)+u8(k)/u7(k)*u2(k)/u1(k)*u5(k)/76*Math.pow(10,+1)*u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(8,k)/getVariable(7,k)*getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/76*Math.pow(10,+1)*getVariable(4,k)
Aug 31, 2024 1:35:11 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.8930174430440285 -->> Avg.: 5.044314723124374 -->> Std. Dev.: 0.0491168691423542
Aug 31, 2024 1:35:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.865117243638925; Expression=u8(k)+u7(k)-u5(k)-u7(k)/4*Math.pow(10,-1)*u7(k)/u5(k)-u4(k)+u8(k)/u7(k)*u2(k)/u1(k)*u5(k)/67*Math.pow(10,+1)*u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(8,k)/getVariable(7,k)*getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/67*Math.pow(10,+1)*getVariable(4,k)
Aug 31, 2024 1:35:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.862886848330772; Expression=u8(k)+u7(k)-u5(k)-u7(k)/4*Math.pow(10,-1)*u7(k)/u5(k)-u4(k)+u8(k)/u7(k)*u2(k)/u1(k)*u5(k)/68*Math.pow(10,+1)*u4(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(8,k)/getVariable(7,k)*getVariable(2,k)/getVariable(1,k)*getVariable(5,k)/68*Math.pow(10,+1)*getVariable(4,k)
Aug 31, 2024 1:36:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.85317722320215; Expression=u8(k)+u7(k)-u5(k)-u7(k)/4*Math.pow(10,-1)*u7(k)/u5(k)-u4(k)+u2(k)/u7(k)*u5(k)/u1(k)*u5(k)/54*Math.pow(10,+1)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(2,k)/getVariable(7,k)*getVariable(5,k)/getVariable(1,k)*getVariable(5,k)/54*Math.pow(10,+1)*getVariable(8,k)
Aug 31, 2024 1:37:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.820293978377747; Expression=u8(k)+u7(k)-u5(k)-u7(k)/4*Math.pow(10,-1)*u7(k)/u5(k)-u4(k)+u2(k)/u7(k)*u5(k)/u1(k)*u5(k)/61*Math.pow(10,+1)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(2,k)/getVariable(7,k)*getVariable(5,k)/getVariable(1,k)*getVariable(5,k)/61*Math.pow(10,+1)*getVariable(8,k)
Aug 31, 2024 1:38:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.819669109911831; Expression=u8(k)+u7(k)-u5(k)-u7(k)/4*Math.pow(10,-1)*u7(k)/u5(k)-u4(k)+u2(k)/u7(k)*u5(k)/u1(k)*u5(k)/58*Math.pow(10,+1)*u8(k); Java Expression: getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(2,k)/getVariable(7,k)*getVariable(5,k)/getVariable(1,k)*getVariable(5,k)/58*Math.pow(10,+1)*getVariable(8,k)
Aug 31, 2024 1:38:53 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.819669109911831 -->> Avg.: 4.990828316482571 -->> Std. Dev.: 0.07423507325620222

Execution time: 1962.97 seconds.



@@;getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(2,k)/getVariable(7,k)*getVariable(5,k)/getVariable(1,k)*getVariable(5,k)/58*Math.pow(10,+1)*getVariable(8,k)



Run #4
========
Aug 31, 2024 1:39:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=37676.55918110201; Expression=12*Math.pow(10,+5)/u5(k); Java Expression: 12*Math.pow(10,+5)/getVariable(5,k)
Aug 31, 2024 1:39:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=51.24780730018357; Expression=51*Math.pow(10,-6)+u1(k)+u8(k)-u3(k)/u6(k); Java Expression: 51*Math.pow(10,-6)+getVariable(1,k)+getVariable(8,k)-getVariable(3,k)/getVariable(6,k)
Aug 31, 2024 1:39:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=34.24586806905493; Expression=u8(k)/u5(k); Java Expression: getVariable(8,k)/getVariable(5,k)
Aug 31, 2024 1:39:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=10.731668056345766; Expression=u8(k)+u4(k); Java Expression: getVariable(8,k)+getVariable(4,k)
Aug 31, 2024 1:39:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 31, 2024 1:39:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.293345631638469; Expression=69*Math.pow(10,-9)/u8(k)+u7(k)-u5(k)+u1(k)/u9(k)-u4(k); Java Expression: 69*Math.pow(10,-9)/getVariable(8,k)+getVariable(7,k)-getVariable(5,k)+getVariable(1,k)/getVariable(9,k)-getVariable(4,k)
Aug 31, 2024 1:39:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.2933456143340445; Expression=28*Math.pow(10,-9)/u8(k)+u7(k)-u5(k)+u1(k)/u9(k)-u4(k); Java Expression: 28*Math.pow(10,-9)/getVariable(8,k)+getVariable(7,k)-getVariable(5,k)+getVariable(1,k)/getVariable(9,k)-getVariable(4,k)
Aug 31, 2024 1:39:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.809063877563766; Expression=57*Math.pow(10,-9)/u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-u4(k); Java Expression: 57*Math.pow(10,-9)/getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)
Aug 31, 2024 1:39:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.809063876584481; Expression=69*Math.pow(10,-9)/u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-u4(k); Java Expression: 69*Math.pow(10,-9)/getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)
Aug 31, 2024 1:39:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.808733222604051; Expression=69*Math.pow(10,-3)/u3(k)+u7(k)-u5(k)-u1(k)/u9(k)-u4(k); Java Expression: 69*Math.pow(10,-3)/getVariable(3,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)
Aug 31, 2024 1:39:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8085032525900155; Expression=69*Math.pow(10,-4)/u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-u4(k); Java Expression: 69*Math.pow(10,-4)/getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)
Aug 31, 2024 1:39:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.779437509316983; Expression=57*Math.pow(10,-2)/u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-u4(k); Java Expression: 57*Math.pow(10,-2)/getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)
Aug 31, 2024 1:39:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672883783275542; Expression=57*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-u4(k); Java Expression: 57*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)
Aug 31, 2024 1:39:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.67288378318407; Expression=56*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-u4(k); Java Expression: 56*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)
Aug 31, 2024 1:39:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672883781903445; Expression=42*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-u4(k); Java Expression: 42*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)
Aug 31, 2024 1:39:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.67288378126313; Expression=35*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-u4(k); Java Expression: 35*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)
Aug 31, 2024 1:39:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672883778884822; Expression=9*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-u4(k); Java Expression: 9*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)
Aug 31, 2024 1:39:42 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672883778518927; Expression=5*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-u4(k); Java Expression: 5*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)
Aug 31, 2024 1:39:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672883778335983; Expression=3*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-u4(k); Java Expression: 3*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-getVariable(4,k)
Aug 31, 2024 1:40:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.659149306421031; Expression=3*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-2*Math.pow(10,+1)/11*Math.pow(10,-1)-u4(k); Java Expression: 3*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-2*Math.pow(10,+1)/11*Math.pow(10,-1)-getVariable(4,k)
Aug 31, 2024 1:40:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.65771084436713; Expression=25*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-12*Math.pow(10,+1)/58*Math.pow(10,-1)-u4(k); Java Expression: 25*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-12*Math.pow(10,+1)/58*Math.pow(10,-1)-getVariable(4,k)
Aug 31, 2024 1:40:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.652678028034686; Expression=8*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-18*Math.pow(10,+1)/25*Math.pow(10,-1)-u4(k); Java Expression: 8*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-18*Math.pow(10,+1)/25*Math.pow(10,-1)-getVariable(4,k)
Aug 31, 2024 1:40:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.650353879711717; Expression=25*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-37*Math.pow(10,+3)/58*Math.pow(10,-3)-u4(k); Java Expression: 25*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-37*Math.pow(10,+3)/58*Math.pow(10,-3)-getVariable(4,k)
Aug 31, 2024 1:40:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.649682215210653; Expression=22*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-36*Math.pow(10,+1)/60*Math.pow(10,-1)-u4(k); Java Expression: 22*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-36*Math.pow(10,+1)/60*Math.pow(10,-1)-getVariable(4,k)
Aug 31, 2024 1:40:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.64929370005816; Expression=87*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-56*Math.pow(10,+1)/99*Math.pow(10,-1)-u4(k); Java Expression: 87*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-56*Math.pow(10,+1)/99*Math.pow(10,-1)-getVariable(4,k)
Aug 31, 2024 1:40:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6492117842408875; Expression=87*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-56*Math.pow(10,+1)*99*Math.pow(10,-5)-u4(k); Java Expression: 87*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-56*Math.pow(10,+1)*99*Math.pow(10,-5)-getVariable(4,k)
Aug 31, 2024 1:40:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.649132028659551; Expression=96*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-12*Math.pow(10,+1)/24*Math.pow(10,-1)-u4(k); Java Expression: 96*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-12*Math.pow(10,+1)/24*Math.pow(10,-1)-getVariable(4,k)
Aug 31, 2024 1:41:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.649102251749018; Expression=86*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-18*Math.pow(10,+1)/35*Math.pow(10,-1)-u4(k); Java Expression: 86*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-18*Math.pow(10,+1)/35*Math.pow(10,-1)-getVariable(4,k)
Aug 31, 2024 1:41:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.649102251696544; Expression=22*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-18*Math.pow(10,-1)/35*Math.pow(10,+1)-u4(k); Java Expression: 22*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-18*Math.pow(10,-1)/35*Math.pow(10,+1)-getVariable(4,k)
Aug 31, 2024 1:41:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.649102251685067; Expression=8*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-18*Math.pow(10,+1)/35*Math.pow(10,-1)-u4(k); Java Expression: 8*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-18*Math.pow(10,+1)/35*Math.pow(10,-1)-getVariable(4,k)
Aug 31, 2024 1:41:24 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.649102251685067 -->> Avg.: 433938.7292559954 -->> Std. Dev.: 2002950.7152319818
Aug 31, 2024 1:41:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6491006014093; Expression=24*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-15*Math.pow(10,+1)/29*Math.pow(10,-1)-u4(k); Java Expression: 24*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-15*Math.pow(10,+1)/29*Math.pow(10,-1)-getVariable(4,k)
Aug 31, 2024 1:41:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.649100601405438; Expression=11*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-15*Math.pow(10,+1)/29*Math.pow(10,-1)-u4(k); Java Expression: 11*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-15*Math.pow(10,+1)/29*Math.pow(10,-1)-getVariable(4,k)
Aug 31, 2024 1:42:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.649100456362048; Expression=43*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-39*Math.pow(10,+1)/75*Math.pow(10,-1)-u4(k); Java Expression: 43*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-39*Math.pow(10,+1)/75*Math.pow(10,-1)-getVariable(4,k)
Aug 31, 2024 1:42:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.649100366792574; Expression=3*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-14*Math.pow(10,+1)/27*Math.pow(10,-1)-u4(k); Java Expression: 3*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-14*Math.pow(10,+1)/27*Math.pow(10,-1)-getVariable(4,k)
Aug 31, 2024 1:43:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.649100366792491; Expression=2*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)-14*Math.pow(10,+1)/27*Math.pow(10,-1)-u4(k); Java Expression: 2*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)-14*Math.pow(10,+1)/27*Math.pow(10,-1)-getVariable(4,k)
Aug 31, 2024 1:43:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.629601491932841; Expression=99*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)*85*Math.pow(10,-1)/65*Math.pow(10,+1)-u4(k); Java Expression: 99*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)*85*Math.pow(10,-1)/65*Math.pow(10,+1)-getVariable(4,k)
Aug 31, 2024 1:43:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.629566140332104; Expression=99*Math.pow(10,-5)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)*85*Math.pow(10,-1)/65*Math.pow(10,+1)-u4(k); Java Expression: 99*Math.pow(10,-5)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)*85*Math.pow(10,-1)/65*Math.pow(10,+1)-getVariable(4,k)
Aug 31, 2024 1:43:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.629113736160141; Expression=99*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)*82*Math.pow(10,+1)/65*Math.pow(10,-1)-u4(k); Java Expression: 99*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)*82*Math.pow(10,+1)/65*Math.pow(10,-1)-getVariable(4,k)
Aug 31, 2024 1:43:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6289580516317255; Expression=99*Math.pow(10,-4)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)*82*Math.pow(10,+1)/65*Math.pow(10,-1)-u4(k); Java Expression: 99*Math.pow(10,-4)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)*82*Math.pow(10,+1)/65*Math.pow(10,-1)-getVariable(4,k)
Aug 31, 2024 1:43:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6275774121863; Expression=68*Math.pow(10,-3)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)*85*Math.pow(10,-3)/65*Math.pow(10,+3)-u4(k); Java Expression: 68*Math.pow(10,-3)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)*85*Math.pow(10,-3)/65*Math.pow(10,+3)-getVariable(4,k)
Aug 31, 2024 1:43:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.627393258595612; Expression=76*Math.pow(10,-3)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)*85*Math.pow(10,-3)/65*Math.pow(10,+3)-u4(k); Java Expression: 76*Math.pow(10,-3)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)*85*Math.pow(10,-3)/65*Math.pow(10,+3)-getVariable(4,k)
Aug 31, 2024 1:43:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.626927139879164; Expression=99*Math.pow(10,-3)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)*85*Math.pow(10,-3)/65*Math.pow(10,+3)-u4(k); Java Expression: 99*Math.pow(10,-3)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)*85*Math.pow(10,-3)/65*Math.pow(10,+3)-getVariable(4,k)
Aug 31, 2024 1:43:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.622016314039503; Expression=3*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u9(k)/14*Math.pow(10,+1)*27*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 3*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(9,k)/14*Math.pow(10,+1)*27*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:44:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.532952216993871; Expression=24*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*29*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 24*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*29*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:44:10 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.532952216993871 -->> Avg.: 744.5563797126724 -->> Std. Dev.: 2043.5612324039257
Aug 31, 2024 1:44:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.532952216466599; Expression=12*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*29*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 12*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*29*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:44:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.530817922582742; Expression=8*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/18*Math.pow(10,+1)*35*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 8*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/18*Math.pow(10,+1)*35*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:44:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.521750944678363; Expression=64*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/12*Math.pow(10,+1)*24*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 64*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/12*Math.pow(10,+1)*24*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:44:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.521750943552188; Expression=2*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/12*Math.pow(10,+1)*24*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 2*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/12*Math.pow(10,+1)*24*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:45:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.521750943534029; Expression=1*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/12*Math.pow(10,+1)*24*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 1*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/12*Math.pow(10,+1)*24*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:45:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.51403753657993; Expression=24*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/14*Math.pow(10,+3)*29*Math.pow(10,-3)-u4(k)+u8(k); Java Expression: 24*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/14*Math.pow(10,+3)*29*Math.pow(10,-3)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:45:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.514037535910635; Expression=94*Math.pow(10,-9)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/14*Math.pow(10,+3)*29*Math.pow(10,-3)-u4(k)+u8(k); Java Expression: 94*Math.pow(10,-9)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/14*Math.pow(10,+3)*29*Math.pow(10,-3)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:45:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.514015111740239; Expression=24*Math.pow(10,-4)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/14*Math.pow(10,+1)*29*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 24*Math.pow(10,-4)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/14*Math.pow(10,+1)*29*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:45:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.513860291021964; Expression=24*Math.pow(10,-3)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/14*Math.pow(10,+1)*29*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 24*Math.pow(10,-3)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/14*Math.pow(10,+1)*29*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:45:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.511337356881385; Expression=99*Math.pow(10,-3)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/31*Math.pow(10,+1)*65*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 99*Math.pow(10,-3)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/31*Math.pow(10,+1)*65*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:46:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.508785600943391; Expression=99*Math.pow(10,-3)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/31*Math.pow(10,+3)*66*Math.pow(10,-3)-u4(k)+u8(k); Java Expression: 99*Math.pow(10,-3)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/31*Math.pow(10,+3)*66*Math.pow(10,-3)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:46:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5064120355426835; Expression=99*Math.pow(10,-3)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/31*Math.pow(10,+1)*68*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 99*Math.pow(10,-3)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/31*Math.pow(10,+1)*68*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:46:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.506412035542683; Expression=99*Math.pow(10,-3)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/31*Math.pow(10,+3)*68*Math.pow(10,-3)-u4(k)+u8(k); Java Expression: 99*Math.pow(10,-3)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/31*Math.pow(10,+3)*68*Math.pow(10,-3)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:47:13 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.506412035542683 -->> Avg.: 30.855686357958707 -->> Std. Dev.: 43.69535201064234
Aug 31, 2024 1:48:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.478454195516027; Expression=8*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/18*Math.pow(10,+1)*45*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 8*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/18*Math.pow(10,+1)*45*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:49:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.433950934959844; Expression=24*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*47*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 24*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*47*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:49:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.430882035445361; Expression=24*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*49*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 24*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*49*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:50:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.426709570683943; Expression=26*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*49*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 26*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*49*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:50:24 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.426709570683943 -->> Avg.: 11.122353516962857 -->> Std. Dev.: 10.949199321080226
Aug 31, 2024 1:50:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4059454841263355; Expression=45*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*64*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 45*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*64*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:50:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4027423459575505; Expression=55*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*68*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 55*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*68*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:50:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.40274234595755; Expression=55*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,-1)*68*Math.pow(10,+1)-u4(k)+u8(k); Java Expression: 55*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,-1)*68*Math.pow(10,+1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:51:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.401454668392619; Expression=52*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*68*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 52*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*68*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:52:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.399688509871363; Expression=52*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-u4(k)+u8(k); Java Expression: 52*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 1:53:36 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.399688509871363 -->> Avg.: 5.751434165210686 -->> Std. Dev.: 1.1420764877098448
Aug 31, 2024 1:54:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.399687498005903; Expression=52*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-u4(k)+u8(k)+u8(k)/u7(k)/u2(k); Java Expression: 52*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(8,k)/getVariable(7,k)/getVariable(2,k)
Aug 31, 2024 1:54:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.398982515889488; Expression=52*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u5(k)/u3(k); Java Expression: 52*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(5,k)/getVariable(3,k)
Aug 31, 2024 1:54:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.398451436247506; Expression=52*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u4(k)/u3(k); Java Expression: 52*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(4,k)/getVariable(3,k)
Aug 31, 2024 1:55:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3981706400846425; Expression=52*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u3(k)/u3(k); Java Expression: 52*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)/getVariable(3,k)
Aug 31, 2024 1:55:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.395535082152633; Expression=52*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/67*Math.pow(10,+1)/u4(k); Java Expression: 52*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/67*Math.pow(10,+1)/getVariable(4,k)
Aug 31, 2024 1:55:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.389998612243027; Expression=52*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u7(k); Java Expression: 52*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(7,k)
Aug 31, 2024 1:55:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.389200581888505; Expression=52*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u7(k)/u8(k); Java Expression: 52*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(7,k)/getVariable(8,k)
Aug 31, 2024 1:56:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.382126014892746; Expression=52*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*68*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u7(k); Java Expression: 52*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*68*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(7,k)
Aug 31, 2024 1:56:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.382033856874482; Expression=55*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*74*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/17*Math.pow(10,+1)/u4(k); Java Expression: 55*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*74*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/17*Math.pow(10,+1)/getVariable(4,k)
Aug 31, 2024 1:56:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.367851646559277; Expression=52*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u4(k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-u4(k)+u8(k)*u9(k)/u4(k); Java Expression: 52*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(4,k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)*getVariable(9,k)/getVariable(4,k)
Aug 31, 2024 1:56:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.3109776875204275; Expression=52*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u4(k); Java Expression: 52*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/15*Math.pow(10,+1)*67*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(4,k)
Aug 31, 2024 1:56:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.309896226563617; Expression=52*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/15*Math.pow(10,+1)*68*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u4(k); Java Expression: 52*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/15*Math.pow(10,+1)*68*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(4,k)
Aug 31, 2024 1:56:53 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.309896226563617 -->> Avg.: 5.488022490445512 -->> Std. Dev.: 0.09504714357781938
Aug 31, 2024 1:57:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.297388843608948; Expression=52*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/15*Math.pow(10,+1)*68*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u5(k); Java Expression: 52*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/15*Math.pow(10,+1)*68*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(5,k)
Aug 31, 2024 1:58:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.29712781097841; Expression=52*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/15*Math.pow(10,+1)*69*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u5(k); Java Expression: 52*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/15*Math.pow(10,+1)*69*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(5,k)
Aug 31, 2024 2:00:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.29413730890028; Expression=53*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/15*Math.pow(10,+1)*69*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u5(k); Java Expression: 53*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/15*Math.pow(10,+1)*69*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(5,k)
Aug 31, 2024 2:00:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.212094595778408; Expression=96*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/15*Math.pow(10,+1)*96*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u5(k); Java Expression: 96*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/15*Math.pow(10,+1)*96*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(5,k)
Aug 31, 2024 2:00:17 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.212094595778408 -->> Avg.: 5.42049337269032 -->> Std. Dev.: 0.08217263930623091
Aug 31, 2024 2:01:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.21200344838149; Expression=98*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/15*Math.pow(10,+1)*96*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u5(k); Java Expression: 98*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/15*Math.pow(10,+1)*96*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(5,k)
Aug 31, 2024 2:01:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.205086515962881; Expression=98*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/15*Math.pow(10,+1)*96*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u5(k)/u8(k); Java Expression: 98*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/15*Math.pow(10,+1)*96*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(5,k)/getVariable(8,k)
Aug 31, 2024 2:02:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.201681010190578; Expression=99*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/15*Math.pow(10,+1)*96*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u5(k)/u8(k); Java Expression: 99*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/15*Math.pow(10,+1)*96*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(5,k)/getVariable(8,k)
Aug 31, 2024 2:03:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.200364335199778; Expression=99*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/15*Math.pow(10,+1)*96*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u3(k)/u8(k); Java Expression: 99*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/15*Math.pow(10,+1)*96*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)/getVariable(8,k)
Aug 31, 2024 2:03:44 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.200364335199778 -->> Avg.: 5.357276793431562 -->> Std. Dev.: 0.09511193404984547
Aug 31, 2024 2:04:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.200364335199777; Expression=99*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/15*Math.pow(10,-1)*96*Math.pow(10,+1)-u4(k)+u8(k)+u9(k)/u3(k)/u8(k); Java Expression: 99*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/15*Math.pow(10,-1)*96*Math.pow(10,+1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)/getVariable(8,k)
Aug 31, 2024 2:04:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1970589149137805; Expression=99*Math.pow(10,-1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/15*Math.pow(10,+1)*95*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u3(k)/u8(k); Java Expression: 99*Math.pow(10,-1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/15*Math.pow(10,+1)*95*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)/getVariable(8,k)
Aug 31, 2024 2:05:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.196097336144693; Expression=1*Math.pow(10,+1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/15*Math.pow(10,+1)*96*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u3(k)/u8(k); Java Expression: 1*Math.pow(10,+1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/15*Math.pow(10,+1)*96*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)/getVariable(8,k)
Aug 31, 2024 2:07:21 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 5.196097336144693 -->> Avg.: 5.3022133908323585 -->> Std. Dev.: 0.0887606617408155
Aug 31, 2024 2:08:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1958509552732846; Expression=1*Math.pow(10,+1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/15*Math.pow(10,+1)*95*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u3(k)/u8(k); Java Expression: 1*Math.pow(10,+1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/15*Math.pow(10,+1)*95*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)/getVariable(8,k)
Aug 31, 2024 2:09:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.185734832127123; Expression=1*Math.pow(10,+1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/97*Math.pow(10,+3)+96*Math.pow(10,-1)-u4(k)+u8(k)+u9(k)/u3(k)/u8(k); Java Expression: 1*Math.pow(10,+1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/97*Math.pow(10,+3)+96*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(9,k)/getVariable(3,k)/getVariable(8,k)
Aug 31, 2024 2:10:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.18164256667513; Expression=1*Math.pow(10,+1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/95*Math.pow(10,+3)+96*Math.pow(10,-1)-u4(k)+u8(k)+u6(k)/u3(k)/u8(k); Java Expression: 1*Math.pow(10,+1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/95*Math.pow(10,+3)+96*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(6,k)/getVariable(3,k)/getVariable(8,k)
Aug 31, 2024 2:10:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.167741997537732; Expression=1*Math.pow(10,+1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/95*Math.pow(10,+3)+96*Math.pow(10,-1)-u4(k)+u8(k)+u1(k)/u3(k)/u8(k); Java Expression: 1*Math.pow(10,+1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/95*Math.pow(10,+3)+96*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(1,k)/getVariable(3,k)/getVariable(8,k)
Aug 31, 2024 2:10:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.158595311685249; Expression=1*Math.pow(10,+1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/95*Math.pow(10,+3)+96*Math.pow(10,-1)-u4(k)+u8(k)*u6(k)/u3(k)/u8(k); Java Expression: 1*Math.pow(10,+1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/95*Math.pow(10,+3)+96*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)*getVariable(6,k)/getVariable(3,k)/getVariable(8,k)
Aug 31, 2024 2:10:56 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 5.158595311685249 -->> Avg.: 5.259723817048717 -->> Std. Dev.: 0.0803689314706069
Aug 31, 2024 2:11:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.156646508030413; Expression=1*Math.pow(10,+1)+u8(k)+u7(k)-u5(k)-u1(k)/u5(k)/94*Math.pow(10,+3)+96*Math.pow(10,-1)-u4(k)+u8(k)+u6(k)/u3(k)/u8(k); Java Expression: 1*Math.pow(10,+1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/94*Math.pow(10,+3)+96*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(6,k)/getVariable(3,k)/getVariable(8,k)

Execution time: 1922.064 seconds.



@@;1*Math.pow(10,+1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/94*Math.pow(10,+3)+96*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(6,k)/getVariable(3,k)/getVariable(8,k)



Run #5
========
Aug 31, 2024 2:11:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=63.898584449837614; Expression=84*Math.pow(10,-1)-u8(k)-u4(k); Java Expression: 84*Math.pow(10,-1)-getVariable(8,k)-getVariable(4,k)
Aug 31, 2024 2:11:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=34.290595459451424; Expression=34*Math.pow(10,-6)*u7(k); Java Expression: 34*Math.pow(10,-6)*getVariable(7,k)
Aug 31, 2024 2:11:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330471359323823; Expression=81*Math.pow(10,-8)+u5(k); Java Expression: 81*Math.pow(10,-8)+getVariable(5,k)
Aug 31, 2024 2:11:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330471234227431; Expression=u8(k)*u3(k)/u9(k)*20*Math.pow(10,-6)/u6(k)/u4(k)*u1(k)+u5(k); Java Expression: getVariable(8,k)*getVariable(3,k)/getVariable(9,k)*20*Math.pow(10,-6)/getVariable(6,k)/getVariable(4,k)*getVariable(1,k)+getVariable(5,k)
Aug 31, 2024 2:11:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.328760556336503; Expression=99*Math.pow(10,-3)+u5(k); Java Expression: 99*Math.pow(10,-3)+getVariable(5,k)
Aug 31, 2024 2:11:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.048530701873025; Expression=u9(k)/u7(k)*u3(k)*42*Math.pow(10,-8)*u3(k)*u2(k)+u5(k)+u8(k); Java Expression: getVariable(9,k)/getVariable(7,k)*getVariable(3,k)*42*Math.pow(10,-8)*getVariable(3,k)*getVariable(2,k)+getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:11:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 31, 2024 2:11:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.933502244053349; Expression=u5(k)+u8(k)*u9(k)/u9(k)-u6(k)/u6(k); Java Expression: getVariable(5,k)+getVariable(8,k)*getVariable(9,k)/getVariable(9,k)-getVariable(6,k)/getVariable(6,k)
Aug 31, 2024 2:11:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.563892919372513; Expression=36*Math.pow(10,-2)*u6(k); Java Expression: 36*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 2:11:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.082830890152939; Expression=66*Math.pow(10,-5)*u5(k)-u4(k)+u7(k)-u5(k); Java Expression: 66*Math.pow(10,-5)*getVariable(5,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:11:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427926860371; Expression=54*Math.pow(10,-9)*u5(k)-u4(k)+u7(k)-u5(k); Java Expression: 54*Math.pow(10,-9)*getVariable(5,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:11:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427691088958; Expression=25*Math.pow(10,-9)*u5(k)-u4(k)+u7(k)-u5(k); Java Expression: 25*Math.pow(10,-9)*getVariable(5,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:11:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0774275053914595; Expression=76*Math.pow(10,-9)*u8(k)-u4(k)+u7(k)-u5(k); Java Expression: 76*Math.pow(10,-9)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:11:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427488114256; Expression=45*Math.pow(10,-9)/u5(k)-u4(k)+u7(k)-u5(k); Java Expression: 45*Math.pow(10,-9)/getVariable(5,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:11:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.058143098255609; Expression=42*Math.pow(10,-9)-u8(k)-u4(k)+u7(k)-u5(k); Java Expression: 42*Math.pow(10,-9)-getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)
Aug 31, 2024 2:11:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.00682574324447; Expression=34*Math.pow(10,-9)*u5(k)-u4(k)+u7(k)-u5(k)+31*Math.pow(10,-8)-u9(k)/u3(k); Java Expression: 34*Math.pow(10,-9)*getVariable(5,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)+31*Math.pow(10,-8)-getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 2:11:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.0068256478014606; Expression=34*Math.pow(10,-9)/u5(k)-u4(k)+u7(k)-u5(k)+31*Math.pow(10,-8)-u9(k)/u3(k); Java Expression: 34*Math.pow(10,-9)/getVariable(5,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)+31*Math.pow(10,-8)-getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 2:11:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.833548972257992; Expression=34*Math.pow(10,-9)*u6(k)-u4(k)+u7(k)-u5(k)-31*Math.pow(10,-8)-u1(k)/u3(k); Java Expression: 34*Math.pow(10,-9)*getVariable(6,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-31*Math.pow(10,-8)-getVariable(1,k)/getVariable(3,k)
Aug 31, 2024 2:11:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.833435688043677; Expression=34*Math.pow(10,-6)*u5(k)-u4(k)+u7(k)-u5(k)-31*Math.pow(10,-8)-u1(k)/u3(k); Java Expression: 34*Math.pow(10,-6)*getVariable(5,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-31*Math.pow(10,-8)-getVariable(1,k)/getVariable(3,k)
Aug 31, 2024 2:11:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.833251689848871; Expression=34*Math.pow(10,-6)*u6(k)-u4(k)+u7(k)-u5(k)-31*Math.pow(10,-8)-u1(k)/u3(k); Java Expression: 34*Math.pow(10,-6)*getVariable(6,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-31*Math.pow(10,-8)-getVariable(1,k)/getVariable(3,k)
Aug 31, 2024 2:11:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.79401136945578; Expression=64*Math.pow(10,-9)/u6(k)-u4(k)+u7(k)-u5(k)+59*Math.pow(10,-2)-u1(k)/u3(k); Java Expression: 64*Math.pow(10,-9)/getVariable(6,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)+59*Math.pow(10,-2)-getVariable(1,k)/getVariable(3,k)
Aug 31, 2024 2:11:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.78486952612513; Expression=20*Math.pow(10,-4)*u6(k)-u4(k)+u7(k)-u5(k)-54*Math.pow(10,-9)-u1(k)/u9(k); Java Expression: 20*Math.pow(10,-4)*getVariable(6,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-54*Math.pow(10,-9)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:11:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.779258880006869; Expression=35*Math.pow(10,-4)*u6(k)-u4(k)+u7(k)-u5(k)-68*Math.pow(10,-3)-u1(k)/u9(k); Java Expression: 35*Math.pow(10,-4)*getVariable(6,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-68*Math.pow(10,-3)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:11:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.754556036317937; Expression=64*Math.pow(10,-4)*u6(k)-u4(k)+u7(k)-u5(k)-59*Math.pow(10,-8)-u1(k)/u9(k); Java Expression: 64*Math.pow(10,-4)*getVariable(6,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-59*Math.pow(10,-8)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:12:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.75132629031452; Expression=82*Math.pow(10,-4)*u6(k)-u4(k)+u7(k)-u5(k)-56*Math.pow(10,-8)-u1(k)/u9(k); Java Expression: 82*Math.pow(10,-4)*getVariable(6,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-56*Math.pow(10,-8)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:12:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.736444081239324; Expression=64*Math.pow(10,-9)/u6(k)-u4(k)+u7(k)-u5(k)+59*Math.pow(10,-2)-u1(k)/u9(k); Java Expression: 64*Math.pow(10,-9)/getVariable(6,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)+59*Math.pow(10,-2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:12:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7346796442531565; Expression=64*Math.pow(10,-4)*u2(k)-u4(k)+u7(k)-u5(k)+59*Math.pow(10,-8)-u1(k)/u9(k); Java Expression: 64*Math.pow(10,-4)*getVariable(2,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)+59*Math.pow(10,-8)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:12:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.734010409466138; Expression=62*Math.pow(10,-4)*u2(k)-u4(k)+u7(k)-u5(k)+15*Math.pow(10,-8)-u1(k)/u9(k); Java Expression: 62*Math.pow(10,-4)*getVariable(2,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)+15*Math.pow(10,-8)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:12:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.721430993315422; Expression=64*Math.pow(10,-9)/u6(k)-u4(k)+u7(k)-u5(k)+98*Math.pow(10,-2)-u1(k)/u9(k); Java Expression: 64*Math.pow(10,-9)/getVariable(6,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)+98*Math.pow(10,-2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:12:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.721430993315129; Expression=64*Math.pow(10,-9)/u4(k)-u4(k)+u7(k)-u5(k)+98*Math.pow(10,-2)-u1(k)/u9(k); Java Expression: 64*Math.pow(10,-9)/getVariable(4,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)+98*Math.pow(10,-2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:12:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.721415282885028; Expression=64*Math.pow(10,-3)/u6(k)-u4(k)+u7(k)-u5(k)+98*Math.pow(10,-2)-u1(k)/u9(k); Java Expression: 64*Math.pow(10,-3)/getVariable(6,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)+98*Math.pow(10,-2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:12:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7214125911624905; Expression=75*Math.pow(10,-3)/u6(k)-u4(k)+u7(k)-u5(k)+98*Math.pow(10,-2)-u1(k)/u9(k); Java Expression: 75*Math.pow(10,-3)/getVariable(6,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)+98*Math.pow(10,-2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:12:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.72136801171392; Expression=75*Math.pow(10,-3)/u1(k)-u4(k)+u7(k)-u5(k)+98*Math.pow(10,-2)-u1(k)/u9(k); Java Expression: 75*Math.pow(10,-3)/getVariable(1,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)+98*Math.pow(10,-2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:12:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.715161364063199; Expression=75*Math.pow(10,-3)*u8(k)-u4(k)+u7(k)-u5(k)+98*Math.pow(10,-2)-u1(k)/u9(k); Java Expression: 75*Math.pow(10,-3)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)+98*Math.pow(10,-2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:12:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.714556666336614; Expression=75*Math.pow(10,-3)*u8(k)-u4(k)+u7(k)-u5(k)+86*Math.pow(10,-2)-u1(k)/u9(k); Java Expression: 75*Math.pow(10,-3)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)+86*Math.pow(10,-2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:12:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6680351091850065; Expression=75*Math.pow(10,-2)*u8(k)-u4(k)+u7(k)-u5(k)+98*Math.pow(10,-3)-u1(k)/u9(k); Java Expression: 75*Math.pow(10,-2)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)+98*Math.pow(10,-3)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:13:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.667254888015367; Expression=72*Math.pow(10,-2)*u8(k)-u4(k)+u7(k)-u5(k)+68*Math.pow(10,-3)-u1(k)/u9(k); Java Expression: 72*Math.pow(10,-2)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)+68*Math.pow(10,-3)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:13:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.665051223694927; Expression=75*Math.pow(10,-2)*u8(k)-u4(k)+u7(k)-u5(k)+98*Math.pow(10,-4)-u1(k)/u9(k); Java Expression: 75*Math.pow(10,-2)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)+98*Math.pow(10,-4)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:13:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.66496875011758; Expression=75*Math.pow(10,-2)*u8(k)-u4(k)+u7(k)-u5(k)+66*Math.pow(10,-4)-u1(k)/u9(k); Java Expression: 75*Math.pow(10,-2)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)+66*Math.pow(10,-4)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:13:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.663267848878362; Expression=75*Math.pow(10,-2)*u8(k)-u4(k)+u7(k)-u5(k)-98*Math.pow(10,-3)-u1(k)/u9(k); Java Expression: 75*Math.pow(10,-2)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-98*Math.pow(10,-3)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:13:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.662278194163352; Expression=75*Math.pow(10,-3)+u8(k)-u4(k)+u7(k)-u5(k)-98*Math.pow(10,-2)-u1(k)/u9(k); Java Expression: 75*Math.pow(10,-3)+getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-98*Math.pow(10,-2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:13:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.649271064295373; Expression=75*Math.pow(10,-3)+u8(k)-u4(k)+u7(k)-u5(k)-55*Math.pow(10,-2)-u1(k)/u9(k); Java Expression: 75*Math.pow(10,-3)+getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-55*Math.pow(10,-2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:13:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.649104792259877; Expression=64*Math.pow(10,-3)+u8(k)-u4(k)+u7(k)-u5(k)-59*Math.pow(10,-2)-u1(k)/u9(k); Java Expression: 64*Math.pow(10,-3)+getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-59*Math.pow(10,-2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:13:25 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.649104792259877 -->> Avg.: 476724.7618118031 -->> Std. Dev.: 2329468.875064572
Aug 31, 2024 2:13:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.649101827728745; Expression=67*Math.pow(10,-3)+u8(k)-u4(k)+u7(k)-u5(k)-59*Math.pow(10,-2)-u1(k)/u9(k); Java Expression: 67*Math.pow(10,-3)+getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-59*Math.pow(10,-2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:13:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.64910045637029; Expression=20*Math.pow(10,-3)+u8(k)-u4(k)+u7(k)-u5(k)-54*Math.pow(10,-2)-u1(k)/u9(k); Java Expression: 20*Math.pow(10,-3)+getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-54*Math.pow(10,-2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:13:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.641888438084943; Expression=75*Math.pow(10,-3)+u8(k)-u4(k)+u7(k)-u5(k)/98*Math.pow(10,+2)-u1(k)/u9(k); Java Expression: 75*Math.pow(10,-3)+getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/98*Math.pow(10,+2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:14:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.64173180560032; Expression=87*Math.pow(10,-3)+u8(k)-u4(k)+u7(k)-u5(k)/98*Math.pow(10,+2)-u1(k)/u9(k); Java Expression: 87*Math.pow(10,-3)+getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/98*Math.pow(10,+2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:14:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.641696634963077; Expression=90*Math.pow(10,-3)+u8(k)-u4(k)+u7(k)-u5(k)/98*Math.pow(10,+2)-u1(k)/u9(k); Java Expression: 90*Math.pow(10,-3)+getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/98*Math.pow(10,+2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:14:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.641663059381083; Expression=93*Math.pow(10,-3)+u8(k)-u4(k)+u7(k)-u5(k)/98*Math.pow(10,+2)-u1(k)/u9(k); Java Expression: 93*Math.pow(10,-3)+getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/98*Math.pow(10,+2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:14:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.641620773184513; Expression=97*Math.pow(10,-3)+u8(k)-u4(k)+u7(k)-u5(k)/98*Math.pow(10,+2)-u1(k)/u9(k); Java Expression: 97*Math.pow(10,-3)+getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/98*Math.pow(10,+2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:15:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6303596050832265; Expression=31*Math.pow(10,-1)+u8(k)-u4(k)+u7(k)-u5(k)/90*Math.pow(10,+2)-u1(k)/u9(k); Java Expression: 31*Math.pow(10,-1)+getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/90*Math.pow(10,+2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:16:02 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.6303596050832265 -->> Avg.: 522.2002755544031 -->> Std. Dev.: 1533.7265697386179
Aug 31, 2024 2:17:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.630359605083226; Expression=31*Math.pow(10,-1)+u7(k)-u4(k)+u8(k)-u5(k)/90*Math.pow(10,+2)-u1(k)/u9(k); Java Expression: 31*Math.pow(10,-1)+getVariable(7,k)-getVariable(4,k)+getVariable(8,k)-getVariable(5,k)/90*Math.pow(10,+2)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:18:47 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.630359605083226 -->> Avg.: 27.93203981467588 -->> Std. Dev.: 35.72459859805655
Aug 31, 2024 2:19:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.585849984263481; Expression=31*Math.pow(10,-1)+u8(k)-u4(k)+u7(k)-u5(k)/90*Math.pow(10,+2)-u1(k)/u9(k)/u6(k)*u7(k); Java Expression: 31*Math.pow(10,-1)+getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/90*Math.pow(10,+2)-getVariable(1,k)/getVariable(9,k)/getVariable(6,k)*getVariable(7,k)
Aug 31, 2024 2:19:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.584847776187372; Expression=31*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)/90*Math.pow(10,+2)-u1(k)/u9(k)/u6(k)*u7(k); Java Expression: 31*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/90*Math.pow(10,+2)-getVariable(1,k)/getVariable(9,k)/getVariable(6,k)*getVariable(7,k)
Aug 31, 2024 2:19:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.584479130714524; Expression=31*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)/90*Math.pow(10,+2)-u1(k)/u9(k)/u6(k)*u7(k)+u4(k)/u6(k)/u4(k); Java Expression: 31*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/90*Math.pow(10,+2)-getVariable(1,k)/getVariable(9,k)/getVariable(6,k)*getVariable(7,k)+getVariable(4,k)/getVariable(6,k)/getVariable(4,k)
Aug 31, 2024 2:19:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.580143954636749; Expression=31*Math.pow(10,-1)+u8(k)-u4(k)+u7(k)-u5(k)/91*Math.pow(10,+2)-u1(k)/u9(k)/u6(k)*u7(k); Java Expression: 31*Math.pow(10,-1)+getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/91*Math.pow(10,+2)-getVariable(1,k)/getVariable(9,k)/getVariable(6,k)*getVariable(7,k)
Aug 31, 2024 2:19:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.578559186076386; Expression=31*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)/90*Math.pow(10,+2)-u1(k)/u4(k)/u6(k)*u7(k); Java Expression: 31*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/90*Math.pow(10,+2)-getVariable(1,k)/getVariable(4,k)/getVariable(6,k)*getVariable(7,k)
Aug 31, 2024 2:20:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.577510646466212; Expression=31*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)/90*Math.pow(10,+2)-u1(k)/u5(k)/u6(k)*u7(k)+u4(k)/u6(k)/u4(k); Java Expression: 31*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/90*Math.pow(10,+2)-getVariable(1,k)/getVariable(5,k)/getVariable(6,k)*getVariable(7,k)+getVariable(4,k)/getVariable(6,k)/getVariable(4,k)
Aug 31, 2024 2:20:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.572459569795617; Expression=31*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)/90*Math.pow(10,+2)-u1(k)/u5(k)/u6(k)*u7(k)+u4(k)/u6(k); Java Expression: 31*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/90*Math.pow(10,+2)-getVariable(1,k)/getVariable(5,k)/getVariable(6,k)*getVariable(7,k)+getVariable(4,k)/getVariable(6,k)
Aug 31, 2024 2:20:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.558654350350545; Expression=31*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)/90*Math.pow(10,+2)-u1(k)/u5(k)/u6(k)*u7(k)+u9(k)/u6(k); Java Expression: 31*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/90*Math.pow(10,+2)-getVariable(1,k)/getVariable(5,k)/getVariable(6,k)*getVariable(7,k)+getVariable(9,k)/getVariable(6,k)
Aug 31, 2024 2:20:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.552507495430076; Expression=28*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)/90*Math.pow(10,+2)-u1(k)/u5(k)/u6(k)*u7(k)+u9(k)/u6(k); Java Expression: 28*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/90*Math.pow(10,+2)-getVariable(1,k)/getVariable(5,k)/getVariable(6,k)*getVariable(7,k)+getVariable(9,k)/getVariable(6,k)
Aug 31, 2024 2:20:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.548090813863685; Expression=31*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)/90*Math.pow(10,+2)-u1(k)/u5(k)/u6(k)*u7(k)+u9(k)/u1(k); Java Expression: 31*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/90*Math.pow(10,+2)-getVariable(1,k)/getVariable(5,k)/getVariable(6,k)*getVariable(7,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 2:21:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.532473182089385; Expression=28*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)/90*Math.pow(10,+2)-u1(k)/u5(k)/u6(k)*u7(k)+u9(k)/u1(k); Java Expression: 28*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/90*Math.pow(10,+2)-getVariable(1,k)/getVariable(5,k)/getVariable(6,k)*getVariable(7,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 2:21:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.473378868660194; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)/90*Math.pow(10,+2)-u1(k)/u5(k)/u4(k)*u7(k)+u9(k)/u6(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/90*Math.pow(10,+2)-getVariable(1,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(6,k)
Aug 31, 2024 2:21:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.345304150365313; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)/90*Math.pow(10,+2)-u1(k)/u5(k)/u4(k)*u7(k)+u9(k)/u3(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/90*Math.pow(10,+2)-getVariable(1,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 2:21:41 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.345304150365313 -->> Avg.: 11.215992969414096 -->> Std. Dev.: 10.948349646413417
Aug 31, 2024 2:21:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.292393745400066; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)/93*Math.pow(10,+2)-u1(k)/u5(k)/u4(k)*u7(k)+u9(k)/u3(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/93*Math.pow(10,+2)-getVariable(1,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 2:22:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.291551549585754; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)/93*Math.pow(10,+2)-u1(k)/u5(k)/u4(k)*u7(k)+u9(k)/u6(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/93*Math.pow(10,+2)-getVariable(1,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(6,k)
Aug 31, 2024 2:22:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.208151663124802; Expression=49*Math.pow(10,-1)+u8(k)-u4(k)+u7(k)-u5(k)/93*Math.pow(10,+2)-u1(k)/u5(k)/u4(k)*u7(k)+u9(k)/u3(k); Java Expression: 49*Math.pow(10,-1)+getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/93*Math.pow(10,+2)-getVariable(1,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 2:22:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.14169356573525; Expression=31*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-90*Math.pow(10,-2)-u1(k)/u5(k)/u4(k)*u7(k)+u9(k)/u3(k); Java Expression: 31*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-90*Math.pow(10,-2)-getVariable(1,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 2:23:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.110952441112299; Expression=31*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-17*Math.pow(10,-2)-u1(k)/u5(k)/u4(k)*u7(k)+u9(k)/u4(k); Java Expression: 31*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-17*Math.pow(10,-2)-getVariable(1,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(4,k)
Aug 31, 2024 2:23:34 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.100475441569574; Expression=31*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-17*Math.pow(10,-2)-u1(k)/u5(k)/u4(k)*u7(k)+u9(k)/u3(k); Java Expression: 31*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-17*Math.pow(10,-2)-getVariable(1,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 2:23:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.020049868860844; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-93*Math.pow(10,-2)-u7(k)/u5(k)/u4(k)*u7(k)+u9(k)/u4(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-93*Math.pow(10,-2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(4,k)
Aug 31, 2024 2:24:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.017709153787884; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-72*Math.pow(10,-2)-u7(k)/u5(k)/u4(k)*u7(k)+u9(k)/u4(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-72*Math.pow(10,-2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(4,k)
Aug 31, 2024 2:24:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0144986782997485; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-90*Math.pow(10,-2)-u7(k)/u5(k)/u4(k)*u7(k)+u9(k)/u3(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-90*Math.pow(10,-2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 2:24:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.011065165818324; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-71*Math.pow(10,-2)-u7(k)/u5(k)/u4(k)*u7(k)+u9(k)/u3(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-71*Math.pow(10,-2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 2:24:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.008502011720347; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-72*Math.pow(10,-2)-u7(k)/u5(k)/u4(k)*u7(k)+u9(k)/u5(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-72*Math.pow(10,-2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(5,k)
Aug 31, 2024 2:24:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0081322691033066; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-73*Math.pow(10,-2)-u7(k)/u5(k)/u4(k)*u7(k)+u9(k)/u5(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-73*Math.pow(10,-2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(5,k)
Aug 31, 2024 2:24:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.004929299538155; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-93*Math.pow(10,-2)-u7(k)/u5(k)/u4(k)*u7(k)+u9(k)/u5(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-93*Math.pow(10,-2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(5,k)
Aug 31, 2024 2:24:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.004900400916512; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-90*Math.pow(10,-2)-u7(k)/u5(k)/u4(k)*u7(k)+u9(k)/u5(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-90*Math.pow(10,-2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(5,k)
Aug 31, 2024 2:24:48 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.004900400916512 -->> Avg.: 5.782859082710792 -->> Std. Dev.: 1.3523589177509812
Aug 31, 2024 2:25:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.979187551441112; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-72*Math.pow(10,-2)-u7(k)/u5(k)/u4(k)*u7(k)+u9(k)/u5(k)/u7(k)*u6(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-72*Math.pow(10,-2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(5,k)/getVariable(7,k)*getVariable(6,k)
Aug 31, 2024 2:25:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.979007649511612; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-90*Math.pow(10,-2)-u7(k)/u5(k)/u4(k)*u7(k)+u9(k)/u5(k)/u7(k)*u6(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-90*Math.pow(10,-2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(5,k)/getVariable(7,k)*getVariable(6,k)
Aug 31, 2024 2:26:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.978485239978106; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-86*Math.pow(10,-2)-u7(k)/u5(k)/u4(k)*u7(k)+u9(k)/u5(k)/u7(k)*u6(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-86*Math.pow(10,-2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(5,k)/getVariable(7,k)*getVariable(6,k)
Aug 31, 2024 2:26:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.9662688814279266; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-90*Math.pow(10,-2)-u7(k)/u5(k)/u4(k)*u7(k)+u9(k)/u5(k)/u1(k)*u6(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-90*Math.pow(10,-2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(5,k)/getVariable(1,k)*getVariable(6,k)
Aug 31, 2024 2:26:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.955336051877828; Expression=48*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-90*Math.pow(10,-2)-u7(k)/u5(k)/u4(k)*u7(k)+u9(k)/u5(k)/u1(k)*u6(k); Java Expression: 48*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-90*Math.pow(10,-2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(5,k)/getVariable(1,k)*getVariable(6,k)
Aug 31, 2024 2:27:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.953120226083604; Expression=48*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-99*Math.pow(10,-2)-u7(k)/u5(k)/u4(k)*u7(k)+u9(k)/u5(k)/u1(k)*u6(k); Java Expression: 48*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-99*Math.pow(10,-2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(5,k)/getVariable(1,k)*getVariable(6,k)
Aug 31, 2024 2:28:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.95059889950384; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-96*Math.pow(10,-2)-u7(k)/u5(k)/u4(k)*u7(k)+u9(k)/u3(k)/u7(k)*u2(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-96*Math.pow(10,-2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)/getVariable(7,k)*getVariable(2,k)
Aug 31, 2024 2:28:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.943010735902004; Expression=48*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-90*Math.pow(10,-2)-u7(k)/u5(k)/u4(k)*u7(k)+u9(k)/u3(k)/u7(k)*u2(k); Java Expression: 48*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-90*Math.pow(10,-2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)/getVariable(7,k)*getVariable(2,k)
Aug 31, 2024 2:28:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.939223220835126; Expression=48*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)-99*Math.pow(10,-2)-u7(k)/u5(k)/u4(k)*u7(k)+u9(k)/u3(k)/u7(k)*u2(k); Java Expression: 48*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)-99*Math.pow(10,-2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)/getVariable(7,k)*getVariable(2,k)
Aug 31, 2024 2:28:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.931778025262359; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)/96*Math.pow(10,+2)-u7(k)/u5(k)/u4(k)*u7(k)+u9(k)/u3(k)/u7(k)*u2(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/96*Math.pow(10,+2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)/getVariable(7,k)*getVariable(2,k)
Aug 31, 2024 2:28:33 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.931778025262359 -->> Avg.: 5.396403735064134 -->> Std. Dev.: 0.28231626170692947
Aug 31, 2024 2:30:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.92302817882152; Expression=49*Math.pow(10,-1)*u8(k)-u4(k)+u7(k)-u5(k)/90*Math.pow(10,+2)-u7(k)/u5(k)/u4(k)*u7(k)+u6(k)/u3(k)/u7(k)*u2(k); Java Expression: 49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/90*Math.pow(10,+2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(6,k)/getVariable(3,k)/getVariable(7,k)*getVariable(2,k)
Aug 31, 2024 2:31:58 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.92302817882152 -->> Avg.: 5.257073845011533 -->> Std. Dev.: 0.30200706343059247
Aug 31, 2024 2:35:26 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.92302817882152 -->> Avg.: 5.118923175819792 -->> Std. Dev.: 0.2582201736169666
Aug 31, 2024 2:38:54 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.92302817882152 -->> Avg.: 4.989423563146716 -->> Std. Dev.: 0.12057111535154282
Aug 31, 2024 2:42:21 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.92302817882152 -->> Avg.: 4.936054551101045 -->> Std. Dev.: 0.024155308226912947

Execution time: 1885.473 seconds.



@@;49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/90*Math.pow(10,+2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(6,k)/getVariable(3,k)/getVariable(7,k)*getVariable(2,k)



Run #6
========
Aug 31, 2024 2:42:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=70.69157055695314; Expression=9*Math.pow(10,-2)/12*Math.pow(10,-6)-u4(k)-33*Math.pow(10,-4)/u5(k)*u3(k); Java Expression: 9*Math.pow(10,-2)/12*Math.pow(10,-6)-getVariable(4,k)-33*Math.pow(10,-4)/getVariable(5,k)*getVariable(3,k)
Aug 31, 2024 2:42:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=42.351641404514744; Expression=10*Math.pow(10,-1)-u7(k)+u6(k); Java Expression: 10*Math.pow(10,-1)-getVariable(7,k)+getVariable(6,k)
Aug 31, 2024 2:42:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=34.286793642807766; Expression=u6(k)/u2(k)/u1(k); Java Expression: getVariable(6,k)/getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 2:42:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=18.145103978404123; Expression=u4(k)/u8(k)+u1(k)-u1(k); Java Expression: getVariable(4,k)/getVariable(8,k)+getVariable(1,k)-getVariable(1,k)
Aug 31, 2024 2:42:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=12.124131216394078; Expression=35*Math.pow(10,-1)+u4(k); Java Expression: 35*Math.pow(10,-1)+getVariable(4,k)
Aug 31, 2024 2:42:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.33046812832759; Expression=14*Math.pow(10,-5)+u5(k); Java Expression: 14*Math.pow(10,-5)+getVariable(5,k)
Aug 31, 2024 2:42:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u3(k)/u3(k)*u5(k); Java Expression: getVariable(8,k)+getVariable(3,k)/getVariable(3,k)*getVariable(5,k)
Aug 31, 2024 2:42:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992388946502078; Expression=u7(k)-u3(k)-u5(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 2:42:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.967853343882243; Expression=u7(k)-u3(k)-u5(k)+u8(k)/u5(k)*u4(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)/getVariable(5,k)*getVariable(4,k)
Aug 31, 2024 2:42:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.944466107762267; Expression=u7(k)-u3(k)-u5(k)+u8(k)/u5(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)/getVariable(5,k)*getVariable(3,k)
Aug 31, 2024 2:43:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.927032814696644; Expression=u7(k)-u3(k)-u5(k)+u8(k)/u1(k)*u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(3,k)
Aug 31, 2024 2:43:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.906863965914802; Expression=u7(k)-u3(k)-u5(k)+u8(k)/u5(k)*u3(k)-u7(k)/u7(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)/getVariable(5,k)*getVariable(3,k)-getVariable(7,k)/getVariable(7,k)
Aug 31, 2024 2:43:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.867886682023407; Expression=u7(k)-u3(k)-u5(k)+u8(k)/u5(k)*u3(k)-u5(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)/getVariable(5,k)*getVariable(3,k)-getVariable(5,k)/getVariable(3,k)
Aug 31, 2024 2:43:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.8542767142223555; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u5(k)*u3(k)-u6(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(5,k)*getVariable(3,k)-getVariable(6,k)/getVariable(3,k)
Aug 31, 2024 2:43:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.845134966636159; Expression=u7(k)-u3(k)-u5(k)+u8(k)/u5(k)*u3(k)-u1(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(3,k)-getVariable(5,k)+getVariable(8,k)/getVariable(5,k)*getVariable(3,k)-getVariable(1,k)/getVariable(3,k)
Aug 31, 2024 2:44:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.837093333798404; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u5(k)*u3(k)-u1(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(5,k)*getVariable(3,k)-getVariable(1,k)/getVariable(3,k)
Aug 31, 2024 2:44:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.770294646742281; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u5(k)*u5(k)-u1(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(5,k)*getVariable(5,k)-getVariable(1,k)/getVariable(3,k)
Aug 31, 2024 2:44:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.747706354670992; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u7(k)*u3(k)-u1(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(7,k)*getVariable(3,k)-getVariable(1,k)/getVariable(3,k)
Aug 31, 2024 2:44:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.742713535892033; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u7(k)*u4(k)-u1(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(7,k)*getVariable(4,k)-getVariable(1,k)/getVariable(3,k)
Aug 31, 2024 2:44:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.691542286965865; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u7(k)*u3(k)-u1(k)/u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(7,k)*getVariable(3,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:44:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.69078046237246; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u7(k)*u4(k)-u1(k)/u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(7,k)*getVariable(4,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:44:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.67314380508455; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u7(k)+u8(k)-u1(k)/u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(7,k)+getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:44:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672883778061564; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u4(k)*u4(k)-u1(k)/u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(4,k)*getVariable(4,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:44:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.672666437403288; Expression=u7(k)-u4(k)-u5(k)-u8(k)/u7(k)+u8(k)-u1(k)/u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(8,k)/getVariable(7,k)+getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:44:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.658704896995861; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u3(k)*u4(k)-u1(k)/u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(3,k)*getVariable(4,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:44:51 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.658704896995861 -->> Avg.: 490909.4348398906 -->> Std. Dev.: 2157764.0852886257
Aug 31, 2024 2:44:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.646371694823241; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u7(k)*u6(k)-u1(k)/u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(7,k)*getVariable(6,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:45:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.642663965167663; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u1(k)/u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:45:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.640480527431724; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u7(k)+u8(k)-u1(k)/u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(7,k)+getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:45:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.621082282108204; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u2(k)+u8(k)-u1(k)/u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(2,k)+getVariable(8,k)-getVariable(1,k)/getVariable(9,k)
Aug 31, 2024 2:45:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.610093206594119; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/u9(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/getVariable(9,k)
Aug 31, 2024 2:46:19 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.436342200432453; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/30*Math.pow(10,-2)*u1(k)*u2(k)/u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/30*Math.pow(10,-2)*getVariable(1,k)*getVariable(2,k)/getVariable(2,k)
Aug 31, 2024 2:46:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.422552010564029; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/29*Math.pow(10,-2)*u1(k)*u2(k)/u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/29*Math.pow(10,-2)*getVariable(1,k)*getVariable(2,k)/getVariable(2,k)
Aug 31, 2024 2:46:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.399103918322966; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/27*Math.pow(10,-2)*u1(k)*u2(k)/u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/27*Math.pow(10,-2)*getVariable(1,k)*getVariable(2,k)/getVariable(2,k)
Aug 31, 2024 2:46:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.384647719666809; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/23*Math.pow(10,-2)*u1(k)*u2(k)/u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/23*Math.pow(10,-2)*getVariable(1,k)*getVariable(2,k)/getVariable(2,k)
Aug 31, 2024 2:47:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.384470884322711; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/25*Math.pow(10,-2)*u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/25*Math.pow(10,-2)*getVariable(1,k)
Aug 31, 2024 2:47:29 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.384470884322711 -->> Avg.: 566.1381409627426 -->> Std. Dev.: 1573.7260123824046
Aug 31, 2024 2:47:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.367582345248289; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/23*Math.pow(10,-2)*u1(k)+u4(k)/u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/23*Math.pow(10,-2)*getVariable(1,k)+getVariable(4,k)/getVariable(2,k)
Aug 31, 2024 2:47:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.358618485508349; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/23*Math.pow(10,-2)*u1(k)+u9(k)/u2(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/23*Math.pow(10,-2)*getVariable(1,k)+getVariable(9,k)/getVariable(2,k)
Aug 31, 2024 2:47:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.344822286273776; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u2(k)-u7(k)/23*Math.pow(10,-2)*u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(2,k)-getVariable(7,k)/23*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 2:48:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.341570543158143; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/23*Math.pow(10,-2)*u1(k)+u9(k)/u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/23*Math.pow(10,-2)*getVariable(1,k)+getVariable(9,k)/getVariable(7,k)
Aug 31, 2024 2:49:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.338709319427718; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/23*Math.pow(10,-2)*u1(k)+u9(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/23*Math.pow(10,-2)*getVariable(1,k)+getVariable(9,k)/getVariable(1,k)
Aug 31, 2024 2:49:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.312760899135021; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/23*Math.pow(10,-2)*u7(k)+u9(k)/u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/23*Math.pow(10,-2)*getVariable(7,k)+getVariable(9,k)/getVariable(5,k)
Aug 31, 2024 2:49:56 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.312632157700227; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/23*Math.pow(10,-2)*u7(k)+u9(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/23*Math.pow(10,-2)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 2:49:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.308509307536249; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/25*Math.pow(10,-2)*u7(k)+u9(k)/u3(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/25*Math.pow(10,-2)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)
Aug 31, 2024 2:50:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.267426568571889; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/23*Math.pow(10,-2)*u7(k)+u9(k)/u5(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/23*Math.pow(10,-2)*getVariable(7,k)+getVariable(9,k)/getVariable(5,k)*getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 2:50:23 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 5.267426568571889 -->> Avg.: 27.890325140168724 -->> Std. Dev.: 36.39811558442665
Aug 31, 2024 2:50:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.261696587075078; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/23*Math.pow(10,-2)*u7(k)+u9(k)/u4(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/23*Math.pow(10,-2)*getVariable(7,k)+getVariable(9,k)/getVariable(4,k)*getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 2:50:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.25224935288815; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/23*Math.pow(10,-2)*u7(k)+u9(k)/u3(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/23*Math.pow(10,-2)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 2:52:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.245064904551338; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/23*Math.pow(10,-2)*u7(k)+u9(k)/u3(k)*u8(k)+u4(k)-u4(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/23*Math.pow(10,-2)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)*getVariable(8,k)+getVariable(4,k)-getVariable(4,k)
Aug 31, 2024 2:52:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.228511162977368; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/23*Math.pow(10,-2)*u7(k)+u9(k)/u3(k)*u6(k)/u1(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/23*Math.pow(10,-2)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)*getVariable(8,k)
Aug 31, 2024 2:52:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.221887214208936; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/23*Math.pow(10,-2)*u7(k)+u4(k)/u3(k)*u6(k)/u1(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/23*Math.pow(10,-2)*getVariable(7,k)+getVariable(4,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)*getVariable(8,k)
Aug 31, 2024 2:53:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.188430248286166; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/21*Math.pow(10,-2)*u7(k)+u9(k)/u3(k)*u6(k)/u1(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/21*Math.pow(10,-2)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)*getVariable(8,k)
Aug 31, 2024 2:53:39 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 5.188430248286166 -->> Avg.: 11.093270886334041 -->> Std. Dev.: 10.919665626708262
Aug 31, 2024 2:53:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.1695272737685505; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/14*Math.pow(10,-2)*u7(k)+u9(k)/u3(k)+u6(k)/u1(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/14*Math.pow(10,-2)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)+getVariable(6,k)/getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:54:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.114423597571117; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/14*Math.pow(10,-2)*u7(k)+u9(k)/u3(k)+u6(k)/u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/14*Math.pow(10,-2)*getVariable(7,k)+getVariable(9,k)/getVariable(3,k)+getVariable(6,k)/getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 2:54:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.112149753551489; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/14*Math.pow(10,-2)*u7(k)+u6(k)/u3(k)+u6(k)/u1(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/14*Math.pow(10,-2)*getVariable(7,k)+getVariable(6,k)/getVariable(3,k)+getVariable(6,k)/getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:54:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.096470361343896; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u7(k)*u6(k)-u7(k)/14*Math.pow(10,-2)*u7(k)+u6(k)/u3(k)+u6(k)/u1(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(7,k)*getVariable(6,k)-getVariable(7,k)/14*Math.pow(10,-2)*getVariable(7,k)+getVariable(6,k)/getVariable(3,k)+getVariable(6,k)/getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:54:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.053992813963312; Expression=u7(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/14*Math.pow(10,-2)*u7(k)+u6(k)/u3(k)*u6(k)/u1(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/14*Math.pow(10,-2)*getVariable(7,k)+getVariable(6,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)+getVariable(8,k)
Aug 31, 2024 2:56:59 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 5.053992813963312 -->> Avg.: 5.66173758221677 -->> Std. Dev.: 1.4873208292165716
Aug 31, 2024 3:00:22 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 5.053992813963312 -->> Avg.: 5.259161774331001 -->> Std. Dev.: 0.19336708754487614
Aug 31, 2024 3:03:47 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 5.053992813963312 -->> Avg.: 5.158206446046572 -->> Std. Dev.: 0.12079516825339265
Aug 31, 2024 3:04:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.053992813963309; Expression=u8(k)-u4(k)-u5(k)+u8(k)/u1(k)*u6(k)-u7(k)/14*Math.pow(10,-2)*u7(k)+u6(k)/u3(k)*u6(k)/u1(k)+u7(k); Java Expression: getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/14*Math.pow(10,-2)*getVariable(7,k)+getVariable(6,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)+getVariable(7,k)
Aug 31, 2024 3:07:10 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 5.053992813963309 -->> Avg.: 5.101116181404509 -->> Std. Dev.: 0.08032061405108838
Aug 31, 2024 3:10:34 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 5.053992813963309 -->> Avg.: 5.062611418296405 -->> Std. Dev.: 0.03050306176391556
Aug 31, 2024 3:13:58 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 5.053992813963309 -->> Avg.: 5.05399281396331 -->> Std. Dev.: 1.3240391643147953E-15

Execution time: 1896.819 seconds.



@@;getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/14*Math.pow(10,-2)*getVariable(7,k)+getVariable(6,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)+getVariable(7,k)



Run #7
========
Aug 31, 2024 3:14:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=19.40323304641487; Expression=u9(k)+u1(k)-u6(k); Java Expression: getVariable(9,k)+getVariable(1,k)-getVariable(6,k)
Aug 31, 2024 3:14:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.33044890992052; Expression=97*Math.pow(10,-5)+u5(k); Java Expression: 97*Math.pow(10,-5)+getVariable(5,k)
Aug 31, 2024 3:14:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.237621322506278; Expression=68*Math.pow(10,-6)-90*Math.pow(10,-2)/u8(k)-u9(k)/u2(k)+u5(k); Java Expression: 68*Math.pow(10,-6)-90*Math.pow(10,-2)/getVariable(8,k)-getVariable(9,k)/getVariable(2,k)+getVariable(5,k)
Aug 31, 2024 3:14:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u8(k)+u5(k); Java Expression: getVariable(8,k)+getVariable(5,k)
Aug 31, 2024 3:14:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.077427487837859; Expression=u7(k)-u4(k)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)
Aug 31, 2024 3:14:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.058143099562467; Expression=u7(k)-u4(k)-u5(k)-u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(8,k)
Aug 31, 2024 3:14:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.054198163309852; Expression=u7(k)-u4(k)-11*Math.pow(10,-2)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-11*Math.pow(10,-2)-getVariable(5,k)
Aug 31, 2024 3:14:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9494810938568605; Expression=u7(k)-u4(k)-84*Math.pow(10,-2)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-84*Math.pow(10,-2)-getVariable(5,k)
Aug 31, 2024 3:14:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.933466960968021; Expression=u7(k)-u4(k)-11*Math.pow(10,-1)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-11*Math.pow(10,-1)-getVariable(5,k)
Aug 31, 2024 3:14:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.930332178745148; Expression=u7(k)-u4(k)-12*Math.pow(10,-1)-u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-12*Math.pow(10,-1)-getVariable(5,k)
Aug 31, 2024 3:14:43 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9293060760545915; Expression=u7(k)-u4(k)-u5(k)-u8(k)/u8(k)*u3(k)*u1(k)/u3(k)/u7(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(8,k)/getVariable(8,k)*getVariable(3,k)*getVariable(1,k)/getVariable(3,k)/getVariable(7,k)
Aug 31, 2024 3:14:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.881133703141468; Expression=u7(k)-u4(k)-u5(k)-u8(k)/u8(k)*u3(k)*u1(k)/u3(k)/u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(8,k)/getVariable(8,k)*getVariable(3,k)*getVariable(1,k)/getVariable(3,k)/getVariable(5,k)
Aug 31, 2024 3:14:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.7434007915305765; Expression=u7(k)-u4(k)-u5(k)-u8(k)/u8(k)*u1(k)*u1(k)/u3(k)/u6(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(8,k)/getVariable(8,k)*getVariable(1,k)*getVariable(1,k)/getVariable(3,k)/getVariable(6,k)
Aug 31, 2024 3:15:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.721870376125709; Expression=u7(k)-u4(k)-u5(k)-u8(k)/u8(k)*u1(k)*u1(k)/u4(k)/u6(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(8,k)/getVariable(8,k)*getVariable(1,k)*getVariable(1,k)/getVariable(4,k)/getVariable(6,k)
Aug 31, 2024 3:15:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.666469968155823; Expression=u7(k)-u4(k)-u5(k)-u8(k)/u8(k)*u1(k)*u1(k)/u9(k)/u6(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(8,k)/getVariable(8,k)*getVariable(1,k)*getVariable(1,k)/getVariable(9,k)/getVariable(6,k)+getVariable(8,k)
Aug 31, 2024 3:15:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.661624529571306; Expression=u7(k)-u4(k)-u5(k)-u8(k)/u8(k)*u1(k)*u1(k)/u9(k)/u6(k)/u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(8,k)/getVariable(8,k)*getVariable(1,k)*getVariable(1,k)/getVariable(9,k)/getVariable(6,k)/getVariable(8,k)
Aug 31, 2024 3:15:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.599475024537592; Expression=u7(k)-u4(k)-u5(k)-u8(k)/u8(k)-u1(k)*u1(k)/u9(k)/u6(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(8,k)/getVariable(8,k)-getVariable(1,k)*getVariable(1,k)/getVariable(9,k)/getVariable(6,k)+getVariable(8,k)
Aug 31, 2024 3:16:26 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.599475024537592 -->> Avg.: 756932.8171556622 -->> Std. Dev.: 4200560.499387598
Aug 31, 2024 3:16:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.589695615050824; Expression=u7(k)-u4(k)-u5(k)-u5(k)/u4(k)-u1(k)*u1(k)/u9(k)/u6(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(5,k)/getVariable(4,k)-getVariable(1,k)*getVariable(1,k)/getVariable(9,k)/getVariable(6,k)+getVariable(8,k)
Aug 31, 2024 3:16:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.586164092888467; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u2(k)-u1(k)*u1(k)/u9(k)/u6(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(2,k)-getVariable(1,k)*getVariable(1,k)/getVariable(9,k)/getVariable(6,k)+getVariable(8,k)
Aug 31, 2024 3:17:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.583718924389838; Expression=u7(k)-u4(k)-u5(k)-u7(k)/u6(k)-u1(k)*u1(k)/u9(k)/u6(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(7,k)/getVariable(6,k)-getVariable(1,k)*getVariable(1,k)/getVariable(9,k)/getVariable(6,k)+getVariable(8,k)
Aug 31, 2024 3:17:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.5717191541757485; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u6(k)-u1(k)*u1(k)/u9(k)/u6(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(6,k)-getVariable(1,k)*getVariable(1,k)/getVariable(9,k)/getVariable(6,k)+getVariable(8,k)
Aug 31, 2024 3:17:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.557884848894594; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u2(k)-u1(k)*u1(k)/u9(k)/u6(k)+u8(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(2,k)-getVariable(1,k)*getVariable(1,k)/getVariable(9,k)/getVariable(6,k)+getVariable(8,k)*getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 3:17:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.538728294737216; Expression=u7(k)-u4(k)-u5(k)-u7(k)/u2(k)-u1(k)*u1(k)/u9(k)/u6(k)+u8(k)*u6(k)/u1(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(7,k)/getVariable(2,k)-getVariable(1,k)*getVariable(1,k)/getVariable(9,k)/getVariable(6,k)+getVariable(8,k)*getVariable(6,k)/getVariable(1,k)
Aug 31, 2024 3:17:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.449739439002954; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u2(k)*u1(k)*u1(k)/u9(k)/u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(2,k)*getVariable(1,k)*getVariable(1,k)/getVariable(9,k)/getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 3:17:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.411286964101692; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u2(k)*u1(k)*u1(k)/u9(k)/u5(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(2,k)*getVariable(1,k)*getVariable(1,k)/getVariable(9,k)/getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 3:18:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.38967297602862; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u2(k)*u1(k)*u1(k)/u3(k)/u5(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(2,k)*getVariable(1,k)*getVariable(1,k)/getVariable(3,k)/getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 3:18:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.34776177623049; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u2(k)*u1(k)*u1(k)/u5(k)/u5(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(2,k)*getVariable(1,k)*getVariable(1,k)/getVariable(5,k)/getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 3:18:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.343601353869617; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u2(k)*u1(k)*u1(k)/u5(k)/u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(2,k)*getVariable(1,k)*getVariable(1,k)/getVariable(5,k)/getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 3:18:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.308640216188777; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u2(k)*u7(k)*u1(k)/u5(k)/u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(2,k)*getVariable(7,k)*getVariable(1,k)/getVariable(5,k)/getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 3:18:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.306759518979685; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u2(k)*u7(k)*u1(k)/u4(k)/u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(2,k)*getVariable(7,k)*getVariable(1,k)/getVariable(4,k)/getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 3:19:08 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 5.306759518979685 -->> Avg.: 838.8109194132214 -->> Std. Dev.: 2268.0388093640618
Aug 31, 2024 3:19:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.26368194335379; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u2(k)*u7(k)*u1(k)/u5(k)/u4(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(2,k)*getVariable(7,k)*getVariable(1,k)/getVariable(5,k)/getVariable(4,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:19:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.155102488401562; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u2(k)*u7(k)*u7(k)/u5(k)/u4(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(2,k)*getVariable(7,k)*getVariable(7,k)/getVariable(5,k)/getVariable(4,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:21:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.135533551939627; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u2(k)-u7(k)*u7(k)/u5(k)/u4(k)+59*Math.pow(10,-1)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(2,k)-getVariable(7,k)*getVariable(7,k)/getVariable(5,k)/getVariable(4,k)+59*Math.pow(10,-1)*getVariable(8,k)
Aug 31, 2024 3:21:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.111354286816255; Expression=u7(k)-u4(k)-u5(k)-u7(k)/u2(k)-u7(k)*u7(k)/u5(k)/u4(k)+59*Math.pow(10,-1)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(7,k)/getVariable(2,k)-getVariable(7,k)*getVariable(7,k)/getVariable(5,k)/getVariable(4,k)+59*Math.pow(10,-1)*getVariable(8,k)
Aug 31, 2024 3:21:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.054655251593013; Expression=u7(k)-u4(k)-u5(k)-u1(k)/u2(k)-u7(k)*u7(k)/u5(k)/u4(k)+55*Math.pow(10,-1)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(1,k)/getVariable(2,k)-getVariable(7,k)*getVariable(7,k)/getVariable(5,k)/getVariable(4,k)+55*Math.pow(10,-1)*getVariable(8,k)
Aug 31, 2024 3:21:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.0505455049045525; Expression=u7(k)-u4(k)-u5(k)-u7(k)/u2(k)-u7(k)*u7(k)/u5(k)/u4(k)+55*Math.pow(10,-1)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)-getVariable(7,k)/getVariable(2,k)-getVariable(7,k)*getVariable(7,k)/getVariable(5,k)/getVariable(4,k)+55*Math.pow(10,-1)*getVariable(8,k)
Aug 31, 2024 3:21:45 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.685340286624738; Expression=u7(k)-u4(k)-u5(k)*u1(k)/u6(k)-u7(k)*u7(k)/u5(k)/u4(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(1,k)/getVariable(6,k)-getVariable(7,k)*getVariable(7,k)/getVariable(5,k)/getVariable(4,k)+getVariable(8,k)
Aug 31, 2024 3:21:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.649279112236783; Expression=u7(k)-u4(k)-u5(k)*u1(k)/u6(k)-u7(k)*u7(k)/u5(k)/u4(k)+u8(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(1,k)/getVariable(6,k)-getVariable(7,k)*getVariable(7,k)/getVariable(5,k)/getVariable(4,k)+getVariable(8,k)*getVariable(8,k)
Aug 31, 2024 3:22:04 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 4.649279112236783 -->> Avg.: 35.308647697554164 -->> Std. Dev.: 56.847116997431435
Aug 31, 2024 3:22:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.626795342404376; Expression=u7(k)-u4(k)-u5(k)*u1(k)/u6(k)-u7(k)*u7(k)/u5(k)/u4(k)+17*Math.pow(10,-1)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(1,k)/getVariable(6,k)-getVariable(7,k)*getVariable(7,k)/getVariable(5,k)/getVariable(4,k)+17*Math.pow(10,-1)*getVariable(8,k)
Aug 31, 2024 3:22:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.6179968500714565; Expression=u7(k)-u4(k)-u5(k)*u1(k)/u6(k)-u7(k)*u7(k)/u5(k)/u4(k)+59*Math.pow(10,-2)*u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(1,k)/getVariable(6,k)-getVariable(7,k)*getVariable(7,k)/getVariable(5,k)/getVariable(4,k)+59*Math.pow(10,-2)*getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 3:23:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.616539679451662; Expression=u7(k)-u4(k)-u5(k)*u1(k)/u6(k)-u7(k)*u7(k)/u5(k)/u4(k)+45*Math.pow(10,-2)*u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(1,k)/getVariable(6,k)-getVariable(7,k)*getVariable(7,k)/getVariable(5,k)/getVariable(4,k)+45*Math.pow(10,-2)*getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 3:23:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.6164658351531; Expression=u7(k)-u4(k)-u5(k)*u1(k)/u6(k)-u7(k)*u7(k)/u5(k)/u4(k)+55*Math.pow(10,-2)*u8(k)+u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(1,k)/getVariable(6,k)-getVariable(7,k)*getVariable(7,k)/getVariable(5,k)/getVariable(4,k)+55*Math.pow(10,-2)*getVariable(8,k)+getVariable(8,k)
Aug 31, 2024 3:23:21 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.609267499243379; Expression=u7(k)-u4(k)-u5(k)*u1(k)/u6(k)-u7(k)*u7(k)/u5(k)/u4(k)+55*Math.pow(10,-3)*u5(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(1,k)/getVariable(6,k)-getVariable(7,k)*getVariable(7,k)/getVariable(5,k)/getVariable(4,k)+55*Math.pow(10,-3)*getVariable(5,k)*getVariable(8,k)
Aug 31, 2024 3:23:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.607430684895907; Expression=u7(k)-u4(k)-u5(k)*u1(k)/u6(k)-u7(k)*u7(k)/u5(k)/u4(k)+u8(k)*u8(k)*u1(k)/u6(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(1,k)/getVariable(6,k)-getVariable(7,k)*getVariable(7,k)/getVariable(5,k)/getVariable(4,k)+getVariable(8,k)*getVariable(8,k)*getVariable(1,k)/getVariable(6,k)
Aug 31, 2024 3:23:54 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.589997708644421; Expression=u7(k)-u4(k)-u5(k)*u1(k)/u6(k)-u7(k)*u7(k)/u5(k)/u4(k)+45*Math.pow(10,-3)*u5(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(1,k)/getVariable(6,k)-getVariable(7,k)*getVariable(7,k)/getVariable(5,k)/getVariable(4,k)+45*Math.pow(10,-3)*getVariable(5,k)*getVariable(8,k)
Aug 31, 2024 3:24:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.589220968808895; Expression=u7(k)-u4(k)-u5(k)*u1(k)/u6(k)-u7(k)*u7(k)/u5(k)/u4(k)+46*Math.pow(10,-3)*u5(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(1,k)/getVariable(6,k)-getVariable(7,k)*getVariable(7,k)/getVariable(5,k)/getVariable(4,k)+46*Math.pow(10,-3)*getVariable(5,k)*getVariable(8,k)
Aug 31, 2024 3:25:11 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 4.589220968808895 -->> Avg.: 11.00942708745346 -->> Std. Dev.: 11.582877663668496
Aug 31, 2024 3:28:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.589045972436244; Expression=u7(k)-u4(k)-u5(k)*u1(k)/u6(k)-u7(k)*u7(k)/u5(k)/u4(k)+47*Math.pow(10,-3)*u5(k)*u8(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(1,k)/getVariable(6,k)-getVariable(7,k)*getVariable(7,k)/getVariable(5,k)/getVariable(4,k)+47*Math.pow(10,-3)*getVariable(5,k)*getVariable(8,k)
Aug 31, 2024 3:28:22 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.589045972436244 -->> Avg.: 5.328778146002815 -->> Std. Dev.: 1.3430369766212455
Aug 31, 2024 3:31:37 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.589045972436244 -->> Avg.: 4.893271406460302 -->> Std. Dev.: 0.3803453739464633
Aug 31, 2024 3:35:07 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.589045972436244 -->> Avg.: 4.715601483336097 -->> Std. Dev.: 0.23877418895371202
Aug 31, 2024 3:38:32 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.589045972436244 -->> Avg.: 4.598575593201642 -->> Std. Dev.: 0.04149113508837168
Aug 31, 2024 3:41:59 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.589045972436244 -->> Avg.: 4.589081176784648 -->> Std. Dev.: 7.018616507622738E-5
Aug 31, 2024 3:44:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.552055384919883; Expression=u7(k)-u4(k)-u5(k)*u1(k)/u6(k)-u7(k)*u7(k)*47*Math.pow(10,-3)/u5(k)+74*Math.pow(10,-4)*u4(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(1,k)/getVariable(6,k)-getVariable(7,k)*getVariable(7,k)*47*Math.pow(10,-3)/getVariable(5,k)+74*Math.pow(10,-4)*getVariable(4,k)*getVariable(5,k)
Aug 31, 2024 3:45:16 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.540355086712902; Expression=u7(k)-u4(k)-u5(k)*u1(k)/u6(k)-u7(k)*u7(k)*47*Math.pow(10,-3)/u5(k)+72*Math.pow(10,-4)*u4(k)*u5(k); Java Expression: getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(1,k)/getVariable(6,k)-getVariable(7,k)*getVariable(7,k)*47*Math.pow(10,-3)/getVariable(5,k)+72*Math.pow(10,-4)*getVariable(4,k)*getVariable(5,k)
Aug 31, 2024 3:45:18 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.540355086712902 -->> Avg.: 4.588276975700097 -->> Std. Dev.: 0.0053363422170405045

Execution time: 1880.097 seconds.



@@;getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(1,k)/getVariable(6,k)-getVariable(7,k)*getVariable(7,k)*47*Math.pow(10,-3)/getVariable(5,k)+72*Math.pow(10,-4)*getVariable(4,k)*getVariable(5,k)



Run #8
========
Aug 31, 2024 3:45:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=2999989.887037062; Expression=5*Math.pow(10,-5)/u3(k)/u9(k)+u3(k)-u6(k)+3*Math.pow(10,+6)+u1(k); Java Expression: 5*Math.pow(10,-5)/getVariable(3,k)/getVariable(9,k)+getVariable(3,k)-getVariable(6,k)+3*Math.pow(10,+6)+getVariable(1,k)
Aug 31, 2024 3:45:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=25.770273330195916; Expression=u4(k)*u8(k); Java Expression: getVariable(4,k)*getVariable(8,k)
Aug 31, 2024 3:45:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=19.97040333330165; Expression=85*Math.pow(10,-4)-u1(k)+u6(k); Java Expression: 85*Math.pow(10,-4)-getVariable(1,k)+getVariable(6,k)
Aug 31, 2024 3:45:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=19.309365199663485; Expression=97*Math.pow(10,-3)*u2(k); Java Expression: 97*Math.pow(10,-3)*getVariable(2,k)
Aug 31, 2024 3:45:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=12.307331912222416; Expression=u3(k)-u2(k)/u7(k)/u5(k)/u9(k); Java Expression: getVariable(3,k)-getVariable(2,k)/getVariable(7,k)/getVariable(5,k)/getVariable(9,k)
Aug 31, 2024 3:45:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.90715724655712; Expression=55*Math.pow(10,-8)/u4(k)/u7(k)-u8(k)+u5(k)/3*Math.pow(10,-5)+u5(k); Java Expression: 55*Math.pow(10,-8)/getVariable(4,k)/getVariable(7,k)-getVariable(8,k)+getVariable(5,k)/3*Math.pow(10,-5)+getVariable(5,k)
Aug 31, 2024 3:45:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.330469845788924; Expression=66*Math.pow(10,-6)+u5(k); Java Expression: 66*Math.pow(10,-6)+getVariable(5,k)
Aug 31, 2024 3:45:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.328233005959216; Expression=41*Math.pow(10,+3)/2*Math.pow(10,-5)-36*Math.pow(10,-9)*u3(k)+u5(k); Java Expression: 41*Math.pow(10,+3)/2*Math.pow(10,-5)-36*Math.pow(10,-9)*getVariable(3,k)+getVariable(5,k)
Aug 31, 2024 3:45:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.059731940563548; Expression=u8(k)+u5(k)+u6(k)/u4(k)/u7(k)/u9(k)+u8(k); Java Expression: getVariable(8,k)+getVariable(5,k)+getVariable(6,k)/getVariable(4,k)/getVariable(7,k)/getVariable(9,k)+getVariable(8,k)
Aug 31, 2024 3:45:31 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.037566583667516; Expression=u5(k)+u8(k); Java Expression: getVariable(5,k)+getVariable(8,k)
Aug 31, 2024 3:45:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.884720417254668; Expression=28*Math.pow(10,-2)*u7(k); Java Expression: 28*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 3:45:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.928729068427039; Expression=69*Math.pow(10,+2)/u3(k)/u2(k)*32*Math.pow(10,-2)*u7(k); Java Expression: 69*Math.pow(10,+2)/getVariable(3,k)/getVariable(2,k)*32*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 3:45:47 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.639993455019591; Expression=69*Math.pow(10,-2)/u3(k)/u2(k)/32*Math.pow(10,+5)*u7(k); Java Expression: 69*Math.pow(10,-2)/getVariable(3,k)/getVariable(2,k)/32*Math.pow(10,+5)*getVariable(7,k)
Aug 31, 2024 3:45:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.6399934550195905; Expression=69*Math.pow(10,-6)/u3(k)/u2(k)/32*Math.pow(10,+9)*u7(k); Java Expression: 69*Math.pow(10,-6)/getVariable(3,k)/getVariable(2,k)/32*Math.pow(10,+9)*getVariable(7,k)
Aug 31, 2024 3:46:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.452423039352854; Expression=69*Math.pow(10,-2)/u3(k)/u2(k)/34*Math.pow(10,+5)*u7(k); Java Expression: 69*Math.pow(10,-2)/getVariable(3,k)/getVariable(2,k)/34*Math.pow(10,+5)*getVariable(7,k)
Aug 31, 2024 3:46:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.430677697839858; Expression=81*Math.pow(10,-2)/u3(k)/u2(k)/39*Math.pow(10,+5)*u7(k); Java Expression: 81*Math.pow(10,-2)/getVariable(3,k)/getVariable(2,k)/39*Math.pow(10,+5)*getVariable(7,k)
Aug 31, 2024 3:46:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.430677697839856; Expression=81*Math.pow(10,-1)/u3(k)/u2(k)/39*Math.pow(10,+4)*u7(k); Java Expression: 81*Math.pow(10,-1)/getVariable(3,k)/getVariable(2,k)/39*Math.pow(10,+4)*getVariable(7,k)
Aug 31, 2024 3:46:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.429266953041977; Expression=41*Math.pow(10,-3)/u3(k)/u2(k)/2*Math.pow(10,+5)*u7(k); Java Expression: 41*Math.pow(10,-3)/getVariable(3,k)/getVariable(2,k)/2*Math.pow(10,+5)*getVariable(7,k)
Aug 31, 2024 3:46:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.427730789674366; Expression=28*Math.pow(10,+2)/u3(k)/u2(k)*74*Math.pow(10,-2)*u7(k); Java Expression: 28*Math.pow(10,+2)/getVariable(3,k)/getVariable(2,k)*74*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 3:47:05 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.427730789674365; Expression=28*Math.pow(10,-3)/u3(k)/u2(k)*74*Math.pow(10,+3)*u7(k); Java Expression: 28*Math.pow(10,-3)/getVariable(3,k)/getVariable(2,k)*74*Math.pow(10,+3)*getVariable(7,k)
Aug 31, 2024 3:47:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.4259688510758775; Expression=39*Math.pow(10,-2)/u3(k)/u2(k)*53*Math.pow(10,+2)*u7(k); Java Expression: 39*Math.pow(10,-2)/getVariable(3,k)/getVariable(2,k)*53*Math.pow(10,+2)*getVariable(7,k)
Aug 31, 2024 3:47:50 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.4259688510758775 -->> Avg.: 426539.91693216603 -->> Std. Dev.: 1942795.2032304818
Aug 31, 2024 3:48:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.370212057451415; Expression=28*Math.pow(10,-3)/u3(k)/u2(k)*74*Math.pow(10,+3)*u7(k)-u5(k)/u8(k)/u9(k); Java Expression: 28*Math.pow(10,-3)/getVariable(3,k)/getVariable(2,k)*74*Math.pow(10,+3)*getVariable(7,k)-getVariable(5,k)/getVariable(8,k)/getVariable(9,k)
Aug 31, 2024 3:48:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.348905883050956; Expression=28*Math.pow(10,-3)/u3(k)/u2(k)*74*Math.pow(10,+3)*u7(k)-u4(k)/u8(k)/u9(k); Java Expression: 28*Math.pow(10,-3)/getVariable(3,k)/getVariable(2,k)*74*Math.pow(10,+3)*getVariable(7,k)-getVariable(4,k)/getVariable(8,k)/getVariable(9,k)
Aug 31, 2024 3:48:25 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.30244107775583; Expression=28*Math.pow(10,+3)/u3(k)/u2(k)*74*Math.pow(10,-3)*u7(k)-u2(k)/u8(k)/u6(k); Java Expression: 28*Math.pow(10,+3)/getVariable(3,k)/getVariable(2,k)*74*Math.pow(10,-3)*getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 3:48:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.302441077755828; Expression=28*Math.pow(10,+2)/u3(k)/u2(k)*74*Math.pow(10,-2)*u7(k)-u2(k)/u8(k)/u6(k); Java Expression: 28*Math.pow(10,+2)/getVariable(3,k)/getVariable(2,k)*74*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 3:48:36 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.2291352004961995; Expression=28*Math.pow(10,-3)/u3(k)/u2(k)*75*Math.pow(10,+3)*u7(k)-u2(k)/u8(k)/u6(k); Java Expression: 28*Math.pow(10,-3)/getVariable(3,k)/getVariable(2,k)*75*Math.pow(10,+3)*getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 3:48:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.170865316015253; Expression=28*Math.pow(10,-3)/u4(k)/u2(k)*74*Math.pow(10,+3)*u7(k)-u2(k)/u8(k)/u6(k); Java Expression: 28*Math.pow(10,-3)/getVariable(4,k)/getVariable(2,k)*74*Math.pow(10,+3)*getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 3:48:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.085510625170782; Expression=28*Math.pow(10,-9)/u4(k)/u2(k)*74*Math.pow(10,+9)*u7(k)-u2(k)/u8(k)/u3(k); Java Expression: 28*Math.pow(10,-9)/getVariable(4,k)/getVariable(2,k)*74*Math.pow(10,+9)*getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(3,k)
Aug 31, 2024 3:49:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.066975387563452; Expression=28*Math.pow(10,+9)/u4(k)/u2(k)*74*Math.pow(10,-9)*u7(k)-u2(k)/u8(k)/u5(k); Java Expression: 28*Math.pow(10,+9)/getVariable(4,k)/getVariable(2,k)*74*Math.pow(10,-9)*getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(5,k)
Aug 31, 2024 3:49:08 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.065095832492121; Expression=39*Math.pow(10,+2)/u4(k)/u2(k)*53*Math.pow(10,-2)*u7(k)-u2(k)/u8(k)/u4(k); Java Expression: 39*Math.pow(10,+2)/getVariable(4,k)/getVariable(2,k)*53*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(4,k)
Aug 31, 2024 3:49:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.019722314738371; Expression=28*Math.pow(10,-9)/u4(k)/u2(k)*75*Math.pow(10,+9)*u7(k)-u2(k)/u8(k)/u3(k); Java Expression: 28*Math.pow(10,-9)/getVariable(4,k)/getVariable(2,k)*75*Math.pow(10,+9)*getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(3,k)
Aug 31, 2024 3:49:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.941725637039273; Expression=28*Math.pow(10,+9)/u4(k)/u2(k)*75*Math.pow(10,-9)*u7(k)-u2(k)/u8(k)/u5(k); Java Expression: 28*Math.pow(10,+9)/getVariable(4,k)/getVariable(2,k)*75*Math.pow(10,-9)*getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(5,k)
Aug 31, 2024 3:49:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.89880171638044; Expression=69*Math.pow(10,+9)/u4(k)/u2(k)*32*Math.pow(10,-9)*u7(k)-u2(k)/u8(k)/u5(k); Java Expression: 69*Math.pow(10,+9)/getVariable(4,k)/getVariable(2,k)*32*Math.pow(10,-9)*getVariable(7,k)-getVariable(2,k)/getVariable(8,k)/getVariable(5,k)
Aug 31, 2024 3:49:41 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.833886723072776; Expression=28*Math.pow(10,-9)/u4(k)/u2(k)*u7(k)*74*Math.pow(10,+9)-u2(k)/u8(k)/u6(k)*u2(k)/u7(k); Java Expression: 28*Math.pow(10,-9)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*74*Math.pow(10,+9)-getVariable(2,k)/getVariable(8,k)/getVariable(6,k)*getVariable(2,k)/getVariable(7,k)
Aug 31, 2024 3:49:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.691208768646206; Expression=28*Math.pow(10,-9)/u4(k)/u2(k)*u7(k)*74*Math.pow(10,+9)-u2(k)/u8(k)/u6(k)*u2(k)/u1(k); Java Expression: 28*Math.pow(10,-9)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*74*Math.pow(10,+9)-getVariable(2,k)/getVariable(8,k)/getVariable(6,k)*getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:49:59 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.691208768646205; Expression=28*Math.pow(10,-2)/u4(k)/u2(k)*u7(k)*74*Math.pow(10,+2)-u2(k)/u8(k)/u6(k)*u2(k)/u1(k); Java Expression: 28*Math.pow(10,-2)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*74*Math.pow(10,+2)-getVariable(2,k)/getVariable(8,k)/getVariable(6,k)*getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:50:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.643019590734872; Expression=28*Math.pow(10,-2)/u4(k)/u2(k)*u7(k)*75*Math.pow(10,+2)-u2(k)/u8(k)/u6(k)*u2(k)/u1(k); Java Expression: 28*Math.pow(10,-2)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*75*Math.pow(10,+2)-getVariable(2,k)/getVariable(8,k)/getVariable(6,k)*getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:50:57 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 4.643019590734872 -->> Avg.: 668.6197596174212 -->> Std. Dev.: 1821.9341462501454
Aug 31, 2024 3:54:12 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 4.643019590734872 -->> Avg.: 28.95514105897851 -->> Std. Dev.: 40.49107058142324
Aug 31, 2024 3:54:15 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.60104178103142; Expression=28*Math.pow(10,-2)/u4(k)/u2(k)*u7(k)*77*Math.pow(10,+2)-u2(k)/u8(k)/u1(k)*u2(k)/u1(k); Java Expression: 28*Math.pow(10,-2)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*77*Math.pow(10,+2)-getVariable(2,k)/getVariable(8,k)/getVariable(1,k)*getVariable(2,k)/getVariable(1,k)
Aug 31, 2024 3:56:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.558895172362861; Expression=31*Math.pow(10,-2)/u4(k)/u2(k)*u7(k)*75*Math.pow(10,+2)-u2(k)/u8(k)/u1(k)*u2(k)/u4(k); Java Expression: 31*Math.pow(10,-2)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*75*Math.pow(10,+2)-getVariable(2,k)/getVariable(8,k)/getVariable(1,k)*getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:56:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.558895172362859; Expression=31*Math.pow(10,+2)/u4(k)/u2(k)*u7(k)*75*Math.pow(10,-2)-u2(k)/u8(k)/u1(k)*u2(k)/u4(k); Java Expression: 31*Math.pow(10,+2)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*75*Math.pow(10,-2)-getVariable(2,k)/getVariable(8,k)/getVariable(1,k)*getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:57:21 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 4.558895172362859 -->> Avg.: 10.327017092329648 -->> Std. Dev.: 10.733446651492194
Aug 31, 2024 3:58:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.5404103085875755; Expression=31*Math.pow(10,-2)/u4(k)/u2(k)*u7(k)*76*Math.pow(10,+2)-u2(k)/u8(k)/u1(k)*u2(k)/u4(k); Java Expression: 31*Math.pow(10,-2)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*76*Math.pow(10,+2)-getVariable(2,k)/getVariable(8,k)/getVariable(1,k)*getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:58:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.53943731377285; Expression=69*Math.pow(10,+2)/u4(k)/u2(k)*u7(k)*34*Math.pow(10,-2)-u2(k)/u8(k)/u1(k)*u2(k)/u4(k); Java Expression: 69*Math.pow(10,+2)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*34*Math.pow(10,-2)-getVariable(2,k)/getVariable(8,k)/getVariable(1,k)*getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:58:32 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.539437313772849; Expression=69*Math.pow(10,-2)/u4(k)/u2(k)*u7(k)*34*Math.pow(10,+2)-u2(k)/u8(k)/u1(k)*u2(k)/u4(k); Java Expression: 69*Math.pow(10,-2)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*34*Math.pow(10,+2)-getVariable(2,k)/getVariable(8,k)/getVariable(1,k)*getVariable(2,k)/getVariable(4,k)
Aug 31, 2024 3:58:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.525141995025668; Expression=31*Math.pow(10,+2)/u4(k)/u2(k)*u7(k)*75*Math.pow(10,-2)-u2(k)/u8(k)/u1(k)*66*Math.pow(10,+1)/u2(k); Java Expression: 31*Math.pow(10,+2)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*75*Math.pow(10,-2)-getVariable(2,k)/getVariable(8,k)/getVariable(1,k)*66*Math.pow(10,+1)/getVariable(2,k)
Aug 31, 2024 3:59:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.5155035152379; Expression=31*Math.pow(10,+2)/u4(k)/u2(k)*u7(k)*75*Math.pow(10,-2)-u2(k)/u8(k)/u1(k)*73*Math.pow(10,+1)/u2(k); Java Expression: 31*Math.pow(10,+2)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*75*Math.pow(10,-2)-getVariable(2,k)/getVariable(8,k)/getVariable(1,k)*73*Math.pow(10,+1)/getVariable(2,k)
Aug 31, 2024 3:59:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.510011938132079; Expression=31*Math.pow(10,+2)/u4(k)/u2(k)*u7(k)*75*Math.pow(10,-2)-u2(k)/u8(k)/u1(k)*72*Math.pow(10,+1)/u2(k); Java Expression: 31*Math.pow(10,+2)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*75*Math.pow(10,-2)-getVariable(2,k)/getVariable(8,k)/getVariable(1,k)*72*Math.pow(10,+1)/getVariable(2,k)
Aug 31, 2024 4:00:23 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.505895212392843; Expression=31*Math.pow(10,+2)/u4(k)/u2(k)*u7(k)*75*Math.pow(10,-2)-u2(k)/u8(k)/u1(k)*70*Math.pow(10,+1)/u2(k); Java Expression: 31*Math.pow(10,+2)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*75*Math.pow(10,-2)-getVariable(2,k)/getVariable(8,k)/getVariable(1,k)*70*Math.pow(10,+1)/getVariable(2,k)
Aug 31, 2024 4:00:34 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 4.505895212392843 -->> Avg.: 5.086038122935645 -->> Std. Dev.: 1.261620479692938
Aug 31, 2024 4:00:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.505895212392842; Expression=31*Math.pow(10,-2)/u4(k)/u2(k)*u7(k)*75*Math.pow(10,+2)-u2(k)/u8(k)/u1(k)*70*Math.pow(10,+1)/u2(k); Java Expression: 31*Math.pow(10,-2)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*75*Math.pow(10,+2)-getVariable(2,k)/getVariable(8,k)/getVariable(1,k)*70*Math.pow(10,+1)/getVariable(2,k)
Aug 31, 2024 4:00:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.488494373906168; Expression=31*Math.pow(10,+2)/u4(k)/u2(k)*u7(k)*75*Math.pow(10,-2)-u2(k)/u8(k)/u1(k)*14*Math.pow(10,+1)/u4(k); Java Expression: 31*Math.pow(10,+2)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*75*Math.pow(10,-2)-getVariable(2,k)/getVariable(8,k)/getVariable(1,k)*14*Math.pow(10,+1)/getVariable(4,k)
Aug 31, 2024 4:00:50 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.481707405575031; Expression=31*Math.pow(10,+2)/u4(k)/u2(k)*u7(k)*75*Math.pow(10,-2)-u2(k)/u8(k)/u1(k)*17*Math.pow(10,+1)/u4(k); Java Expression: 31*Math.pow(10,+2)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*75*Math.pow(10,-2)-getVariable(2,k)/getVariable(8,k)/getVariable(1,k)*17*Math.pow(10,+1)/getVariable(4,k)
Aug 31, 2024 4:01:12 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.438962143927672; Expression=69*Math.pow(10,+2)/u4(k)/u2(k)*u7(k)*34*Math.pow(10,-2)-u2(k)/u8(k)/u1(k)*16*Math.pow(10,+1)/u4(k); Java Expression: 69*Math.pow(10,+2)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*34*Math.pow(10,-2)-getVariable(2,k)/getVariable(8,k)/getVariable(1,k)*16*Math.pow(10,+1)/getVariable(4,k)
Aug 31, 2024 4:01:28 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.438962143927671; Expression=69*Math.pow(10,-2)/u4(k)/u2(k)*u7(k)*34*Math.pow(10,+2)-u2(k)/u8(k)/u1(k)*16*Math.pow(10,+1)/u4(k); Java Expression: 69*Math.pow(10,-2)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*34*Math.pow(10,+2)-getVariable(2,k)/getVariable(8,k)/getVariable(1,k)*16*Math.pow(10,+1)/getVariable(4,k)
Aug 31, 2024 4:01:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.436242488739725; Expression=31*Math.pow(10,+2)/u4(k)/u2(k)*u7(k)*75*Math.pow(10,-2)-u2(k)/u8(k)/u1(k)*16*Math.pow(10,+1)/u4(k); Java Expression: 31*Math.pow(10,+2)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*75*Math.pow(10,-2)-getVariable(2,k)/getVariable(8,k)/getVariable(1,k)*16*Math.pow(10,+1)/getVariable(4,k)
Aug 31, 2024 4:03:39 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 4.436242488739725 -->> Avg.: 4.664548324508508 -->> Std. Dev.: 0.26078617688904376
Aug 31, 2024 4:05:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.436242488739724; Expression=31*Math.pow(10,+5)/u4(k)/u2(k)*u7(k)*75*Math.pow(10,-5)-u2(k)/u8(k)/u1(k)*16*Math.pow(10,+1)/u4(k); Java Expression: 31*Math.pow(10,+5)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*75*Math.pow(10,-5)-getVariable(2,k)/getVariable(8,k)/getVariable(1,k)*16*Math.pow(10,+1)/getVariable(4,k)
Aug 31, 2024 4:06:46 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 4.436242488739724 -->> Avg.: 4.533242930245475 -->> Std. Dev.: 0.08206392459796238
Aug 31, 2024 4:09:56 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 4.436242488739724 -->> Avg.: 4.492856777512048 -->> Std. Dev.: 0.06771532547528271
Aug 31, 2024 4:13:07 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 4.436242488739724 -->> Avg.: 4.460674031333029 -->> Std. Dev.: 0.04232287561347991
Aug 31, 2024 4:14:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.422092606136743; Expression=31*Math.pow(10,+5)/u4(k)/u2(k)*u7(k)*75*Math.pow(10,-5)-u2(k)/u8(k)/u6(k)*19*Math.pow(10,+1)/u4(k); Java Expression: 31*Math.pow(10,+5)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*75*Math.pow(10,-5)-getVariable(2,k)/getVariable(8,k)/getVariable(6,k)*19*Math.pow(10,+1)/getVariable(4,k)
Aug 31, 2024 4:16:19 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 4.422092606136743 -->> Avg.: 4.438809064173809 -->> Std. Dev.: 0.01722761270438357

Execution time: 1859.638 seconds.



@@;31*Math.pow(10,+5)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*75*Math.pow(10,-5)-getVariable(2,k)/getVariable(8,k)/getVariable(6,k)*19*Math.pow(10,+1)/getVariable(4,k)



Run #9
========
Aug 31, 2024 4:16:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=157.13975815403174; Expression=54*Math.pow(10,+1)/u2(k)-u8(k)*u1(k); Java Expression: 54*Math.pow(10,+1)/getVariable(2,k)-getVariable(8,k)*getVariable(1,k)
Aug 31, 2024 4:16:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=33.41418600660889; Expression=u5(k)/u4(k); Java Expression: getVariable(5,k)/getVariable(4,k)
Aug 31, 2024 4:16:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=21.77003831797245; Expression=67*Math.pow(10,-1)/93*Math.pow(10,+6)/u2(k)/u5(k)-46*Math.pow(10,-4)/u7(k); Java Expression: 67*Math.pow(10,-1)/93*Math.pow(10,+6)/getVariable(2,k)/getVariable(5,k)-46*Math.pow(10,-4)/getVariable(7,k)
Aug 31, 2024 4:16:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=12.308426628235537; Expression=48*Math.pow(10,-6)+u3(k); Java Expression: 48*Math.pow(10,-6)+getVariable(3,k)
Aug 31, 2024 4:16:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=11.93849526090675; Expression=u3(k)-u8(k); Java Expression: getVariable(3,k)-getVariable(8,k)
Aug 31, 2024 4:16:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=10.619798274949689; Expression=57*Math.pow(10,-2)+u4(k); Java Expression: 57*Math.pow(10,-2)+getVariable(4,k)
Aug 31, 2024 4:16:29 AM data.NormalizedDataTable evaluate
INFO: Best FIT=8.32642627210244; Expression=u5(k)+u6(k)/u6(k)-u3(k)/u4(k)-u8(k)/u6(k); Java Expression: getVariable(5,k)+getVariable(6,k)/getVariable(6,k)-getVariable(3,k)/getVariable(4,k)-getVariable(8,k)/getVariable(6,k)
Aug 31, 2024 4:16:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.826617352510731; Expression=37*Math.pow(10,-2)*u6(k); Java Expression: 37*Math.pow(10,-2)*getVariable(6,k)
Aug 31, 2024 4:16:39 AM data.NormalizedDataTable evaluate
INFO: Best FIT=7.011279224818129; Expression=30*Math.pow(10,-2)*u7(k); Java Expression: 30*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 4:17:00 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.780883602472543; Expression=31*Math.pow(10,-2)*u7(k); Java Expression: 31*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 4:17:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.709785324194373; Expression=32*Math.pow(10,-2)*u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)
Aug 31, 2024 4:17:17 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.708363857472823; Expression=32*Math.pow(10,-2)*u7(k)-u3(k)/u4(k)/u5(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(3,k)/getVariable(4,k)/getVariable(5,k)
Aug 31, 2024 4:17:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.707764937242012; Expression=32*Math.pow(10,-2)*u7(k)-u2(k)/u7(k)/u7(k); Java Expression: 32*Math.pow(10,-2)*getVariable(7,k)-getVariable(2,k)/getVariable(7,k)/getVariable(7,k)
Aug 31, 2024 4:17:20 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.13061339280598; Expression=43*Math.pow(10,-4)-u7(k)+87*Math.pow(10,-8)-u3(k)-u5(k)+u7(k)+u7(k); Java Expression: 43*Math.pow(10,-4)-getVariable(7,k)+87*Math.pow(10,-8)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(7,k)
Aug 31, 2024 4:17:24 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.034970142443726; Expression=7*Math.pow(10,-2)-u7(k)+14*Math.pow(10,-1)-u3(k)-u5(k)+u7(k)+u7(k); Java Expression: 7*Math.pow(10,-2)-getVariable(7,k)+14*Math.pow(10,-1)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(7,k)
Aug 31, 2024 4:17:30 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.031478734872283; Expression=7*Math.pow(10,-8)-u7(k)+14*Math.pow(10,-1)-u3(k)-u5(k)+u7(k)+u7(k); Java Expression: 7*Math.pow(10,-8)-getVariable(7,k)+14*Math.pow(10,-1)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(7,k)
Aug 31, 2024 4:17:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=6.027146609624006; Expression=6*Math.pow(10,-1)-u7(k)+67*Math.pow(10,-2)-u3(k)-u5(k)+u7(k)+u7(k); Java Expression: 6*Math.pow(10,-1)-getVariable(7,k)+67*Math.pow(10,-2)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(7,k)
Aug 31, 2024 4:17:46 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.996596554446217; Expression=6*Math.pow(10,-2)-u7(k)/67*Math.pow(10,-9)-u3(k)-u5(k)+u7(k)+u8(k); Java Expression: 6*Math.pow(10,-2)-getVariable(7,k)/67*Math.pow(10,-9)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:17:48 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.996596554436303; Expression=6*Math.pow(10,-2)-u7(k)/64*Math.pow(10,-9)-u3(k)-u5(k)+u7(k)+u8(k); Java Expression: 6*Math.pow(10,-2)-getVariable(7,k)/64*Math.pow(10,-9)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:17:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.996385155226279; Expression=6*Math.pow(10,-2)-u7(k)/67*Math.pow(10,-3)-u3(k)-u5(k)+u7(k)+u8(k); Java Expression: 6*Math.pow(10,-2)-getVariable(7,k)/67*Math.pow(10,-3)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:17:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.992389335414212; Expression=6*Math.pow(10,-6)-u7(k)/67*Math.pow(10,-8)-u3(k)-u5(k)+u7(k)+u8(k); Java Expression: 6*Math.pow(10,-6)-getVariable(7,k)/67*Math.pow(10,-8)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:17:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.990487283264216; Expression=6*Math.pow(10,-3)-u7(k)/57*Math.pow(10,-2)-u3(k)-u5(k)+u7(k)+u8(k); Java Expression: 6*Math.pow(10,-3)-getVariable(7,k)/57*Math.pow(10,-2)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:17:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.990358362721173; Expression=6*Math.pow(10,-6)-u7(k)/64*Math.pow(10,-2)-u3(k)-u5(k)+u7(k)+u8(k); Java Expression: 6*Math.pow(10,-6)-getVariable(7,k)/64*Math.pow(10,-2)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:17:58 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.972149885591418; Expression=6*Math.pow(10,-8)-u7(k)/57*Math.pow(10,-1)-u3(k)-u5(k)+u7(k)+u8(k); Java Expression: 6*Math.pow(10,-8)-getVariable(7,k)/57*Math.pow(10,-1)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:18:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.9455666527489575; Expression=7*Math.pow(10,-8)-u7(k)/14*Math.pow(10,-1)-u3(k)-u5(k)+u7(k)+u8(k); Java Expression: 7*Math.pow(10,-8)-getVariable(7,k)/14*Math.pow(10,-1)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:18:11 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.945566611994436; Expression=75*Math.pow(10,-8)-u7(k)/14*Math.pow(10,-1)-u3(k)-u5(k)+u7(k)+u8(k); Java Expression: 75*Math.pow(10,-8)-getVariable(7,k)/14*Math.pow(10,-1)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:18:14 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.941782200936366; Expression=7*Math.pow(10,-2)-u7(k)/14*Math.pow(10,-1)-u3(k)-u5(k)+u7(k)+u8(k); Java Expression: 7*Math.pow(10,-2)-getVariable(7,k)/14*Math.pow(10,-1)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:18:22 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.934974320582823; Expression=39*Math.pow(10,-2)-u7(k)/14*Math.pow(10,-1)-u3(k)-u5(k)+u7(k)+u8(k); Java Expression: 39*Math.pow(10,-2)-getVariable(7,k)/14*Math.pow(10,-1)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:18:33 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.934937286883293; Expression=33*Math.pow(10,-2)-u7(k)/14*Math.pow(10,-1)-u3(k)-u5(k)+u7(k)+u8(k); Java Expression: 33*Math.pow(10,-2)-getVariable(7,k)/14*Math.pow(10,-1)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:18:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.925045543598663; Expression=7*Math.pow(10,-2)-u1(k)/14*Math.pow(10,-1)-u3(k)-u5(k)+u7(k)+u8(k); Java Expression: 7*Math.pow(10,-2)-getVariable(1,k)/14*Math.pow(10,-1)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:18:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.92471277488949; Expression=9*Math.pow(10,-2)-u1(k)/14*Math.pow(10,-1)-u3(k)-u5(k)+u7(k)+u8(k); Java Expression: 9*Math.pow(10,-2)-getVariable(1,k)/14*Math.pow(10,-1)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:18:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.901195020513661; Expression=30*Math.pow(10,-2)-u1(k)/5*Math.pow(10,-1)-u3(k)-u5(k)+u7(k)+u8(k); Java Expression: 30*Math.pow(10,-2)-getVariable(1,k)/5*Math.pow(10,-1)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:18:44 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.847774309657565; Expression=77*Math.pow(10,-2)-u1(k)/5*Math.pow(10,-1)-u3(k)-u5(k)+u7(k)+u8(k); Java Expression: 77*Math.pow(10,-2)-getVariable(1,k)/5*Math.pow(10,-1)-getVariable(3,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:18:46 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 10% performed ... -- Fitness info -->> Best: 5.847774309657565 -->> Avg.: 2087036.3439980522 -->> Std. Dev.: 9477728.75721064
Aug 31, 2024 4:18:49 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.709256039510313; Expression=6*Math.pow(10,-3)-u7(k)/3*Math.pow(10,-1)-u4(k)-u5(k)+u7(k)+u8(k); Java Expression: 6*Math.pow(10,-3)-getVariable(7,k)/3*Math.pow(10,-1)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:18:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.70366108872253; Expression=6*Math.pow(10,-2)-u7(k)/3*Math.pow(10,-1)-u4(k)-u5(k)+u7(k)+u8(k); Java Expression: 6*Math.pow(10,-2)-getVariable(7,k)/3*Math.pow(10,-1)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:18:57 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.702196716674436; Expression=75*Math.pow(10,-3)-u7(k)/3*Math.pow(10,-1)-u4(k)-u5(k)+u7(k)+u8(k); Java Expression: 75*Math.pow(10,-3)-getVariable(7,k)/3*Math.pow(10,-1)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:19:01 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.701147687509284; Expression=86*Math.pow(10,-3)-u7(k)/3*Math.pow(10,-1)-u4(k)-u5(k)+u7(k)+u8(k); Java Expression: 86*Math.pow(10,-3)-getVariable(7,k)/3*Math.pow(10,-1)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:19:02 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.675734553186337; Expression=6*Math.pow(10,-1)-u7(k)/3*Math.pow(10,-1)-u4(k)-u5(k)+u7(k)+u8(k); Java Expression: 6*Math.pow(10,-1)-getVariable(7,k)/3*Math.pow(10,-1)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:19:03 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.649981564549349; Expression=6*Math.pow(10,-5)-u1(k)/3*Math.pow(10,-1)-u4(k)-u5(k)+u7(k)+u8(k); Java Expression: 6*Math.pow(10,-5)-getVariable(1,k)/3*Math.pow(10,-1)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:19:04 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.557844111294653; Expression=64*Math.pow(10,-1)-u7(k)/1*Math.pow(10,-1)-u4(k)-u5(k)+u7(k)+u8(k); Java Expression: 64*Math.pow(10,-1)-getVariable(7,k)/1*Math.pow(10,-1)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:19:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.44336841279546; Expression=80*Math.pow(10,-1)-u7(k)/1*Math.pow(10,-1)-u4(k)-u5(k)+u7(k)+u8(k); Java Expression: 80*Math.pow(10,-1)-getVariable(7,k)/1*Math.pow(10,-1)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:19:35 AM data.NormalizedDataTable evaluate
INFO: Best FIT=5.43610473624579; Expression=73*Math.pow(10,-1)-u7(k)/1*Math.pow(10,-1)-u4(k)-u5(k)+u7(k)+u8(k); Java Expression: 73*Math.pow(10,-1)-getVariable(7,k)/1*Math.pow(10,-1)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)+getVariable(8,k)
Aug 31, 2024 4:19:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.408210379650241; Expression=32*Math.pow(10,-8)+u7(k)/25*Math.pow(10,+1)-u3(k)*u5(k)/u7(k)/u8(k); Java Expression: 32*Math.pow(10,-8)+getVariable(7,k)/25*Math.pow(10,+1)-getVariable(3,k)*getVariable(5,k)/getVariable(7,k)/getVariable(8,k)
Aug 31, 2024 4:19:37 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.408144255332304; Expression=32*Math.pow(10,-5)+u7(k)/25*Math.pow(10,+1)-u3(k)*u5(k)/u7(k)/u8(k); Java Expression: 32*Math.pow(10,-5)+getVariable(7,k)/25*Math.pow(10,+1)-getVariable(3,k)*getVariable(5,k)/getVariable(7,k)/getVariable(8,k)
Aug 31, 2024 4:19:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.353281272397241; Expression=32*Math.pow(10,-2)+u7(k)/25*Math.pow(10,+1)-u3(k)*u5(k)/u7(k)/u8(k); Java Expression: 32*Math.pow(10,-2)+getVariable(7,k)/25*Math.pow(10,+1)-getVariable(3,k)*getVariable(5,k)/getVariable(7,k)/getVariable(8,k)
Aug 31, 2024 4:19:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.331329907127775; Expression=32*Math.pow(10,-5)+u7(k)/25*Math.pow(10,+1)-u3(k)*u5(k)/u6(k)/u8(k); Java Expression: 32*Math.pow(10,-5)+getVariable(7,k)/25*Math.pow(10,+1)-getVariable(3,k)*getVariable(5,k)/getVariable(6,k)/getVariable(8,k)
Aug 31, 2024 4:19:53 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.182653955639311; Expression=32*Math.pow(10,-1)+u7(k)/25*Math.pow(10,+1)-u3(k)*u3(k)/u7(k)/u8(k); Java Expression: 32*Math.pow(10,-1)+getVariable(7,k)/25*Math.pow(10,+1)-getVariable(3,k)*getVariable(3,k)/getVariable(7,k)/getVariable(8,k)
Aug 31, 2024 4:20:18 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.179538051400471; Expression=30*Math.pow(10,-1)+u7(k)/25*Math.pow(10,+1)-u3(k)*u3(k)/u7(k)/u8(k); Java Expression: 30*Math.pow(10,-1)+getVariable(7,k)/25*Math.pow(10,+1)-getVariable(3,k)*getVariable(3,k)/getVariable(7,k)/getVariable(8,k)
Aug 31, 2024 4:21:20 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 20% performed ... -- Fitness info -->> Best: 4.179538051400471 -->> Avg.: 1584.1790497058105 -->> Std. Dev.: 4970.217878755925
Aug 31, 2024 4:21:38 AM data.NormalizedDataTable evaluate
INFO: Best FIT=4.024293142069165; Expression=23*Math.pow(10,-1)+u7(k)/25*Math.pow(10,+1)-u3(k)*u5(k)/u6(k)/u8(k); Java Expression: 23*Math.pow(10,-1)+getVariable(7,k)/25*Math.pow(10,+1)-getVariable(3,k)*getVariable(5,k)/getVariable(6,k)/getVariable(8,k)
Aug 31, 2024 4:21:51 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9859324554509574; Expression=15*Math.pow(10,-1)+u7(k)/25*Math.pow(10,+1)-u3(k)*u5(k)/u6(k)/u8(k); Java Expression: 15*Math.pow(10,-1)+getVariable(7,k)/25*Math.pow(10,+1)-getVariable(3,k)*getVariable(5,k)/getVariable(6,k)/getVariable(8,k)
Aug 31, 2024 4:22:07 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.945835657831644; Expression=30*Math.pow(10,-1)+u7(k)/25*Math.pow(10,+1)-u3(k)*u4(k)/u6(k)/u8(k); Java Expression: 30*Math.pow(10,-1)+getVariable(7,k)/25*Math.pow(10,+1)-getVariable(3,k)*getVariable(4,k)/getVariable(6,k)/getVariable(8,k)
Aug 31, 2024 4:22:13 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9414039501393554; Expression=32*Math.pow(10,-1)+u7(k)/25*Math.pow(10,+1)-u3(k)*u4(k)/u6(k)/u8(k); Java Expression: 32*Math.pow(10,-1)+getVariable(7,k)/25*Math.pow(10,+1)-getVariable(3,k)*getVariable(4,k)/getVariable(6,k)/getVariable(8,k)
Aug 31, 2024 4:23:59 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 30% performed ... -- Fitness info -->> Best: 3.9414039501393554 -->> Avg.: 38.42499811574916 -->> Std. Dev.: 60.93868238623012
Aug 31, 2024 4:25:27 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.9116721319149876; Expression=53*Math.pow(10,-1)+u7(k)/26*Math.pow(10,+1)-u3(k)*u4(k)/u6(k)/u8(k); Java Expression: 53*Math.pow(10,-1)+getVariable(7,k)/26*Math.pow(10,+1)-getVariable(3,k)*getVariable(4,k)/getVariable(6,k)/getVariable(8,k)
Aug 31, 2024 4:25:52 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.879028894905994; Expression=48*Math.pow(10,-1)+u7(k)/26*Math.pow(10,+1)-u3(k)*u4(k)/u6(k)/u8(k); Java Expression: 48*Math.pow(10,-1)+getVariable(7,k)/26*Math.pow(10,+1)-getVariable(3,k)*getVariable(4,k)/getVariable(6,k)/getVariable(8,k)
Aug 31, 2024 4:26:38 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 40% performed ... -- Fitness info -->> Best: 3.879028894905994 -->> Avg.: 11.146989962950386 -->> Std. Dev.: 12.577393419692507
Aug 31, 2024 4:27:40 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.8341105320172026; Expression=97*Math.pow(10,-1)+u7(k)/29*Math.pow(10,+1)-u3(k)*u4(k)/u6(k)/u8(k); Java Expression: 97*Math.pow(10,-1)+getVariable(7,k)/29*Math.pow(10,+1)-getVariable(3,k)*getVariable(4,k)/getVariable(6,k)/getVariable(8,k)
Aug 31, 2024 4:27:55 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.8176754770027213; Expression=83*Math.pow(10,-1)+u7(k)/29*Math.pow(10,+1)-u3(k)*u4(k)/u6(k)/u8(k); Java Expression: 83*Math.pow(10,-1)+getVariable(7,k)/29*Math.pow(10,+1)-getVariable(3,k)*getVariable(4,k)/getVariable(6,k)/getVariable(8,k)
Aug 31, 2024 4:28:06 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.8003208037153033; Expression=95*Math.pow(10,-1)+u7(k)/29*Math.pow(10,+1)-u3(k)*u4(k)/u6(k)/u8(k); Java Expression: 95*Math.pow(10,-1)+getVariable(7,k)/29*Math.pow(10,+1)-getVariable(3,k)*getVariable(4,k)/getVariable(6,k)/getVariable(8,k)
Aug 31, 2024 4:28:09 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.769017135844634; Expression=92*Math.pow(10,-1)+u7(k)/29*Math.pow(10,+1)-u3(k)*u4(k)/u6(k)/u8(k); Java Expression: 92*Math.pow(10,-1)+getVariable(7,k)/29*Math.pow(10,+1)-getVariable(3,k)*getVariable(4,k)/getVariable(6,k)/getVariable(8,k)
Aug 31, 2024 4:28:10 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.7614547889652554; Expression=89*Math.pow(10,-1)+u7(k)/29*Math.pow(10,+1)-u3(k)*u4(k)/u6(k)/u8(k); Java Expression: 89*Math.pow(10,-1)+getVariable(7,k)/29*Math.pow(10,+1)-getVariable(3,k)*getVariable(4,k)/getVariable(6,k)/getVariable(8,k)
Aug 31, 2024 4:28:26 AM data.NormalizedDataTable evaluate
INFO: Best FIT=3.7613195569795193; Expression=90*Math.pow(10,-1)+u7(k)/29*Math.pow(10,+1)-u3(k)*u4(k)/u6(k)/u8(k); Java Expression: 90*Math.pow(10,-1)+getVariable(7,k)/29*Math.pow(10,+1)-getVariable(3,k)*getVariable(4,k)/getVariable(6,k)/getVariable(8,k)
Aug 31, 2024 4:29:17 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 50% performed ... -- Fitness info -->> Best: 3.7613195569795193 -->> Avg.: 4.913445239725956 -->> Std. Dev.: 2.406000190873668
Aug 31, 2024 4:31:56 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 60% performed ... -- Fitness info -->> Best: 3.7613195569795193 -->> Avg.: 4.08573393937281 -->> Std. Dev.: 0.5414098528762396
Aug 31, 2024 4:34:34 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 70% performed ... -- Fitness info -->> Best: 3.7613195569795193 -->> Avg.: 3.8559544984415903 -->> Std. Dev.: 0.1093535538574609
Aug 31, 2024 4:37:13 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 80% performed ... -- Fitness info -->> Best: 3.7613195569795193 -->> Avg.: 3.807320140991412 -->> Std. Dev.: 0.06928166606007632
Aug 31, 2024 4:39:52 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 90% performed ... -- Fitness info -->> Best: 3.7613195569795193 -->> Avg.: 3.7752084871675646 -->> Std. Dev.: 0.03643554530273717
Aug 31, 2024 4:42:32 AM jeco.core.algorithm.ga.SimpleGeneticAlgorithm execute
INFO: 100% performed ... -- Fitness info -->> Best: 3.7613195569795193 -->> Avg.: 3.7613195569795193 -->> Std. Dev.: 0.0

Execution time: 1581.772 seconds.



@@;90*Math.pow(10,-1)+getVariable(7,k)/29*Math.pow(10,+1)-getVariable(3,k)*getVariable(4,k)/getVariable(6,k)/getVariable(8,k)




 Execution report
==================

#Run;Obj.;Model;Time
0;3.780369439385447;32*Math.pow(10,-2)*getVariable(6,k)-getVariable(1,k)/getVariable(3,k)+getVariable(8,k)*getVariable(8,k)*getVariable(8,k)*78*Math.pow(10,-2)*getVariable(8,k)+getVariable(7,k)/getVariable(4,k)-getVariable(2,k)/getVariable(5,k);1911.079
1;4.894727748218812;99*Math.pow(10,-1)/getVariable(4,k)*getVariable(5,k)-getVariable(4,k)-getVariable(5,k)+getVariable(7,k)-getVariable(7,k)*15*Math.pow(10,-3)/getVariable(8,k)/getVariable(4,k)*getVariable(7,k)*getVariable(7,k)/getVariable(5,k);1885.212
2;4.3695667612131155;48*Math.pow(10,-3)*getVariable(1,k)+getVariable(7,k)-getVariable(7,k)/getVariable(6,k)*4*Math.pow(10,-1)*getVariable(1,k)-getVariable(4,k)-49*Math.pow(10,-1)/getVariable(8,k);1751.078
3;4.819669109911831;getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(7,k)/4*Math.pow(10,-1)*getVariable(7,k)/getVariable(5,k)-getVariable(4,k)+getVariable(2,k)/getVariable(7,k)*getVariable(5,k)/getVariable(1,k)*getVariable(5,k)/58*Math.pow(10,+1)*getVariable(8,k);1962.97
4;5.156646508030413;1*Math.pow(10,+1)+getVariable(8,k)+getVariable(7,k)-getVariable(5,k)-getVariable(1,k)/getVariable(5,k)/94*Math.pow(10,+3)+96*Math.pow(10,-1)-getVariable(4,k)+getVariable(8,k)+getVariable(6,k)/getVariable(3,k)/getVariable(8,k);1922.064
5;4.92302817882152;49*Math.pow(10,-1)*getVariable(8,k)-getVariable(4,k)+getVariable(7,k)-getVariable(5,k)/90*Math.pow(10,+2)-getVariable(7,k)/getVariable(5,k)/getVariable(4,k)*getVariable(7,k)+getVariable(6,k)/getVariable(3,k)/getVariable(7,k)*getVariable(2,k);1885.473
6;5.053992813963309;getVariable(8,k)-getVariable(4,k)-getVariable(5,k)+getVariable(8,k)/getVariable(1,k)*getVariable(6,k)-getVariable(7,k)/14*Math.pow(10,-2)*getVariable(7,k)+getVariable(6,k)/getVariable(3,k)*getVariable(6,k)/getVariable(1,k)+getVariable(7,k);1896.819
7;4.540355086712902;getVariable(7,k)-getVariable(4,k)-getVariable(5,k)*getVariable(1,k)/getVariable(6,k)-getVariable(7,k)*getVariable(7,k)*47*Math.pow(10,-3)/getVariable(5,k)+72*Math.pow(10,-4)*getVariable(4,k)*getVariable(5,k);1880.097
8;4.422092606136743;31*Math.pow(10,+5)/getVariable(4,k)/getVariable(2,k)*getVariable(7,k)*75*Math.pow(10,-5)-getVariable(2,k)/getVariable(8,k)/getVariable(6,k)*19*Math.pow(10,+1)/getVariable(4,k);1859.638
9;3.7613195569795193;90*Math.pow(10,-1)+getVariable(7,k)/29*Math.pow(10,+1)-getVariable(3,k)*getVariable(4,k)/getVariable(6,k)/getVariable(8,k);1581.772
